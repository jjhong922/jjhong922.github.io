// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"node_modules/preact/dist/preact.module.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.render = H;
exports.hydrate = I;
exports.h = exports.createElement = h;
exports.Fragment = d;
exports.createRef = p;
exports.Component = m;
exports.cloneElement = L;
exports.createContext = M;
exports.toChildArray = x;
exports._unmount = D;
exports.options = exports.isValidElement = void 0;
var n,
    l,
    u,
    i,
    t,
    o,
    r,
    f,
    e = {},
    c = [],
    a = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
exports.isValidElement = l;
exports.options = n;

function s(n, l) {
  for (var u in l) n[u] = l[u];

  return n;
}

function v(n) {
  var l = n.parentNode;
  l && l.removeChild(n);
}

function h(n, l, u) {
  var i,
      t = arguments,
      o = {};

  for (i in l) "key" !== i && "ref" !== i && (o[i] = l[i]);

  if (arguments.length > 3) for (u = [u], i = 3; i < arguments.length; i++) u.push(t[i]);
  if (null != u && (o.children = u), "function" == typeof n && null != n.defaultProps) for (i in n.defaultProps) void 0 === o[i] && (o[i] = n.defaultProps[i]);
  return y(n, o, l && l.key, l && l.ref, null);
}

function y(l, u, i, t, o) {
  var r = {
    type: l,
    props: u,
    key: i,
    ref: t,
    __k: null,
    __: null,
    __b: 0,
    __e: null,
    __d: void 0,
    __c: null,
    constructor: void 0,
    __v: o
  };
  return null == o && (r.__v = r), n.vnode && n.vnode(r), r;
}

function p() {
  return {};
}

function d(n) {
  return n.children;
}

function m(n, l) {
  this.props = n, this.context = l;
}

function w(n, l) {
  if (null == l) return n.__ ? w(n.__, n.__.__k.indexOf(n) + 1) : null;

  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;

  return "function" == typeof n.type ? w(n) : null;
}

function k(n) {
  var l, u;

  if (null != (n = n.__) && null != n.__c) {
    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {
      n.__e = n.__c.base = u.__e;
      break;
    }

    return k(n);
  }
}

function g(l) {
  (!l.__d && (l.__d = !0) && u.push(l) && !i++ || o !== n.debounceRendering) && ((o = n.debounceRendering) || t)(_);
}

function _() {
  for (var n; i = u.length;) n = u.sort(function (n, l) {
    return n.__v.__b - l.__v.__b;
  }), u = [], n.some(function (n) {
    var l, u, i, t, o, r, f;
    n.__d && (r = (o = (l = n).__v).__e, (f = l.__P) && (u = [], (i = s({}, o)).__v = i, t = z(f, o, i, l.__n, void 0 !== f.ownerSVGElement, null, u, null == r ? w(o) : r), T(u, o), t != r && k(o)));
  });
}

function b(n, l, u, i, t, o, r, f, a, s) {
  var h,
      p,
      m,
      k,
      g,
      _,
      b,
      x,
      A,
      P = i && i.__k || c,
      C = P.length;

  for (a == e && (a = null != r ? r[0] : C ? w(i, 0) : null), u.__k = [], h = 0; h < l.length; h++) if (null != (k = u.__k[h] = null == (k = l[h]) || "boolean" == typeof k ? null : "string" == typeof k || "number" == typeof k ? y(null, k, null, null, k) : Array.isArray(k) ? y(d, {
    children: k
  }, null, null, null) : null != k.__e || null != k.__c ? y(k.type, k.props, k.key, null, k.__v) : k)) {
    if (k.__ = u, k.__b = u.__b + 1, null === (m = P[h]) || m && k.key == m.key && k.type === m.type) P[h] = void 0;else for (p = 0; p < C; p++) {
      if ((m = P[p]) && k.key == m.key && k.type === m.type) {
        P[p] = void 0;
        break;
      }

      m = null;
    }

    if (g = z(n, k, m = m || e, t, o, r, f, a, s), (p = k.ref) && m.ref != p && (x || (x = []), m.ref && x.push(m.ref, null, k), x.push(p, k.__c || g, k)), null != g) {
      if (null == b && (b = g), A = void 0, void 0 !== k.__d) A = k.__d, k.__d = void 0;else if (r == m || g != a || null == g.parentNode) {
        n: if (null == a || a.parentNode !== n) n.appendChild(g), A = null;else {
          for (_ = a, p = 0; (_ = _.nextSibling) && p < C; p += 2) if (_ == g) break n;

          n.insertBefore(g, a), A = a;
        }

        "option" == u.type && (n.value = "");
      }
      a = void 0 !== A ? A : g.nextSibling, "function" == typeof u.type && (u.__d = a);
    } else a && m.__e == a && a.parentNode != n && (a = w(m));
  }

  if (u.__e = b, null != r && "function" != typeof u.type) for (h = r.length; h--;) null != r[h] && v(r[h]);

  for (h = C; h--;) null != P[h] && D(P[h], P[h]);

  if (x) for (h = 0; h < x.length; h++) j(x[h], x[++h], x[++h]);
}

function x(n) {
  return null == n || "boolean" == typeof n ? [] : Array.isArray(n) ? c.concat.apply([], n.map(x)) : [n];
}

function A(n, l, u, i, t) {
  var o;

  for (o in u) "children" === o || "key" === o || o in l || C(n, o, null, u[o], i);

  for (o in l) t && "function" != typeof l[o] || "children" === o || "key" === o || "value" === o || "checked" === o || u[o] === l[o] || C(n, o, l[o], u[o], i);
}

function P(n, l, u) {
  "-" === l[0] ? n.setProperty(l, u) : n[l] = "number" == typeof u && !1 === a.test(l) ? u + "px" : null == u ? "" : u;
}

function C(n, l, u, i, t) {
  var o, r, f, e, c;
  if (t ? "className" === l && (l = "class") : "class" === l && (l = "className"), "style" === l) {
    if (o = n.style, "string" == typeof u) o.cssText = u;else {
      if ("string" == typeof i && (o.cssText = "", i = null), i) for (e in i) u && e in u || P(o, e, "");
      if (u) for (c in u) i && u[c] === i[c] || P(o, c, u[c]);
    }
  } else "o" === l[0] && "n" === l[1] ? (r = l !== (l = l.replace(/Capture$/, "")), f = l.toLowerCase(), l = (f in n ? f : l).slice(2), u ? (i || n.addEventListener(l, N, r), (n.l || (n.l = {}))[l] = u) : n.removeEventListener(l, N, r)) : "list" !== l && "tagName" !== l && "form" !== l && "type" !== l && "size" !== l && !t && l in n ? n[l] = null == u ? "" : u : "function" != typeof u && "dangerouslySetInnerHTML" !== l && (l !== (l = l.replace(/^xlink:?/, "")) ? null == u || !1 === u ? n.removeAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase()) : n.setAttributeNS("http://www.w3.org/1999/xlink", l.toLowerCase(), u) : null == u || !1 === u && !/^ar/.test(l) ? n.removeAttribute(l) : n.setAttribute(l, u));
}

function N(l) {
  this.l[l.type](n.event ? n.event(l) : l);
}

function z(l, u, i, t, o, r, f, e, c) {
  var a,
      v,
      h,
      y,
      p,
      w,
      k,
      g,
      _,
      x,
      A,
      P = u.type;

  if (void 0 !== u.constructor) return null;
  (a = n.__b) && a(u);

  try {
    n: if ("function" == typeof P) {
      if (g = u.props, _ = (a = P.contextType) && t[a.__c], x = a ? _ ? _.props.value : a.__ : t, i.__c ? k = (v = u.__c = i.__c).__ = v.__E : ("prototype" in P && P.prototype.render ? u.__c = v = new P(g, x) : (u.__c = v = new m(g, x), v.constructor = P, v.render = E), _ && _.sub(v), v.props = g, v.state || (v.state = {}), v.context = x, v.__n = t, h = v.__d = !0, v.__h = []), null == v.__s && (v.__s = v.state), null != P.getDerivedStateFromProps && (v.__s == v.state && (v.__s = s({}, v.__s)), s(v.__s, P.getDerivedStateFromProps(g, v.__s))), y = v.props, p = v.state, h) null == P.getDerivedStateFromProps && null != v.componentWillMount && v.componentWillMount(), null != v.componentDidMount && v.__h.push(v.componentDidMount);else {
        if (null == P.getDerivedStateFromProps && g !== y && null != v.componentWillReceiveProps && v.componentWillReceiveProps(g, x), !v.__e && null != v.shouldComponentUpdate && !1 === v.shouldComponentUpdate(g, v.__s, x) || u.__v === i.__v) {
          for (v.props = g, v.state = v.__s, u.__v !== i.__v && (v.__d = !1), v.__v = u, u.__e = i.__e, u.__k = i.__k, v.__h.length && f.push(v), a = 0; a < u.__k.length; a++) u.__k[a] && (u.__k[a].__ = u);

          break n;
        }

        null != v.componentWillUpdate && v.componentWillUpdate(g, v.__s, x), null != v.componentDidUpdate && v.__h.push(function () {
          v.componentDidUpdate(y, p, w);
        });
      }
      v.context = x, v.props = g, v.state = v.__s, (a = n.__r) && a(u), v.__d = !1, v.__v = u, v.__P = l, a = v.render(v.props, v.state, v.context), null != v.getChildContext && (t = s(s({}, t), v.getChildContext())), h || null == v.getSnapshotBeforeUpdate || (w = v.getSnapshotBeforeUpdate(y, p)), A = null != a && a.type == d && null == a.key ? a.props.children : a, b(l, Array.isArray(A) ? A : [A], u, i, t, o, r, f, e, c), v.base = u.__e, v.__h.length && f.push(v), k && (v.__E = v.__ = null), v.__e = !1;
    } else null == r && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = $(i.__e, u, i, t, o, r, f, c);

    (a = n.diffed) && a(u);
  } catch (l) {
    u.__v = null, n.__e(l, u, i);
  }

  return u.__e;
}

function T(l, u) {
  n.__c && n.__c(u, l), l.some(function (u) {
    try {
      l = u.__h, u.__h = [], l.some(function (n) {
        n.call(u);
      });
    } catch (l) {
      n.__e(l, u.__v);
    }
  });
}

function $(n, l, u, i, t, o, r, f) {
  var a,
      s,
      v,
      h,
      y,
      p = u.props,
      d = l.props;
  if (t = "svg" === l.type || t, null != o) for (a = 0; a < o.length; a++) if (null != (s = o[a]) && ((null === l.type ? 3 === s.nodeType : s.localName === l.type) || n == s)) {
    n = s, o[a] = null;
    break;
  }

  if (null == n) {
    if (null === l.type) return document.createTextNode(d);
    n = t ? document.createElementNS("http://www.w3.org/2000/svg", l.type) : document.createElement(l.type, d.is && {
      is: d.is
    }), o = null, f = !1;
  }

  if (null === l.type) p !== d && n.data != d && (n.data = d);else {
    if (null != o && (o = c.slice.call(n.childNodes)), v = (p = u.props || e).dangerouslySetInnerHTML, h = d.dangerouslySetInnerHTML, !f) {
      if (null != o) for (p = {}, y = 0; y < n.attributes.length; y++) p[n.attributes[y].name] = n.attributes[y].value;
      (h || v) && (h && v && h.__html == v.__html || (n.innerHTML = h && h.__html || ""));
    }

    A(n, d, p, t, f), h ? l.__k = [] : (a = l.props.children, b(n, Array.isArray(a) ? a : [a], l, u, i, "foreignObject" !== l.type && t, o, r, e, f)), f || ("value" in d && void 0 !== (a = d.value) && a !== n.value && C(n, "value", a, p.value, !1), "checked" in d && void 0 !== (a = d.checked) && a !== n.checked && C(n, "checked", a, p.checked, !1));
  }
  return n;
}

function j(l, u, i) {
  try {
    "function" == typeof l ? l(u) : l.current = u;
  } catch (l) {
    n.__e(l, i);
  }
}

function D(l, u, i) {
  var t, o, r;

  if (n.unmount && n.unmount(l), (t = l.ref) && (t.current && t.current !== l.__e || j(t, null, u)), i || "function" == typeof l.type || (i = null != (o = l.__e)), l.__e = l.__d = void 0, null != (t = l.__c)) {
    if (t.componentWillUnmount) try {
      t.componentWillUnmount();
    } catch (l) {
      n.__e(l, u);
    }
    t.base = t.__P = null;
  }

  if (t = l.__k) for (r = 0; r < t.length; r++) t[r] && D(t[r], u, i);
  null != o && v(o);
}

function E(n, l, u) {
  return this.constructor(n, u);
}

function H(l, u, i) {
  var t, o, f;
  n.__ && n.__(l, u), o = (t = i === r) ? null : i && i.__k || u.__k, l = h(d, null, [l]), f = [], z(u, (t ? u : i || u).__k = l, o || e, e, void 0 !== u.ownerSVGElement, i && !t ? [i] : o ? null : u.childNodes.length ? c.slice.call(u.childNodes) : null, f, i || e, t), T(f, l);
}

function I(n, l) {
  H(n, l, r);
}

function L(n, l) {
  var u, i;

  for (i in l = s(s({}, n.props), l), arguments.length > 2 && (l.children = c.slice.call(arguments, 2)), u = {}, l) "key" !== i && "ref" !== i && (u[i] = l[i]);

  return y(n.type, u, l.key || n.key, l.ref || n.ref, null);
}

function M(n) {
  var l = {},
      u = {
    __c: "__cC" + f++,
    __: n,
    Consumer: function (n, l) {
      return n.children(l);
    },
    Provider: function (n) {
      var i,
          t = this;
      return this.getChildContext || (i = [], this.getChildContext = function () {
        return l[u.__c] = t, l;
      }, this.shouldComponentUpdate = function (n) {
        t.props.value !== n.value && i.some(function (l) {
          l.context = n.value, g(l);
        });
      }, this.sub = function (n) {
        i.push(n);
        var l = n.componentWillUnmount;

        n.componentWillUnmount = function () {
          i.splice(i.indexOf(n), 1), l && l.call(n);
        };
      }), n.children;
    }
  };
  return u.Consumer.contextType = u, u.Provider.__ = u, u;
}

exports.options = n = {
  __e: function (n, l) {
    for (var u, i; l = l.__;) if ((u = l.__c) && !u.__) try {
      if (u.constructor && null != u.constructor.getDerivedStateFromError && (i = !0, u.setState(u.constructor.getDerivedStateFromError(n))), null != u.componentDidCatch && (i = !0, u.componentDidCatch(n)), i) return g(u.__E = u);
    } catch (l) {
      n = l;
    }

    throw n;
  }
}, exports.isValidElement = l = function (n) {
  return null != n && void 0 === n.constructor;
}, m.prototype.setState = function (n, l) {
  var u;
  u = this.__s !== this.state ? this.__s : this.__s = s({}, this.state), "function" == typeof n && (n = n(u, this.props)), n && s(u, n), null != n && this.__v && (l && this.__h.push(l), g(this));
}, m.prototype.forceUpdate = function (n) {
  this.__v && (this.__e = !0, n && this.__h.push(n), g(this));
}, m.prototype.render = d, u = [], i = 0, t = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, r = e, f = 0;
},{}],"node_modules/parcel-bundler/src/builtins/bundle-url.js":[function(require,module,exports) {
var bundleURL = null;

function getBundleURLCached() {
  if (!bundleURL) {
    bundleURL = getBundleURL();
  }

  return bundleURL;
}

function getBundleURL() {
  // Attempt to find the URL of the current script and use that as the base URL
  try {
    throw new Error();
  } catch (err) {
    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\/\/[^)\n]+/g);

    if (matches) {
      return getBaseURL(matches[0]);
    }
  }

  return '/';
}

function getBaseURL(url) {
  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\/\/.+)\/[^/]+$/, '$1') + '/';
}

exports.getBundleURL = getBundleURLCached;
exports.getBaseURL = getBaseURL;
},{}],"node_modules/parcel-bundler/src/builtins/css-loader.js":[function(require,module,exports) {
var bundle = require('./bundle-url');

function updateLink(link) {
  var newLink = link.cloneNode();

  newLink.onload = function () {
    link.remove();
  };

  newLink.href = link.href.split('?')[0] + '?' + Date.now();
  link.parentNode.insertBefore(newLink, link.nextSibling);
}

var cssTimeout = null;

function reloadCSS() {
  if (cssTimeout) {
    return;
  }

  cssTimeout = setTimeout(function () {
    var links = document.querySelectorAll('link[rel="stylesheet"]');

    for (var i = 0; i < links.length; i++) {
      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {
        updateLink(links[i]);
      }
    }

    cssTimeout = null;
  }, 50);
}

module.exports = reloadCSS;
},{"./bundle-url":"node_modules/parcel-bundler/src/builtins/bundle-url.js"}],"js/style/index.css":[function(require,module,exports) {
var reloadCSS = require('_css_loader');

module.hot.dispose(reloadCSS);
module.hot.accept(reloadCSS);
},{"_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js"}],"node_modules/preact-material-components/Button/style.css":[function(require,module,exports) {

        var reloadCSS = require('_css_loader');
        module.hot.dispose(reloadCSS);
        module.hot.accept(reloadCSS);
      
},{"_css_loader":"node_modules/parcel-bundler/src/builtins/css-loader.js"}],"node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"node_modules/jquery/dist/jquery.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
var define;
/*!
 * jQuery JavaScript Library v3.5.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2020-05-04T22:49Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.5.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( _i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.5
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2020-03-14
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem.namespaceURI,
		docElem = ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
					dataPriv.get( this, "events" ) || Object.create( null )
				)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();
						return result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px";
				tr.style.height = "1px";
				trChild.style.height = "9px";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = parseInt( trStyle.height ) > 3;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
					jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = (
					dataPriv.get( cur, "events" ) || Object.create( null )
				)[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script
			if ( !isSuccess && jQuery.inArray( "script", s.dataTypes ) > -1 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			if ( typeof props.top === "number" ) {
				props.top += "px";
			}
			if ( typeof props.left === "number" ) {
				props.left += "px";
			}
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	} );




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{"process":"node_modules/process/browser.js"}],"node_modules/preact-feather/dist/icons/activity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Activity = void 0;

var _preact = require("preact");

const Activity = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "22 12 18 12 15 21 9 3 6 12 2 12"
  }));
};

exports.Activity = Activity;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/airplay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Airplay = void 0;

var _preact = require("preact");

const Airplay = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"
  }), (0, _preact.h)("polygon", {
    points: "12 15 17 21 7 21 12 15"
  }));
};

exports.Airplay = Airplay;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/alert-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlertCircle = void 0;

var _preact = require("preact");

const AlertCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "16",
    x2: "12.01",
    y2: "16"
  }));
};

exports.AlertCircle = AlertCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/alert-octagon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlertOctagon = void 0;

var _preact = require("preact");

const AlertOctagon = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "16",
    x2: "12.01",
    y2: "16"
  }));
};

exports.AlertOctagon = AlertOctagon;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/alert-triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlertTriangle = void 0;

var _preact = require("preact");

const AlertTriangle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "9",
    x2: "12",
    y2: "13"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "17",
    x2: "12.01",
    y2: "17"
  }));
};

exports.AlertTriangle = AlertTriangle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/align-center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignCenter = void 0;

var _preact = require("preact");

const AlignCenter = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "18",
    y1: "10",
    x2: "6",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "6",
    x2: "3",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "14",
    x2: "3",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "18",
    y1: "18",
    x2: "6",
    y2: "18"
  }));
};

exports.AlignCenter = AlignCenter;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/align-justify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignJustify = void 0;

var _preact = require("preact");

const AlignJustify = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "21",
    y1: "10",
    x2: "3",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "6",
    x2: "3",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "14",
    x2: "3",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "18",
    x2: "3",
    y2: "18"
  }));
};

exports.AlignJustify = AlignJustify;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/align-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignLeft = void 0;

var _preact = require("preact");

const AlignLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "17",
    y1: "10",
    x2: "3",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "6",
    x2: "3",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "14",
    x2: "3",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "18",
    x2: "3",
    y2: "18"
  }));
};

exports.AlignLeft = AlignLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/align-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignRight = void 0;

var _preact = require("preact");

const AlignRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "21",
    y1: "10",
    x2: "7",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "6",
    x2: "3",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "14",
    x2: "3",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "18",
    x2: "7",
    y2: "18"
  }));
};

exports.AlignRight = AlignRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/anchor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Anchor = void 0;

var _preact = require("preact");

const Anchor = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "5",
    r: "3"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22",
    x2: "12",
    y2: "8"
  }), (0, _preact.h)("path", {
    d: "M5 12H2a10 10 0 0 0 20 0h-3"
  }));
};

exports.Anchor = Anchor;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/aperture.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Aperture = void 0;

var _preact = require("preact");

const Aperture = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "14.31",
    y1: "8",
    x2: "20.05",
    y2: "17.94"
  }), (0, _preact.h)("line", {
    x1: "9.69",
    y1: "8",
    x2: "21.17",
    y2: "8"
  }), (0, _preact.h)("line", {
    x1: "7.38",
    y1: "12",
    x2: "13.12",
    y2: "2.06"
  }), (0, _preact.h)("line", {
    x1: "9.69",
    y1: "16",
    x2: "3.95",
    y2: "6.06"
  }), (0, _preact.h)("line", {
    x1: "14.31",
    y1: "16",
    x2: "2.83",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "16.62",
    y1: "12",
    x2: "10.88",
    y2: "21.94"
  }));
};

exports.Aperture = Aperture;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/archive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Archive = void 0;

var _preact = require("preact");

const Archive = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "21 8 21 21 3 21 3 8"
  }), (0, _preact.h)("rect", {
    x: "1",
    y: "3",
    width: "22",
    height: "5"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "12",
    x2: "14",
    y2: "12"
  }));
};

exports.Archive = Archive;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-down-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowDownCircle = void 0;

var _preact = require("preact");

const ArrowDownCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polyline", {
    points: "8 12 12 16 16 12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "16"
  }));
};

exports.ArrowDownCircle = ArrowDownCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-down-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowDownLeft = void 0;

var _preact = require("preact");

const ArrowDownLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "17",
    y1: "7",
    x2: "7",
    y2: "17"
  }), (0, _preact.h)("polyline", {
    points: "17 17 7 17 7 7"
  }));
};

exports.ArrowDownLeft = ArrowDownLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-down-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowDownRight = void 0;

var _preact = require("preact");

const ArrowDownRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "7",
    y1: "7",
    x2: "17",
    y2: "17"
  }), (0, _preact.h)("polyline", {
    points: "17 7 17 17 7 17"
  }));
};

exports.ArrowDownRight = ArrowDownRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowDown = void 0;

var _preact = require("preact");

const ArrowDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "5",
    x2: "12",
    y2: "19"
  }), (0, _preact.h)("polyline", {
    points: "19 12 12 19 5 12"
  }));
};

exports.ArrowDown = ArrowDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-left-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowLeftCircle = void 0;

var _preact = require("preact");

const ArrowLeftCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polyline", {
    points: "12 8 8 12 12 16"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "12",
    x2: "8",
    y2: "12"
  }));
};

exports.ArrowLeftCircle = ArrowLeftCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowLeft = void 0;

var _preact = require("preact");

const ArrowLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "19",
    y1: "12",
    x2: "5",
    y2: "12"
  }), (0, _preact.h)("polyline", {
    points: "12 19 5 12 12 5"
  }));
};

exports.ArrowLeft = ArrowLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-right-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowRightCircle = void 0;

var _preact = require("preact");

const ArrowRightCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polyline", {
    points: "12 16 16 12 12 8"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.ArrowRightCircle = ArrowRightCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowRight = void 0;

var _preact = require("preact");

const ArrowRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "5",
    y1: "12",
    x2: "19",
    y2: "12"
  }), (0, _preact.h)("polyline", {
    points: "12 5 19 12 12 19"
  }));
};

exports.ArrowRight = ArrowRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-up-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowUpCircle = void 0;

var _preact = require("preact");

const ArrowUpCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polyline", {
    points: "16 12 12 8 8 12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "16",
    x2: "12",
    y2: "8"
  }));
};

exports.ArrowUpCircle = ArrowUpCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-up-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowUpLeft = void 0;

var _preact = require("preact");

const ArrowUpLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "17",
    y1: "17",
    x2: "7",
    y2: "7"
  }), (0, _preact.h)("polyline", {
    points: "7 17 7 7 17 7"
  }));
};

exports.ArrowUpLeft = ArrowUpLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-up-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowUpRight = void 0;

var _preact = require("preact");

const ArrowUpRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "7",
    y1: "17",
    x2: "17",
    y2: "7"
  }), (0, _preact.h)("polyline", {
    points: "7 7 17 7 17 17"
  }));
};

exports.ArrowUpRight = ArrowUpRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/arrow-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ArrowUp = void 0;

var _preact = require("preact");

const ArrowUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "19",
    x2: "12",
    y2: "5"
  }), (0, _preact.h)("polyline", {
    points: "5 12 12 5 19 12"
  }));
};

exports.ArrowUp = ArrowUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/at-sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AtSign = void 0;

var _preact = require("preact");

const AtSign = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), (0, _preact.h)("path", {
    d: "M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"
  }));
};

exports.AtSign = AtSign;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/award.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Award = void 0;

var _preact = require("preact");

const Award = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "8",
    r: "7"
  }), (0, _preact.h)("polyline", {
    points: "8.21 13.89 7 23 12 20 17 23 15.79 13.88"
  }));
};

exports.Award = Award;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bar-chart-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BarChart2 = void 0;

var _preact = require("preact");

const BarChart2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "18",
    y1: "20",
    x2: "18",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "20",
    x2: "12",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "20",
    x2: "6",
    y2: "14"
  }));
};

exports.BarChart2 = BarChart2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bar-chart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BarChart = void 0;

var _preact = require("preact");

const BarChart = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "20",
    x2: "12",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "18",
    y1: "20",
    x2: "18",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "20",
    x2: "6",
    y2: "16"
  }));
};

exports.BarChart = BarChart;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/battery-charging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BatteryCharging = void 0;

var _preact = require("preact");

const BatteryCharging = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "13",
    x2: "23",
    y2: "11"
  }), (0, _preact.h)("polyline", {
    points: "11 6 7 12 13 12 9 18"
  }));
};

exports.BatteryCharging = BatteryCharging;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/battery.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Battery = void 0;

var _preact = require("preact");

const Battery = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "1",
    y: "6",
    width: "18",
    height: "12",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "13",
    x2: "23",
    y2: "11"
  }));
};

exports.Battery = Battery;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bell-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BellOff = void 0;

var _preact = require("preact");

const BellOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M13.73 21a2 2 0 0 1-3.46 0"
  }), (0, _preact.h)("path", {
    d: "M18.63 13A17.89 17.89 0 0 1 18 8"
  }), (0, _preact.h)("path", {
    d: "M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"
  }), (0, _preact.h)("path", {
    d: "M18 8a6 6 0 0 0-9.33-5"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.BellOff = BellOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bell.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bell = void 0;

var _preact = require("preact");

const Bell = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"
  }), (0, _preact.h)("path", {
    d: "M13.73 21a2 2 0 0 1-3.46 0"
  }));
};

exports.Bell = Bell;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bluetooth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bluetooth = void 0;

var _preact = require("preact");

const Bluetooth = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"
  }));
};

exports.Bluetooth = Bluetooth;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bold.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bold = void 0;

var _preact = require("preact");

const Bold = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"
  }), (0, _preact.h)("path", {
    d: "M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"
  }));
};

exports.Bold = Bold;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/book-open.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BookOpen = void 0;

var _preact = require("preact");

const BookOpen = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"
  }), (0, _preact.h)("path", {
    d: "M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"
  }));
};

exports.BookOpen = BookOpen;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/book.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Book = void 0;

var _preact = require("preact");

const Book = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 19.5A2.5 2.5 0 0 1 6.5 17H20"
  }), (0, _preact.h)("path", {
    d: "M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"
  }));
};

exports.Book = Book;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/bookmark.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Bookmark = void 0;

var _preact = require("preact");

const Bookmark = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"
  }));
};

exports.Bookmark = Bookmark;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/box.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Box = void 0;

var _preact = require("preact");

const Box = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
  }), (0, _preact.h)("polyline", {
    points: "3.27 6.96 12 12.01 20.73 6.96"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22.08",
    x2: "12",
    y2: "12"
  }));
};

exports.Box = Box;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/briefcase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Briefcase = void 0;

var _preact = require("preact");

const Briefcase = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "7",
    width: "20",
    height: "14",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("path", {
    d: "M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"
  }));
};

exports.Briefcase = Briefcase;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/calendar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Calendar = void 0;

var _preact = require("preact");

const Calendar = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "4",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "2",
    x2: "16",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "2",
    x2: "8",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "10",
    x2: "21",
    y2: "10"
  }));
};

exports.Calendar = Calendar;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/camera-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CameraOff = void 0;

var _preact = require("preact");

const CameraOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }), (0, _preact.h)("path", {
    d: "M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"
  }));
};

exports.CameraOff = CameraOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/camera.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Camera = void 0;

var _preact = require("preact");

const Camera = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "13",
    r: "4"
  }));
};

exports.Camera = Camera;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cast.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cast = void 0;

var _preact = require("preact");

const Cast = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "20",
    x2: "2.01",
    y2: "20"
  }));
};

exports.Cast = Cast;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/check-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckCircle = void 0;

var _preact = require("preact");

const CheckCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22 11.08V12a10 10 0 1 1-5.93-9.14"
  }), (0, _preact.h)("polyline", {
    points: "22 4 12 14.01 9 11.01"
  }));
};

exports.CheckCircle = CheckCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/check-square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CheckSquare = void 0;

var _preact = require("preact");

const CheckSquare = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "9 11 12 14 22 4"
  }), (0, _preact.h)("path", {
    d: "M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"
  }));
};

exports.CheckSquare = CheckSquare;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/check.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Check = void 0;

var _preact = require("preact");

const Check = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "20 6 9 17 4 12"
  }));
};

exports.Check = Check;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevron-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronDown = void 0;

var _preact = require("preact");

const ChevronDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "6 9 12 15 18 9"
  }));
};

exports.ChevronDown = ChevronDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevron-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronLeft = void 0;

var _preact = require("preact");

const ChevronLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "15 18 9 12 15 6"
  }));
};

exports.ChevronLeft = ChevronLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevron-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronRight = void 0;

var _preact = require("preact");

const ChevronRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "9 18 15 12 9 6"
  }));
};

exports.ChevronRight = ChevronRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevron-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronUp = void 0;

var _preact = require("preact");

const ChevronUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "18 15 12 9 6 15"
  }));
};

exports.ChevronUp = ChevronUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevrons-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronsDown = void 0;

var _preact = require("preact");

const ChevronsDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "7 13 12 18 17 13"
  }), (0, _preact.h)("polyline", {
    points: "7 6 12 11 17 6"
  }));
};

exports.ChevronsDown = ChevronsDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevrons-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronsLeft = void 0;

var _preact = require("preact");

const ChevronsLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "11 17 6 12 11 7"
  }), (0, _preact.h)("polyline", {
    points: "18 17 13 12 18 7"
  }));
};

exports.ChevronsLeft = ChevronsLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevrons-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronsRight = void 0;

var _preact = require("preact");

const ChevronsRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "13 17 18 12 13 7"
  }), (0, _preact.h)("polyline", {
    points: "6 17 11 12 6 7"
  }));
};

exports.ChevronsRight = ChevronsRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chevrons-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChevronsUp = void 0;

var _preact = require("preact");

const ChevronsUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "17 11 12 6 7 11"
  }), (0, _preact.h)("polyline", {
    points: "17 18 12 13 7 18"
  }));
};

exports.ChevronsUp = ChevronsUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/chrome.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chrome = void 0;

var _preact = require("preact");

const Chrome = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "21.17",
    y1: "8",
    x2: "12",
    y2: "8"
  }), (0, _preact.h)("line", {
    x1: "3.95",
    y1: "6.06",
    x2: "8.54",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "10.88",
    y1: "21.94",
    x2: "15.46",
    y2: "14"
  }));
};

exports.Chrome = Chrome;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Circle = void 0;

var _preact = require("preact");

const Circle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }));
};

exports.Circle = Circle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/clipboard.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Clipboard = void 0;

var _preact = require("preact");

const Clipboard = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"
  }), (0, _preact.h)("rect", {
    x: "8",
    y: "2",
    width: "8",
    height: "4",
    rx: "1",
    ry: "1"
  }));
};

exports.Clipboard = Clipboard;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/clock.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Clock = void 0;

var _preact = require("preact");

const Clock = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polyline", {
    points: "12 6 12 12 16 14"
  }));
};

exports.Clock = Clock;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud-drizzle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudDrizzle = void 0;

var _preact = require("preact");

const CloudDrizzle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "8",
    y1: "19",
    x2: "8",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "13",
    x2: "8",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "19",
    x2: "16",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "13",
    x2: "16",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "21",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "15",
    x2: "12",
    y2: "17"
  }), (0, _preact.h)("path", {
    d: "M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"
  }));
};

exports.CloudDrizzle = CloudDrizzle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud-lightning.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudLightning = void 0;

var _preact = require("preact");

const CloudLightning = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"
  }), (0, _preact.h)("polyline", {
    points: "13 11 9 17 15 17 11 23"
  }));
};

exports.CloudLightning = CloudLightning;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudOff = void 0;

var _preact = require("preact");

const CloudOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.CloudOff = CloudOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud-rain.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudRain = void 0;

var _preact = require("preact");

const CloudRain = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "16",
    y1: "13",
    x2: "16",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "13",
    x2: "8",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "15",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("path", {
    d: "M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"
  }));
};

exports.CloudRain = CloudRain;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud-snow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloudSnow = void 0;

var _preact = require("preact");

const CloudSnow = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "16",
    x2: "8.01",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "20",
    x2: "8.01",
    y2: "20"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "18",
    x2: "12.01",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22",
    x2: "12.01",
    y2: "22"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "16",
    x2: "16.01",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "20",
    x2: "16.01",
    y2: "20"
  }));
};

exports.CloudSnow = CloudSnow;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cloud.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cloud = void 0;

var _preact = require("preact");

const Cloud = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"
  }));
};

exports.Cloud = Cloud;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/code.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Code = void 0;

var _preact = require("preact");

const Code = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "16 18 22 12 16 6"
  }), (0, _preact.h)("polyline", {
    points: "8 6 2 12 8 18"
  }));
};

exports.Code = Code;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/codepen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Codepen = void 0;

var _preact = require("preact");

const Codepen = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22",
    x2: "12",
    y2: "15.5"
  }), (0, _preact.h)("polyline", {
    points: "22 8.5 12 15.5 2 8.5"
  }), (0, _preact.h)("polyline", {
    points: "2 15.5 12 8.5 22 15.5"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "8.5"
  }));
};

exports.Codepen = Codepen;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/codesandbox.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Codesandbox = void 0;

var _preact = require("preact");

const Codesandbox = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
  }), (0, _preact.h)("polyline", {
    points: "7.5 4.21 12 6.81 16.5 4.21"
  }), (0, _preact.h)("polyline", {
    points: "7.5 19.79 7.5 14.6 3 12"
  }), (0, _preact.h)("polyline", {
    points: "21 12 16.5 14.6 16.5 19.79"
  }), (0, _preact.h)("polyline", {
    points: "3.27 6.96 12 12.01 20.73 6.96"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22.08",
    x2: "12",
    y2: "12"
  }));
};

exports.Codesandbox = Codesandbox;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/coffee.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Coffee = void 0;

var _preact = require("preact");

const Coffee = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 8h1a4 4 0 0 1 0 8h-1"
  }), (0, _preact.h)("path", {
    d: "M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "1",
    x2: "6",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "1",
    x2: "10",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "14",
    y1: "1",
    x2: "14",
    y2: "4"
  }));
};

exports.Coffee = Coffee;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/columns.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Columns = void 0;

var _preact = require("preact");

const Columns = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"
  }));
};

exports.Columns = Columns;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/command.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Command = void 0;

var _preact = require("preact");

const Command = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"
  }));
};

exports.Command = Command;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/compass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Compass = void 0;

var _preact = require("preact");

const Compass = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polygon", {
    points: "16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"
  }));
};

exports.Compass = Compass;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/copy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Copy = void 0;

var _preact = require("preact");

const Copy = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "9",
    y: "9",
    width: "13",
    height: "13",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("path", {
    d: "M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"
  }));
};

exports.Copy = Copy;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-down-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerDownLeft = void 0;

var _preact = require("preact");

const CornerDownLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "9 10 4 15 9 20"
  }), (0, _preact.h)("path", {
    d: "M20 4v7a4 4 0 0 1-4 4H4"
  }));
};

exports.CornerDownLeft = CornerDownLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-down-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerDownRight = void 0;

var _preact = require("preact");

const CornerDownRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "15 10 20 15 15 20"
  }), (0, _preact.h)("path", {
    d: "M4 4v7a4 4 0 0 0 4 4h12"
  }));
};

exports.CornerDownRight = CornerDownRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-left-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerLeftDown = void 0;

var _preact = require("preact");

const CornerLeftDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "14 15 9 20 4 15"
  }), (0, _preact.h)("path", {
    d: "M20 4h-7a4 4 0 0 0-4 4v12"
  }));
};

exports.CornerLeftDown = CornerLeftDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-left-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerLeftUp = void 0;

var _preact = require("preact");

const CornerLeftUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "14 9 9 4 4 9"
  }), (0, _preact.h)("path", {
    d: "M20 20h-7a4 4 0 0 1-4-4V4"
  }));
};

exports.CornerLeftUp = CornerLeftUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-right-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerRightDown = void 0;

var _preact = require("preact");

const CornerRightDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "10 15 15 20 20 15"
  }), (0, _preact.h)("path", {
    d: "M4 4h7a4 4 0 0 1 4 4v12"
  }));
};

exports.CornerRightDown = CornerRightDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-right-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerRightUp = void 0;

var _preact = require("preact");

const CornerRightUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "10 9 15 4 20 9"
  }), (0, _preact.h)("path", {
    d: "M4 20h7a4 4 0 0 0 4-4V4"
  }));
};

exports.CornerRightUp = CornerRightUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-up-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerUpLeft = void 0;

var _preact = require("preact");

const CornerUpLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "9 14 4 9 9 4"
  }), (0, _preact.h)("path", {
    d: "M20 20v-7a4 4 0 0 0-4-4H4"
  }));
};

exports.CornerUpLeft = CornerUpLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/corner-up-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CornerUpRight = void 0;

var _preact = require("preact");

const CornerUpRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "15 14 20 9 15 4"
  }), (0, _preact.h)("path", {
    d: "M4 20v-7a4 4 0 0 1 4-4h12"
  }));
};

exports.CornerUpRight = CornerUpRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/cpu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Cpu = void 0;

var _preact = require("preact");

const Cpu = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "4",
    y: "4",
    width: "16",
    height: "16",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("rect", {
    x: "9",
    y: "9",
    width: "6",
    height: "6"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "1",
    x2: "9",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "1",
    x2: "15",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "20",
    x2: "9",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "20",
    x2: "15",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "9",
    x2: "23",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "14",
    x2: "23",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "9",
    x2: "4",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "14",
    x2: "4",
    y2: "14"
  }));
};

exports.Cpu = Cpu;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/credit-card.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreditCard = void 0;

var _preact = require("preact");

const CreditCard = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "1",
    y: "4",
    width: "22",
    height: "16",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "10",
    x2: "23",
    y2: "10"
  }));
};

exports.CreditCard = CreditCard;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/crop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Crop = void 0;

var _preact = require("preact");

const Crop = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M6.13 1L6 16a2 2 0 0 0 2 2h15"
  }), (0, _preact.h)("path", {
    d: "M1 6.13L16 6a2 2 0 0 1 2 2v15"
  }));
};

exports.Crop = Crop;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/crosshair.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Crosshair = void 0;

var _preact = require("preact");

const Crosshair = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "22",
    y1: "12",
    x2: "18",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "12",
    x2: "2",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "6",
    x2: "12",
    y2: "2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22",
    x2: "12",
    y2: "18"
  }));
};

exports.Crosshair = Crosshair;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/database.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Database = void 0;

var _preact = require("preact");

const Database = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("ellipse", {
    cx: "12",
    cy: "5",
    rx: "9",
    ry: "3"
  }), (0, _preact.h)("path", {
    d: "M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"
  }), (0, _preact.h)("path", {
    d: "M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"
  }));
};

exports.Database = Database;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/delete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Delete = void 0;

var _preact = require("preact");

const Delete = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"
  }), (0, _preact.h)("line", {
    x1: "18",
    y1: "9",
    x2: "12",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "9",
    x2: "18",
    y2: "15"
  }));
};

exports.Delete = Delete;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/disc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Disc = void 0;

var _preact = require("preact");

const Disc = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "3"
  }));
};

exports.Disc = Disc;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/dollar-sign.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DollarSign = void 0;

var _preact = require("preact");

const DollarSign = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "1",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("path", {
    d: "M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"
  }));
};

exports.DollarSign = DollarSign;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/download-cloud.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DownloadCloud = void 0;

var _preact = require("preact");

const DownloadCloud = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "8 17 12 21 16 17"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "12",
    x2: "12",
    y2: "21"
  }), (0, _preact.h)("path", {
    d: "M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"
  }));
};

exports.DownloadCloud = DownloadCloud;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/download.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Download = void 0;

var _preact = require("preact");

const Download = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
  }), (0, _preact.h)("polyline", {
    points: "7 10 12 15 17 10"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "15",
    x2: "12",
    y2: "3"
  }));
};

exports.Download = Download;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/droplet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Droplet = void 0;

var _preact = require("preact");

const Droplet = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"
  }));
};

exports.Droplet = Droplet;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/edit-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Edit2 = void 0;

var _preact = require("preact");

const Edit2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"
  }));
};

exports.Edit2 = Edit2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/edit-3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Edit3 = void 0;

var _preact = require("preact");

const Edit3 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 20h9"
  }), (0, _preact.h)("path", {
    d: "M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"
  }));
};

exports.Edit3 = Edit3;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/edit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Edit = void 0;

var _preact = require("preact");

const Edit = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"
  }), (0, _preact.h)("path", {
    d: "M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"
  }));
};

exports.Edit = Edit;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/external-link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExternalLink = void 0;

var _preact = require("preact");

const ExternalLink = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
  }), (0, _preact.h)("polyline", {
    points: "15 3 21 3 21 9"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "14",
    x2: "21",
    y2: "3"
  }));
};

exports.ExternalLink = ExternalLink;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/eye-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EyeOff = void 0;

var _preact = require("preact");

const EyeOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.EyeOff = EyeOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/eye.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Eye = void 0;

var _preact = require("preact");

const Eye = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "3"
  }));
};

exports.Eye = Eye;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/facebook.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Facebook = void 0;

var _preact = require("preact");

const Facebook = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"
  }));
};

exports.Facebook = Facebook;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/fast-forward.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FastForward = void 0;

var _preact = require("preact");

const FastForward = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "13 19 22 12 13 5 13 19"
  }), (0, _preact.h)("polygon", {
    points: "2 19 11 12 2 5 2 19"
  }));
};

exports.FastForward = FastForward;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/feather.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Feather = void 0;

var _preact = require("preact");

const Feather = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "8",
    x2: "2",
    y2: "22"
  }), (0, _preact.h)("line", {
    x1: "17.5",
    y1: "15",
    x2: "9",
    y2: "15"
  }));
};

exports.Feather = Feather;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/figma.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Figma = void 0;

var _preact = require("preact");

const Figma = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"
  }), (0, _preact.h)("path", {
    d: "M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"
  }), (0, _preact.h)("path", {
    d: "M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"
  }), (0, _preact.h)("path", {
    d: "M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"
  }), (0, _preact.h)("path", {
    d: "M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"
  }));
};

exports.Figma = Figma;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/file-minus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileMinus = void 0;

var _preact = require("preact");

const FileMinus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
  }), (0, _preact.h)("polyline", {
    points: "14 2 14 8 20 8"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "15",
    x2: "15",
    y2: "15"
  }));
};

exports.FileMinus = FileMinus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/file-plus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilePlus = void 0;

var _preact = require("preact");

const FilePlus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
  }), (0, _preact.h)("polyline", {
    points: "14 2 14 8 20 8"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "18",
    x2: "12",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "15",
    x2: "15",
    y2: "15"
  }));
};

exports.FilePlus = FilePlus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/file-text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileText = void 0;

var _preact = require("preact");

const FileText = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
  }), (0, _preact.h)("polyline", {
    points: "14 2 14 8 20 8"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "13",
    x2: "8",
    y2: "13"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "17",
    x2: "8",
    y2: "17"
  }), (0, _preact.h)("polyline", {
    points: "10 9 9 9 8 9"
  }));
};

exports.FileText = FileText;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/file.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.File = void 0;

var _preact = require("preact");

const File = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"
  }), (0, _preact.h)("polyline", {
    points: "13 2 13 9 20 9"
  }));
};

exports.File = File;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/film.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Film = void 0;

var _preact = require("preact");

const Film = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "2",
    width: "20",
    height: "20",
    rx: "2.18",
    ry: "2.18"
  }), (0, _preact.h)("line", {
    x1: "7",
    y1: "2",
    x2: "7",
    y2: "22"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "2",
    x2: "17",
    y2: "22"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "12",
    x2: "22",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "7",
    x2: "7",
    y2: "7"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "17",
    x2: "7",
    y2: "17"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "17",
    x2: "22",
    y2: "17"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "7",
    x2: "22",
    y2: "7"
  }));
};

exports.Film = Film;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Filter = void 0;

var _preact = require("preact");

const Filter = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"
  }));
};

exports.Filter = Filter;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/flag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Flag = void 0;

var _preact = require("preact");

const Flag = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "22",
    x2: "4",
    y2: "15"
  }));
};

exports.Flag = Flag;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/folder-minus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FolderMinus = void 0;

var _preact = require("preact");

const FolderMinus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "14",
    x2: "15",
    y2: "14"
  }));
};

exports.FolderMinus = FolderMinus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/folder-plus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FolderPlus = void 0;

var _preact = require("preact");

const FolderPlus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "11",
    x2: "12",
    y2: "17"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "14",
    x2: "15",
    y2: "14"
  }));
};

exports.FolderPlus = FolderPlus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/folder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Folder = void 0;

var _preact = require("preact");

const Folder = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"
  }));
};

exports.Folder = Folder;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/framer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Framer = void 0;

var _preact = require("preact");

const Framer = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7"
  }));
};

exports.Framer = Framer;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/frown.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Frown = void 0;

var _preact = require("preact");

const Frown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("path", {
    d: "M16 16s-1.5-2-4-2-4 2-4 2"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "9.01",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "15.01",
    y2: "9"
  }));
};

exports.Frown = Frown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/gift.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gift = void 0;

var _preact = require("preact");

const Gift = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "20 12 20 22 4 22 4 12"
  }), (0, _preact.h)("rect", {
    x: "2",
    y: "7",
    width: "20",
    height: "5"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22",
    x2: "12",
    y2: "7"
  }), (0, _preact.h)("path", {
    d: "M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"
  }), (0, _preact.h)("path", {
    d: "M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"
  }));
};

exports.Gift = Gift;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/git-branch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GitBranch = void 0;

var _preact = require("preact");

const GitBranch = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "6",
    y1: "3",
    x2: "6",
    y2: "15"
  }), (0, _preact.h)("circle", {
    cx: "18",
    cy: "6",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "18",
    r: "3"
  }), (0, _preact.h)("path", {
    d: "M18 9a9 9 0 0 1-9 9"
  }));
};

exports.GitBranch = GitBranch;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/git-commit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GitCommit = void 0;

var _preact = require("preact");

const GitCommit = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "1.05",
    y1: "12",
    x2: "7",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "17.01",
    y1: "12",
    x2: "22.96",
    y2: "12"
  }));
};

exports.GitCommit = GitCommit;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/git-merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GitMerge = void 0;

var _preact = require("preact");

const GitMerge = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "18",
    cy: "18",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "6",
    r: "3"
  }), (0, _preact.h)("path", {
    d: "M6 21V9a9 9 0 0 0 9 9"
  }));
};

exports.GitMerge = GitMerge;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/git-pull-request.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GitPullRequest = void 0;

var _preact = require("preact");

const GitPullRequest = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "18",
    cy: "18",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "6",
    r: "3"
  }), (0, _preact.h)("path", {
    d: "M13 6h3a2 2 0 0 1 2 2v7"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "9",
    x2: "6",
    y2: "21"
  }));
};

exports.GitPullRequest = GitPullRequest;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/github.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Github = void 0;

var _preact = require("preact");

const Github = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"
  }));
};

exports.Github = Github;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/gitlab.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gitlab = void 0;

var _preact = require("preact");

const Gitlab = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"
  }));
};

exports.Gitlab = Gitlab;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/globe.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Globe = void 0;

var _preact = require("preact");

const Globe = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "12",
    x2: "22",
    y2: "12"
  }), (0, _preact.h)("path", {
    d: "M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"
  }));
};

exports.Globe = Globe;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/grid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Grid = void 0;

var _preact = require("preact");

const Grid = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "7",
    height: "7"
  }), (0, _preact.h)("rect", {
    x: "14",
    y: "3",
    width: "7",
    height: "7"
  }), (0, _preact.h)("rect", {
    x: "14",
    y: "14",
    width: "7",
    height: "7"
  }), (0, _preact.h)("rect", {
    x: "3",
    y: "14",
    width: "7",
    height: "7"
  }));
};

exports.Grid = Grid;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/hard-drive.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HardDrive = void 0;

var _preact = require("preact");

const HardDrive = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "22",
    y1: "12",
    x2: "2",
    y2: "12"
  }), (0, _preact.h)("path", {
    d: "M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "16",
    x2: "6.01",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "16",
    x2: "10.01",
    y2: "16"
  }));
};

exports.HardDrive = HardDrive;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/hash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hash = void 0;

var _preact = require("preact");

const Hash = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "4",
    y1: "9",
    x2: "20",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "15",
    x2: "20",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "3",
    x2: "8",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "3",
    x2: "14",
    y2: "21"
  }));
};

exports.Hash = Hash;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/headphones.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Headphones = void 0;

var _preact = require("preact");

const Headphones = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M3 18v-6a9 9 0 0 1 18 0v6"
  }), (0, _preact.h)("path", {
    d: "M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"
  }));
};

exports.Headphones = Headphones;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/heart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Heart = void 0;

var _preact = require("preact");

const Heart = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"
  }));
};

exports.Heart = Heart;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/help-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HelpCircle = void 0;

var _preact = require("preact");

const HelpCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("path", {
    d: "M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "17",
    x2: "12.01",
    y2: "17"
  }));
};

exports.HelpCircle = HelpCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/hexagon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Hexagon = void 0;

var _preact = require("preact");

const Hexagon = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
  }));
};

exports.Hexagon = Hexagon;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/home.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Home = void 0;

var _preact = require("preact");

const Home = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"
  }), (0, _preact.h)("polyline", {
    points: "9 22 9 12 15 12 15 22"
  }));
};

exports.Home = Home;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/image.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Image = void 0;

var _preact = require("preact");

const Image = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("circle", {
    cx: "8.5",
    cy: "8.5",
    r: "1.5"
  }), (0, _preact.h)("polyline", {
    points: "21 15 16 10 5 21"
  }));
};

exports.Image = Image;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/inbox.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Inbox = void 0;

var _preact = require("preact");

const Inbox = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "22 12 16 12 14 15 10 15 8 12 2 12"
  }), (0, _preact.h)("path", {
    d: "M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"
  }));
};

exports.Inbox = Inbox;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/info.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Info = void 0;

var _preact = require("preact");

const Info = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "16",
    x2: "12",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12.01",
    y2: "8"
  }));
};

exports.Info = Info;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/instagram.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Instagram = void 0;

var _preact = require("preact");

const Instagram = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "2",
    width: "20",
    height: "20",
    rx: "5",
    ry: "5"
  }), (0, _preact.h)("path", {
    d: "M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"
  }), (0, _preact.h)("line", {
    x1: "17.5",
    y1: "6.5",
    x2: "17.51",
    y2: "6.5"
  }));
};

exports.Instagram = Instagram;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/italic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Italic = void 0;

var _preact = require("preact");

const Italic = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "19",
    y1: "4",
    x2: "10",
    y2: "4"
  }), (0, _preact.h)("line", {
    x1: "14",
    y1: "20",
    x2: "5",
    y2: "20"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "4",
    x2: "9",
    y2: "20"
  }));
};

exports.Italic = Italic;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/key.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Key = void 0;

var _preact = require("preact");

const Key = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"
  }));
};

exports.Key = Key;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/layers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Layers = void 0;

var _preact = require("preact");

const Layers = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "12 2 2 7 12 12 22 7 12 2"
  }), (0, _preact.h)("polyline", {
    points: "2 17 12 22 22 17"
  }), (0, _preact.h)("polyline", {
    points: "2 12 12 17 22 12"
  }));
};

exports.Layers = Layers;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/layout.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Layout = void 0;

var _preact = require("preact");

const Layout = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "9",
    x2: "21",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "21",
    x2: "9",
    y2: "9"
  }));
};

exports.Layout = Layout;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/life-buoy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LifeBuoy = void 0;

var _preact = require("preact");

const LifeBuoy = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "4.93",
    y1: "4.93",
    x2: "9.17",
    y2: "9.17"
  }), (0, _preact.h)("line", {
    x1: "14.83",
    y1: "14.83",
    x2: "19.07",
    y2: "19.07"
  }), (0, _preact.h)("line", {
    x1: "14.83",
    y1: "9.17",
    x2: "19.07",
    y2: "4.93"
  }), (0, _preact.h)("line", {
    x1: "14.83",
    y1: "9.17",
    x2: "18.36",
    y2: "5.64"
  }), (0, _preact.h)("line", {
    x1: "4.93",
    y1: "19.07",
    x2: "9.17",
    y2: "14.83"
  }));
};

exports.LifeBuoy = LifeBuoy;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/link-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link2 = void 0;

var _preact = require("preact");

const Link2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.Link2 = Link2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Link = void 0;

var _preact = require("preact");

const Link = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"
  }), (0, _preact.h)("path", {
    d: "M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"
  }));
};

exports.Link = Link;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/linkedin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linkedin = void 0;

var _preact = require("preact");

const Linkedin = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"
  }), (0, _preact.h)("rect", {
    x: "2",
    y: "9",
    width: "4",
    height: "12"
  }), (0, _preact.h)("circle", {
    cx: "4",
    cy: "4",
    r: "2"
  }));
};

exports.Linkedin = Linkedin;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/list.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = void 0;

var _preact = require("preact");

const List = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "8",
    y1: "6",
    x2: "21",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "21",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "18",
    x2: "21",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "6",
    x2: "3.01",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "12",
    x2: "3.01",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "18",
    x2: "3.01",
    y2: "18"
  }));
};

exports.List = List;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/loader.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loader = void 0;

var _preact = require("preact");

const Loader = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "18",
    x2: "12",
    y2: "22"
  }), (0, _preact.h)("line", {
    x1: "4.93",
    y1: "4.93",
    x2: "7.76",
    y2: "7.76"
  }), (0, _preact.h)("line", {
    x1: "16.24",
    y1: "16.24",
    x2: "19.07",
    y2: "19.07"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "12",
    x2: "6",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "18",
    y1: "12",
    x2: "22",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "4.93",
    y1: "19.07",
    x2: "7.76",
    y2: "16.24"
  }), (0, _preact.h)("line", {
    x1: "16.24",
    y1: "7.76",
    x2: "19.07",
    y2: "4.93"
  }));
};

exports.Loader = Loader;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/lock.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Lock = void 0;

var _preact = require("preact");

const Lock = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "11",
    width: "18",
    height: "11",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("path", {
    d: "M7 11V7a5 5 0 0 1 10 0v4"
  }));
};

exports.Lock = Lock;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/log-in.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogIn = void 0;

var _preact = require("preact");

const LogIn = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"
  }), (0, _preact.h)("polyline", {
    points: "10 17 15 12 10 7"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "12",
    x2: "3",
    y2: "12"
  }));
};

exports.LogIn = LogIn;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/log-out.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogOut = void 0;

var _preact = require("preact");

const LogOut = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"
  }), (0, _preact.h)("polyline", {
    points: "16 17 21 12 16 7"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "12",
    x2: "9",
    y2: "12"
  }));
};

exports.LogOut = LogOut;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/mail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Mail = void 0;

var _preact = require("preact");

const Mail = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"
  }), (0, _preact.h)("polyline", {
    points: "22,6 12,13 2,6"
  }));
};

exports.Mail = Mail;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/map-pin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MapPin = void 0;

var _preact = require("preact");

const MapPin = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "10",
    r: "3"
  }));
};

exports.MapPin = MapPin;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Map = void 0;

var _preact = require("preact");

const Map = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "2",
    x2: "8",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "6",
    x2: "16",
    y2: "22"
  }));
};

exports.Map = Map;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/maximize-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Maximize2 = void 0;

var _preact = require("preact");

const Maximize2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "15 3 21 3 21 9"
  }), (0, _preact.h)("polyline", {
    points: "9 21 3 21 3 15"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "3",
    x2: "14",
    y2: "10"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "21",
    x2: "10",
    y2: "14"
  }));
};

exports.Maximize2 = Maximize2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/maximize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Maximize = void 0;

var _preact = require("preact");

const Maximize = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"
  }));
};

exports.Maximize = Maximize;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/meh.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Meh = void 0;

var _preact = require("preact");

const Meh = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "15",
    x2: "16",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "9.01",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "15.01",
    y2: "9"
  }));
};

exports.Meh = Meh;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/menu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Menu = void 0;

var _preact = require("preact");

const Menu = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "3",
    y1: "12",
    x2: "21",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "6",
    x2: "21",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "18",
    x2: "21",
    y2: "18"
  }));
};

exports.Menu = Menu;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/message-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageCircle = void 0;

var _preact = require("preact");

const MessageCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"
  }));
};

exports.MessageCircle = MessageCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/message-square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageSquare = void 0;

var _preact = require("preact");

const MessageSquare = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"
  }));
};

exports.MessageSquare = MessageSquare;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/mic-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MicOff = void 0;

var _preact = require("preact");

const MicOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }), (0, _preact.h)("path", {
    d: "M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"
  }), (0, _preact.h)("path", {
    d: "M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "19",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "23",
    x2: "16",
    y2: "23"
  }));
};

exports.MicOff = MicOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/mic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Mic = void 0;

var _preact = require("preact");

const Mic = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"
  }), (0, _preact.h)("path", {
    d: "M19 10v2a7 7 0 0 1-14 0v-2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "19",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "23",
    x2: "16",
    y2: "23"
  }));
};

exports.Mic = Mic;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/minimize-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Minimize2 = void 0;

var _preact = require("preact");

const Minimize2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "4 14 10 14 10 20"
  }), (0, _preact.h)("polyline", {
    points: "20 10 14 10 14 4"
  }), (0, _preact.h)("line", {
    x1: "14",
    y1: "10",
    x2: "21",
    y2: "3"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "21",
    x2: "10",
    y2: "14"
  }));
};

exports.Minimize2 = Minimize2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/minimize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Minimize = void 0;

var _preact = require("preact");

const Minimize = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"
  }));
};

exports.Minimize = Minimize;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/minus-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MinusCircle = void 0;

var _preact = require("preact");

const MinusCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.MinusCircle = MinusCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/minus-square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MinusSquare = void 0;

var _preact = require("preact");

const MinusSquare = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.MinusSquare = MinusSquare;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/minus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Minus = void 0;

var _preact = require("preact");

const Minus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "5",
    y1: "12",
    x2: "19",
    y2: "12"
  }));
};

exports.Minus = Minus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/monitor.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Monitor = void 0;

var _preact = require("preact");

const Monitor = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "3",
    width: "20",
    height: "14",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "21",
    x2: "16",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "17",
    x2: "12",
    y2: "21"
  }));
};

exports.Monitor = Monitor;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/moon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Moon = void 0;

var _preact = require("preact");

const Moon = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
  }));
};

exports.Moon = Moon;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/more-horizontal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MoreHorizontal = void 0;

var _preact = require("preact");

const MoreHorizontal = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "1"
  }), (0, _preact.h)("circle", {
    cx: "19",
    cy: "12",
    r: "1"
  }), (0, _preact.h)("circle", {
    cx: "5",
    cy: "12",
    r: "1"
  }));
};

exports.MoreHorizontal = MoreHorizontal;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/more-vertical.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MoreVertical = void 0;

var _preact = require("preact");

const MoreVertical = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "1"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "5",
    r: "1"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "19",
    r: "1"
  }));
};

exports.MoreVertical = MoreVertical;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/mouse-pointer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MousePointer = void 0;

var _preact = require("preact");

const MousePointer = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"
  }), (0, _preact.h)("path", {
    d: "M13 13l6 6"
  }));
};

exports.MousePointer = MousePointer;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/move.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Move = void 0;

var _preact = require("preact");

const Move = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "5 9 2 12 5 15"
  }), (0, _preact.h)("polyline", {
    points: "9 5 12 2 15 5"
  }), (0, _preact.h)("polyline", {
    points: "15 19 12 22 9 19"
  }), (0, _preact.h)("polyline", {
    points: "19 9 22 12 19 15"
  }), (0, _preact.h)("line", {
    x1: "2",
    y1: "12",
    x2: "22",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "22"
  }));
};

exports.Move = Move;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/music.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Music = void 0;

var _preact = require("preact");

const Music = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M9 18V5l12-2v13"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "18",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "18",
    cy: "16",
    r: "3"
  }));
};

exports.Music = Music;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/navigation-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Navigation2 = void 0;

var _preact = require("preact");

const Navigation2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "12 2 19 21 12 17 5 21 12 2"
  }));
};

exports.Navigation2 = Navigation2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/navigation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Navigation = void 0;

var _preact = require("preact");

const Navigation = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "3 11 22 2 13 21 11 13 3 11"
  }));
};

exports.Navigation = Navigation;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/octagon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Octagon = void 0;

var _preact = require("preact");

const Octagon = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"
  }));
};

exports.Octagon = Octagon;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/package.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Package = void 0;

var _preact = require("preact");

const Package = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "16.5",
    y1: "9.4",
    x2: "7.5",
    y2: "4.21"
  }), (0, _preact.h)("path", {
    d: "M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"
  }), (0, _preact.h)("polyline", {
    points: "3.27 6.96 12 12.01 20.73 6.96"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "22.08",
    x2: "12",
    y2: "12"
  }));
};

exports.Package = Package;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/paperclip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Paperclip = void 0;

var _preact = require("preact");

const Paperclip = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"
  }));
};

exports.Paperclip = Paperclip;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/pause-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PauseCircle = void 0;

var _preact = require("preact");

const PauseCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "15",
    x2: "10",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "14",
    y1: "15",
    x2: "14",
    y2: "9"
  }));
};

exports.PauseCircle = PauseCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/pause.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pause = void 0;

var _preact = require("preact");

const Pause = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "6",
    y: "4",
    width: "4",
    height: "16"
  }), (0, _preact.h)("rect", {
    x: "14",
    y: "4",
    width: "4",
    height: "16"
  }));
};

exports.Pause = Pause;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/pen-tool.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PenTool = void 0;

var _preact = require("preact");

const PenTool = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 19l7-7 3 3-7 7-3-3z"
  }), (0, _preact.h)("path", {
    d: "M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"
  }), (0, _preact.h)("path", {
    d: "M2 2l7.586 7.586"
  }), (0, _preact.h)("circle", {
    cx: "11",
    cy: "11",
    r: "2"
  }));
};

exports.PenTool = PenTool;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/percent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Percent = void 0;

var _preact = require("preact");

const Percent = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "19",
    y1: "5",
    x2: "5",
    y2: "19"
  }), (0, _preact.h)("circle", {
    cx: "6.5",
    cy: "6.5",
    r: "2.5"
  }), (0, _preact.h)("circle", {
    cx: "17.5",
    cy: "17.5",
    r: "2.5"
  }));
};

exports.Percent = Percent;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-call.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneCall = void 0;

var _preact = require("preact");

const PhoneCall = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.PhoneCall = PhoneCall;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-forwarded.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneForwarded = void 0;

var _preact = require("preact");

const PhoneForwarded = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "19 1 23 5 19 9"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "5",
    x2: "23",
    y2: "5"
  }), (0, _preact.h)("path", {
    d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.PhoneForwarded = PhoneForwarded;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-incoming.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneIncoming = void 0;

var _preact = require("preact");

const PhoneIncoming = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "16 2 16 8 22 8"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "1",
    x2: "16",
    y2: "8"
  }), (0, _preact.h)("path", {
    d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.PhoneIncoming = PhoneIncoming;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-missed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneMissed = void 0;

var _preact = require("preact");

const PhoneMissed = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "23",
    y1: "1",
    x2: "17",
    y2: "7"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "1",
    x2: "23",
    y2: "7"
  }), (0, _preact.h)("path", {
    d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.PhoneMissed = PhoneMissed;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneOff = void 0;

var _preact = require("preact");

const PhoneOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "1",
    x2: "1",
    y2: "23"
  }));
};

exports.PhoneOff = PhoneOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone-outgoing.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PhoneOutgoing = void 0;

var _preact = require("preact");

const PhoneOutgoing = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "23 7 23 1 17 1"
  }), (0, _preact.h)("line", {
    x1: "16",
    y1: "8",
    x2: "23",
    y2: "1"
  }), (0, _preact.h)("path", {
    d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.PhoneOutgoing = PhoneOutgoing;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/phone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Phone = void 0;

var _preact = require("preact");

const Phone = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
  }));
};

exports.Phone = Phone;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/pie-chart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PieChart = void 0;

var _preact = require("preact");

const PieChart = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21.21 15.89A10 10 0 1 1 8 2.83"
  }), (0, _preact.h)("path", {
    d: "M22 12A10 10 0 0 0 12 2v10z"
  }));
};

exports.PieChart = PieChart;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/play-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlayCircle = void 0;

var _preact = require("preact");

const PlayCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("polygon", {
    points: "10 8 16 12 10 16 10 8"
  }));
};

exports.PlayCircle = PlayCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/play.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Play = void 0;

var _preact = require("preact");

const Play = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "5 3 19 12 5 21 5 3"
  }));
};

exports.Play = Play;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/plus-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlusCircle = void 0;

var _preact = require("preact");

const PlusCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.PlusCircle = PlusCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/plus-square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlusSquare = void 0;

var _preact = require("preact");

const PlusSquare = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "12",
    x2: "16",
    y2: "12"
  }));
};

exports.PlusSquare = PlusSquare;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/plus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Plus = void 0;

var _preact = require("preact");

const Plus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "12",
    y1: "5",
    x2: "12",
    y2: "19"
  }), (0, _preact.h)("line", {
    x1: "5",
    y1: "12",
    x2: "19",
    y2: "12"
  }));
};

exports.Plus = Plus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/pocket.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pocket = void 0;

var _preact = require("preact");

const Pocket = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"
  }), (0, _preact.h)("polyline", {
    points: "8 10 12 14 16 10"
  }));
};

exports.Pocket = Pocket;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/power.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Power = void 0;

var _preact = require("preact");

const Power = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M18.36 6.64a9 9 0 1 1-12.73 0"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "12"
  }));
};

exports.Power = Power;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/printer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Printer = void 0;

var _preact = require("preact");

const Printer = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "6 9 6 2 18 2 18 9"
  }), (0, _preact.h)("path", {
    d: "M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"
  }), (0, _preact.h)("rect", {
    x: "6",
    y: "14",
    width: "12",
    height: "8"
  }));
};

exports.Printer = Printer;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/radio.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Radio = void 0;

var _preact = require("preact");

const Radio = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "2"
  }), (0, _preact.h)("path", {
    d: "M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"
  }));
};

exports.Radio = Radio;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/refresh-ccw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RefreshCcw = void 0;

var _preact = require("preact");

const RefreshCcw = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "1 4 1 10 7 10"
  }), (0, _preact.h)("polyline", {
    points: "23 20 23 14 17 14"
  }), (0, _preact.h)("path", {
    d: "M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"
  }));
};

exports.RefreshCcw = RefreshCcw;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/refresh-cw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RefreshCw = void 0;

var _preact = require("preact");

const RefreshCw = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "23 4 23 10 17 10"
  }), (0, _preact.h)("polyline", {
    points: "1 20 1 14 7 14"
  }), (0, _preact.h)("path", {
    d: "M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"
  }));
};

exports.RefreshCw = RefreshCw;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/repeat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Repeat = void 0;

var _preact = require("preact");

const Repeat = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "17 1 21 5 17 9"
  }), (0, _preact.h)("path", {
    d: "M3 11V9a4 4 0 0 1 4-4h14"
  }), (0, _preact.h)("polyline", {
    points: "7 23 3 19 7 15"
  }), (0, _preact.h)("path", {
    d: "M21 13v2a4 4 0 0 1-4 4H3"
  }));
};

exports.Repeat = Repeat;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/rewind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Rewind = void 0;

var _preact = require("preact");

const Rewind = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "11 19 2 12 11 5 11 19"
  }), (0, _preact.h)("polygon", {
    points: "22 19 13 12 22 5 22 19"
  }));
};

exports.Rewind = Rewind;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/rotate-ccw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RotateCcw = void 0;

var _preact = require("preact");

const RotateCcw = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "1 4 1 10 7 10"
  }), (0, _preact.h)("path", {
    d: "M3.51 15a9 9 0 1 0 2.13-9.36L1 10"
  }));
};

exports.RotateCcw = RotateCcw;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/rotate-cw.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RotateCw = void 0;

var _preact = require("preact");

const RotateCw = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "23 4 23 10 17 10"
  }), (0, _preact.h)("path", {
    d: "M20.49 15a9 9 0 1 1-2.12-9.36L23 10"
  }));
};

exports.RotateCw = RotateCw;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/rss.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Rss = void 0;

var _preact = require("preact");

const Rss = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 11a9 9 0 0 1 9 9"
  }), (0, _preact.h)("path", {
    d: "M4 4a16 16 0 0 1 16 16"
  }), (0, _preact.h)("circle", {
    cx: "5",
    cy: "19",
    r: "1"
  }));
};

exports.Rss = Rss;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/save.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Save = void 0;

var _preact = require("preact");

const Save = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"
  }), (0, _preact.h)("polyline", {
    points: "17 21 17 13 7 13 7 21"
  }), (0, _preact.h)("polyline", {
    points: "7 3 7 8 15 8"
  }));
};

exports.Save = Save;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/scissors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scissors = void 0;

var _preact = require("preact");

const Scissors = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "6",
    cy: "6",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "18",
    r: "3"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "4",
    x2: "8.12",
    y2: "15.88"
  }), (0, _preact.h)("line", {
    x1: "14.47",
    y1: "14.48",
    x2: "20",
    y2: "20"
  }), (0, _preact.h)("line", {
    x1: "8.12",
    y1: "8.12",
    x2: "12",
    y2: "12"
  }));
};

exports.Scissors = Scissors;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/search.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Search = void 0;

var _preact = require("preact");

const Search = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "21",
    x2: "16.65",
    y2: "16.65"
  }));
};

exports.Search = Search;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/send.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Send = void 0;

var _preact = require("preact");

const Send = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "22",
    y1: "2",
    x2: "11",
    y2: "13"
  }), (0, _preact.h)("polygon", {
    points: "22 2 15 22 11 13 2 9 22 2"
  }));
};

exports.Send = Send;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/server.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Server = void 0;

var _preact = require("preact");

const Server = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "2",
    width: "20",
    height: "8",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("rect", {
    x: "2",
    y: "14",
    width: "20",
    height: "8",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "6",
    x2: "6.01",
    y2: "6"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "18",
    x2: "6.01",
    y2: "18"
  }));
};

exports.Server = Server;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/settings.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Settings = void 0;

var _preact = require("preact");

const Settings = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "3"
  }), (0, _preact.h)("path", {
    d: "M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"
  }));
};

exports.Settings = Settings;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/share-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Share2 = void 0;

var _preact = require("preact");

const Share2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "18",
    cy: "5",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "6",
    cy: "12",
    r: "3"
  }), (0, _preact.h)("circle", {
    cx: "18",
    cy: "19",
    r: "3"
  }), (0, _preact.h)("line", {
    x1: "8.59",
    y1: "13.51",
    x2: "15.42",
    y2: "17.49"
  }), (0, _preact.h)("line", {
    x1: "15.41",
    y1: "6.51",
    x2: "8.59",
    y2: "10.49"
  }));
};

exports.Share2 = Share2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/share.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Share = void 0;

var _preact = require("preact");

const Share = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"
  }), (0, _preact.h)("polyline", {
    points: "16 6 12 2 8 6"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "15"
  }));
};

exports.Share = Share;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/shield-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ShieldOff = void 0;

var _preact = require("preact");

const ShieldOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"
  }), (0, _preact.h)("path", {
    d: "M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.ShieldOff = ShieldOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/shield.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Shield = void 0;

var _preact = require("preact");

const Shield = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"
  }));
};

exports.Shield = Shield;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/shopping-bag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ShoppingBag = void 0;

var _preact = require("preact");

const ShoppingBag = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"
  }), (0, _preact.h)("line", {
    x1: "3",
    y1: "6",
    x2: "21",
    y2: "6"
  }), (0, _preact.h)("path", {
    d: "M16 10a4 4 0 0 1-8 0"
  }));
};

exports.ShoppingBag = ShoppingBag;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/shopping-cart.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ShoppingCart = void 0;

var _preact = require("preact");

const ShoppingCart = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "9",
    cy: "21",
    r: "1"
  }), (0, _preact.h)("circle", {
    cx: "20",
    cy: "21",
    r: "1"
  }), (0, _preact.h)("path", {
    d: "M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"
  }));
};

exports.ShoppingCart = ShoppingCart;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Shuffle = void 0;

var _preact = require("preact");

const Shuffle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "16 3 21 3 21 8"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "20",
    x2: "21",
    y2: "3"
  }), (0, _preact.h)("polyline", {
    points: "21 16 21 21 16 21"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "15",
    x2: "21",
    y2: "21"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "4",
    x2: "9",
    y2: "9"
  }));
};

exports.Shuffle = Shuffle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/sidebar.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sidebar = void 0;

var _preact = require("preact");

const Sidebar = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "3",
    x2: "9",
    y2: "21"
  }));
};

exports.Sidebar = Sidebar;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/skip-back.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkipBack = void 0;

var _preact = require("preact");

const SkipBack = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "19 20 9 12 19 4 19 20"
  }), (0, _preact.h)("line", {
    x1: "5",
    y1: "19",
    x2: "5",
    y2: "5"
  }));
};

exports.SkipBack = SkipBack;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/skip-forward.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkipForward = void 0;

var _preact = require("preact");

const SkipForward = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "5 4 15 12 5 20 5 4"
  }), (0, _preact.h)("line", {
    x1: "19",
    y1: "5",
    x2: "19",
    y2: "19"
  }));
};

exports.SkipForward = SkipForward;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/slack.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slack = void 0;

var _preact = require("preact");

const Slack = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"
  }), (0, _preact.h)("path", {
    d: "M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"
  }), (0, _preact.h)("path", {
    d: "M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"
  }), (0, _preact.h)("path", {
    d: "M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"
  }), (0, _preact.h)("path", {
    d: "M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"
  }), (0, _preact.h)("path", {
    d: "M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"
  }), (0, _preact.h)("path", {
    d: "M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"
  }), (0, _preact.h)("path", {
    d: "M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"
  }));
};

exports.Slack = Slack;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/slash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slash = void 0;

var _preact = require("preact");

const Slash = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "4.93",
    y1: "4.93",
    x2: "19.07",
    y2: "19.07"
  }));
};

exports.Slash = Slash;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/sliders.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sliders = void 0;

var _preact = require("preact");

const Sliders = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "4",
    y1: "21",
    x2: "4",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "10",
    x2: "4",
    y2: "3"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "21",
    x2: "12",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "8",
    x2: "12",
    y2: "3"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "21",
    x2: "20",
    y2: "16"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "12",
    x2: "20",
    y2: "3"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "14",
    x2: "7",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "8",
    x2: "15",
    y2: "8"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "16",
    x2: "23",
    y2: "16"
  }));
};

exports.Sliders = Sliders;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/smartphone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Smartphone = void 0;

var _preact = require("preact");

const Smartphone = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "5",
    y: "2",
    width: "14",
    height: "20",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "18",
    x2: "12.01",
    y2: "18"
  }));
};

exports.Smartphone = Smartphone;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/smile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Smile = void 0;

var _preact = require("preact");

const Smile = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("path", {
    d: "M8 14s1.5 2 4 2 4-2 4-2"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "9.01",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "15.01",
    y2: "9"
  }));
};

exports.Smile = Smile;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/speaker.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Speaker = void 0;

var _preact = require("preact");

const Speaker = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "4",
    y: "2",
    width: "16",
    height: "20",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "14",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "6",
    x2: "12.01",
    y2: "6"
  }));
};

exports.Speaker = Speaker;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Square = void 0;

var _preact = require("preact");

const Square = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }));
};

exports.Square = Square;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/star.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Star = void 0;

var _preact = require("preact");

const Star = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"
  }));
};

exports.Star = Star;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/stop-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StopCircle = void 0;

var _preact = require("preact");

const StopCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("rect", {
    x: "9",
    y: "9",
    width: "6",
    height: "6"
  }));
};

exports.StopCircle = StopCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/sun.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sun = void 0;

var _preact = require("preact");

const Sun = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "5"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "1",
    x2: "12",
    y2: "3"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "21",
    x2: "12",
    y2: "23"
  }), (0, _preact.h)("line", {
    x1: "4.22",
    y1: "4.22",
    x2: "5.64",
    y2: "5.64"
  }), (0, _preact.h)("line", {
    x1: "18.36",
    y1: "18.36",
    x2: "19.78",
    y2: "19.78"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "12",
    x2: "3",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "12",
    x2: "23",
    y2: "12"
  }), (0, _preact.h)("line", {
    x1: "4.22",
    y1: "19.78",
    x2: "5.64",
    y2: "18.36"
  }), (0, _preact.h)("line", {
    x1: "18.36",
    y1: "5.64",
    x2: "19.78",
    y2: "4.22"
  }));
};

exports.Sun = Sun;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/sunrise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sunrise = void 0;

var _preact = require("preact");

const Sunrise = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M17 18a5 5 0 0 0-10 0"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "2",
    x2: "12",
    y2: "9"
  }), (0, _preact.h)("line", {
    x1: "4.22",
    y1: "10.22",
    x2: "5.64",
    y2: "11.64"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "18",
    x2: "3",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "18",
    x2: "23",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "18.36",
    y1: "11.64",
    x2: "19.78",
    y2: "10.22"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "22",
    x2: "1",
    y2: "22"
  }), (0, _preact.h)("polyline", {
    points: "8 6 12 2 16 6"
  }));
};

exports.Sunrise = Sunrise;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/sunset.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Sunset = void 0;

var _preact = require("preact");

const Sunset = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M17 18a5 5 0 0 0-10 0"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "9",
    x2: "12",
    y2: "2"
  }), (0, _preact.h)("line", {
    x1: "4.22",
    y1: "10.22",
    x2: "5.64",
    y2: "11.64"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "18",
    x2: "3",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "18",
    x2: "23",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "18.36",
    y1: "11.64",
    x2: "19.78",
    y2: "10.22"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "22",
    x2: "1",
    y2: "22"
  }), (0, _preact.h)("polyline", {
    points: "16 5 12 9 8 5"
  }));
};

exports.Sunset = Sunset;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/tablet.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tablet = void 0;

var _preact = require("preact");

const Tablet = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "4",
    y: "2",
    width: "16",
    height: "20",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "18",
    x2: "12.01",
    y2: "18"
  }));
};

exports.Tablet = Tablet;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/tag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tag = void 0;

var _preact = require("preact");

const Tag = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"
  }), (0, _preact.h)("line", {
    x1: "7",
    y1: "7",
    x2: "7.01",
    y2: "7"
  }));
};

exports.Tag = Tag;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/target.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Target = void 0;

var _preact = require("preact");

const Target = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "6"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "2"
  }));
};

exports.Target = Target;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/terminal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Terminal = void 0;

var _preact = require("preact");

const Terminal = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "4 17 10 11 4 5"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "19",
    x2: "20",
    y2: "19"
  }));
};

exports.Terminal = Terminal;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/thermometer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Thermometer = void 0;

var _preact = require("preact");

const Thermometer = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"
  }));
};

exports.Thermometer = Thermometer;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/thumbs-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThumbsDown = void 0;

var _preact = require("preact");

const ThumbsDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"
  }));
};

exports.ThumbsDown = ThumbsDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/thumbs-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ThumbsUp = void 0;

var _preact = require("preact");

const ThumbsUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"
  }));
};

exports.ThumbsUp = ThumbsUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/toggle-left.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleLeft = void 0;

var _preact = require("preact");

const ToggleLeft = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "1",
    y: "5",
    width: "22",
    height: "14",
    rx: "7",
    ry: "7"
  }), (0, _preact.h)("circle", {
    cx: "8",
    cy: "12",
    r: "3"
  }));
};

exports.ToggleLeft = ToggleLeft;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/toggle-right.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToggleRight = void 0;

var _preact = require("preact");

const ToggleRight = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "1",
    y: "5",
    width: "22",
    height: "14",
    rx: "7",
    ry: "7"
  }), (0, _preact.h)("circle", {
    cx: "16",
    cy: "12",
    r: "3"
  }));
};

exports.ToggleRight = ToggleRight;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/tool.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tool = void 0;

var _preact = require("preact");

const Tool = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"
  }));
};

exports.Tool = Tool;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/trash-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Trash2 = void 0;

var _preact = require("preact");

const Trash2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "3 6 5 6 21 6"
  }), (0, _preact.h)("path", {
    d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
  }), (0, _preact.h)("line", {
    x1: "10",
    y1: "11",
    x2: "10",
    y2: "17"
  }), (0, _preact.h)("line", {
    x1: "14",
    y1: "11",
    x2: "14",
    y2: "17"
  }));
};

exports.Trash2 = Trash2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/trash.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Trash = void 0;

var _preact = require("preact");

const Trash = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "3 6 5 6 21 6"
  }), (0, _preact.h)("path", {
    d: "M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"
  }));
};

exports.Trash = Trash;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/trello.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Trello = void 0;

var _preact = require("preact");

const Trello = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("rect", {
    x: "7",
    y: "7",
    width: "3",
    height: "9"
  }), (0, _preact.h)("rect", {
    x: "14",
    y: "7",
    width: "3",
    height: "5"
  }));
};

exports.Trello = Trello;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/trending-down.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TrendingDown = void 0;

var _preact = require("preact");

const TrendingDown = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "23 18 13.5 8.5 8.5 13.5 1 6"
  }), (0, _preact.h)("polyline", {
    points: "17 18 23 18 23 12"
  }));
};

exports.TrendingDown = TrendingDown;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/trending-up.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TrendingUp = void 0;

var _preact = require("preact");

const TrendingUp = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "23 6 13.5 15.5 8.5 10.5 1 18"
  }), (0, _preact.h)("polyline", {
    points: "17 6 23 6 23 12"
  }));
};

exports.TrendingUp = TrendingUp;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Triangle = void 0;

var _preact = require("preact");

const Triangle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"
  }));
};

exports.Triangle = Triangle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/truck.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Truck = void 0;

var _preact = require("preact");

const Truck = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "1",
    y: "3",
    width: "15",
    height: "13"
  }), (0, _preact.h)("polygon", {
    points: "16 8 20 8 23 11 23 16 16 16 16 8"
  }), (0, _preact.h)("circle", {
    cx: "5.5",
    cy: "18.5",
    r: "2.5"
  }), (0, _preact.h)("circle", {
    cx: "18.5",
    cy: "18.5",
    r: "2.5"
  }));
};

exports.Truck = Truck;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/tv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tv = void 0;

var _preact = require("preact");

const Tv = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "2",
    y: "7",
    width: "20",
    height: "15",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("polyline", {
    points: "17 2 12 7 7 2"
  }));
};

exports.Tv = Tv;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/twitch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Twitch = void 0;

var _preact = require("preact");

const Twitch = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"
  }));
};

exports.Twitch = Twitch;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/twitter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Twitter = void 0;

var _preact = require("preact");

const Twitter = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"
  }));
};

exports.Twitter = Twitter;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/type.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Type = void 0;

var _preact = require("preact");

const Type = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "4 7 4 4 20 4 20 7"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "20",
    x2: "15",
    y2: "20"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "4",
    x2: "12",
    y2: "20"
  }));
};

exports.Type = Type;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/umbrella.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Umbrella = void 0;

var _preact = require("preact");

const Umbrella = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"
  }));
};

exports.Umbrella = Umbrella;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/underline.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Underline = void 0;

var _preact = require("preact");

const Underline = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"
  }), (0, _preact.h)("line", {
    x1: "4",
    y1: "21",
    x2: "20",
    y2: "21"
  }));
};

exports.Underline = Underline;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/unlock.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Unlock = void 0;

var _preact = require("preact");

const Unlock = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "11",
    width: "18",
    height: "11",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("path", {
    d: "M7 11V7a5 5 0 0 1 9.9-1"
  }));
};

exports.Unlock = Unlock;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/upload-cloud.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UploadCloud = void 0;

var _preact = require("preact");

const UploadCloud = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "16 16 12 12 8 16"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "12",
    x2: "12",
    y2: "21"
  }), (0, _preact.h)("path", {
    d: "M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"
  }), (0, _preact.h)("polyline", {
    points: "16 16 12 12 8 16"
  }));
};

exports.UploadCloud = UploadCloud;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/upload.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Upload = void 0;

var _preact = require("preact");

const Upload = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"
  }), (0, _preact.h)("polyline", {
    points: "17 8 12 3 7 8"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "3",
    x2: "12",
    y2: "15"
  }));
};

exports.Upload = Upload;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/user-check.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserCheck = void 0;

var _preact = require("preact");

const UserCheck = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "8.5",
    cy: "7",
    r: "4"
  }), (0, _preact.h)("polyline", {
    points: "17 11 19 13 23 9"
  }));
};

exports.UserCheck = UserCheck;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/user-minus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserMinus = void 0;

var _preact = require("preact");

const UserMinus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "8.5",
    cy: "7",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "11",
    x2: "17",
    y2: "11"
  }));
};

exports.UserMinus = UserMinus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/user-plus.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserPlus = void 0;

var _preact = require("preact");

const UserPlus = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "8.5",
    cy: "7",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "20",
    y1: "8",
    x2: "20",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "11",
    x2: "17",
    y2: "11"
  }));
};

exports.UserPlus = UserPlus;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/user-x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserX = void 0;

var _preact = require("preact");

const UserX = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "8.5",
    cy: "7",
    r: "4"
  }), (0, _preact.h)("line", {
    x1: "18",
    y1: "8",
    x2: "23",
    y2: "13"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "8",
    x2: "18",
    y2: "13"
  }));
};

exports.UserX = UserX;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/user.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.User = void 0;

var _preact = require("preact");

const User = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "12",
    cy: "7",
    r: "4"
  }));
};

exports.User = User;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/users.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Users = void 0;

var _preact = require("preact");

const Users = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"
  }), (0, _preact.h)("circle", {
    cx: "9",
    cy: "7",
    r: "4"
  }), (0, _preact.h)("path", {
    d: "M23 21v-2a4 4 0 0 0-3-3.87"
  }), (0, _preact.h)("path", {
    d: "M16 3.13a4 4 0 0 1 0 7.75"
  }));
};

exports.Users = Users;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/video-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VideoOff = void 0;

var _preact = require("preact");

const VideoOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.VideoOff = VideoOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/video.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Video = void 0;

var _preact = require("preact");

const Video = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "23 7 16 12 23 17 23 7"
  }), (0, _preact.h)("rect", {
    x: "1",
    y: "5",
    width: "15",
    height: "14",
    rx: "2",
    ry: "2"
  }));
};

exports.Video = Video;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/voicemail.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Voicemail = void 0;

var _preact = require("preact");

const Voicemail = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "5.5",
    cy: "11.5",
    r: "4.5"
  }), (0, _preact.h)("circle", {
    cx: "18.5",
    cy: "11.5",
    r: "4.5"
  }), (0, _preact.h)("line", {
    x1: "5.5",
    y1: "16",
    x2: "18.5",
    y2: "16"
  }));
};

exports.Voicemail = Voicemail;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/volume-1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Volume1 = void 0;

var _preact = require("preact");

const Volume1 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
  }), (0, _preact.h)("path", {
    d: "M15.54 8.46a5 5 0 0 1 0 7.07"
  }));
};

exports.Volume1 = Volume1;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/volume-2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Volume2 = void 0;

var _preact = require("preact");

const Volume2 = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
  }), (0, _preact.h)("path", {
    d: "M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"
  }));
};

exports.Volume2 = Volume2;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/volume-x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VolumeX = void 0;

var _preact = require("preact");

const VolumeX = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
  }), (0, _preact.h)("line", {
    x1: "23",
    y1: "9",
    x2: "17",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "17",
    y1: "9",
    x2: "23",
    y2: "15"
  }));
};

exports.VolumeX = VolumeX;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/volume.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Volume = void 0;

var _preact = require("preact");

const Volume = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "11 5 6 9 2 9 2 15 6 15 11 19 11 5"
  }));
};

exports.Volume = Volume;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/watch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Watch = void 0;

var _preact = require("preact");

const Watch = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "7"
  }), (0, _preact.h)("polyline", {
    points: "12 9 12 12 13.5 13.5"
  }), (0, _preact.h)("path", {
    d: "M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"
  }));
};

exports.Watch = Watch;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/wifi-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WifiOff = void 0;

var _preact = require("preact");

const WifiOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }), (0, _preact.h)("path", {
    d: "M16.72 11.06A10.94 10.94 0 0 1 19 12.55"
  }), (0, _preact.h)("path", {
    d: "M5 12.55a10.94 10.94 0 0 1 5.17-2.39"
  }), (0, _preact.h)("path", {
    d: "M10.71 5.05A16 16 0 0 1 22.58 9"
  }), (0, _preact.h)("path", {
    d: "M1.42 9a15.91 15.91 0 0 1 4.7-2.88"
  }), (0, _preact.h)("path", {
    d: "M8.53 16.11a6 6 0 0 1 6.95 0"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "20",
    x2: "12.01",
    y2: "20"
  }));
};

exports.WifiOff = WifiOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/wifi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Wifi = void 0;

var _preact = require("preact");

const Wifi = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M5 12.55a11 11 0 0 1 14.08 0"
  }), (0, _preact.h)("path", {
    d: "M1.42 9a16 16 0 0 1 21.16 0"
  }), (0, _preact.h)("path", {
    d: "M8.53 16.11a6 6 0 0 1 6.95 0"
  }), (0, _preact.h)("line", {
    x1: "12",
    y1: "20",
    x2: "12.01",
    y2: "20"
  }));
};

exports.Wifi = Wifi;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/wind.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Wind = void 0;

var _preact = require("preact");

const Wind = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"
  }));
};

exports.Wind = Wind;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/x-circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XCircle = void 0;

var _preact = require("preact");

const XCircle = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "12",
    cy: "12",
    r: "10"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "9",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "15",
    y2: "15"
  }));
};

exports.XCircle = XCircle;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/x-octagon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XOctagon = void 0;

var _preact = require("preact");

const XOctagon = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "9",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "15",
    y2: "15"
  }));
};

exports.XOctagon = XOctagon;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/x-square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.XSquare = void 0;

var _preact = require("preact");

const XSquare = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("rect", {
    x: "3",
    y: "3",
    width: "18",
    height: "18",
    rx: "2",
    ry: "2"
  }), (0, _preact.h)("line", {
    x1: "9",
    y1: "9",
    x2: "15",
    y2: "15"
  }), (0, _preact.h)("line", {
    x1: "15",
    y1: "9",
    x2: "9",
    y2: "15"
  }));
};

exports.XSquare = XSquare;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.X = void 0;

var _preact = require("preact");

const X = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("line", {
    x1: "18",
    y1: "6",
    x2: "6",
    y2: "18"
  }), (0, _preact.h)("line", {
    x1: "6",
    y1: "6",
    x2: "18",
    y2: "18"
  }));
};

exports.X = X;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/youtube.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Youtube = void 0;

var _preact = require("preact");

const Youtube = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("path", {
    d: "M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"
  }), (0, _preact.h)("polygon", {
    points: "9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"
  }));
};

exports.Youtube = Youtube;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/zap-off.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZapOff = void 0;

var _preact = require("preact");

const ZapOff = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polyline", {
    points: "12.41 6.75 13 2 10.57 4.92"
  }), (0, _preact.h)("polyline", {
    points: "18.57 12.91 21 10 15.66 10"
  }), (0, _preact.h)("polyline", {
    points: "8 8 3 14 12 14 11 22 16 16"
  }), (0, _preact.h)("line", {
    x1: "1",
    y1: "1",
    x2: "23",
    y2: "23"
  }));
};

exports.ZapOff = ZapOff;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/zap.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Zap = void 0;

var _preact = require("preact");

const Zap = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("polygon", {
    points: "13 2 3 14 12 14 11 22 21 10 12 10 13 2"
  }));
};

exports.Zap = Zap;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/zoom-in.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZoomIn = void 0;

var _preact = require("preact");

const ZoomIn = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "21",
    x2: "16.65",
    y2: "16.65"
  }), (0, _preact.h)("line", {
    x1: "11",
    y1: "8",
    x2: "11",
    y2: "14"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "11",
    x2: "14",
    y2: "11"
  }));
};

exports.ZoomIn = ZoomIn;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/icons/zoom-out.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZoomOut = void 0;

var _preact = require("preact");

const ZoomOut = props => {
  const color = props.color || 'currentColor';
  const size = props.size || 24;
  delete props.color;
  delete props.size;
  return (0, _preact.h)("svg", Object.assign({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: color,
    "stroke-width": "2",
    "stroke-linecap": "round",
    "stroke-linejoin": "round"
  }, props), (0, _preact.h)("circle", {
    cx: "11",
    cy: "11",
    r: "8"
  }), (0, _preact.h)("line", {
    x1: "21",
    y1: "21",
    x2: "16.65",
    y2: "16.65"
  }), (0, _preact.h)("line", {
    x1: "8",
    y1: "11",
    x2: "14",
    y2: "11"
  }));
};

exports.ZoomOut = ZoomOut;
},{"preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-feather/dist/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Activity", {
  enumerable: true,
  get: function () {
    return _activity.Activity;
  }
});
Object.defineProperty(exports, "Airplay", {
  enumerable: true,
  get: function () {
    return _airplay.Airplay;
  }
});
Object.defineProperty(exports, "AlertCircle", {
  enumerable: true,
  get: function () {
    return _alertCircle.AlertCircle;
  }
});
Object.defineProperty(exports, "AlertOctagon", {
  enumerable: true,
  get: function () {
    return _alertOctagon.AlertOctagon;
  }
});
Object.defineProperty(exports, "AlertTriangle", {
  enumerable: true,
  get: function () {
    return _alertTriangle.AlertTriangle;
  }
});
Object.defineProperty(exports, "AlignCenter", {
  enumerable: true,
  get: function () {
    return _alignCenter.AlignCenter;
  }
});
Object.defineProperty(exports, "AlignJustify", {
  enumerable: true,
  get: function () {
    return _alignJustify.AlignJustify;
  }
});
Object.defineProperty(exports, "AlignLeft", {
  enumerable: true,
  get: function () {
    return _alignLeft.AlignLeft;
  }
});
Object.defineProperty(exports, "AlignRight", {
  enumerable: true,
  get: function () {
    return _alignRight.AlignRight;
  }
});
Object.defineProperty(exports, "Anchor", {
  enumerable: true,
  get: function () {
    return _anchor.Anchor;
  }
});
Object.defineProperty(exports, "Aperture", {
  enumerable: true,
  get: function () {
    return _aperture.Aperture;
  }
});
Object.defineProperty(exports, "Archive", {
  enumerable: true,
  get: function () {
    return _archive.Archive;
  }
});
Object.defineProperty(exports, "ArrowDownCircle", {
  enumerable: true,
  get: function () {
    return _arrowDownCircle.ArrowDownCircle;
  }
});
Object.defineProperty(exports, "ArrowDownLeft", {
  enumerable: true,
  get: function () {
    return _arrowDownLeft.ArrowDownLeft;
  }
});
Object.defineProperty(exports, "ArrowDownRight", {
  enumerable: true,
  get: function () {
    return _arrowDownRight.ArrowDownRight;
  }
});
Object.defineProperty(exports, "ArrowDown", {
  enumerable: true,
  get: function () {
    return _arrowDown.ArrowDown;
  }
});
Object.defineProperty(exports, "ArrowLeftCircle", {
  enumerable: true,
  get: function () {
    return _arrowLeftCircle.ArrowLeftCircle;
  }
});
Object.defineProperty(exports, "ArrowLeft", {
  enumerable: true,
  get: function () {
    return _arrowLeft.ArrowLeft;
  }
});
Object.defineProperty(exports, "ArrowRightCircle", {
  enumerable: true,
  get: function () {
    return _arrowRightCircle.ArrowRightCircle;
  }
});
Object.defineProperty(exports, "ArrowRight", {
  enumerable: true,
  get: function () {
    return _arrowRight.ArrowRight;
  }
});
Object.defineProperty(exports, "ArrowUpCircle", {
  enumerable: true,
  get: function () {
    return _arrowUpCircle.ArrowUpCircle;
  }
});
Object.defineProperty(exports, "ArrowUpLeft", {
  enumerable: true,
  get: function () {
    return _arrowUpLeft.ArrowUpLeft;
  }
});
Object.defineProperty(exports, "ArrowUpRight", {
  enumerable: true,
  get: function () {
    return _arrowUpRight.ArrowUpRight;
  }
});
Object.defineProperty(exports, "ArrowUp", {
  enumerable: true,
  get: function () {
    return _arrowUp.ArrowUp;
  }
});
Object.defineProperty(exports, "AtSign", {
  enumerable: true,
  get: function () {
    return _atSign.AtSign;
  }
});
Object.defineProperty(exports, "Award", {
  enumerable: true,
  get: function () {
    return _award.Award;
  }
});
Object.defineProperty(exports, "BarChart2", {
  enumerable: true,
  get: function () {
    return _barChart.BarChart2;
  }
});
Object.defineProperty(exports, "BarChart", {
  enumerable: true,
  get: function () {
    return _barChart2.BarChart;
  }
});
Object.defineProperty(exports, "BatteryCharging", {
  enumerable: true,
  get: function () {
    return _batteryCharging.BatteryCharging;
  }
});
Object.defineProperty(exports, "Battery", {
  enumerable: true,
  get: function () {
    return _battery.Battery;
  }
});
Object.defineProperty(exports, "BellOff", {
  enumerable: true,
  get: function () {
    return _bellOff.BellOff;
  }
});
Object.defineProperty(exports, "Bell", {
  enumerable: true,
  get: function () {
    return _bell.Bell;
  }
});
Object.defineProperty(exports, "Bluetooth", {
  enumerable: true,
  get: function () {
    return _bluetooth.Bluetooth;
  }
});
Object.defineProperty(exports, "Bold", {
  enumerable: true,
  get: function () {
    return _bold.Bold;
  }
});
Object.defineProperty(exports, "BookOpen", {
  enumerable: true,
  get: function () {
    return _bookOpen.BookOpen;
  }
});
Object.defineProperty(exports, "Book", {
  enumerable: true,
  get: function () {
    return _book.Book;
  }
});
Object.defineProperty(exports, "Bookmark", {
  enumerable: true,
  get: function () {
    return _bookmark.Bookmark;
  }
});
Object.defineProperty(exports, "Box", {
  enumerable: true,
  get: function () {
    return _box.Box;
  }
});
Object.defineProperty(exports, "Briefcase", {
  enumerable: true,
  get: function () {
    return _briefcase.Briefcase;
  }
});
Object.defineProperty(exports, "Calendar", {
  enumerable: true,
  get: function () {
    return _calendar.Calendar;
  }
});
Object.defineProperty(exports, "CameraOff", {
  enumerable: true,
  get: function () {
    return _cameraOff.CameraOff;
  }
});
Object.defineProperty(exports, "Camera", {
  enumerable: true,
  get: function () {
    return _camera.Camera;
  }
});
Object.defineProperty(exports, "Cast", {
  enumerable: true,
  get: function () {
    return _cast.Cast;
  }
});
Object.defineProperty(exports, "CheckCircle", {
  enumerable: true,
  get: function () {
    return _checkCircle.CheckCircle;
  }
});
Object.defineProperty(exports, "CheckSquare", {
  enumerable: true,
  get: function () {
    return _checkSquare.CheckSquare;
  }
});
Object.defineProperty(exports, "Check", {
  enumerable: true,
  get: function () {
    return _check.Check;
  }
});
Object.defineProperty(exports, "ChevronDown", {
  enumerable: true,
  get: function () {
    return _chevronDown.ChevronDown;
  }
});
Object.defineProperty(exports, "ChevronLeft", {
  enumerable: true,
  get: function () {
    return _chevronLeft.ChevronLeft;
  }
});
Object.defineProperty(exports, "ChevronRight", {
  enumerable: true,
  get: function () {
    return _chevronRight.ChevronRight;
  }
});
Object.defineProperty(exports, "ChevronUp", {
  enumerable: true,
  get: function () {
    return _chevronUp.ChevronUp;
  }
});
Object.defineProperty(exports, "ChevronsDown", {
  enumerable: true,
  get: function () {
    return _chevronsDown.ChevronsDown;
  }
});
Object.defineProperty(exports, "ChevronsLeft", {
  enumerable: true,
  get: function () {
    return _chevronsLeft.ChevronsLeft;
  }
});
Object.defineProperty(exports, "ChevronsRight", {
  enumerable: true,
  get: function () {
    return _chevronsRight.ChevronsRight;
  }
});
Object.defineProperty(exports, "ChevronsUp", {
  enumerable: true,
  get: function () {
    return _chevronsUp.ChevronsUp;
  }
});
Object.defineProperty(exports, "Chrome", {
  enumerable: true,
  get: function () {
    return _chrome.Chrome;
  }
});
Object.defineProperty(exports, "Circle", {
  enumerable: true,
  get: function () {
    return _circle.Circle;
  }
});
Object.defineProperty(exports, "Clipboard", {
  enumerable: true,
  get: function () {
    return _clipboard.Clipboard;
  }
});
Object.defineProperty(exports, "Clock", {
  enumerable: true,
  get: function () {
    return _clock.Clock;
  }
});
Object.defineProperty(exports, "CloudDrizzle", {
  enumerable: true,
  get: function () {
    return _cloudDrizzle.CloudDrizzle;
  }
});
Object.defineProperty(exports, "CloudLightning", {
  enumerable: true,
  get: function () {
    return _cloudLightning.CloudLightning;
  }
});
Object.defineProperty(exports, "CloudOff", {
  enumerable: true,
  get: function () {
    return _cloudOff.CloudOff;
  }
});
Object.defineProperty(exports, "CloudRain", {
  enumerable: true,
  get: function () {
    return _cloudRain.CloudRain;
  }
});
Object.defineProperty(exports, "CloudSnow", {
  enumerable: true,
  get: function () {
    return _cloudSnow.CloudSnow;
  }
});
Object.defineProperty(exports, "Cloud", {
  enumerable: true,
  get: function () {
    return _cloud.Cloud;
  }
});
Object.defineProperty(exports, "Code", {
  enumerable: true,
  get: function () {
    return _code.Code;
  }
});
Object.defineProperty(exports, "Codepen", {
  enumerable: true,
  get: function () {
    return _codepen.Codepen;
  }
});
Object.defineProperty(exports, "Codesandbox", {
  enumerable: true,
  get: function () {
    return _codesandbox.Codesandbox;
  }
});
Object.defineProperty(exports, "Coffee", {
  enumerable: true,
  get: function () {
    return _coffee.Coffee;
  }
});
Object.defineProperty(exports, "Columns", {
  enumerable: true,
  get: function () {
    return _columns.Columns;
  }
});
Object.defineProperty(exports, "Command", {
  enumerable: true,
  get: function () {
    return _command.Command;
  }
});
Object.defineProperty(exports, "Compass", {
  enumerable: true,
  get: function () {
    return _compass.Compass;
  }
});
Object.defineProperty(exports, "Copy", {
  enumerable: true,
  get: function () {
    return _copy.Copy;
  }
});
Object.defineProperty(exports, "CornerDownLeft", {
  enumerable: true,
  get: function () {
    return _cornerDownLeft.CornerDownLeft;
  }
});
Object.defineProperty(exports, "CornerDownRight", {
  enumerable: true,
  get: function () {
    return _cornerDownRight.CornerDownRight;
  }
});
Object.defineProperty(exports, "CornerLeftDown", {
  enumerable: true,
  get: function () {
    return _cornerLeftDown.CornerLeftDown;
  }
});
Object.defineProperty(exports, "CornerLeftUp", {
  enumerable: true,
  get: function () {
    return _cornerLeftUp.CornerLeftUp;
  }
});
Object.defineProperty(exports, "CornerRightDown", {
  enumerable: true,
  get: function () {
    return _cornerRightDown.CornerRightDown;
  }
});
Object.defineProperty(exports, "CornerRightUp", {
  enumerable: true,
  get: function () {
    return _cornerRightUp.CornerRightUp;
  }
});
Object.defineProperty(exports, "CornerUpLeft", {
  enumerable: true,
  get: function () {
    return _cornerUpLeft.CornerUpLeft;
  }
});
Object.defineProperty(exports, "CornerUpRight", {
  enumerable: true,
  get: function () {
    return _cornerUpRight.CornerUpRight;
  }
});
Object.defineProperty(exports, "Cpu", {
  enumerable: true,
  get: function () {
    return _cpu.Cpu;
  }
});
Object.defineProperty(exports, "CreditCard", {
  enumerable: true,
  get: function () {
    return _creditCard.CreditCard;
  }
});
Object.defineProperty(exports, "Crop", {
  enumerable: true,
  get: function () {
    return _crop.Crop;
  }
});
Object.defineProperty(exports, "Crosshair", {
  enumerable: true,
  get: function () {
    return _crosshair.Crosshair;
  }
});
Object.defineProperty(exports, "Database", {
  enumerable: true,
  get: function () {
    return _database.Database;
  }
});
Object.defineProperty(exports, "Delete", {
  enumerable: true,
  get: function () {
    return _delete.Delete;
  }
});
Object.defineProperty(exports, "Disc", {
  enumerable: true,
  get: function () {
    return _disc.Disc;
  }
});
Object.defineProperty(exports, "DollarSign", {
  enumerable: true,
  get: function () {
    return _dollarSign.DollarSign;
  }
});
Object.defineProperty(exports, "DownloadCloud", {
  enumerable: true,
  get: function () {
    return _downloadCloud.DownloadCloud;
  }
});
Object.defineProperty(exports, "Download", {
  enumerable: true,
  get: function () {
    return _download.Download;
  }
});
Object.defineProperty(exports, "Droplet", {
  enumerable: true,
  get: function () {
    return _droplet.Droplet;
  }
});
Object.defineProperty(exports, "Edit2", {
  enumerable: true,
  get: function () {
    return _edit.Edit2;
  }
});
Object.defineProperty(exports, "Edit3", {
  enumerable: true,
  get: function () {
    return _edit2.Edit3;
  }
});
Object.defineProperty(exports, "Edit", {
  enumerable: true,
  get: function () {
    return _edit3.Edit;
  }
});
Object.defineProperty(exports, "ExternalLink", {
  enumerable: true,
  get: function () {
    return _externalLink.ExternalLink;
  }
});
Object.defineProperty(exports, "EyeOff", {
  enumerable: true,
  get: function () {
    return _eyeOff.EyeOff;
  }
});
Object.defineProperty(exports, "Eye", {
  enumerable: true,
  get: function () {
    return _eye.Eye;
  }
});
Object.defineProperty(exports, "Facebook", {
  enumerable: true,
  get: function () {
    return _facebook.Facebook;
  }
});
Object.defineProperty(exports, "FastForward", {
  enumerable: true,
  get: function () {
    return _fastForward.FastForward;
  }
});
Object.defineProperty(exports, "Feather", {
  enumerable: true,
  get: function () {
    return _feather.Feather;
  }
});
Object.defineProperty(exports, "Figma", {
  enumerable: true,
  get: function () {
    return _figma.Figma;
  }
});
Object.defineProperty(exports, "FileMinus", {
  enumerable: true,
  get: function () {
    return _fileMinus.FileMinus;
  }
});
Object.defineProperty(exports, "FilePlus", {
  enumerable: true,
  get: function () {
    return _filePlus.FilePlus;
  }
});
Object.defineProperty(exports, "FileText", {
  enumerable: true,
  get: function () {
    return _fileText.FileText;
  }
});
Object.defineProperty(exports, "File", {
  enumerable: true,
  get: function () {
    return _file.File;
  }
});
Object.defineProperty(exports, "Film", {
  enumerable: true,
  get: function () {
    return _film.Film;
  }
});
Object.defineProperty(exports, "Filter", {
  enumerable: true,
  get: function () {
    return _filter.Filter;
  }
});
Object.defineProperty(exports, "Flag", {
  enumerable: true,
  get: function () {
    return _flag.Flag;
  }
});
Object.defineProperty(exports, "FolderMinus", {
  enumerable: true,
  get: function () {
    return _folderMinus.FolderMinus;
  }
});
Object.defineProperty(exports, "FolderPlus", {
  enumerable: true,
  get: function () {
    return _folderPlus.FolderPlus;
  }
});
Object.defineProperty(exports, "Folder", {
  enumerable: true,
  get: function () {
    return _folder.Folder;
  }
});
Object.defineProperty(exports, "Framer", {
  enumerable: true,
  get: function () {
    return _framer.Framer;
  }
});
Object.defineProperty(exports, "Frown", {
  enumerable: true,
  get: function () {
    return _frown.Frown;
  }
});
Object.defineProperty(exports, "Gift", {
  enumerable: true,
  get: function () {
    return _gift.Gift;
  }
});
Object.defineProperty(exports, "GitBranch", {
  enumerable: true,
  get: function () {
    return _gitBranch.GitBranch;
  }
});
Object.defineProperty(exports, "GitCommit", {
  enumerable: true,
  get: function () {
    return _gitCommit.GitCommit;
  }
});
Object.defineProperty(exports, "GitMerge", {
  enumerable: true,
  get: function () {
    return _gitMerge.GitMerge;
  }
});
Object.defineProperty(exports, "GitPullRequest", {
  enumerable: true,
  get: function () {
    return _gitPullRequest.GitPullRequest;
  }
});
Object.defineProperty(exports, "Github", {
  enumerable: true,
  get: function () {
    return _github.Github;
  }
});
Object.defineProperty(exports, "Gitlab", {
  enumerable: true,
  get: function () {
    return _gitlab.Gitlab;
  }
});
Object.defineProperty(exports, "Globe", {
  enumerable: true,
  get: function () {
    return _globe.Globe;
  }
});
Object.defineProperty(exports, "Grid", {
  enumerable: true,
  get: function () {
    return _grid.Grid;
  }
});
Object.defineProperty(exports, "HardDrive", {
  enumerable: true,
  get: function () {
    return _hardDrive.HardDrive;
  }
});
Object.defineProperty(exports, "Hash", {
  enumerable: true,
  get: function () {
    return _hash.Hash;
  }
});
Object.defineProperty(exports, "Headphones", {
  enumerable: true,
  get: function () {
    return _headphones.Headphones;
  }
});
Object.defineProperty(exports, "Heart", {
  enumerable: true,
  get: function () {
    return _heart.Heart;
  }
});
Object.defineProperty(exports, "HelpCircle", {
  enumerable: true,
  get: function () {
    return _helpCircle.HelpCircle;
  }
});
Object.defineProperty(exports, "Hexagon", {
  enumerable: true,
  get: function () {
    return _hexagon.Hexagon;
  }
});
Object.defineProperty(exports, "Home", {
  enumerable: true,
  get: function () {
    return _home.Home;
  }
});
Object.defineProperty(exports, "Image", {
  enumerable: true,
  get: function () {
    return _image.Image;
  }
});
Object.defineProperty(exports, "Inbox", {
  enumerable: true,
  get: function () {
    return _inbox.Inbox;
  }
});
Object.defineProperty(exports, "Info", {
  enumerable: true,
  get: function () {
    return _info.Info;
  }
});
Object.defineProperty(exports, "Instagram", {
  enumerable: true,
  get: function () {
    return _instagram.Instagram;
  }
});
Object.defineProperty(exports, "Italic", {
  enumerable: true,
  get: function () {
    return _italic.Italic;
  }
});
Object.defineProperty(exports, "Key", {
  enumerable: true,
  get: function () {
    return _key.Key;
  }
});
Object.defineProperty(exports, "Layers", {
  enumerable: true,
  get: function () {
    return _layers.Layers;
  }
});
Object.defineProperty(exports, "Layout", {
  enumerable: true,
  get: function () {
    return _layout.Layout;
  }
});
Object.defineProperty(exports, "LifeBuoy", {
  enumerable: true,
  get: function () {
    return _lifeBuoy.LifeBuoy;
  }
});
Object.defineProperty(exports, "Link2", {
  enumerable: true,
  get: function () {
    return _link.Link2;
  }
});
Object.defineProperty(exports, "Link", {
  enumerable: true,
  get: function () {
    return _link2.Link;
  }
});
Object.defineProperty(exports, "Linkedin", {
  enumerable: true,
  get: function () {
    return _linkedin.Linkedin;
  }
});
Object.defineProperty(exports, "List", {
  enumerable: true,
  get: function () {
    return _list.List;
  }
});
Object.defineProperty(exports, "Loader", {
  enumerable: true,
  get: function () {
    return _loader.Loader;
  }
});
Object.defineProperty(exports, "Lock", {
  enumerable: true,
  get: function () {
    return _lock.Lock;
  }
});
Object.defineProperty(exports, "LogIn", {
  enumerable: true,
  get: function () {
    return _logIn.LogIn;
  }
});
Object.defineProperty(exports, "LogOut", {
  enumerable: true,
  get: function () {
    return _logOut.LogOut;
  }
});
Object.defineProperty(exports, "Mail", {
  enumerable: true,
  get: function () {
    return _mail.Mail;
  }
});
Object.defineProperty(exports, "MapPin", {
  enumerable: true,
  get: function () {
    return _mapPin.MapPin;
  }
});
Object.defineProperty(exports, "Map", {
  enumerable: true,
  get: function () {
    return _map.Map;
  }
});
Object.defineProperty(exports, "Maximize2", {
  enumerable: true,
  get: function () {
    return _maximize.Maximize2;
  }
});
Object.defineProperty(exports, "Maximize", {
  enumerable: true,
  get: function () {
    return _maximize2.Maximize;
  }
});
Object.defineProperty(exports, "Meh", {
  enumerable: true,
  get: function () {
    return _meh.Meh;
  }
});
Object.defineProperty(exports, "Menu", {
  enumerable: true,
  get: function () {
    return _menu.Menu;
  }
});
Object.defineProperty(exports, "MessageCircle", {
  enumerable: true,
  get: function () {
    return _messageCircle.MessageCircle;
  }
});
Object.defineProperty(exports, "MessageSquare", {
  enumerable: true,
  get: function () {
    return _messageSquare.MessageSquare;
  }
});
Object.defineProperty(exports, "MicOff", {
  enumerable: true,
  get: function () {
    return _micOff.MicOff;
  }
});
Object.defineProperty(exports, "Mic", {
  enumerable: true,
  get: function () {
    return _mic.Mic;
  }
});
Object.defineProperty(exports, "Minimize2", {
  enumerable: true,
  get: function () {
    return _minimize.Minimize2;
  }
});
Object.defineProperty(exports, "Minimize", {
  enumerable: true,
  get: function () {
    return _minimize2.Minimize;
  }
});
Object.defineProperty(exports, "MinusCircle", {
  enumerable: true,
  get: function () {
    return _minusCircle.MinusCircle;
  }
});
Object.defineProperty(exports, "MinusSquare", {
  enumerable: true,
  get: function () {
    return _minusSquare.MinusSquare;
  }
});
Object.defineProperty(exports, "Minus", {
  enumerable: true,
  get: function () {
    return _minus.Minus;
  }
});
Object.defineProperty(exports, "Monitor", {
  enumerable: true,
  get: function () {
    return _monitor.Monitor;
  }
});
Object.defineProperty(exports, "Moon", {
  enumerable: true,
  get: function () {
    return _moon.Moon;
  }
});
Object.defineProperty(exports, "MoreHorizontal", {
  enumerable: true,
  get: function () {
    return _moreHorizontal.MoreHorizontal;
  }
});
Object.defineProperty(exports, "MoreVertical", {
  enumerable: true,
  get: function () {
    return _moreVertical.MoreVertical;
  }
});
Object.defineProperty(exports, "MousePointer", {
  enumerable: true,
  get: function () {
    return _mousePointer.MousePointer;
  }
});
Object.defineProperty(exports, "Move", {
  enumerable: true,
  get: function () {
    return _move.Move;
  }
});
Object.defineProperty(exports, "Music", {
  enumerable: true,
  get: function () {
    return _music.Music;
  }
});
Object.defineProperty(exports, "Navigation2", {
  enumerable: true,
  get: function () {
    return _navigation.Navigation2;
  }
});
Object.defineProperty(exports, "Navigation", {
  enumerable: true,
  get: function () {
    return _navigation2.Navigation;
  }
});
Object.defineProperty(exports, "Octagon", {
  enumerable: true,
  get: function () {
    return _octagon.Octagon;
  }
});
Object.defineProperty(exports, "Package", {
  enumerable: true,
  get: function () {
    return _package.Package;
  }
});
Object.defineProperty(exports, "Paperclip", {
  enumerable: true,
  get: function () {
    return _paperclip.Paperclip;
  }
});
Object.defineProperty(exports, "PauseCircle", {
  enumerable: true,
  get: function () {
    return _pauseCircle.PauseCircle;
  }
});
Object.defineProperty(exports, "Pause", {
  enumerable: true,
  get: function () {
    return _pause.Pause;
  }
});
Object.defineProperty(exports, "PenTool", {
  enumerable: true,
  get: function () {
    return _penTool.PenTool;
  }
});
Object.defineProperty(exports, "Percent", {
  enumerable: true,
  get: function () {
    return _percent.Percent;
  }
});
Object.defineProperty(exports, "PhoneCall", {
  enumerable: true,
  get: function () {
    return _phoneCall.PhoneCall;
  }
});
Object.defineProperty(exports, "PhoneForwarded", {
  enumerable: true,
  get: function () {
    return _phoneForwarded.PhoneForwarded;
  }
});
Object.defineProperty(exports, "PhoneIncoming", {
  enumerable: true,
  get: function () {
    return _phoneIncoming.PhoneIncoming;
  }
});
Object.defineProperty(exports, "PhoneMissed", {
  enumerable: true,
  get: function () {
    return _phoneMissed.PhoneMissed;
  }
});
Object.defineProperty(exports, "PhoneOff", {
  enumerable: true,
  get: function () {
    return _phoneOff.PhoneOff;
  }
});
Object.defineProperty(exports, "PhoneOutgoing", {
  enumerable: true,
  get: function () {
    return _phoneOutgoing.PhoneOutgoing;
  }
});
Object.defineProperty(exports, "Phone", {
  enumerable: true,
  get: function () {
    return _phone.Phone;
  }
});
Object.defineProperty(exports, "PieChart", {
  enumerable: true,
  get: function () {
    return _pieChart.PieChart;
  }
});
Object.defineProperty(exports, "PlayCircle", {
  enumerable: true,
  get: function () {
    return _playCircle.PlayCircle;
  }
});
Object.defineProperty(exports, "Play", {
  enumerable: true,
  get: function () {
    return _play.Play;
  }
});
Object.defineProperty(exports, "PlusCircle", {
  enumerable: true,
  get: function () {
    return _plusCircle.PlusCircle;
  }
});
Object.defineProperty(exports, "PlusSquare", {
  enumerable: true,
  get: function () {
    return _plusSquare.PlusSquare;
  }
});
Object.defineProperty(exports, "Plus", {
  enumerable: true,
  get: function () {
    return _plus.Plus;
  }
});
Object.defineProperty(exports, "Pocket", {
  enumerable: true,
  get: function () {
    return _pocket.Pocket;
  }
});
Object.defineProperty(exports, "Power", {
  enumerable: true,
  get: function () {
    return _power.Power;
  }
});
Object.defineProperty(exports, "Printer", {
  enumerable: true,
  get: function () {
    return _printer.Printer;
  }
});
Object.defineProperty(exports, "Radio", {
  enumerable: true,
  get: function () {
    return _radio.Radio;
  }
});
Object.defineProperty(exports, "RefreshCcw", {
  enumerable: true,
  get: function () {
    return _refreshCcw.RefreshCcw;
  }
});
Object.defineProperty(exports, "RefreshCw", {
  enumerable: true,
  get: function () {
    return _refreshCw.RefreshCw;
  }
});
Object.defineProperty(exports, "Repeat", {
  enumerable: true,
  get: function () {
    return _repeat.Repeat;
  }
});
Object.defineProperty(exports, "Rewind", {
  enumerable: true,
  get: function () {
    return _rewind.Rewind;
  }
});
Object.defineProperty(exports, "RotateCcw", {
  enumerable: true,
  get: function () {
    return _rotateCcw.RotateCcw;
  }
});
Object.defineProperty(exports, "RotateCw", {
  enumerable: true,
  get: function () {
    return _rotateCw.RotateCw;
  }
});
Object.defineProperty(exports, "Rss", {
  enumerable: true,
  get: function () {
    return _rss.Rss;
  }
});
Object.defineProperty(exports, "Save", {
  enumerable: true,
  get: function () {
    return _save.Save;
  }
});
Object.defineProperty(exports, "Scissors", {
  enumerable: true,
  get: function () {
    return _scissors.Scissors;
  }
});
Object.defineProperty(exports, "Search", {
  enumerable: true,
  get: function () {
    return _search.Search;
  }
});
Object.defineProperty(exports, "Send", {
  enumerable: true,
  get: function () {
    return _send.Send;
  }
});
Object.defineProperty(exports, "Server", {
  enumerable: true,
  get: function () {
    return _server.Server;
  }
});
Object.defineProperty(exports, "Settings", {
  enumerable: true,
  get: function () {
    return _settings.Settings;
  }
});
Object.defineProperty(exports, "Share2", {
  enumerable: true,
  get: function () {
    return _share.Share2;
  }
});
Object.defineProperty(exports, "Share", {
  enumerable: true,
  get: function () {
    return _share2.Share;
  }
});
Object.defineProperty(exports, "ShieldOff", {
  enumerable: true,
  get: function () {
    return _shieldOff.ShieldOff;
  }
});
Object.defineProperty(exports, "Shield", {
  enumerable: true,
  get: function () {
    return _shield.Shield;
  }
});
Object.defineProperty(exports, "ShoppingBag", {
  enumerable: true,
  get: function () {
    return _shoppingBag.ShoppingBag;
  }
});
Object.defineProperty(exports, "ShoppingCart", {
  enumerable: true,
  get: function () {
    return _shoppingCart.ShoppingCart;
  }
});
Object.defineProperty(exports, "Shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.Shuffle;
  }
});
Object.defineProperty(exports, "Sidebar", {
  enumerable: true,
  get: function () {
    return _sidebar.Sidebar;
  }
});
Object.defineProperty(exports, "SkipBack", {
  enumerable: true,
  get: function () {
    return _skipBack.SkipBack;
  }
});
Object.defineProperty(exports, "SkipForward", {
  enumerable: true,
  get: function () {
    return _skipForward.SkipForward;
  }
});
Object.defineProperty(exports, "Slack", {
  enumerable: true,
  get: function () {
    return _slack.Slack;
  }
});
Object.defineProperty(exports, "Slash", {
  enumerable: true,
  get: function () {
    return _slash.Slash;
  }
});
Object.defineProperty(exports, "Sliders", {
  enumerable: true,
  get: function () {
    return _sliders.Sliders;
  }
});
Object.defineProperty(exports, "Smartphone", {
  enumerable: true,
  get: function () {
    return _smartphone.Smartphone;
  }
});
Object.defineProperty(exports, "Smile", {
  enumerable: true,
  get: function () {
    return _smile.Smile;
  }
});
Object.defineProperty(exports, "Speaker", {
  enumerable: true,
  get: function () {
    return _speaker.Speaker;
  }
});
Object.defineProperty(exports, "Square", {
  enumerable: true,
  get: function () {
    return _square.Square;
  }
});
Object.defineProperty(exports, "Star", {
  enumerable: true,
  get: function () {
    return _star.Star;
  }
});
Object.defineProperty(exports, "StopCircle", {
  enumerable: true,
  get: function () {
    return _stopCircle.StopCircle;
  }
});
Object.defineProperty(exports, "Sun", {
  enumerable: true,
  get: function () {
    return _sun.Sun;
  }
});
Object.defineProperty(exports, "Sunrise", {
  enumerable: true,
  get: function () {
    return _sunrise.Sunrise;
  }
});
Object.defineProperty(exports, "Sunset", {
  enumerable: true,
  get: function () {
    return _sunset.Sunset;
  }
});
Object.defineProperty(exports, "Tablet", {
  enumerable: true,
  get: function () {
    return _tablet.Tablet;
  }
});
Object.defineProperty(exports, "Tag", {
  enumerable: true,
  get: function () {
    return _tag.Tag;
  }
});
Object.defineProperty(exports, "Target", {
  enumerable: true,
  get: function () {
    return _target.Target;
  }
});
Object.defineProperty(exports, "Terminal", {
  enumerable: true,
  get: function () {
    return _terminal.Terminal;
  }
});
Object.defineProperty(exports, "Thermometer", {
  enumerable: true,
  get: function () {
    return _thermometer.Thermometer;
  }
});
Object.defineProperty(exports, "ThumbsDown", {
  enumerable: true,
  get: function () {
    return _thumbsDown.ThumbsDown;
  }
});
Object.defineProperty(exports, "ThumbsUp", {
  enumerable: true,
  get: function () {
    return _thumbsUp.ThumbsUp;
  }
});
Object.defineProperty(exports, "ToggleLeft", {
  enumerable: true,
  get: function () {
    return _toggleLeft.ToggleLeft;
  }
});
Object.defineProperty(exports, "ToggleRight", {
  enumerable: true,
  get: function () {
    return _toggleRight.ToggleRight;
  }
});
Object.defineProperty(exports, "Tool", {
  enumerable: true,
  get: function () {
    return _tool.Tool;
  }
});
Object.defineProperty(exports, "Trash2", {
  enumerable: true,
  get: function () {
    return _trash.Trash2;
  }
});
Object.defineProperty(exports, "Trash", {
  enumerable: true,
  get: function () {
    return _trash2.Trash;
  }
});
Object.defineProperty(exports, "Trello", {
  enumerable: true,
  get: function () {
    return _trello.Trello;
  }
});
Object.defineProperty(exports, "TrendingDown", {
  enumerable: true,
  get: function () {
    return _trendingDown.TrendingDown;
  }
});
Object.defineProperty(exports, "TrendingUp", {
  enumerable: true,
  get: function () {
    return _trendingUp.TrendingUp;
  }
});
Object.defineProperty(exports, "Triangle", {
  enumerable: true,
  get: function () {
    return _triangle.Triangle;
  }
});
Object.defineProperty(exports, "Truck", {
  enumerable: true,
  get: function () {
    return _truck.Truck;
  }
});
Object.defineProperty(exports, "Tv", {
  enumerable: true,
  get: function () {
    return _tv.Tv;
  }
});
Object.defineProperty(exports, "Twitch", {
  enumerable: true,
  get: function () {
    return _twitch.Twitch;
  }
});
Object.defineProperty(exports, "Twitter", {
  enumerable: true,
  get: function () {
    return _twitter.Twitter;
  }
});
Object.defineProperty(exports, "Type", {
  enumerable: true,
  get: function () {
    return _type.Type;
  }
});
Object.defineProperty(exports, "Umbrella", {
  enumerable: true,
  get: function () {
    return _umbrella.Umbrella;
  }
});
Object.defineProperty(exports, "Underline", {
  enumerable: true,
  get: function () {
    return _underline.Underline;
  }
});
Object.defineProperty(exports, "Unlock", {
  enumerable: true,
  get: function () {
    return _unlock.Unlock;
  }
});
Object.defineProperty(exports, "UploadCloud", {
  enumerable: true,
  get: function () {
    return _uploadCloud.UploadCloud;
  }
});
Object.defineProperty(exports, "Upload", {
  enumerable: true,
  get: function () {
    return _upload.Upload;
  }
});
Object.defineProperty(exports, "UserCheck", {
  enumerable: true,
  get: function () {
    return _userCheck.UserCheck;
  }
});
Object.defineProperty(exports, "UserMinus", {
  enumerable: true,
  get: function () {
    return _userMinus.UserMinus;
  }
});
Object.defineProperty(exports, "UserPlus", {
  enumerable: true,
  get: function () {
    return _userPlus.UserPlus;
  }
});
Object.defineProperty(exports, "UserX", {
  enumerable: true,
  get: function () {
    return _userX.UserX;
  }
});
Object.defineProperty(exports, "User", {
  enumerable: true,
  get: function () {
    return _user.User;
  }
});
Object.defineProperty(exports, "Users", {
  enumerable: true,
  get: function () {
    return _users.Users;
  }
});
Object.defineProperty(exports, "VideoOff", {
  enumerable: true,
  get: function () {
    return _videoOff.VideoOff;
  }
});
Object.defineProperty(exports, "Video", {
  enumerable: true,
  get: function () {
    return _video.Video;
  }
});
Object.defineProperty(exports, "Voicemail", {
  enumerable: true,
  get: function () {
    return _voicemail.Voicemail;
  }
});
Object.defineProperty(exports, "Volume1", {
  enumerable: true,
  get: function () {
    return _volume.Volume1;
  }
});
Object.defineProperty(exports, "Volume2", {
  enumerable: true,
  get: function () {
    return _volume2.Volume2;
  }
});
Object.defineProperty(exports, "VolumeX", {
  enumerable: true,
  get: function () {
    return _volumeX.VolumeX;
  }
});
Object.defineProperty(exports, "Volume", {
  enumerable: true,
  get: function () {
    return _volume3.Volume;
  }
});
Object.defineProperty(exports, "Watch", {
  enumerable: true,
  get: function () {
    return _watch.Watch;
  }
});
Object.defineProperty(exports, "WifiOff", {
  enumerable: true,
  get: function () {
    return _wifiOff.WifiOff;
  }
});
Object.defineProperty(exports, "Wifi", {
  enumerable: true,
  get: function () {
    return _wifi.Wifi;
  }
});
Object.defineProperty(exports, "Wind", {
  enumerable: true,
  get: function () {
    return _wind.Wind;
  }
});
Object.defineProperty(exports, "XCircle", {
  enumerable: true,
  get: function () {
    return _xCircle.XCircle;
  }
});
Object.defineProperty(exports, "XOctagon", {
  enumerable: true,
  get: function () {
    return _xOctagon.XOctagon;
  }
});
Object.defineProperty(exports, "XSquare", {
  enumerable: true,
  get: function () {
    return _xSquare.XSquare;
  }
});
Object.defineProperty(exports, "X", {
  enumerable: true,
  get: function () {
    return _x.X;
  }
});
Object.defineProperty(exports, "Youtube", {
  enumerable: true,
  get: function () {
    return _youtube.Youtube;
  }
});
Object.defineProperty(exports, "ZapOff", {
  enumerable: true,
  get: function () {
    return _zapOff.ZapOff;
  }
});
Object.defineProperty(exports, "Zap", {
  enumerable: true,
  get: function () {
    return _zap.Zap;
  }
});
Object.defineProperty(exports, "ZoomIn", {
  enumerable: true,
  get: function () {
    return _zoomIn.ZoomIn;
  }
});
Object.defineProperty(exports, "ZoomOut", {
  enumerable: true,
  get: function () {
    return _zoomOut.ZoomOut;
  }
});

var _activity = require("./icons/activity");

var _airplay = require("./icons/airplay");

var _alertCircle = require("./icons/alert-circle");

var _alertOctagon = require("./icons/alert-octagon");

var _alertTriangle = require("./icons/alert-triangle");

var _alignCenter = require("./icons/align-center");

var _alignJustify = require("./icons/align-justify");

var _alignLeft = require("./icons/align-left");

var _alignRight = require("./icons/align-right");

var _anchor = require("./icons/anchor");

var _aperture = require("./icons/aperture");

var _archive = require("./icons/archive");

var _arrowDownCircle = require("./icons/arrow-down-circle");

var _arrowDownLeft = require("./icons/arrow-down-left");

var _arrowDownRight = require("./icons/arrow-down-right");

var _arrowDown = require("./icons/arrow-down");

var _arrowLeftCircle = require("./icons/arrow-left-circle");

var _arrowLeft = require("./icons/arrow-left");

var _arrowRightCircle = require("./icons/arrow-right-circle");

var _arrowRight = require("./icons/arrow-right");

var _arrowUpCircle = require("./icons/arrow-up-circle");

var _arrowUpLeft = require("./icons/arrow-up-left");

var _arrowUpRight = require("./icons/arrow-up-right");

var _arrowUp = require("./icons/arrow-up");

var _atSign = require("./icons/at-sign");

var _award = require("./icons/award");

var _barChart = require("./icons/bar-chart-2");

var _barChart2 = require("./icons/bar-chart");

var _batteryCharging = require("./icons/battery-charging");

var _battery = require("./icons/battery");

var _bellOff = require("./icons/bell-off");

var _bell = require("./icons/bell");

var _bluetooth = require("./icons/bluetooth");

var _bold = require("./icons/bold");

var _bookOpen = require("./icons/book-open");

var _book = require("./icons/book");

var _bookmark = require("./icons/bookmark");

var _box = require("./icons/box");

var _briefcase = require("./icons/briefcase");

var _calendar = require("./icons/calendar");

var _cameraOff = require("./icons/camera-off");

var _camera = require("./icons/camera");

var _cast = require("./icons/cast");

var _checkCircle = require("./icons/check-circle");

var _checkSquare = require("./icons/check-square");

var _check = require("./icons/check");

var _chevronDown = require("./icons/chevron-down");

var _chevronLeft = require("./icons/chevron-left");

var _chevronRight = require("./icons/chevron-right");

var _chevronUp = require("./icons/chevron-up");

var _chevronsDown = require("./icons/chevrons-down");

var _chevronsLeft = require("./icons/chevrons-left");

var _chevronsRight = require("./icons/chevrons-right");

var _chevronsUp = require("./icons/chevrons-up");

var _chrome = require("./icons/chrome");

var _circle = require("./icons/circle");

var _clipboard = require("./icons/clipboard");

var _clock = require("./icons/clock");

var _cloudDrizzle = require("./icons/cloud-drizzle");

var _cloudLightning = require("./icons/cloud-lightning");

var _cloudOff = require("./icons/cloud-off");

var _cloudRain = require("./icons/cloud-rain");

var _cloudSnow = require("./icons/cloud-snow");

var _cloud = require("./icons/cloud");

var _code = require("./icons/code");

var _codepen = require("./icons/codepen");

var _codesandbox = require("./icons/codesandbox");

var _coffee = require("./icons/coffee");

var _columns = require("./icons/columns");

var _command = require("./icons/command");

var _compass = require("./icons/compass");

var _copy = require("./icons/copy");

var _cornerDownLeft = require("./icons/corner-down-left");

var _cornerDownRight = require("./icons/corner-down-right");

var _cornerLeftDown = require("./icons/corner-left-down");

var _cornerLeftUp = require("./icons/corner-left-up");

var _cornerRightDown = require("./icons/corner-right-down");

var _cornerRightUp = require("./icons/corner-right-up");

var _cornerUpLeft = require("./icons/corner-up-left");

var _cornerUpRight = require("./icons/corner-up-right");

var _cpu = require("./icons/cpu");

var _creditCard = require("./icons/credit-card");

var _crop = require("./icons/crop");

var _crosshair = require("./icons/crosshair");

var _database = require("./icons/database");

var _delete = require("./icons/delete");

var _disc = require("./icons/disc");

var _dollarSign = require("./icons/dollar-sign");

var _downloadCloud = require("./icons/download-cloud");

var _download = require("./icons/download");

var _droplet = require("./icons/droplet");

var _edit = require("./icons/edit-2");

var _edit2 = require("./icons/edit-3");

var _edit3 = require("./icons/edit");

var _externalLink = require("./icons/external-link");

var _eyeOff = require("./icons/eye-off");

var _eye = require("./icons/eye");

var _facebook = require("./icons/facebook");

var _fastForward = require("./icons/fast-forward");

var _feather = require("./icons/feather");

var _figma = require("./icons/figma");

var _fileMinus = require("./icons/file-minus");

var _filePlus = require("./icons/file-plus");

var _fileText = require("./icons/file-text");

var _file = require("./icons/file");

var _film = require("./icons/film");

var _filter = require("./icons/filter");

var _flag = require("./icons/flag");

var _folderMinus = require("./icons/folder-minus");

var _folderPlus = require("./icons/folder-plus");

var _folder = require("./icons/folder");

var _framer = require("./icons/framer");

var _frown = require("./icons/frown");

var _gift = require("./icons/gift");

var _gitBranch = require("./icons/git-branch");

var _gitCommit = require("./icons/git-commit");

var _gitMerge = require("./icons/git-merge");

var _gitPullRequest = require("./icons/git-pull-request");

var _github = require("./icons/github");

var _gitlab = require("./icons/gitlab");

var _globe = require("./icons/globe");

var _grid = require("./icons/grid");

var _hardDrive = require("./icons/hard-drive");

var _hash = require("./icons/hash");

var _headphones = require("./icons/headphones");

var _heart = require("./icons/heart");

var _helpCircle = require("./icons/help-circle");

var _hexagon = require("./icons/hexagon");

var _home = require("./icons/home");

var _image = require("./icons/image");

var _inbox = require("./icons/inbox");

var _info = require("./icons/info");

var _instagram = require("./icons/instagram");

var _italic = require("./icons/italic");

var _key = require("./icons/key");

var _layers = require("./icons/layers");

var _layout = require("./icons/layout");

var _lifeBuoy = require("./icons/life-buoy");

var _link = require("./icons/link-2");

var _link2 = require("./icons/link");

var _linkedin = require("./icons/linkedin");

var _list = require("./icons/list");

var _loader = require("./icons/loader");

var _lock = require("./icons/lock");

var _logIn = require("./icons/log-in");

var _logOut = require("./icons/log-out");

var _mail = require("./icons/mail");

var _mapPin = require("./icons/map-pin");

var _map = require("./icons/map");

var _maximize = require("./icons/maximize-2");

var _maximize2 = require("./icons/maximize");

var _meh = require("./icons/meh");

var _menu = require("./icons/menu");

var _messageCircle = require("./icons/message-circle");

var _messageSquare = require("./icons/message-square");

var _micOff = require("./icons/mic-off");

var _mic = require("./icons/mic");

var _minimize = require("./icons/minimize-2");

var _minimize2 = require("./icons/minimize");

var _minusCircle = require("./icons/minus-circle");

var _minusSquare = require("./icons/minus-square");

var _minus = require("./icons/minus");

var _monitor = require("./icons/monitor");

var _moon = require("./icons/moon");

var _moreHorizontal = require("./icons/more-horizontal");

var _moreVertical = require("./icons/more-vertical");

var _mousePointer = require("./icons/mouse-pointer");

var _move = require("./icons/move");

var _music = require("./icons/music");

var _navigation = require("./icons/navigation-2");

var _navigation2 = require("./icons/navigation");

var _octagon = require("./icons/octagon");

var _package = require("./icons/package");

var _paperclip = require("./icons/paperclip");

var _pauseCircle = require("./icons/pause-circle");

var _pause = require("./icons/pause");

var _penTool = require("./icons/pen-tool");

var _percent = require("./icons/percent");

var _phoneCall = require("./icons/phone-call");

var _phoneForwarded = require("./icons/phone-forwarded");

var _phoneIncoming = require("./icons/phone-incoming");

var _phoneMissed = require("./icons/phone-missed");

var _phoneOff = require("./icons/phone-off");

var _phoneOutgoing = require("./icons/phone-outgoing");

var _phone = require("./icons/phone");

var _pieChart = require("./icons/pie-chart");

var _playCircle = require("./icons/play-circle");

var _play = require("./icons/play");

var _plusCircle = require("./icons/plus-circle");

var _plusSquare = require("./icons/plus-square");

var _plus = require("./icons/plus");

var _pocket = require("./icons/pocket");

var _power = require("./icons/power");

var _printer = require("./icons/printer");

var _radio = require("./icons/radio");

var _refreshCcw = require("./icons/refresh-ccw");

var _refreshCw = require("./icons/refresh-cw");

var _repeat = require("./icons/repeat");

var _rewind = require("./icons/rewind");

var _rotateCcw = require("./icons/rotate-ccw");

var _rotateCw = require("./icons/rotate-cw");

var _rss = require("./icons/rss");

var _save = require("./icons/save");

var _scissors = require("./icons/scissors");

var _search = require("./icons/search");

var _send = require("./icons/send");

var _server = require("./icons/server");

var _settings = require("./icons/settings");

var _share = require("./icons/share-2");

var _share2 = require("./icons/share");

var _shieldOff = require("./icons/shield-off");

var _shield = require("./icons/shield");

var _shoppingBag = require("./icons/shopping-bag");

var _shoppingCart = require("./icons/shopping-cart");

var _shuffle = require("./icons/shuffle");

var _sidebar = require("./icons/sidebar");

var _skipBack = require("./icons/skip-back");

var _skipForward = require("./icons/skip-forward");

var _slack = require("./icons/slack");

var _slash = require("./icons/slash");

var _sliders = require("./icons/sliders");

var _smartphone = require("./icons/smartphone");

var _smile = require("./icons/smile");

var _speaker = require("./icons/speaker");

var _square = require("./icons/square");

var _star = require("./icons/star");

var _stopCircle = require("./icons/stop-circle");

var _sun = require("./icons/sun");

var _sunrise = require("./icons/sunrise");

var _sunset = require("./icons/sunset");

var _tablet = require("./icons/tablet");

var _tag = require("./icons/tag");

var _target = require("./icons/target");

var _terminal = require("./icons/terminal");

var _thermometer = require("./icons/thermometer");

var _thumbsDown = require("./icons/thumbs-down");

var _thumbsUp = require("./icons/thumbs-up");

var _toggleLeft = require("./icons/toggle-left");

var _toggleRight = require("./icons/toggle-right");

var _tool = require("./icons/tool");

var _trash = require("./icons/trash-2");

var _trash2 = require("./icons/trash");

var _trello = require("./icons/trello");

var _trendingDown = require("./icons/trending-down");

var _trendingUp = require("./icons/trending-up");

var _triangle = require("./icons/triangle");

var _truck = require("./icons/truck");

var _tv = require("./icons/tv");

var _twitch = require("./icons/twitch");

var _twitter = require("./icons/twitter");

var _type = require("./icons/type");

var _umbrella = require("./icons/umbrella");

var _underline = require("./icons/underline");

var _unlock = require("./icons/unlock");

var _uploadCloud = require("./icons/upload-cloud");

var _upload = require("./icons/upload");

var _userCheck = require("./icons/user-check");

var _userMinus = require("./icons/user-minus");

var _userPlus = require("./icons/user-plus");

var _userX = require("./icons/user-x");

var _user = require("./icons/user");

var _users = require("./icons/users");

var _videoOff = require("./icons/video-off");

var _video = require("./icons/video");

var _voicemail = require("./icons/voicemail");

var _volume = require("./icons/volume-1");

var _volume2 = require("./icons/volume-2");

var _volumeX = require("./icons/volume-x");

var _volume3 = require("./icons/volume");

var _watch = require("./icons/watch");

var _wifiOff = require("./icons/wifi-off");

var _wifi = require("./icons/wifi");

var _wind = require("./icons/wind");

var _xCircle = require("./icons/x-circle");

var _xOctagon = require("./icons/x-octagon");

var _xSquare = require("./icons/x-square");

var _x = require("./icons/x");

var _youtube = require("./icons/youtube");

var _zapOff = require("./icons/zap-off");

var _zap = require("./icons/zap");

var _zoomIn = require("./icons/zoom-in");

var _zoomOut = require("./icons/zoom-out");
},{"./icons/activity":"node_modules/preact-feather/dist/icons/activity.js","./icons/airplay":"node_modules/preact-feather/dist/icons/airplay.js","./icons/alert-circle":"node_modules/preact-feather/dist/icons/alert-circle.js","./icons/alert-octagon":"node_modules/preact-feather/dist/icons/alert-octagon.js","./icons/alert-triangle":"node_modules/preact-feather/dist/icons/alert-triangle.js","./icons/align-center":"node_modules/preact-feather/dist/icons/align-center.js","./icons/align-justify":"node_modules/preact-feather/dist/icons/align-justify.js","./icons/align-left":"node_modules/preact-feather/dist/icons/align-left.js","./icons/align-right":"node_modules/preact-feather/dist/icons/align-right.js","./icons/anchor":"node_modules/preact-feather/dist/icons/anchor.js","./icons/aperture":"node_modules/preact-feather/dist/icons/aperture.js","./icons/archive":"node_modules/preact-feather/dist/icons/archive.js","./icons/arrow-down-circle":"node_modules/preact-feather/dist/icons/arrow-down-circle.js","./icons/arrow-down-left":"node_modules/preact-feather/dist/icons/arrow-down-left.js","./icons/arrow-down-right":"node_modules/preact-feather/dist/icons/arrow-down-right.js","./icons/arrow-down":"node_modules/preact-feather/dist/icons/arrow-down.js","./icons/arrow-left-circle":"node_modules/preact-feather/dist/icons/arrow-left-circle.js","./icons/arrow-left":"node_modules/preact-feather/dist/icons/arrow-left.js","./icons/arrow-right-circle":"node_modules/preact-feather/dist/icons/arrow-right-circle.js","./icons/arrow-right":"node_modules/preact-feather/dist/icons/arrow-right.js","./icons/arrow-up-circle":"node_modules/preact-feather/dist/icons/arrow-up-circle.js","./icons/arrow-up-left":"node_modules/preact-feather/dist/icons/arrow-up-left.js","./icons/arrow-up-right":"node_modules/preact-feather/dist/icons/arrow-up-right.js","./icons/arrow-up":"node_modules/preact-feather/dist/icons/arrow-up.js","./icons/at-sign":"node_modules/preact-feather/dist/icons/at-sign.js","./icons/award":"node_modules/preact-feather/dist/icons/award.js","./icons/bar-chart-2":"node_modules/preact-feather/dist/icons/bar-chart-2.js","./icons/bar-chart":"node_modules/preact-feather/dist/icons/bar-chart.js","./icons/battery-charging":"node_modules/preact-feather/dist/icons/battery-charging.js","./icons/battery":"node_modules/preact-feather/dist/icons/battery.js","./icons/bell-off":"node_modules/preact-feather/dist/icons/bell-off.js","./icons/bell":"node_modules/preact-feather/dist/icons/bell.js","./icons/bluetooth":"node_modules/preact-feather/dist/icons/bluetooth.js","./icons/bold":"node_modules/preact-feather/dist/icons/bold.js","./icons/book-open":"node_modules/preact-feather/dist/icons/book-open.js","./icons/book":"node_modules/preact-feather/dist/icons/book.js","./icons/bookmark":"node_modules/preact-feather/dist/icons/bookmark.js","./icons/box":"node_modules/preact-feather/dist/icons/box.js","./icons/briefcase":"node_modules/preact-feather/dist/icons/briefcase.js","./icons/calendar":"node_modules/preact-feather/dist/icons/calendar.js","./icons/camera-off":"node_modules/preact-feather/dist/icons/camera-off.js","./icons/camera":"node_modules/preact-feather/dist/icons/camera.js","./icons/cast":"node_modules/preact-feather/dist/icons/cast.js","./icons/check-circle":"node_modules/preact-feather/dist/icons/check-circle.js","./icons/check-square":"node_modules/preact-feather/dist/icons/check-square.js","./icons/check":"node_modules/preact-feather/dist/icons/check.js","./icons/chevron-down":"node_modules/preact-feather/dist/icons/chevron-down.js","./icons/chevron-left":"node_modules/preact-feather/dist/icons/chevron-left.js","./icons/chevron-right":"node_modules/preact-feather/dist/icons/chevron-right.js","./icons/chevron-up":"node_modules/preact-feather/dist/icons/chevron-up.js","./icons/chevrons-down":"node_modules/preact-feather/dist/icons/chevrons-down.js","./icons/chevrons-left":"node_modules/preact-feather/dist/icons/chevrons-left.js","./icons/chevrons-right":"node_modules/preact-feather/dist/icons/chevrons-right.js","./icons/chevrons-up":"node_modules/preact-feather/dist/icons/chevrons-up.js","./icons/chrome":"node_modules/preact-feather/dist/icons/chrome.js","./icons/circle":"node_modules/preact-feather/dist/icons/circle.js","./icons/clipboard":"node_modules/preact-feather/dist/icons/clipboard.js","./icons/clock":"node_modules/preact-feather/dist/icons/clock.js","./icons/cloud-drizzle":"node_modules/preact-feather/dist/icons/cloud-drizzle.js","./icons/cloud-lightning":"node_modules/preact-feather/dist/icons/cloud-lightning.js","./icons/cloud-off":"node_modules/preact-feather/dist/icons/cloud-off.js","./icons/cloud-rain":"node_modules/preact-feather/dist/icons/cloud-rain.js","./icons/cloud-snow":"node_modules/preact-feather/dist/icons/cloud-snow.js","./icons/cloud":"node_modules/preact-feather/dist/icons/cloud.js","./icons/code":"node_modules/preact-feather/dist/icons/code.js","./icons/codepen":"node_modules/preact-feather/dist/icons/codepen.js","./icons/codesandbox":"node_modules/preact-feather/dist/icons/codesandbox.js","./icons/coffee":"node_modules/preact-feather/dist/icons/coffee.js","./icons/columns":"node_modules/preact-feather/dist/icons/columns.js","./icons/command":"node_modules/preact-feather/dist/icons/command.js","./icons/compass":"node_modules/preact-feather/dist/icons/compass.js","./icons/copy":"node_modules/preact-feather/dist/icons/copy.js","./icons/corner-down-left":"node_modules/preact-feather/dist/icons/corner-down-left.js","./icons/corner-down-right":"node_modules/preact-feather/dist/icons/corner-down-right.js","./icons/corner-left-down":"node_modules/preact-feather/dist/icons/corner-left-down.js","./icons/corner-left-up":"node_modules/preact-feather/dist/icons/corner-left-up.js","./icons/corner-right-down":"node_modules/preact-feather/dist/icons/corner-right-down.js","./icons/corner-right-up":"node_modules/preact-feather/dist/icons/corner-right-up.js","./icons/corner-up-left":"node_modules/preact-feather/dist/icons/corner-up-left.js","./icons/corner-up-right":"node_modules/preact-feather/dist/icons/corner-up-right.js","./icons/cpu":"node_modules/preact-feather/dist/icons/cpu.js","./icons/credit-card":"node_modules/preact-feather/dist/icons/credit-card.js","./icons/crop":"node_modules/preact-feather/dist/icons/crop.js","./icons/crosshair":"node_modules/preact-feather/dist/icons/crosshair.js","./icons/database":"node_modules/preact-feather/dist/icons/database.js","./icons/delete":"node_modules/preact-feather/dist/icons/delete.js","./icons/disc":"node_modules/preact-feather/dist/icons/disc.js","./icons/dollar-sign":"node_modules/preact-feather/dist/icons/dollar-sign.js","./icons/download-cloud":"node_modules/preact-feather/dist/icons/download-cloud.js","./icons/download":"node_modules/preact-feather/dist/icons/download.js","./icons/droplet":"node_modules/preact-feather/dist/icons/droplet.js","./icons/edit-2":"node_modules/preact-feather/dist/icons/edit-2.js","./icons/edit-3":"node_modules/preact-feather/dist/icons/edit-3.js","./icons/edit":"node_modules/preact-feather/dist/icons/edit.js","./icons/external-link":"node_modules/preact-feather/dist/icons/external-link.js","./icons/eye-off":"node_modules/preact-feather/dist/icons/eye-off.js","./icons/eye":"node_modules/preact-feather/dist/icons/eye.js","./icons/facebook":"node_modules/preact-feather/dist/icons/facebook.js","./icons/fast-forward":"node_modules/preact-feather/dist/icons/fast-forward.js","./icons/feather":"node_modules/preact-feather/dist/icons/feather.js","./icons/figma":"node_modules/preact-feather/dist/icons/figma.js","./icons/file-minus":"node_modules/preact-feather/dist/icons/file-minus.js","./icons/file-plus":"node_modules/preact-feather/dist/icons/file-plus.js","./icons/file-text":"node_modules/preact-feather/dist/icons/file-text.js","./icons/file":"node_modules/preact-feather/dist/icons/file.js","./icons/film":"node_modules/preact-feather/dist/icons/film.js","./icons/filter":"node_modules/preact-feather/dist/icons/filter.js","./icons/flag":"node_modules/preact-feather/dist/icons/flag.js","./icons/folder-minus":"node_modules/preact-feather/dist/icons/folder-minus.js","./icons/folder-plus":"node_modules/preact-feather/dist/icons/folder-plus.js","./icons/folder":"node_modules/preact-feather/dist/icons/folder.js","./icons/framer":"node_modules/preact-feather/dist/icons/framer.js","./icons/frown":"node_modules/preact-feather/dist/icons/frown.js","./icons/gift":"node_modules/preact-feather/dist/icons/gift.js","./icons/git-branch":"node_modules/preact-feather/dist/icons/git-branch.js","./icons/git-commit":"node_modules/preact-feather/dist/icons/git-commit.js","./icons/git-merge":"node_modules/preact-feather/dist/icons/git-merge.js","./icons/git-pull-request":"node_modules/preact-feather/dist/icons/git-pull-request.js","./icons/github":"node_modules/preact-feather/dist/icons/github.js","./icons/gitlab":"node_modules/preact-feather/dist/icons/gitlab.js","./icons/globe":"node_modules/preact-feather/dist/icons/globe.js","./icons/grid":"node_modules/preact-feather/dist/icons/grid.js","./icons/hard-drive":"node_modules/preact-feather/dist/icons/hard-drive.js","./icons/hash":"node_modules/preact-feather/dist/icons/hash.js","./icons/headphones":"node_modules/preact-feather/dist/icons/headphones.js","./icons/heart":"node_modules/preact-feather/dist/icons/heart.js","./icons/help-circle":"node_modules/preact-feather/dist/icons/help-circle.js","./icons/hexagon":"node_modules/preact-feather/dist/icons/hexagon.js","./icons/home":"node_modules/preact-feather/dist/icons/home.js","./icons/image":"node_modules/preact-feather/dist/icons/image.js","./icons/inbox":"node_modules/preact-feather/dist/icons/inbox.js","./icons/info":"node_modules/preact-feather/dist/icons/info.js","./icons/instagram":"node_modules/preact-feather/dist/icons/instagram.js","./icons/italic":"node_modules/preact-feather/dist/icons/italic.js","./icons/key":"node_modules/preact-feather/dist/icons/key.js","./icons/layers":"node_modules/preact-feather/dist/icons/layers.js","./icons/layout":"node_modules/preact-feather/dist/icons/layout.js","./icons/life-buoy":"node_modules/preact-feather/dist/icons/life-buoy.js","./icons/link-2":"node_modules/preact-feather/dist/icons/link-2.js","./icons/link":"node_modules/preact-feather/dist/icons/link.js","./icons/linkedin":"node_modules/preact-feather/dist/icons/linkedin.js","./icons/list":"node_modules/preact-feather/dist/icons/list.js","./icons/loader":"node_modules/preact-feather/dist/icons/loader.js","./icons/lock":"node_modules/preact-feather/dist/icons/lock.js","./icons/log-in":"node_modules/preact-feather/dist/icons/log-in.js","./icons/log-out":"node_modules/preact-feather/dist/icons/log-out.js","./icons/mail":"node_modules/preact-feather/dist/icons/mail.js","./icons/map-pin":"node_modules/preact-feather/dist/icons/map-pin.js","./icons/map":"node_modules/preact-feather/dist/icons/map.js","./icons/maximize-2":"node_modules/preact-feather/dist/icons/maximize-2.js","./icons/maximize":"node_modules/preact-feather/dist/icons/maximize.js","./icons/meh":"node_modules/preact-feather/dist/icons/meh.js","./icons/menu":"node_modules/preact-feather/dist/icons/menu.js","./icons/message-circle":"node_modules/preact-feather/dist/icons/message-circle.js","./icons/message-square":"node_modules/preact-feather/dist/icons/message-square.js","./icons/mic-off":"node_modules/preact-feather/dist/icons/mic-off.js","./icons/mic":"node_modules/preact-feather/dist/icons/mic.js","./icons/minimize-2":"node_modules/preact-feather/dist/icons/minimize-2.js","./icons/minimize":"node_modules/preact-feather/dist/icons/minimize.js","./icons/minus-circle":"node_modules/preact-feather/dist/icons/minus-circle.js","./icons/minus-square":"node_modules/preact-feather/dist/icons/minus-square.js","./icons/minus":"node_modules/preact-feather/dist/icons/minus.js","./icons/monitor":"node_modules/preact-feather/dist/icons/monitor.js","./icons/moon":"node_modules/preact-feather/dist/icons/moon.js","./icons/more-horizontal":"node_modules/preact-feather/dist/icons/more-horizontal.js","./icons/more-vertical":"node_modules/preact-feather/dist/icons/more-vertical.js","./icons/mouse-pointer":"node_modules/preact-feather/dist/icons/mouse-pointer.js","./icons/move":"node_modules/preact-feather/dist/icons/move.js","./icons/music":"node_modules/preact-feather/dist/icons/music.js","./icons/navigation-2":"node_modules/preact-feather/dist/icons/navigation-2.js","./icons/navigation":"node_modules/preact-feather/dist/icons/navigation.js","./icons/octagon":"node_modules/preact-feather/dist/icons/octagon.js","./icons/package":"node_modules/preact-feather/dist/icons/package.js","./icons/paperclip":"node_modules/preact-feather/dist/icons/paperclip.js","./icons/pause-circle":"node_modules/preact-feather/dist/icons/pause-circle.js","./icons/pause":"node_modules/preact-feather/dist/icons/pause.js","./icons/pen-tool":"node_modules/preact-feather/dist/icons/pen-tool.js","./icons/percent":"node_modules/preact-feather/dist/icons/percent.js","./icons/phone-call":"node_modules/preact-feather/dist/icons/phone-call.js","./icons/phone-forwarded":"node_modules/preact-feather/dist/icons/phone-forwarded.js","./icons/phone-incoming":"node_modules/preact-feather/dist/icons/phone-incoming.js","./icons/phone-missed":"node_modules/preact-feather/dist/icons/phone-missed.js","./icons/phone-off":"node_modules/preact-feather/dist/icons/phone-off.js","./icons/phone-outgoing":"node_modules/preact-feather/dist/icons/phone-outgoing.js","./icons/phone":"node_modules/preact-feather/dist/icons/phone.js","./icons/pie-chart":"node_modules/preact-feather/dist/icons/pie-chart.js","./icons/play-circle":"node_modules/preact-feather/dist/icons/play-circle.js","./icons/play":"node_modules/preact-feather/dist/icons/play.js","./icons/plus-circle":"node_modules/preact-feather/dist/icons/plus-circle.js","./icons/plus-square":"node_modules/preact-feather/dist/icons/plus-square.js","./icons/plus":"node_modules/preact-feather/dist/icons/plus.js","./icons/pocket":"node_modules/preact-feather/dist/icons/pocket.js","./icons/power":"node_modules/preact-feather/dist/icons/power.js","./icons/printer":"node_modules/preact-feather/dist/icons/printer.js","./icons/radio":"node_modules/preact-feather/dist/icons/radio.js","./icons/refresh-ccw":"node_modules/preact-feather/dist/icons/refresh-ccw.js","./icons/refresh-cw":"node_modules/preact-feather/dist/icons/refresh-cw.js","./icons/repeat":"node_modules/preact-feather/dist/icons/repeat.js","./icons/rewind":"node_modules/preact-feather/dist/icons/rewind.js","./icons/rotate-ccw":"node_modules/preact-feather/dist/icons/rotate-ccw.js","./icons/rotate-cw":"node_modules/preact-feather/dist/icons/rotate-cw.js","./icons/rss":"node_modules/preact-feather/dist/icons/rss.js","./icons/save":"node_modules/preact-feather/dist/icons/save.js","./icons/scissors":"node_modules/preact-feather/dist/icons/scissors.js","./icons/search":"node_modules/preact-feather/dist/icons/search.js","./icons/send":"node_modules/preact-feather/dist/icons/send.js","./icons/server":"node_modules/preact-feather/dist/icons/server.js","./icons/settings":"node_modules/preact-feather/dist/icons/settings.js","./icons/share-2":"node_modules/preact-feather/dist/icons/share-2.js","./icons/share":"node_modules/preact-feather/dist/icons/share.js","./icons/shield-off":"node_modules/preact-feather/dist/icons/shield-off.js","./icons/shield":"node_modules/preact-feather/dist/icons/shield.js","./icons/shopping-bag":"node_modules/preact-feather/dist/icons/shopping-bag.js","./icons/shopping-cart":"node_modules/preact-feather/dist/icons/shopping-cart.js","./icons/shuffle":"node_modules/preact-feather/dist/icons/shuffle.js","./icons/sidebar":"node_modules/preact-feather/dist/icons/sidebar.js","./icons/skip-back":"node_modules/preact-feather/dist/icons/skip-back.js","./icons/skip-forward":"node_modules/preact-feather/dist/icons/skip-forward.js","./icons/slack":"node_modules/preact-feather/dist/icons/slack.js","./icons/slash":"node_modules/preact-feather/dist/icons/slash.js","./icons/sliders":"node_modules/preact-feather/dist/icons/sliders.js","./icons/smartphone":"node_modules/preact-feather/dist/icons/smartphone.js","./icons/smile":"node_modules/preact-feather/dist/icons/smile.js","./icons/speaker":"node_modules/preact-feather/dist/icons/speaker.js","./icons/square":"node_modules/preact-feather/dist/icons/square.js","./icons/star":"node_modules/preact-feather/dist/icons/star.js","./icons/stop-circle":"node_modules/preact-feather/dist/icons/stop-circle.js","./icons/sun":"node_modules/preact-feather/dist/icons/sun.js","./icons/sunrise":"node_modules/preact-feather/dist/icons/sunrise.js","./icons/sunset":"node_modules/preact-feather/dist/icons/sunset.js","./icons/tablet":"node_modules/preact-feather/dist/icons/tablet.js","./icons/tag":"node_modules/preact-feather/dist/icons/tag.js","./icons/target":"node_modules/preact-feather/dist/icons/target.js","./icons/terminal":"node_modules/preact-feather/dist/icons/terminal.js","./icons/thermometer":"node_modules/preact-feather/dist/icons/thermometer.js","./icons/thumbs-down":"node_modules/preact-feather/dist/icons/thumbs-down.js","./icons/thumbs-up":"node_modules/preact-feather/dist/icons/thumbs-up.js","./icons/toggle-left":"node_modules/preact-feather/dist/icons/toggle-left.js","./icons/toggle-right":"node_modules/preact-feather/dist/icons/toggle-right.js","./icons/tool":"node_modules/preact-feather/dist/icons/tool.js","./icons/trash-2":"node_modules/preact-feather/dist/icons/trash-2.js","./icons/trash":"node_modules/preact-feather/dist/icons/trash.js","./icons/trello":"node_modules/preact-feather/dist/icons/trello.js","./icons/trending-down":"node_modules/preact-feather/dist/icons/trending-down.js","./icons/trending-up":"node_modules/preact-feather/dist/icons/trending-up.js","./icons/triangle":"node_modules/preact-feather/dist/icons/triangle.js","./icons/truck":"node_modules/preact-feather/dist/icons/truck.js","./icons/tv":"node_modules/preact-feather/dist/icons/tv.js","./icons/twitch":"node_modules/preact-feather/dist/icons/twitch.js","./icons/twitter":"node_modules/preact-feather/dist/icons/twitter.js","./icons/type":"node_modules/preact-feather/dist/icons/type.js","./icons/umbrella":"node_modules/preact-feather/dist/icons/umbrella.js","./icons/underline":"node_modules/preact-feather/dist/icons/underline.js","./icons/unlock":"node_modules/preact-feather/dist/icons/unlock.js","./icons/upload-cloud":"node_modules/preact-feather/dist/icons/upload-cloud.js","./icons/upload":"node_modules/preact-feather/dist/icons/upload.js","./icons/user-check":"node_modules/preact-feather/dist/icons/user-check.js","./icons/user-minus":"node_modules/preact-feather/dist/icons/user-minus.js","./icons/user-plus":"node_modules/preact-feather/dist/icons/user-plus.js","./icons/user-x":"node_modules/preact-feather/dist/icons/user-x.js","./icons/user":"node_modules/preact-feather/dist/icons/user.js","./icons/users":"node_modules/preact-feather/dist/icons/users.js","./icons/video-off":"node_modules/preact-feather/dist/icons/video-off.js","./icons/video":"node_modules/preact-feather/dist/icons/video.js","./icons/voicemail":"node_modules/preact-feather/dist/icons/voicemail.js","./icons/volume-1":"node_modules/preact-feather/dist/icons/volume-1.js","./icons/volume-2":"node_modules/preact-feather/dist/icons/volume-2.js","./icons/volume-x":"node_modules/preact-feather/dist/icons/volume-x.js","./icons/volume":"node_modules/preact-feather/dist/icons/volume.js","./icons/watch":"node_modules/preact-feather/dist/icons/watch.js","./icons/wifi-off":"node_modules/preact-feather/dist/icons/wifi-off.js","./icons/wifi":"node_modules/preact-feather/dist/icons/wifi.js","./icons/wind":"node_modules/preact-feather/dist/icons/wind.js","./icons/x-circle":"node_modules/preact-feather/dist/icons/x-circle.js","./icons/x-octagon":"node_modules/preact-feather/dist/icons/x-octagon.js","./icons/x-square":"node_modules/preact-feather/dist/icons/x-square.js","./icons/x":"node_modules/preact-feather/dist/icons/x.js","./icons/youtube":"node_modules/preact-feather/dist/icons/youtube.js","./icons/zap-off":"node_modules/preact-feather/dist/icons/zap-off.js","./icons/zap":"node_modules/preact-feather/dist/icons/zap.js","./icons/zoom-in":"node_modules/preact-feather/dist/icons/zoom-in.js","./icons/zoom-out":"node_modules/preact-feather/dist/icons/zoom-out.js"}],"js/helper/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LINK_ICONS = exports.renderGithub = exports.renderLinkedin = exports.LINK_URLS = exports.LINK_COLORS = exports.LINK_COORDS = exports.NAME_CARD_COORD = exports.DEFAULT_COLOR = exports.THEME_COLORS = exports.GRID_SQUARE_PADDING = exports.GRID_SQUARE_HEIGHT = exports.GRID_SQUARE_WIDTH = void 0;

var _preact = require("preact");

var _preactFeather = require("preact-feather");

var GRID_SQUARE_WIDTH = 40;
exports.GRID_SQUARE_WIDTH = GRID_SQUARE_WIDTH;
var GRID_SQUARE_HEIGHT = 40;
exports.GRID_SQUARE_HEIGHT = GRID_SQUARE_HEIGHT;
var GRID_SQUARE_PADDING = 2;
exports.GRID_SQUARE_PADDING = GRID_SQUARE_PADDING;
var THEME_COLORS = ["#4357AD", "#48A9A6", "#E4DFDA", "#D4B483", "#C1666B"];
exports.THEME_COLORS = THEME_COLORS;
var DEFAULT_COLOR = "#FFFFFF";
exports.DEFAULT_COLOR = DEFAULT_COLOR;
var NAME_CARD_COORD = [-4, -1];
exports.NAME_CARD_COORD = NAME_CARD_COORD;
var LINK_COORDS = [[-3, 2], [2, 2]];
exports.LINK_COORDS = LINK_COORDS;
var LINK_COLORS = ["#0E76A8", "#211F1F"];
exports.LINK_COLORS = LINK_COLORS;
var LINK_URLS = ["https://www.linkedin.com/in/hongjustin/", "https://github.com/jjhong922"];
exports.LINK_URLS = LINK_URLS;

var renderLinkedin = function renderLinkedin() {
  return (0, _preact.h)(_preactFeather.Linkedin, {
    size: 32
  });
};

exports.renderLinkedin = renderLinkedin;

var renderGithub = function renderGithub() {
  return (0, _preact.h)(_preactFeather.Github, {
    size: 32
  });
};

exports.renderGithub = renderGithub;
var LINK_ICONS = [renderLinkedin, renderGithub];
exports.LINK_ICONS = LINK_ICONS;
},{"preact":"node_modules/preact/dist/preact.module.js","preact-feather":"node_modules/preact-feather/dist/index.js"}],"js/helper/helpers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.debounce = debounce;
exports.unitCoordToWindowCoord = exports.centeredCoordToUnitCoord = exports.centeredCoordToWindowCoord = exports.windowCoordToCenteredCoord = exports.getCenteredGridSquareCoords = void 0;

var JQuery = _interopRequireWildcard(require("jquery"));

var _constants = require("./constants");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var $ = JQuery.default;

function debounce(fn, ms) {
  var _arguments = arguments,
      _this = this;

  var timer;
  return function (_) {
    clearTimeout(timer);
    timer = setTimeout(function (_) {
      timer = null;
      fn.apply(_this, _arguments);
    }, ms);
  };
}

;

var getCenteredGridSquareCoords = function getCenteredGridSquareCoords() {
  var height = $(window).height();
  var width = $(window).width();
  var originY = height / 2;
  var originX = width / 2;
  var coords = [];
  var i;
  var j;

  for (i = 0; i < originX / (_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) + 1; i++) {
    for (j = 0; j < originY / (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) + 1; j++) {
      coords.push([(_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) * i, (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) * j]);

      if (i != 0) {
        coords.push([(_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) * -i, (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) * j]);
      }

      if (j != 0) {
        coords.push([(_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) * i, (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) * -j]);
      }

      if (i != 0 && j != 0) {
        coords.push([(_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) * -i, (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) * -j]);
      }
    }
  }

  return coords;
};

exports.getCenteredGridSquareCoords = getCenteredGridSquareCoords;

var windowCoordToCenteredCoord = function windowCoordToCenteredCoord(xPos, yPos) {
  var height = $(window).height();
  var width = $(window).width();
  var originY = height / 2;
  var originX = width / 2;
  return [xPos - originX, yPos - originY];
};

exports.windowCoordToCenteredCoord = windowCoordToCenteredCoord;

var centeredCoordToWindowCoord = function centeredCoordToWindowCoord(xPos, yPos) {
  var height = $(window).height();
  var width = $(window).width();
  var originY = height / 2;
  var originX = width / 2;
  return [xPos + originX, yPos + originY];
};

exports.centeredCoordToWindowCoord = centeredCoordToWindowCoord;

var centeredCoordToUnitCoord = function centeredCoordToUnitCoord(xPos, yPos) {
  return [xPos / (_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING), yPos / (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING)];
};

exports.centeredCoordToUnitCoord = centeredCoordToUnitCoord;

var unitCoordToWindowCoord = function unitCoordToWindowCoord(x, y) {
  var height = $(window).height();
  var width = $(window).width();
  var originY = height / 2;
  var originX = width / 2;
  return [x * (_constants.GRID_SQUARE_WIDTH + _constants.GRID_SQUARE_PADDING) + originX, y * (_constants.GRID_SQUARE_HEIGHT + _constants.GRID_SQUARE_PADDING) + originY];
};

exports.unitCoordToWindowCoord = unitCoordToWindowCoord;
},{"jquery":"node_modules/jquery/dist/jquery.js","./constants":"js/helper/constants.js"}],"node_modules/@babel/runtime/helpers/interopRequireDefault.js":[function(require,module,exports) {
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;
},{}],"node_modules/@babel/runtime/helpers/createClass.js":[function(require,module,exports) {
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
},{}],"node_modules/@babel/runtime/helpers/classCallCheck.js":[function(require,module,exports) {
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
},{}],"node_modules/@babel/runtime/helpers/typeof.js":[function(require,module,exports) {
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;
},{}],"node_modules/@babel/runtime/helpers/assertThisInitialized.js":[function(require,module,exports) {
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;
},{}],"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":[function(require,module,exports) {
var _typeof = require("../helpers/typeof");

var assertThisInitialized = require("./assertThisInitialized");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;
},{"../helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","./assertThisInitialized":"node_modules/@babel/runtime/helpers/assertThisInitialized.js"}],"node_modules/@babel/runtime/helpers/getPrototypeOf.js":[function(require,module,exports) {
function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;
},{}],"node_modules/@babel/runtime/helpers/setPrototypeOf.js":[function(require,module,exports) {
function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
},{}],"node_modules/@babel/runtime/helpers/inherits.js":[function(require,module,exports) {
var setPrototypeOf = require("./setPrototypeOf");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;
},{"./setPrototypeOf":"node_modules/@babel/runtime/helpers/setPrototypeOf.js"}],"node_modules/@material/base/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @template A
 */
class MDCFoundation {
  /** @return enum{cssClasses} */
  static get cssClasses() {
    // Classes extending MDCFoundation should implement this method to return an object which exports every
    // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}
    return {};
  }
  /** @return enum{strings} */


  static get strings() {
    // Classes extending MDCFoundation should implement this method to return an object which exports all
    // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}
    return {};
  }
  /** @return enum{numbers} */


  static get numbers() {
    // Classes extending MDCFoundation should implement this method to return an object which exports all
    // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}
    return {};
  }
  /** @return {!Object} */


  static get defaultAdapter() {
    // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient
    // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter
    // validation.
    return {};
  }
  /**
   * @param {A=} adapter
   */


  constructor(adapter = {}) {
    /** @protected {!A} */
    this.adapter_ = adapter;
  }

  init() {// Subclasses should override this method to perform initialization routines (registering events, etc.)
  }

  destroy() {// Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)
  }

}

var _default = MDCFoundation;
exports.default = _default;
},{}],"node_modules/@material/base/component.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @template F
 */
class MDCComponent {
  /**
   * @param {!Element} root
   * @return {!MDCComponent}
   */
  static attachTo(root) {
    // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and
    // returns an instantiated component with its root set to that element. Also note that in the cases of
    // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized
    // from getDefaultFoundation().
    return new MDCComponent(root, new _foundation.default());
  }
  /**
   * @param {!Element} root
   * @param {F=} foundation
   * @param {...?} args
   */


  constructor(root, foundation = undefined, ...args) {
    /** @protected {!Element} */
    this.root_ = root;
    this.initialize(...args); // Note that we initialize foundation here and not within the constructor's default param so that
    // this.root_ is defined and can be used within the foundation class.

    /** @protected {!F} */

    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;
    this.foundation_.init();
    this.initialSyncWithDOM();
  }

  initialize()
  /* ...args */
  {} // Subclasses can override this to do any additional setup work that would be considered part of a
  // "constructor". Essentially, it is a hook into the parent constructor before the foundation is
  // initialized. Any additional arguments besides root and foundation will be passed in here.

  /**
   * @return {!F} foundation
   */


  getDefaultFoundation() {
    // Subclasses must override this method to return a properly configured foundation class for the
    // component.
    throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');
  }

  initialSyncWithDOM() {// Subclasses should override this method if they need to perform work to synchronize with a host DOM
    // object. An example of this would be a form control wrapper that needs to synchronize its internal state
    // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM
    // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.
  }

  destroy() {
    // Subclasses may implement this method to release any resources / deregister any listeners they have
    // attached. An example of this might be deregistering a resize event from the window object.
    this.foundation_.destroy();
  }
  /**
   * Wrapper method to add an event listener to the component's root element. This is most useful when
   * listening for custom events.
   * @param {string} evtType
   * @param {!Function} handler
   */


  listen(evtType, handler) {
    this.root_.addEventListener(evtType, handler);
  }
  /**
   * Wrapper method to remove an event listener to the component's root element. This is most useful when
   * unlistening for custom events.
   * @param {string} evtType
   * @param {!Function} handler
   */


  unlisten(evtType, handler) {
    this.root_.removeEventListener(evtType, handler);
  }
  /**
   * Fires a cross-browser-compatible custom event from the component root of the given type,
   * with the given data.
   * @param {string} evtType
   * @param {!Object} evtData
   * @param {boolean=} shouldBubble
   */


  emit(evtType, evtData, shouldBubble = false) {
    let evt;

    if (typeof CustomEvent === 'function') {
      evt = new CustomEvent(evtType, {
        detail: evtData,
        bubbles: shouldBubble
      });
    } else {
      evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(evtType, shouldBubble, false, evtData);
    }

    this.root_.dispatchEvent(evt);
  }

}

var _default = MDCComponent;
exports.default = _default;
},{"./foundation":"node_modules/@material/base/foundation.js"}],"node_modules/@material/ripple/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Ripple. Provides an interface for managing
 * - classes
 * - dom
 * - CSS variables
 * - position
 * - dimensions
 * - scroll position
 * - event handlers
 * - unbounded, active and disabled states
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCRippleAdapter {
  /** @return {boolean} */
  browserSupportsCssVars() {}
  /** @return {boolean} */


  isUnbounded() {}
  /** @return {boolean} */


  isSurfaceActive() {}
  /** @return {boolean} */


  isSurfaceDisabled() {}
  /** @param {string} className */


  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /** @param {!EventTarget} target */


  containsEventTarget(target) {}
  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  registerInteractionHandler(evtType, handler) {}
  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  deregisterInteractionHandler(evtType, handler) {}
  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  registerDocumentInteractionHandler(evtType, handler) {}
  /**
   * @param {string} evtType
   * @param {!Function} handler
   */


  deregisterDocumentInteractionHandler(evtType, handler) {}
  /**
   * @param {!Function} handler
   */


  registerResizeHandler(handler) {}
  /**
   * @param {!Function} handler
   */


  deregisterResizeHandler(handler) {}
  /**
   * @param {string} varName
   * @param {?number|string} value
   */


  updateCssVariable(varName, value) {}
  /** @return {!ClientRect} */


  computeBoundingRect() {}
  /** @return {{x: number, y: number}} */


  getWindowPageOffset() {}

}

var _default = MDCRippleAdapter;
exports.default = _default;
},{}],"node_modules/@material/ripple/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const cssClasses = {
  // Ripple is a special case where the "root" component is really a "mixin" of sorts,
  // given that it's an 'upgrade' to an existing component. That being said it is the root
  // CSS class that all other CSS classes derive from.
  ROOT: 'mdc-ripple-upgraded',
  UNBOUNDED: 'mdc-ripple-upgraded--unbounded',
  BG_FOCUSED: 'mdc-ripple-upgraded--background-focused',
  FG_ACTIVATION: 'mdc-ripple-upgraded--foreground-activation',
  FG_DEACTIVATION: 'mdc-ripple-upgraded--foreground-deactivation'
};
exports.cssClasses = cssClasses;
const strings = {
  VAR_LEFT: '--mdc-ripple-left',
  VAR_TOP: '--mdc-ripple-top',
  VAR_FG_SIZE: '--mdc-ripple-fg-size',
  VAR_FG_SCALE: '--mdc-ripple-fg-scale',
  VAR_FG_TRANSLATE_START: '--mdc-ripple-fg-translate-start',
  VAR_FG_TRANSLATE_END: '--mdc-ripple-fg-translate-end'
};
exports.strings = strings;
const numbers = {
  PADDING: 10,
  INITIAL_ORIGIN_SCALE: 0.6,
  DEACTIVATION_TIMEOUT_MS: 225,
  // Corresponds to $mdc-ripple-translate-duration (i.e. activation animation duration)
  FG_DEACTIVATION_MS: 150,
  // Corresponds to $mdc-ripple-fade-out-duration (i.e. deactivation animation duration)
  TAP_DELAY_MS: 300 // Delay between touch and simulated mouse events on touch devices

};
exports.numbers = numbers;
},{}],"node_modules/@material/ripple/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.supportsCssVariables = supportsCssVariables;
exports.applyPassive = applyPassive;
exports.getMatchesProperty = getMatchesProperty;
exports.getNormalizedEventCoords = getNormalizedEventCoords;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Stores result from supportsCssVariables to avoid redundant processing to detect CSS custom variable support.
 * @private {boolean|undefined}
 */
let supportsCssVariables_;
/**
 * Stores result from applyPassive to avoid redundant processing to detect passive event listener support.
 * @private {boolean|undefined}
 */

let supportsPassive_;
/**
 * @param {!Window} windowObj
 * @return {boolean}
 */

function detectEdgePseudoVarBug(windowObj) {
  // Detect versions of Edge with buggy var() support
  // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11495448/
  const document = windowObj.document;
  const node = document.createElement('div');
  node.className = 'mdc-ripple-surface--test-edge-var-bug';
  document.body.appendChild(node); // The bug exists if ::before style ends up propagating to the parent element.
  // Additionally, getComputedStyle returns null in iframes with display: "none" in Firefox,
  // but Firefox is known to support CSS custom properties correctly.
  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397

  const computedStyle = windowObj.getComputedStyle(node);
  const hasPseudoVarBug = computedStyle !== null && computedStyle.borderTopStyle === 'solid';
  node.remove();
  return hasPseudoVarBug;
}
/**
 * @param {!Window} windowObj
 * @param {boolean=} forceRefresh
 * @return {boolean|undefined}
 */


function supportsCssVariables(windowObj, forceRefresh = false) {
  let supportsCssVariables = supportsCssVariables_;

  if (typeof supportsCssVariables_ === 'boolean' && !forceRefresh) {
    return supportsCssVariables;
  }

  const supportsFunctionPresent = windowObj.CSS && typeof windowObj.CSS.supports === 'function';

  if (!supportsFunctionPresent) {
    return;
  }

  const explicitlySupportsCssVars = windowObj.CSS.supports('--css-vars', 'yes'); // See: https://bugs.webkit.org/show_bug.cgi?id=154669
  // See: README section on Safari

  const weAreFeatureDetectingSafari10plus = windowObj.CSS.supports('(--css-vars: yes)') && windowObj.CSS.supports('color', '#00000000');

  if (explicitlySupportsCssVars || weAreFeatureDetectingSafari10plus) {
    supportsCssVariables = !detectEdgePseudoVarBug(windowObj);
  } else {
    supportsCssVariables = false;
  }

  if (!forceRefresh) {
    supportsCssVariables_ = supportsCssVariables;
  }

  return supportsCssVariables;
} //

/**
 * Determine whether the current browser supports passive event listeners, and if so, use them.
 * @param {!Window=} globalObj
 * @param {boolean=} forceRefresh
 * @return {boolean|{passive: boolean}}
 */


function applyPassive(globalObj = window, forceRefresh = false) {
  if (supportsPassive_ === undefined || forceRefresh) {
    let isSupported = false;

    try {
      globalObj.document.addEventListener('test', null, {
        get passive() {
          isSupported = true;
        }

      });
    } catch (e) {}

    supportsPassive_ = isSupported;
  }

  return supportsPassive_ ? {
    passive: true
  } : false;
}
/**
 * @param {!Object} HTMLElementPrototype
 * @return {!Array<string>}
 */


function getMatchesProperty(HTMLElementPrototype) {
  return ['webkitMatchesSelector', 'msMatchesSelector', 'matches'].filter(p => p in HTMLElementPrototype).pop();
}
/**
 * @param {!Event} ev
 * @param {{x: number, y: number}} pageOffset
 * @param {!ClientRect} clientRect
 * @return {{x: number, y: number}}
 */


function getNormalizedEventCoords(ev, pageOffset, clientRect) {
  const {
    x,
    y
  } = pageOffset;
  const documentX = x + clientRect.left;
  const documentY = y + clientRect.top;
  let normalizedX;
  let normalizedY; // Determine touch point relative to the ripple container.

  if (ev.type === 'touchstart') {
    normalizedX = ev.changedTouches[0].pageX - documentX;
    normalizedY = ev.changedTouches[0].pageY - documentY;
  } else {
    normalizedX = ev.pageX - documentX;
    normalizedY = ev.pageY - documentY;
  }

  return {
    x: normalizedX,
    y: normalizedY
  };
}
},{}],"node_modules/@material/ripple/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

var _util = require("./util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @typedef {{
 *   isActivated: (boolean|undefined),
 *   hasDeactivationUXRun: (boolean|undefined),
 *   wasActivatedByPointer: (boolean|undefined),
 *   wasElementMadeActive: (boolean|undefined),
 *   activationEvent: Event,
 *   isProgrammatic: (boolean|undefined)
 * }}
 */
let ActivationStateType;
/**
 * @typedef {{
 *   activate: (string|undefined),
 *   deactivate: (string|undefined),
 *   focus: (string|undefined),
 *   blur: (string|undefined)
 * }}
 */

let ListenerInfoType;
/**
 * @typedef {{
 *   activate: function(!Event),
 *   deactivate: function(!Event),
 *   focus: function(),
 *   blur: function()
 * }}
 */

let ListenersType;
/**
 * @typedef {{
 *   x: number,
 *   y: number
 * }}
 */

let PointType; // Activation events registered on the root element of each instance for activation

const ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs

const POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup']; // Tracks activations that have occurred on the current frame, to avoid simultaneous nested activations

/** @type {!Array<!EventTarget>} */

let activatedTargets = [];
/**
 * @extends {MDCFoundation<!MDCRippleAdapter>}
 */

class MDCRippleFoundation extends _foundation.default {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get numbers() {
    return _constants.numbers;
  }

  static get defaultAdapter() {
    return {
      browserSupportsCssVars: () =>
      /* boolean - cached */
      {},
      isUnbounded: () =>
      /* boolean */
      {},
      isSurfaceActive: () =>
      /* boolean */
      {},
      isSurfaceDisabled: () =>
      /* boolean */
      {},
      addClass: () =>
      /* className: string */
      {},
      removeClass: () =>
      /* className: string */
      {},
      containsEventTarget: () =>
      /* target: !EventTarget */
      {},
      registerInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      deregisterInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      registerDocumentInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      deregisterDocumentInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      registerResizeHandler: () =>
      /* handler: EventListener */
      {},
      deregisterResizeHandler: () =>
      /* handler: EventListener */
      {},
      updateCssVariable: () =>
      /* varName: string, value: string */
      {},
      computeBoundingRect: () =>
      /* ClientRect */
      {},
      getWindowPageOffset: () =>
      /* {x: number, y: number} */
      {}
    };
  }

  constructor(adapter) {
    super(Object.assign(MDCRippleFoundation.defaultAdapter, adapter));
    /** @private {number} */

    this.layoutFrame_ = 0;
    /** @private {!ClientRect} */

    this.frame_ =
    /** @type {!ClientRect} */
    {
      width: 0,
      height: 0
    };
    /** @private {!ActivationStateType} */

    this.activationState_ = this.defaultActivationState_();
    /** @private {number} */

    this.initialSize_ = 0;
    /** @private {number} */

    this.maxRadius_ = 0;
    /** @private {function(!Event)} */

    this.activateHandler_ = e => this.activate_(e);
    /** @private {function(!Event)} */


    this.deactivateHandler_ = e => this.deactivate_(e);
    /** @private {function(?Event=)} */


    this.focusHandler_ = () => this.handleFocus();
    /** @private {function(?Event=)} */


    this.blurHandler_ = () => this.handleBlur();
    /** @private {!Function} */


    this.resizeHandler_ = () => this.layout();
    /** @private {{left: number, top:number}} */


    this.unboundedCoords_ = {
      left: 0,
      top: 0
    };
    /** @private {number} */

    this.fgScale_ = 0;
    /** @private {number} */

    this.activationTimer_ = 0;
    /** @private {number} */

    this.fgDeactivationRemovalTimer_ = 0;
    /** @private {boolean} */

    this.activationAnimationHasEnded_ = false;
    /** @private {!Function} */

    this.activationTimerCallback_ = () => {
      this.activationAnimationHasEnded_ = true;
      this.runDeactivationUXLogicIfReady_();
    };
    /** @private {?Event} */


    this.previousActivationEvent_ = null;
  }
  /**
   * We compute this property so that we are not querying information about the client
   * until the point in time where the foundation requests it. This prevents scenarios where
   * client-side feature-detection may happen too early, such as when components are rendered on the server
   * and then initialized at mount time on the client.
   * @return {boolean}
   * @private
   */


  supportsPressRipple_() {
    return this.adapter_.browserSupportsCssVars();
  }
  /**
   * @return {!ActivationStateType}
   */


  defaultActivationState_() {
    return {
      isActivated: false,
      hasDeactivationUXRun: false,
      wasActivatedByPointer: false,
      wasElementMadeActive: false,
      activationEvent: null,
      isProgrammatic: false
    };
  }
  /** @override */


  init() {
    const supportsPressRipple = this.supportsPressRipple_();
    this.registerRootHandlers_(supportsPressRipple);

    if (supportsPressRipple) {
      const {
        ROOT,
        UNBOUNDED
      } = MDCRippleFoundation.cssClasses;
      requestAnimationFrame(() => {
        this.adapter_.addClass(ROOT);

        if (this.adapter_.isUnbounded()) {
          this.adapter_.addClass(UNBOUNDED); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple

          this.layoutInternal_();
        }
      });
    }
  }
  /** @override */


  destroy() {
    if (this.supportsPressRipple_()) {
      if (this.activationTimer_) {
        clearTimeout(this.activationTimer_);
        this.activationTimer_ = 0;
        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);
      }

      if (this.fgDeactivationRemovalTimer_) {
        clearTimeout(this.fgDeactivationRemovalTimer_);
        this.fgDeactivationRemovalTimer_ = 0;
        this.adapter_.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);
      }

      const {
        ROOT,
        UNBOUNDED
      } = MDCRippleFoundation.cssClasses;
      requestAnimationFrame(() => {
        this.adapter_.removeClass(ROOT);
        this.adapter_.removeClass(UNBOUNDED);
        this.removeCssVars_();
      });
    }

    this.deregisterRootHandlers_();
    this.deregisterDeactivationHandlers_();
  }
  /**
   * @param {boolean} supportsPressRipple Passed from init to save a redundant function call
   * @private
   */


  registerRootHandlers_(supportsPressRipple) {
    if (supportsPressRipple) {
      ACTIVATION_EVENT_TYPES.forEach(type => {
        this.adapter_.registerInteractionHandler(type, this.activateHandler_);
      });

      if (this.adapter_.isUnbounded()) {
        this.adapter_.registerResizeHandler(this.resizeHandler_);
      }
    }

    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
  }
  /**
   * @param {!Event} e
   * @private
   */


  registerDeactivationHandlers_(e) {
    if (e.type === 'keydown') {
      this.adapter_.registerInteractionHandler('keyup', this.deactivateHandler_);
    } else {
      POINTER_DEACTIVATION_EVENT_TYPES.forEach(type => {
        this.adapter_.registerDocumentInteractionHandler(type, this.deactivateHandler_);
      });
    }
  }
  /** @private */


  deregisterRootHandlers_() {
    ACTIVATION_EVENT_TYPES.forEach(type => {
      this.adapter_.deregisterInteractionHandler(type, this.activateHandler_);
    });
    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);

    if (this.adapter_.isUnbounded()) {
      this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    }
  }
  /** @private */


  deregisterDeactivationHandlers_() {
    this.adapter_.deregisterInteractionHandler('keyup', this.deactivateHandler_);
    POINTER_DEACTIVATION_EVENT_TYPES.forEach(type => {
      this.adapter_.deregisterDocumentInteractionHandler(type, this.deactivateHandler_);
    });
  }
  /** @private */


  removeCssVars_() {
    const {
      strings
    } = MDCRippleFoundation;
    Object.keys(strings).forEach(k => {
      if (k.indexOf('VAR_') === 0) {
        this.adapter_.updateCssVariable(strings[k], null);
      }
    });
  }
  /**
   * @param {?Event} e
   * @private
   */


  activate_(e) {
    if (this.adapter_.isSurfaceDisabled()) {
      return;
    }

    const activationState = this.activationState_;

    if (activationState.isActivated) {
      return;
    } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction


    const previousActivationEvent = this.previousActivationEvent_;
    const isSameInteraction = previousActivationEvent && e && previousActivationEvent.type !== e.type;

    if (isSameInteraction) {
      return;
    }

    activationState.isActivated = true;
    activationState.isProgrammatic = e === null;
    activationState.activationEvent = e;
    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : e.type === 'mousedown' || e.type === 'touchstart' || e.type === 'pointerdown';
    const hasActivatedChild = e && activatedTargets.length > 0 && activatedTargets.some(target => this.adapter_.containsEventTarget(target));

    if (hasActivatedChild) {
      // Immediately reset activation state, while preserving logic that prevents touch follow-on events
      this.resetActivationState_();
      return;
    }

    if (e) {
      activatedTargets.push(
      /** @type {!EventTarget} */
      e.target);
      this.registerDeactivationHandlers_(e);
    }

    activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

    if (activationState.wasElementMadeActive) {
      this.animateActivation_();
    }

    requestAnimationFrame(() => {
      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples
      activatedTargets = [];

      if (!activationState.wasElementMadeActive && (e.key === ' ' || e.keyCode === 32)) {
        // If space was pressed, try again within an rAF call to detect :active, because different UAs report
        // active states inconsistently when they're called within event handling code:
        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971
        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741
        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS
        // variable is set within a rAF callback for a submit button interaction (#2241).
        activationState.wasElementMadeActive = this.checkElementMadeActive_(e);

        if (activationState.wasElementMadeActive) {
          this.animateActivation_();
        }
      }

      if (!activationState.wasElementMadeActive) {
        // Reset activation state immediately if element was not made active.
        this.activationState_ = this.defaultActivationState_();
      }
    });
  }
  /**
   * @param {?Event} e
   * @private
   */


  checkElementMadeActive_(e) {
    return e && e.type === 'keydown' ? this.adapter_.isSurfaceActive() : true;
  }
  /**
   * @param {?Event=} event Optional event containing position information.
   */


  activate(event = null) {
    this.activate_(event);
  }
  /** @private */


  animateActivation_() {
    const {
      VAR_FG_TRANSLATE_START,
      VAR_FG_TRANSLATE_END
    } = MDCRippleFoundation.strings;
    const {
      FG_DEACTIVATION,
      FG_ACTIVATION
    } = MDCRippleFoundation.cssClasses;
    const {
      DEACTIVATION_TIMEOUT_MS
    } = MDCRippleFoundation.numbers;
    this.layoutInternal_();
    let translateStart = '';
    let translateEnd = '';

    if (!this.adapter_.isUnbounded()) {
      const {
        startPoint,
        endPoint
      } = this.getFgTranslationCoordinates_();
      translateStart = `${startPoint.x}px, ${startPoint.y}px`;
      translateEnd = `${endPoint.x}px, ${endPoint.y}px`;
    }

    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);
    this.adapter_.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations

    clearTimeout(this.activationTimer_);
    clearTimeout(this.fgDeactivationRemovalTimer_);
    this.rmBoundedActivationClasses_();
    this.adapter_.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.

    this.adapter_.computeBoundingRect();
    this.adapter_.addClass(FG_ACTIVATION);
    this.activationTimer_ = setTimeout(() => this.activationTimerCallback_(), DEACTIVATION_TIMEOUT_MS);
  }
  /**
   * @private
   * @return {{startPoint: PointType, endPoint: PointType}}
   */


  getFgTranslationCoordinates_() {
    const {
      activationEvent,
      wasActivatedByPointer
    } = this.activationState_;
    let startPoint;

    if (wasActivatedByPointer) {
      startPoint = (0, _util.getNormalizedEventCoords)(
      /** @type {!Event} */
      activationEvent, this.adapter_.getWindowPageOffset(), this.adapter_.computeBoundingRect());
    } else {
      startPoint = {
        x: this.frame_.width / 2,
        y: this.frame_.height / 2
      };
    } // Center the element around the start point.


    startPoint = {
      x: startPoint.x - this.initialSize_ / 2,
      y: startPoint.y - this.initialSize_ / 2
    };
    const endPoint = {
      x: this.frame_.width / 2 - this.initialSize_ / 2,
      y: this.frame_.height / 2 - this.initialSize_ / 2
    };
    return {
      startPoint,
      endPoint
    };
  }
  /** @private */


  runDeactivationUXLogicIfReady_() {
    // This method is called both when a pointing device is released, and when the activation animation ends.
    // The deactivation animation should only run after both of those occur.
    const {
      FG_DEACTIVATION
    } = MDCRippleFoundation.cssClasses;
    const {
      hasDeactivationUXRun,
      isActivated
    } = this.activationState_;
    const activationHasEnded = hasDeactivationUXRun || !isActivated;

    if (activationHasEnded && this.activationAnimationHasEnded_) {
      this.rmBoundedActivationClasses_();
      this.adapter_.addClass(FG_DEACTIVATION);
      this.fgDeactivationRemovalTimer_ = setTimeout(() => {
        this.adapter_.removeClass(FG_DEACTIVATION);
      }, _constants.numbers.FG_DEACTIVATION_MS);
    }
  }
  /** @private */


  rmBoundedActivationClasses_() {
    const {
      FG_ACTIVATION
    } = MDCRippleFoundation.cssClasses;
    this.adapter_.removeClass(FG_ACTIVATION);
    this.activationAnimationHasEnded_ = false;
    this.adapter_.computeBoundingRect();
  }

  resetActivationState_() {
    this.previousActivationEvent_ = this.activationState_.activationEvent;
    this.activationState_ = this.defaultActivationState_(); // Touch devices may fire additional events for the same interaction within a short time.
    // Store the previous event until it's safe to assume that subsequent events are for new interactions.

    setTimeout(() => this.previousActivationEvent_ = null, MDCRippleFoundation.numbers.TAP_DELAY_MS);
  }
  /**
   * @param {?Event} e
   * @private
   */


  deactivate_(e) {
    const activationState = this.activationState_; // This can happen in scenarios such as when you have a keyup event that blurs the element.

    if (!activationState.isActivated) {
      return;
    }

    const state =
    /** @type {!ActivationStateType} */
    Object.assign({}, activationState);

    if (activationState.isProgrammatic) {
      const evtObject = null;
      requestAnimationFrame(() => this.animateDeactivation_(evtObject, state));
      this.resetActivationState_();
    } else {
      this.deregisterDeactivationHandlers_();
      requestAnimationFrame(() => {
        this.activationState_.hasDeactivationUXRun = true;
        this.animateDeactivation_(e, state);
        this.resetActivationState_();
      });
    }
  }
  /**
   * @param {?Event=} event Optional event containing position information.
   */


  deactivate(event = null) {
    this.deactivate_(event);
  }
  /**
   * @param {Event} e
   * @param {!ActivationStateType} options
   * @private
   */


  animateDeactivation_(e, {
    wasActivatedByPointer,
    wasElementMadeActive
  }) {
    if (wasActivatedByPointer || wasElementMadeActive) {
      this.runDeactivationUXLogicIfReady_();
    }
  }

  layout() {
    if (this.layoutFrame_) {
      cancelAnimationFrame(this.layoutFrame_);
    }

    this.layoutFrame_ = requestAnimationFrame(() => {
      this.layoutInternal_();
      this.layoutFrame_ = 0;
    });
  }
  /** @private */


  layoutInternal_() {
    this.frame_ = this.adapter_.computeBoundingRect();
    const maxDim = Math.max(this.frame_.height, this.frame_.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.
    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately
    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically
    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter
    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via
    // `overflow: hidden`.

    const getBoundedRadius = () => {
      const hypotenuse = Math.sqrt(Math.pow(this.frame_.width, 2) + Math.pow(this.frame_.height, 2));
      return hypotenuse + MDCRippleFoundation.numbers.PADDING;
    };

    this.maxRadius_ = this.adapter_.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform

    this.initialSize_ = maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE;
    this.fgScale_ = this.maxRadius_ / this.initialSize_;
    this.updateLayoutCssVars_();
  }
  /** @private */


  updateLayoutCssVars_() {
    const {
      VAR_FG_SIZE,
      VAR_LEFT,
      VAR_TOP,
      VAR_FG_SCALE
    } = MDCRippleFoundation.strings;
    this.adapter_.updateCssVariable(VAR_FG_SIZE, `${this.initialSize_}px`);
    this.adapter_.updateCssVariable(VAR_FG_SCALE, this.fgScale_);

    if (this.adapter_.isUnbounded()) {
      this.unboundedCoords_ = {
        left: Math.round(this.frame_.width / 2 - this.initialSize_ / 2),
        top: Math.round(this.frame_.height / 2 - this.initialSize_ / 2)
      };
      this.adapter_.updateCssVariable(VAR_LEFT, `${this.unboundedCoords_.left}px`);
      this.adapter_.updateCssVariable(VAR_TOP, `${this.unboundedCoords_.top}px`);
    }
  }
  /** @param {boolean} unbounded */


  setUnbounded(unbounded) {
    const {
      UNBOUNDED
    } = MDCRippleFoundation.cssClasses;

    if (unbounded) {
      this.adapter_.addClass(UNBOUNDED);
    } else {
      this.adapter_.removeClass(UNBOUNDED);
    }
  }

  handleFocus() {
    requestAnimationFrame(() => this.adapter_.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));
  }

  handleBlur() {
    requestAnimationFrame(() => this.adapter_.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED));
  }

}

var _default = MDCRippleFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/ripple/adapter.js","./constants":"node_modules/@material/ripple/constants.js","./util":"node_modules/@material/ripple/util.js"}],"node_modules/@material/ripple/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCRippleFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.util = exports.RippleCapableSurface = exports.MDCRipple = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCRippleFoundation>
 */
class MDCRipple extends _component.default {
  /** @param {...?} args */
  constructor(...args) {
    super(...args);
    /** @type {boolean} */

    this.disabled = false;
    /** @private {boolean} */

    this.unbounded_;
  }
  /**
   * @param {!Element} root
   * @param {{isUnbounded: (boolean|undefined)}=} options
   * @return {!MDCRipple}
   */


  static attachTo(root, {
    isUnbounded = undefined
  } = {}) {
    const ripple = new MDCRipple(root); // Only override unbounded behavior if option is explicitly specified

    if (isUnbounded !== undefined) {
      ripple.unbounded =
      /** @type {boolean} */
      isUnbounded;
    }

    return ripple;
  }
  /**
   * @param {!RippleCapableSurface} instance
   * @return {!MDCRippleAdapter}
   */


  static createAdapter(instance) {
    const MATCHES = util.getMatchesProperty(HTMLElement.prototype);
    return {
      browserSupportsCssVars: () => util.supportsCssVariables(window),
      isUnbounded: () => instance.unbounded,
      isSurfaceActive: () => instance.root_[MATCHES](':active'),
      isSurfaceDisabled: () => instance.disabled,
      addClass: className => instance.root_.classList.add(className),
      removeClass: className => instance.root_.classList.remove(className),
      containsEventTarget: target => instance.root_.contains(target),
      registerInteractionHandler: (evtType, handler) => instance.root_.addEventListener(evtType, handler, util.applyPassive()),
      deregisterInteractionHandler: (evtType, handler) => instance.root_.removeEventListener(evtType, handler, util.applyPassive()),
      registerDocumentInteractionHandler: (evtType, handler) => document.documentElement.addEventListener(evtType, handler, util.applyPassive()),
      deregisterDocumentInteractionHandler: (evtType, handler) => document.documentElement.removeEventListener(evtType, handler, util.applyPassive()),
      registerResizeHandler: handler => window.addEventListener('resize', handler),
      deregisterResizeHandler: handler => window.removeEventListener('resize', handler),
      updateCssVariable: (varName, value) => instance.root_.style.setProperty(varName, value),
      computeBoundingRect: () => instance.root_.getBoundingClientRect(),
      getWindowPageOffset: () => ({
        x: window.pageXOffset,
        y: window.pageYOffset
      })
    };
  }
  /** @return {boolean} */


  get unbounded() {
    return this.unbounded_;
  }
  /** @param {boolean} unbounded */


  set unbounded(unbounded) {
    this.unbounded_ = Boolean(unbounded);
    this.setUnbounded_();
  }
  /**
   * Closure Compiler throws an access control error when directly accessing a
   * protected or private property inside a getter/setter, like unbounded above.
   * By accessing the protected property inside a method, we solve that problem.
   * That's why this function exists.
   * @private
   */


  setUnbounded_() {
    this.foundation_.setUnbounded(this.unbounded_);
  }

  activate() {
    this.foundation_.activate();
  }

  deactivate() {
    this.foundation_.deactivate();
  }

  layout() {
    this.foundation_.layout();
  }
  /**
   * @return {!MDCRippleFoundation}
   * @override
   */


  getDefaultFoundation() {
    return new _foundation.default(MDCRipple.createAdapter(this));
  }
  /** @override */


  initialSyncWithDOM() {
    this.unbounded = 'mdcRippleIsUnbounded' in this.root_.dataset;
  }

}
/**
 * See Material Design spec for more details on when to use ripples.
 * https://material.io/guidelines/motion/choreography.html#choreography-creation
 * @record
 */


exports.MDCRipple = MDCRipple;

class RippleCapableSurface {}
/** @protected {!Element} */


exports.RippleCapableSurface = RippleCapableSurface;
RippleCapableSurface.prototype.root_;
/**
 * Whether or not the ripple bleeds out of the bounds of the element.
 * @type {boolean|undefined}
 */

RippleCapableSurface.prototype.unbounded;
/**
 * Whether or not the ripple is attached to a disabled component.
 * @type {boolean|undefined}
 */

RippleCapableSurface.prototype.disabled;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/ripple/adapter.js","./foundation":"node_modules/@material/ripple/foundation.js","./util":"node_modules/@material/ripple/util.js"}],"node_modules/bind-decorator/index.js":[function(require,module,exports) {
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var constants;
(function (constants) {
    constants.typeOfFunction = 'function';
    constants.boolTrue = true;
})(constants || (constants = {}));
function bind(target, propertyKey, descriptor) {
    if (!descriptor || (typeof descriptor.value !== constants.typeOfFunction)) {
        throw new TypeError("Only methods can be decorated with @bind. <" + propertyKey + "> is not a method!");
    }
    return {
        configurable: constants.boolTrue,
        get: function () {
            var bound = descriptor.value.bind(this);
            // Credits to https://github.com/andreypopp/autobind-decorator for memoizing the result of bind against a symbol on the instance.
            Object.defineProperty(this, propertyKey, {
                value: bound,
                configurable: constants.boolTrue,
                writable: constants.boolTrue
            });
            return bound;
        }
    };
}
exports.bind = bind;
exports.default = bind;

},{}],"node_modules/preact-material-components/Base/MaterialComponent.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.MaterialComponent = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _ripple = require("@material/ripple");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var doNotRemoveProps = ['disabled'];
/**
 * Base class for every Material component in this package
 * NOTE: every component should add a ref by the name of `control` to its root dom for autoInit Properties
 *
 * @export
 * @class MaterialComponent
 * @extends {Component}
 */

var MaterialComponent =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(MaterialComponent, _Component);

  function MaterialComponent() {
    (0, _classCallCheck2.default)(this, MaterialComponent);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MaterialComponent).apply(this, arguments));
  }

  (0, _createClass2.default)(MaterialComponent, [{
    key: "render",
    value: function render(props) {
      if (!this.classText) {
        this.classText = this.buildClassName(props);
      } // Fetch a VNode


      var componentProps = props;
      var userDefinedClasses = componentProps.className || componentProps.class || ''; // We delete class props and add them later in the final
      // step so every component does not need to handle user specified classes.

      if (componentProps.class) {
        delete componentProps.class;
      }

      if (componentProps.className) {
        delete componentProps.className;
      }

      var element = this.materialDom(componentProps);
      var propName = 'attributes';

      if ('props' in element) {
        propName = 'props'; // @ts-ignore

        element.props = element.props || {};
      } else {
        element.attributes = element.attributes || {};
      } // @ts-ignore


      element[propName].className = "".concat(userDefinedClasses, " ").concat(this.getClassName(element)).split(' ').filter(function (value, index, self) {
        return self.indexOf(value) === index && value !== '';
      }) // Unique + exclude empty class names
      .join(' '); // Clean this shit of proxy attributes

      this.mdcProps.forEach(function (prop) {
        // TODO: Fix this better
        if (prop in doNotRemoveProps) {
          return;
        } // @ts-ignore


        delete element[propName][prop];
      });
      return element;
    }
    /** Attach the ripple effect */

  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.ripple && this.control) {
        this.ripple = new _ripple.MDCRipple(this.control);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (this.MDComponent && this.mdcNotifyProps) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = this.mdcNotifyProps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var prop = _step.value;

            if (this.props[prop] !== nextProps[prop]) {
              this.MDComponent[prop] = nextProps[prop];
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }

      var _iteratorNormalCompletion2 = true;
      var _didIteratorError2 = false;
      var _iteratorError2 = undefined;

      try {
        for (var _iterator2 = this.mdcProps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
          var _prop = _step2.value;

          if (this.props[_prop] !== nextProps[_prop]) {
            this.classText = this.buildClassName(nextProps);
            break;
          }
        }
      } catch (err) {
        _didIteratorError2 = true;
        _iteratorError2 = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {
            _iterator2.return();
          }
        } finally {
          if (_didIteratorError2) {
            throw _iteratorError2;
          }
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.ripple) {
        this.ripple.destroy();
      }
    }
  }, {
    key: "afterComponentDidMount",
    value: function afterComponentDidMount() {
      if (this.MDComponent && this.mdcNotifyProps) {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = this.mdcNotifyProps[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var prop = _step3.value;
            this.MDComponent[prop] = this.props[prop];
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {
              _iterator3.return();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      }
    } // Shared setter for the root element ref

  }, {
    key: "setControlRef",
    value: function setControlRef(control) {
      this.control = control;
    }
    /** Build the className based on component names and mdc props */

  }, {
    key: "buildClassName",
    value: function buildClassName(props) {
      // Class name based on component name
      var classText = 'mdc-' + this.componentName; // Loop over mdcProps to turn them into classNames

      for (var propKey in props) {
        if (props.hasOwnProperty(propKey)) {
          var prop = props[propKey];

          if (typeof prop === 'boolean' && prop) {
            if (this.mdcProps.indexOf(propKey) !== -1) {
              classText += " mdc-".concat(this.componentName, "--").concat(propKey);
            }
          }
        }
      }

      return classText;
    }
    /** Returns the class name for element */

  }, {
    key: "getClassName",
    value: function getClassName(element) {
      if (!element) {
        return '';
      }

      var propName = 'attributes';

      if ('props' in element) {
        propName = 'props'; // @ts-ignore

        element.props = element.props || {};
      } else {
        element.attributes = element.attributes || {};
      } // @ts-ignore


      var attrs = element[propName] = element[propName] || {};
      var classText = this.classText;

      if (attrs.class) {
        classText += ' ' + attrs.class;
      }

      if (attrs.className && attrs.className !== attrs.class) {
        classText += ' ' + attrs.className;
      }

      return classText;
    }
  }]);
  return MaterialComponent;
}(_preact.Component);

exports.MaterialComponent = MaterialComponent;

__decorate([_bindDecorator.bind], MaterialComponent.prototype, "setControlRef", null);

var _default = MaterialComponent;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/ripple":"node_modules/@material/ripple/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js"}],"node_modules/preact-material-components/Icon/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Icon = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var Icon =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Icon, _MaterialComponent);

  function Icon() {
    var _this;

    (0, _classCallCheck2.default)(this, Icon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
    _this.componentName = 'icon';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(Icon, [{
    key: "materialDom",
    value: function materialDom(props) {
      var classes = ['material-icons']; // CardActionIcon sends className

      if (props.className) {
        classes.push(props.className);
      }

      return (0, _preact.h)("i", Object.assign({}, props, {
        className: classes.join(' ')
      }), props.children);
    }
  }]);
  return Icon;
}(_MaterialComponent2.default);

exports.Icon = Icon;
var _default = Icon;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/themeUtils/generateThemeClass.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(prop) {
  return "mdc-theme--".concat(prop, "-bg");
}

},{}],"node_modules/preact-material-components/Button/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Button = exports.ButtonIcon = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Icon2 = _interopRequireDefault(require("../Icon"));

var _generateThemeClass = _interopRequireDefault(require("../themeUtils/generateThemeClass"));

var ButtonIcon =
/*#__PURE__*/
function (_Icon) {
  (0, _inherits2.default)(ButtonIcon, _Icon);

  function ButtonIcon() {
    var _this;

    (0, _classCallCheck2.default)(this, ButtonIcon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ButtonIcon).apply(this, arguments));
    _this.componentName = 'button__icon';
    return _this;
  }

  return ButtonIcon;
}(_Icon2.default);

exports.ButtonIcon = ButtonIcon;

var Button =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Button, _MaterialComponent);

  function Button() {
    var _this2;

    (0, _classCallCheck2.default)(this, Button);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Button).apply(this, arguments));
    _this2.componentName = 'button';
    _this2.mdcProps = ['dense', 'raised', 'unelevated', 'outlined'];
    _this2.themeProps = ['primary', 'secondary'];
    return _this2;
  }

  (0, _createClass2.default)(Button, [{
    key: "materialDom",
    value: function materialDom(props) {
      var ButtonElement = props.href ? 'a' : 'button';
      var className = '';
      this.themeProps.forEach(function (themeProp) {
        if (themeProp in props && props[themeProp] !== false) {
          className += (0, _generateThemeClass.default)(themeProp) + ' ';
        }
      });
      return (0, _preact.h)(ButtonElement, Object.assign({
        ref: this.setControlRef
      }, props, {
        className: className
      }), this.props.children);
    }
  }]);
  return Button;
}(_MaterialComponent2.default);

exports.Button = Button;

var default_1 =
/*#__PURE__*/
function (_Button) {
  (0, _inherits2.default)(default_1, _Button);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Button);

exports.default = default_1;
default_1.Icon = ButtonIcon;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Icon":"node_modules/preact-material-components/Icon/index.js","../themeUtils/generateThemeClass":"node_modules/preact-material-components/themeUtils/generateThemeClass.js"}],"node_modules/@babel/runtime/helpers/superPropBase.js":[function(require,module,exports) {
var getPrototypeOf = require("./getPrototypeOf");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;
},{"./getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js"}],"node_modules/@babel/runtime/helpers/get.js":[function(require,module,exports) {
var superPropBase = require("./superPropBase");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;
},{"./superPropBase":"node_modules/@babel/runtime/helpers/superPropBase.js"}],"node_modules/@material/animation/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getCorrectEventName = getCorrectEventName;
exports.getCorrectPropertyName = getCorrectPropertyName;
exports.transformStyleProperties = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @typedef {{
 *   noPrefix: string,
 *   webkitPrefix: string,
 *   styleProperty: string
 * }}
 */
let VendorPropertyMapType;
/** @const {Object<string, !VendorPropertyMapType>} */

const eventTypeMap = {
  'animationstart': {
    noPrefix: 'animationstart',
    webkitPrefix: 'webkitAnimationStart',
    styleProperty: 'animation'
  },
  'animationend': {
    noPrefix: 'animationend',
    webkitPrefix: 'webkitAnimationEnd',
    styleProperty: 'animation'
  },
  'animationiteration': {
    noPrefix: 'animationiteration',
    webkitPrefix: 'webkitAnimationIteration',
    styleProperty: 'animation'
  },
  'transitionend': {
    noPrefix: 'transitionend',
    webkitPrefix: 'webkitTransitionEnd',
    styleProperty: 'transition'
  }
};
/** @const {Object<string, !VendorPropertyMapType>} */

const cssPropertyMap = {
  'animation': {
    noPrefix: 'animation',
    webkitPrefix: '-webkit-animation'
  },
  'transform': {
    noPrefix: 'transform',
    webkitPrefix: '-webkit-transform'
  },
  'transition': {
    noPrefix: 'transition',
    webkitPrefix: '-webkit-transition'
  }
};
/**
 * @param {!Object} windowObj
 * @return {boolean}
 */

function hasProperShape(windowObj) {
  return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';
}
/**
 * @param {string} eventType
 * @return {boolean}
 */


function eventFoundInMaps(eventType) {
  return eventType in eventTypeMap || eventType in cssPropertyMap;
}
/**
 * @param {string} eventType
 * @param {!Object<string, !VendorPropertyMapType>} map
 * @param {!Element} el
 * @return {string}
 */


function getJavaScriptEventName(eventType, map, el) {
  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
}
/**
 * Helper function to determine browser prefix for CSS3 animation events
 * and property names.
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */


function getAnimationName(windowObj, eventType) {
  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {
    return eventType;
  }

  const map =
  /** @type {!Object<string, !VendorPropertyMapType>} */
  eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;
  const el = windowObj['document']['createElement']('div');
  let eventName = '';

  if (map === eventTypeMap) {
    eventName = getJavaScriptEventName(eventType, map, el);
  } else {
    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;
  }

  return eventName;
} // Public functions to access getAnimationName() for JavaScript events or CSS
// property names.


const transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];
/**
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */

exports.transformStyleProperties = transformStyleProperties;

function getCorrectEventName(windowObj, eventType) {
  return getAnimationName(windowObj, eventType);
}
/**
 * @param {!Object} windowObj
 * @param {string} eventType
 * @return {string}
 */


function getCorrectPropertyName(windowObj, eventType) {
  return getAnimationName(windowObj, eventType);
}
},{}],"node_modules/@material/selection-control/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MDCSelectionControl = exports.MDCSelectionControlState = void 0;

var _index = require("@material/ripple/index");

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @typedef {{
 *   checked: boolean,
 *   indeterminate: boolean,
 *   disabled: boolean,
 *   value: ?string
 * }}
 */
let MDCSelectionControlState;
/**
 * @record
 */

exports.MDCSelectionControlState = MDCSelectionControlState;

class MDCSelectionControl {
  /** @return {?MDCRipple} */
  get ripple() {}

}

exports.MDCSelectionControl = MDCSelectionControl;
},{"@material/ripple/index":"node_modules/@material/ripple/index.js"}],"node_modules/@material/checkbox/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/selection-control/index");

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Checkbox. Provides an interface for managing
 * - classes
 * - dom
 * - event handlers
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCCheckboxAdapter {
  /** @param {string} className */
  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /**
   * Sets an attribute with a given value on the input element.
   * @param {string} attr
   * @param {string} value
   */


  setNativeControlAttr(attr, value) {}
  /**
   * Removes an attribute from the input element.
   * @param {string} attr
   */


  removeNativeControlAttr(attr) {}
  /** @return {!MDCSelectionControlState} */


  getNativeControl() {}

  forceLayout() {}
  /** @return {boolean} */


  isAttachedToDOM() {}

}

var _default = MDCCheckboxAdapter;
exports.default = _default;
},{"@material/selection-control/index":"node_modules/@material/selection-control/index.js"}],"node_modules/@material/checkbox/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @const {string} */
const ROOT = 'mdc-checkbox';
/** @enum {string} */

const cssClasses = {
  UPGRADED: 'mdc-checkbox--upgraded',
  CHECKED: 'mdc-checkbox--checked',
  INDETERMINATE: 'mdc-checkbox--indeterminate',
  DISABLED: 'mdc-checkbox--disabled',
  ANIM_UNCHECKED_CHECKED: 'mdc-checkbox--anim-unchecked-checked',
  ANIM_UNCHECKED_INDETERMINATE: 'mdc-checkbox--anim-unchecked-indeterminate',
  ANIM_CHECKED_UNCHECKED: 'mdc-checkbox--anim-checked-unchecked',
  ANIM_CHECKED_INDETERMINATE: 'mdc-checkbox--anim-checked-indeterminate',
  ANIM_INDETERMINATE_CHECKED: 'mdc-checkbox--anim-indeterminate-checked',
  ANIM_INDETERMINATE_UNCHECKED: 'mdc-checkbox--anim-indeterminate-unchecked'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  NATIVE_CONTROL_SELECTOR: `.${ROOT}__native-control`,
  TRANSITION_STATE_INIT: 'init',
  TRANSITION_STATE_CHECKED: 'checked',
  TRANSITION_STATE_UNCHECKED: 'unchecked',
  TRANSITION_STATE_INDETERMINATE: 'indeterminate',
  ARIA_CHECKED_ATTR: 'aria-checked',
  ARIA_CHECKED_INDETERMINATE_VALUE: 'mixed'
};
/** @enum {number} */

exports.strings = strings;
const numbers = {
  ANIM_END_LATCH_MS: 250
};
exports.numbers = numbers;
},{}],"node_modules/@material/checkbox/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _index = require("@material/selection-control/index");

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/** @const {!Array<string>} */
const CB_PROTO_PROPS = ['checked', 'indeterminate'];
/**
 * @extends {MDCFoundation<!MDCCheckboxAdapter>}
 */

class MDCCheckboxFoundation extends _foundation.default {
  /** @return enum {cssClasses} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {strings} */


  static get strings() {
    return _constants.strings;
  }
  /** @return enum {numbers} */


  static get numbers() {
    return _constants.numbers;
  }
  /** @return {!MDCCheckboxAdapter} */


  static get defaultAdapter() {
    return (
      /** @type {!MDCCheckboxAdapter} */
      {
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        setNativeControlAttr: () =>
        /* attr: string, value: string */
        {},
        removeNativeControlAttr: () =>
        /* attr: string */
        {},
        getNativeControl: () =>
        /* !MDCSelectionControlState */
        {},
        forceLayout: () => {},
        isAttachedToDOM: () =>
        /* boolean */
        {}
      }
    );
  }

  constructor(adapter) {
    super(Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter));
    /** @private {string} */

    this.currentCheckState_ = _constants.strings.TRANSITION_STATE_INIT;
    /** @private {string} */

    this.currentAnimationClass_ = '';
    /** @private {number} */

    this.animEndLatchTimer_ = 0;
    /** @private {boolean} */

    this.enableAnimationEndHandler_ = false;
  }
  /** @override */


  init() {
    this.currentCheckState_ = this.determineCheckState_(this.getNativeControl_());
    this.updateAriaChecked_();
    this.adapter_.addClass(_constants.cssClasses.UPGRADED);
    this.installPropertyChangeHooks_();
  }
  /** @override */


  destroy() {
    this.uninstallPropertyChangeHooks_();
  }
  /** @return {boolean} */


  isChecked() {
    return this.getNativeControl_().checked;
  }
  /** @param {boolean} checked */


  setChecked(checked) {
    this.getNativeControl_().checked = checked;
  }
  /** @return {boolean} */


  isIndeterminate() {
    return this.getNativeControl_().indeterminate;
  }
  /** @param {boolean} indeterminate */


  setIndeterminate(indeterminate) {
    this.getNativeControl_().indeterminate = indeterminate;
  }
  /** @return {boolean} */


  isDisabled() {
    return this.getNativeControl_().disabled;
  }
  /** @param {boolean} disabled */


  setDisabled(disabled) {
    this.getNativeControl_().disabled = disabled;

    if (disabled) {
      this.adapter_.addClass(_constants.cssClasses.DISABLED);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.DISABLED);
    }
  }
  /** @return {?string} */


  getValue() {
    return this.getNativeControl_().value;
  }
  /** @param {?string} value */


  setValue(value) {
    this.getNativeControl_().value = value;
  }
  /**
   * Handles the animationend event for the checkbox
   */


  handleAnimationEnd() {
    if (!this.enableAnimationEndHandler_) return;
    clearTimeout(this.animEndLatchTimer_);
    this.animEndLatchTimer_ = setTimeout(() => {
      this.adapter_.removeClass(this.currentAnimationClass_);
      this.enableAnimationEndHandler_ = false;
    }, _constants.numbers.ANIM_END_LATCH_MS);
  }
  /**
   * Handles the change event for the checkbox
   */


  handleChange() {
    this.transitionCheckState_();
  }
  /** @private */


  installPropertyChangeHooks_() {
    const nativeCb = this.getNativeControl_();
    const cbProto = Object.getPrototypeOf(nativeCb);
    CB_PROTO_PROPS.forEach(controlState => {
      const desc = Object.getOwnPropertyDescriptor(cbProto, controlState); // We have to check for this descriptor, since some browsers (Safari) don't support its return.
      // See: https://bugs.webkit.org/show_bug.cgi?id=49739

      if (validDescriptor(desc)) {
        const nativeCbDesc =
        /** @type {!ObjectPropertyDescriptor} */
        {
          get: desc.get,
          set: state => {
            desc.set.call(nativeCb, state);
            this.transitionCheckState_();
          },
          configurable: desc.configurable,
          enumerable: desc.enumerable
        };
        Object.defineProperty(nativeCb, controlState, nativeCbDesc);
      }
    });
  }
  /** @private */


  uninstallPropertyChangeHooks_() {
    const nativeCb = this.getNativeControl_();
    const cbProto = Object.getPrototypeOf(nativeCb);
    CB_PROTO_PROPS.forEach(controlState => {
      const desc =
      /** @type {!ObjectPropertyDescriptor} */
      Object.getOwnPropertyDescriptor(cbProto, controlState);

      if (validDescriptor(desc)) {
        Object.defineProperty(nativeCb, controlState, desc);
      }
    });
  }
  /** @private */


  transitionCheckState_() {
    const nativeCb = this.adapter_.getNativeControl();

    if (!nativeCb) {
      return;
    }

    const oldState = this.currentCheckState_;
    const newState = this.determineCheckState_(nativeCb);

    if (oldState === newState) {
      return;
    }

    this.updateAriaChecked_(); // Check to ensure that there isn't a previously existing animation class, in case for example
    // the user interacted with the checkbox before the animation was finished.

    if (this.currentAnimationClass_.length > 0) {
      clearTimeout(this.animEndLatchTimer_);
      this.adapter_.forceLayout();
      this.adapter_.removeClass(this.currentAnimationClass_);
    }

    this.currentAnimationClass_ = this.getTransitionAnimationClass_(oldState, newState);
    this.currentCheckState_ = newState; // Check for parentNode so that animations are only run when the element is attached
    // to the DOM.

    if (this.adapter_.isAttachedToDOM() && this.currentAnimationClass_.length > 0) {
      this.adapter_.addClass(this.currentAnimationClass_);
      this.enableAnimationEndHandler_ = true;
    }
  }
  /**
   * @param {!MDCSelectionControlState} nativeCb
   * @return {string}
   * @private
   */


  determineCheckState_(nativeCb) {
    const {
      TRANSITION_STATE_INDETERMINATE,
      TRANSITION_STATE_CHECKED,
      TRANSITION_STATE_UNCHECKED
    } = _constants.strings;

    if (nativeCb.indeterminate) {
      return TRANSITION_STATE_INDETERMINATE;
    }

    return nativeCb.checked ? TRANSITION_STATE_CHECKED : TRANSITION_STATE_UNCHECKED;
  }
  /**
   * @param {string} oldState
   * @param {string} newState
   * @return {string}
   */


  getTransitionAnimationClass_(oldState, newState) {
    const {
      TRANSITION_STATE_INIT,
      TRANSITION_STATE_CHECKED,
      TRANSITION_STATE_UNCHECKED
    } = _constants.strings;
    const {
      ANIM_UNCHECKED_CHECKED,
      ANIM_UNCHECKED_INDETERMINATE,
      ANIM_CHECKED_UNCHECKED,
      ANIM_CHECKED_INDETERMINATE,
      ANIM_INDETERMINATE_CHECKED,
      ANIM_INDETERMINATE_UNCHECKED
    } = MDCCheckboxFoundation.cssClasses;

    switch (oldState) {
      case TRANSITION_STATE_INIT:
        if (newState === TRANSITION_STATE_UNCHECKED) {
          return '';
        }

      // fallthrough

      case TRANSITION_STATE_UNCHECKED:
        return newState === TRANSITION_STATE_CHECKED ? ANIM_UNCHECKED_CHECKED : ANIM_UNCHECKED_INDETERMINATE;

      case TRANSITION_STATE_CHECKED:
        return newState === TRANSITION_STATE_UNCHECKED ? ANIM_CHECKED_UNCHECKED : ANIM_CHECKED_INDETERMINATE;
      // TRANSITION_STATE_INDETERMINATE

      default:
        return newState === TRANSITION_STATE_CHECKED ? ANIM_INDETERMINATE_CHECKED : ANIM_INDETERMINATE_UNCHECKED;
    }
  }

  updateAriaChecked_() {
    // Ensure aria-checked is set to mixed if checkbox is in indeterminate state.
    if (this.isIndeterminate()) {
      this.adapter_.setNativeControlAttr(_constants.strings.ARIA_CHECKED_ATTR, _constants.strings.ARIA_CHECKED_INDETERMINATE_VALUE);
    } else {
      // The on/off state does not need to keep track of aria-checked, since
      // the screenreader uses the checked property on the checkbox element.
      this.adapter_.removeNativeControlAttr(_constants.strings.ARIA_CHECKED_ATTR);
    }
  }
  /**
   * @return {!MDCSelectionControlState}
   * @private
   */


  getNativeControl_() {
    return this.adapter_.getNativeControl() || {
      checked: false,
      indeterminate: false,
      disabled: false,
      value: null
    };
  }

}
/**
 * @param {ObjectPropertyDescriptor|undefined} inputPropDesc
 * @return {boolean}
 */


function validDescriptor(inputPropDesc) {
  return !!inputPropDesc && typeof inputPropDesc.set === 'function';
}

var _default = MDCCheckboxFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","@material/selection-control/index":"node_modules/@material/selection-control/index.js","./adapter":"node_modules/@material/checkbox/adapter.js","./constants":"node_modules/@material/checkbox/constants.js"}],"node_modules/@material/checkbox/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCCheckboxFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCCheckbox = void 0;

var _index = require("@material/animation/index");

var _component = _interopRequireDefault(require("@material/base/component"));

var _index2 = require("@material/selection-control/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var _index3 = require("@material/ripple/index");

var _util = require("@material/ripple/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends MDCComponent<!MDCCheckboxFoundation>
 * @implements {MDCSelectionControl}
 */
class MDCCheckbox extends _component.default {
  static attachTo(root) {
    return new MDCCheckbox(root);
  }
  /**
   * Returns the state of the native control element, or null if the native control element is not present.
   * @return {?MDCSelectionControlState}
   * @private
   */


  get nativeCb_() {
    const {
      NATIVE_CONTROL_SELECTOR
    } = _foundation.default.strings;
    const cbEl =
    /** @type {?MDCSelectionControlState} */
    this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
    return cbEl;
  }

  constructor(...args) {
    super(...args);
    /** @private {!MDCRipple} */

    this.ripple_ = this.initRipple_();
    /** @private {!Function} */

    this.handleChange_;
    /** @private {!Function} */

    this.handleAnimationEnd_;
  }

  initialSyncWithDOM() {
    this.handleChange_ = () => this.foundation_.handleChange();

    this.handleAnimationEnd_ = () => this.foundation_.handleAnimationEnd();

    this.nativeCb_.addEventListener('change', this.handleChange_);
    this.listen((0, _index.getCorrectEventName)(window, 'animationend'), this.handleAnimationEnd_);
  }
  /**
   * @return {!MDCRipple}
   * @private
   */


  initRipple_() {
    const MATCHES = (0, _util.getMatchesProperty)(HTMLElement.prototype);
    const adapter = Object.assign(_index3.MDCRipple.createAdapter(this), {
      isUnbounded: () => true,
      isSurfaceActive: () => this.nativeCb_[MATCHES](':active'),
      registerInteractionHandler: (type, handler) => this.nativeCb_.addEventListener(type, handler),
      deregisterInteractionHandler: (type, handler) => this.nativeCb_.removeEventListener(type, handler)
    });
    const foundation = new _index3.MDCRippleFoundation(adapter);
    return new _index3.MDCRipple(this.root_, foundation);
  }
  /** @return {!MDCCheckboxFoundation} */


  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      setNativeControlAttr: (attr, value) => this.nativeCb_.setAttribute(attr, value),
      removeNativeControlAttr: attr => this.nativeCb_.removeAttribute(attr),
      getNativeControl: () => this.nativeCb_,
      forceLayout: () => this.root_.offsetWidth,
      isAttachedToDOM: () => Boolean(this.root_.parentNode)
    });
  }
  /** @return {!MDCRipple} */


  get ripple() {
    return this.ripple_;
  }
  /** @return {boolean} */


  get checked() {
    return this.foundation_.isChecked();
  }
  /** @param {boolean} checked */


  set checked(checked) {
    this.foundation_.setChecked(checked);
  }
  /** @return {boolean} */


  get indeterminate() {
    return this.foundation_.isIndeterminate();
  }
  /** @param {boolean} indeterminate */


  set indeterminate(indeterminate) {
    this.foundation_.setIndeterminate(indeterminate);
  }
  /** @return {boolean} */


  get disabled() {
    return this.foundation_.isDisabled();
  }
  /** @param {boolean} disabled */


  set disabled(disabled) {
    this.foundation_.setDisabled(disabled);
  }
  /** @return {?string} */


  get value() {
    return this.foundation_.getValue();
  }
  /** @param {?string} value */


  set value(value) {
    this.foundation_.setValue(value);
  }

  destroy() {
    this.ripple_.destroy();
    this.nativeCb_.removeEventListener('change', this.handleChange_);
    this.unlisten((0, _index.getCorrectEventName)(window, 'animationend'), this.handleAnimationEnd_);
    super.destroy();
  }

}

exports.MDCCheckbox = MDCCheckbox;
},{"@material/animation/index":"node_modules/@material/animation/index.js","@material/base/component":"node_modules/@material/base/component.js","@material/selection-control/index":"node_modules/@material/selection-control/index.js","./foundation":"node_modules/@material/checkbox/foundation.js","@material/ripple/index":"node_modules/@material/ripple/index.js","@material/ripple/util":"node_modules/@material/ripple/util.js"}],"node_modules/preact-material-components/Checkbox/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Checkbox = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _checkbox = require("@material/checkbox/");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var Checkbox =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Checkbox, _MaterialComponent);

  function Checkbox() {
    var _this;

    (0, _classCallCheck2.default)(this, Checkbox);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Checkbox).apply(this, arguments));
    _this.componentName = 'checkbox';
    _this.mdcProps = ['disabled'];
    _this.mdcNotifyProps = ['checked', 'indeterminate', 'disabled'];
    return _this;
  }

  (0, _createClass2.default)(Checkbox, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Checkbox.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _checkbox.MDCCheckbox(this.control);
      }

      this.afterComponentDidMount();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Checkbox.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      return (0, _preact.h)("div", {
        ref: this.setControlRef
      }, (0, _preact.h)("input", Object.assign({
        type: "checkbox",
        className: "mdc-checkbox__native-control"
      }, allprops)), (0, _preact.h)("div", {
        className: "mdc-checkbox__background"
      }, (0, _preact.h)("svg", {
        version: "1.1",
        className: "mdc-checkbox__checkmark",
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24"
      }, (0, _preact.h)("path", {
        className: "mdc-checkbox__checkmark-path",
        fill: "none",
        stroke: "white",
        d: "M1.73,12.91 8.1,19.28 22.79,4.59"
      })), (0, _preact.h)("div", {
        className: "mdc-checkbox__mixedmark"
      })));
    }
  }]);
  return Checkbox;
}(_MaterialComponent2.default);

exports.Checkbox = Checkbox;
var _default = Checkbox;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/checkbox/":"node_modules/@material/checkbox/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/Fab/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Fab = exports.FabIcon = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Icon2 = _interopRequireDefault(require("../Icon"));

var _generateThemeClass = _interopRequireDefault(require("../themeUtils/generateThemeClass"));

var FabIcon =
/*#__PURE__*/
function (_Icon) {
  (0, _inherits2.default)(FabIcon, _Icon);

  function FabIcon() {
    var _this;

    (0, _classCallCheck2.default)(this, FabIcon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FabIcon).apply(this, arguments));
    _this.componentName = 'fab__icon';
    return _this;
  }

  return FabIcon;
}(_Icon2.default);

exports.FabIcon = FabIcon;

var Fab =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Fab, _MaterialComponent);

  function Fab() {
    var _this2;

    (0, _classCallCheck2.default)(this, Fab);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Fab).apply(this, arguments));
    _this2.componentName = 'fab';
    _this2.mdcProps = ['mini', 'exited'];
    _this2.themeProps = ['primary', 'secondary'];
    return _this2;
  }

  (0, _createClass2.default)(Fab, [{
    key: "materialDom",
    value: function materialDom(props) {
      var classNames = [];
      this.themeProps.forEach(function (themeProp) {
        if (themeProp in props && props[themeProp] !== false) {
          classNames.push((0, _generateThemeClass.default)(themeProp));
        }
      });
      return (0, _preact.h)("button", Object.assign({
        ref: this.setControlRef
      }, props, {
        className: classNames.join(' ')
      }), props.children);
    }
  }]);
  return Fab;
}(_MaterialComponent2.default);

exports.Fab = Fab;

var default_1 =
/*#__PURE__*/
function (_Fab) {
  (0, _inherits2.default)(default_1, _Fab);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Fab);

exports.default = default_1;
default_1.Icon = FabIcon;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Icon":"node_modules/preact-material-components/Icon/index.js","../themeUtils/generateThemeClass":"node_modules/preact-material-components/themeUtils/generateThemeClass.js"}],"node_modules/@material/icon-button/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconButtonToggleEvent = exports.MDCIconButtonToggleAdapter = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Icon Button Toggle. Provides an interface for managing
 * - classes
 * - dom
 * - inner text
 * - event handlers
 * - event dispatch
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCIconButtonToggleAdapter {
  /** @param {string} className */
  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /**
   * @param {string} className
   * @return {boolean}
   * */


  hasClass(className) {}
  /**
   * @param {string} attrName
   * @param {string} attrValue
   */


  setAttr(attrName, attrValue) {}
  /** @param {!IconButtonToggleEvent} evtData */


  notifyChange(evtData) {}

}
/**
 * @typedef {{
 *   isOn: boolean,
 * }}
 */


exports.MDCIconButtonToggleAdapter = MDCIconButtonToggleAdapter;
let IconButtonToggleEvent;
exports.IconButtonToggleEvent = IconButtonToggleEvent;
},{}],"node_modules/@material/icon-button/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ROOT: 'mdc-icon-button',
  ICON_BUTTON_ON: 'mdc-icon-button--on'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  ARIA_PRESSED: 'aria-pressed',
  ARIA_LABEL: 'aria-label',
  CHANGE_EVENT: 'MDCIconButtonToggle:change'
};
exports.strings = strings;
},{}],"node_modules/@material/icon-button/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = require("./adapter");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCIconButtonToggleAdapter>}
 */
class MDCIconButtonToggleFoundation extends _foundation.default {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get defaultAdapter() {
    return {
      addClass: () => {},
      removeClass: () => {},
      hasClass: () => {},
      setAttr: () => {},
      notifyChange: () => {}
    };
  }

  constructor(adapter) {
    super(Object.assign(MDCIconButtonToggleFoundation.defaultAdapter, adapter));
    /** @private {boolean} */

    this.disabled_ = false;
  }

  init() {
    this.adapter_.setAttr(_constants.strings.ARIA_PRESSED, `${this.isOn()}`);
  }

  handleClick() {
    this.toggle();
    this.adapter_.notifyChange(
    /** @type {!IconButtonToggleEvent} */
    {
      isOn: this.isOn()
    });
  }
  /** @return {boolean} */


  isOn() {
    return this.adapter_.hasClass(_constants.cssClasses.ICON_BUTTON_ON);
  }
  /** @param {boolean=} isOn */


  toggle(isOn = !this.isOn()) {
    if (isOn) {
      this.adapter_.addClass(_constants.cssClasses.ICON_BUTTON_ON);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.ICON_BUTTON_ON);
    }

    this.adapter_.setAttr(_constants.strings.ARIA_PRESSED, `${isOn}`);
  }

}
/** @record */


class IconButtonToggleState {}

var _default = MDCIconButtonToggleFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/icon-button/adapter.js","./constants":"node_modules/@material/icon-button/constants.js"}],"node_modules/@material/icon-button/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCIconButtonToggleFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCIconButtonToggle = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _foundation = _interopRequireDefault(require("./foundation"));

var _index = require("@material/ripple/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCIconButtonToggleFoundation>}
 */
class MDCIconButtonToggle extends _component.default {
  static attachTo(root) {
    return new MDCIconButtonToggle(root);
  }

  constructor(...args) {
    super(...args);
    /** @private {!MDCRipple} */

    this.ripple_ = this.initRipple_();
    /** @private {!Function} */

    this.handleClick_;
  }
  /**
   * @return {!MDCRipple}
   * @private
   */


  initRipple_() {
    const ripple = new _index.MDCRipple(this.root_);
    ripple.unbounded = true;
    return ripple;
  }

  destroy() {
    this.root_.removeEventListener('click', this.handleClick_);
    this.ripple_.destroy();
    super.destroy();
  }
  /** @return {!MDCIconButtonToggleFoundation} */


  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      setAttr: (attrName, attrValue) => this.root_.setAttribute(attrName, attrValue),
      notifyChange: evtData => this.emit(_foundation.default.strings.CHANGE_EVENT, evtData)
    });
  }

  initialSyncWithDOM() {
    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
    this.root_.addEventListener('click', this.handleClick_);
  }
  /** @return {!MDCRipple} */


  get ripple() {
    return this.ripple_;
  }
  /** @return {boolean} */


  get on() {
    return this.foundation_.isOn();
  }
  /** @param {boolean} isOn */


  set on(isOn) {
    this.foundation_.toggle(isOn);
  }

}

exports.MDCIconButtonToggle = MDCIconButtonToggle;
},{"@material/base/component":"node_modules/@material/base/component.js","./foundation":"node_modules/@material/icon-button/foundation.js","@material/ripple/index":"node_modules/@material/ripple/index.js"}],"node_modules/preact-material-components/IconButton/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.IconButton = exports.Icon = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _iconButton = require("@material/icon-button");

var _preact = require("preact");

var _MaterialComponent3 = _interopRequireDefault(require("../Base/MaterialComponent"));

var Icon =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Icon, _MaterialComponent);

  function Icon() {
    var _this;

    (0, _classCallCheck2.default)(this, Icon);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Icon).apply(this, arguments));
    _this.componentName = 'icon-button__icon';
    _this.mdcProps = ['on'];
    return _this;
  }

  (0, _createClass2.default)(Icon, [{
    key: "materialDom",
    value: function materialDom(props) {
      var IconElement = props.element || 'i';
      return (0, _preact.h)(IconElement, Object.assign({
        class: "material-icons"
      }, props), props.children);
    }
  }]);
  return Icon;
}(_MaterialComponent3.default);

exports.Icon = Icon;

var IconButton =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(IconButton, _MaterialComponent2);

  function IconButton() {
    var _this2;

    (0, _classCallCheck2.default)(this, IconButton);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconButton).apply(this, arguments));
    _this2.componentName = 'icon-button';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(IconButton, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(IconButton.prototype), "componentDidMount", this).call(this);
      this.MDComponent = new _iconButton.MDCIconButtonToggle(this.control);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(IconButton.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("button", Object.assign({
        ref: this.setControlRef
      }, props), this.props.children);
    }
  }]);
  return IconButton;
}(_MaterialComponent3.default);

exports.IconButton = IconButton;

var default_1 =
/*#__PURE__*/
function (_IconButton) {
  (0, _inherits2.default)(default_1, _IconButton);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(IconButton);

exports.default = default_1;
default_1.Icon = Icon;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/icon-button":"node_modules/@material/icon-button/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/switch/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Switch. Provides an interface for managing
 * - classes
 * - dom
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCSwitchAdapter {
  /** @param {string} className */
  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /** @param {boolean} checked */


  setNativeControlChecked(checked) {}
  /** @param {boolean} disabled */


  setNativeControlDisabled(disabled) {}

}

var _default = MDCSwitchAdapter;
exports.default = _default;
},{}],"node_modules/@material/switch/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  CHECKED: 'mdc-switch--checked',
  DISABLED: 'mdc-switch--disabled'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  NATIVE_CONTROL_SELECTOR: '.mdc-switch__native-control',
  RIPPLE_SURFACE_SELECTOR: '.mdc-switch__thumb-underlay'
};
exports.strings = strings;
},{}],"node_modules/@material/switch/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-enable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCSwitchAdapter>}
 */
class MDCSwitchFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return {!MDCSwitchAdapter} */


  static get defaultAdapter() {
    return (
      /** @type {!MDCSwitchAdapter} */
      {
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        setNativeControlChecked: () =>
        /* checked: boolean */
        {},
        setNativeControlDisabled: () =>
        /* disabled: boolean */
        {}
      }
    );
  }

  constructor(adapter) {
    super(Object.assign(MDCSwitchFoundation.defaultAdapter, adapter));
  }
  /** @param {boolean} checked */


  setChecked(checked) {
    this.adapter_.setNativeControlChecked(checked);
    this.updateCheckedStyling_(checked);
  }
  /** @param {boolean} disabled */


  setDisabled(disabled) {
    this.adapter_.setNativeControlDisabled(disabled);

    if (disabled) {
      this.adapter_.addClass(_constants.cssClasses.DISABLED);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.DISABLED);
    }
  }
  /**
   * Handles the change event for the switch native control.
   * @param {!Event} evt
   */


  handleChange(evt) {
    this.updateCheckedStyling_(evt.target.checked);
  }
  /**
   * Updates the styling of the switch based on its checked state.
   * @param {boolean} checked
   * @private
   */


  updateCheckedStyling_(checked) {
    if (checked) {
      this.adapter_.addClass(_constants.cssClasses.CHECKED);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.CHECKED);
    }
  }

}

var _default = MDCSwitchFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/switch/adapter.js","./constants":"node_modules/@material/switch/constants.js"}],"node_modules/@material/switch/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCSwitchFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCSwitch = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _index = require("@material/selection-control/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var _index2 = require("@material/ripple/index");

var _util = require("@material/ripple/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends MDCComponent<!MDCSwitchFoundation>
 * @implements {MDCSelectionControl}
 */
class MDCSwitch extends _component.default {
  static attachTo(root) {
    return new MDCSwitch(root);
  }

  constructor(...args) {
    super(...args);
    /** @private {!MDCRipple} */

    this.ripple_ = this.initRipple_();
    /** @private {!Function} */

    this.changeHandler_;
  }

  destroy() {
    super.destroy();
    this.ripple_.destroy();
    this.nativeControl_.removeEventListener('change', this.changeHandler_);
  }

  initialSyncWithDOM() {
    this.changeHandler_ = this.foundation_.handleChange.bind(this.foundation_);
    this.nativeControl_.addEventListener('change', this.changeHandler_); // Sometimes the checked state of the input element is saved in the history.
    // The switch styling should match the checked state of the input element.
    // Do an initial sync between the native control and the foundation.

    this.checked = this.checked;
  }
  /**
   * Returns the state of the native control element, or null if the native control element is not present.
   * @return {?MDCSelectionControlState}
   * @private
   */


  get nativeControl_() {
    const {
      NATIVE_CONTROL_SELECTOR
    } = _foundation.default.strings;
    const el =
    /** @type {?MDCSelectionControlState} */
    this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
    return el;
  }
  /**
   * @return {!MDCRipple}
   * @private
   */


  initRipple_() {
    const {
      RIPPLE_SURFACE_SELECTOR
    } = _foundation.default.strings;
    const rippleSurface =
    /** @type {!Element} */
    this.root_.querySelector(RIPPLE_SURFACE_SELECTOR);
    const MATCHES = (0, _util.getMatchesProperty)(HTMLElement.prototype);
    const adapter = Object.assign(_index2.MDCRipple.createAdapter(this), {
      isUnbounded: () => true,
      isSurfaceActive: () => this.nativeControl_[MATCHES](':active'),
      addClass: className => rippleSurface.classList.add(className),
      removeClass: className => rippleSurface.classList.remove(className),
      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),
      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler),
      updateCssVariable: (varName, value) => rippleSurface.style.setProperty(varName, value),
      computeBoundingRect: () => rippleSurface.getBoundingClientRect()
    });
    const foundation = new _index2.MDCRippleFoundation(adapter);
    return new _index2.MDCRipple(this.root_, foundation);
  }
  /** @return {!MDCSwitchFoundation} */


  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      setNativeControlChecked: checked => this.nativeControl_.checked = checked,
      setNativeControlDisabled: disabled => this.nativeControl_.disabled = disabled
    });
  }
  /** @return {!MDCRipple} */


  get ripple() {
    return this.ripple_;
  }
  /** @return {boolean} */


  get checked() {
    return this.nativeControl_.checked;
  }
  /** @param {boolean} checked */


  set checked(checked) {
    this.foundation_.setChecked(checked);
  }
  /** @return {boolean} */


  get disabled() {
    return this.nativeControl_.disabled;
  }
  /** @param {boolean} disabled */


  set disabled(disabled) {
    this.foundation_.setDisabled(disabled);
  }

}

exports.MDCSwitch = MDCSwitch;
},{"@material/base/component":"node_modules/@material/base/component.js","@material/selection-control/index":"node_modules/@material/selection-control/index.js","./foundation":"node_modules/@material/switch/foundation.js","@material/ripple/index":"node_modules/@material/ripple/index.js","@material/ripple/util":"node_modules/@material/ripple/util.js"}],"node_modules/preact-material-components/Switch/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Switch = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _switch = require("@material/switch");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Switch =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Switch, _MaterialComponent);

  function Switch() {
    var _this;

    (0, _classCallCheck2.default)(this, Switch);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Switch).apply(this, arguments));
    _this.componentName = 'switch';
    _this.mdcProps = ['disabled', 'checked'];
    _this.mdcNotifyProps = ['disabled', 'checked'];
    return _this;
  }

  (0, _createClass2.default)(Switch, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Switch.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _switch.MDCSwitch(this.control);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Switch.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var className = allprops.className,
          props = __rest(allprops, ["className"]);

      return (0, _preact.h)("div", {
        className: className,
        ref: this.setControlRef
      }, (0, _preact.h)("div", {
        class: "mdc-switch__track"
      }), (0, _preact.h)("div", {
        class: "mdc-switch__thumb-underlay"
      }, (0, _preact.h)("div", {
        class: "mdc-switch__thumb"
      }, (0, _preact.h)("input", Object.assign({
        type: "checkbox",
        id: "basic-switch",
        class: "mdc-switch__native-control",
        role: "switch"
      }, props)))));
    }
  }]);
  return Switch;
}(_MaterialComponent2.default);

exports.Switch = Switch;
var _default = Switch;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/switch":"node_modules/@material/switch/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/base/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
Object.defineProperty(exports, "MDCComponent", {
  enumerable: true,
  get: function () {
    return _component.default;
  }
});

var _foundation = _interopRequireDefault(require("./foundation"));

var _component = _interopRequireDefault(require("./component"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./foundation":"node_modules/@material/base/foundation.js","./component":"node_modules/@material/base/component.js"}],"node_modules/@material/snackbar/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const cssClasses = {
  ROOT: 'mdc-snackbar',
  TEXT: 'mdc-snackbar__text',
  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',
  ACTION_BUTTON: 'mdc-snackbar__action-button',
  ACTIVE: 'mdc-snackbar--active',
  MULTILINE: 'mdc-snackbar--multiline',
  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom'
};
exports.cssClasses = cssClasses;
const strings = {
  TEXT_SELECTOR: '.mdc-snackbar__text',
  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',
  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',
  SHOW_EVENT: 'MDCSnackbar:show',
  HIDE_EVENT: 'MDCSnackbar:hide'
};
exports.strings = strings;
const numbers = {
  MESSAGE_TIMEOUT: 2750
};
exports.numbers = numbers;
},{}],"node_modules/@material/snackbar/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/base/index");

var _constants = require("./constants");

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCSnackbarFoundation extends _index.MDCFoundation {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get defaultAdapter() {
    return {
      addClass: () =>
      /* className: string */
      {},
      removeClass: () =>
      /* className: string */
      {},
      setAriaHidden: () => {},
      unsetAriaHidden: () => {},
      setActionAriaHidden: () => {},
      unsetActionAriaHidden: () => {},
      setActionText: () =>
      /* actionText: string */
      {},
      setMessageText: () =>
      /* message: string */
      {},
      setFocus: () => {},
      isFocused: () =>
      /* boolean */
      false,
      visibilityIsHidden: () =>
      /* boolean */
      false,
      registerCapturedBlurHandler: () =>
      /* handler: EventListener */
      {},
      deregisterCapturedBlurHandler: () =>
      /* handler: EventListener */
      {},
      registerVisibilityChangeHandler: () =>
      /* handler: EventListener */
      {},
      deregisterVisibilityChangeHandler: () =>
      /* handler: EventListener */
      {},
      registerCapturedInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      deregisterCapturedInteractionHandler: () =>
      /* evtType: string, handler: EventListener */
      {},
      registerActionClickHandler: () =>
      /* handler: EventListener */
      {},
      deregisterActionClickHandler: () =>
      /* handler: EventListener */
      {},
      registerTransitionEndHandler: () =>
      /* handler: EventListener */
      {},
      deregisterTransitionEndHandler: () =>
      /* handler: EventListener */
      {},
      notifyShow: () => {},
      notifyHide: () => {}
    };
  }

  get active() {
    return this.active_;
  }

  constructor(adapter) {
    super(Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter));
    this.active_ = false;
    this.actionWasClicked_ = false;
    this.dismissOnAction_ = true;
    this.firstFocus_ = true;
    this.pointerDownRecognized_ = false;
    this.snackbarHasFocus_ = false;
    this.snackbarData_ = null;
    this.queue_ = [];

    this.actionClickHandler_ = () => {
      this.actionWasClicked_ = true;
      this.invokeAction_();
    };

    this.visibilitychangeHandler_ = () => {
      clearTimeout(this.timeoutId_);
      this.snackbarHasFocus_ = true;

      if (!this.adapter_.visibilityIsHidden()) {
        setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || _constants.numbers.MESSAGE_TIMEOUT);
      }
    };

    this.interactionHandler_ = evt => {
      if (evt.type === 'focus' && !this.adapter_.isFocused()) {
        return;
      }

      if (evt.type === 'touchstart' || evt.type === 'mousedown') {
        this.pointerDownRecognized_ = true;
      }

      this.handlePossibleTabKeyboardFocus_(evt);

      if (evt.type === 'focus') {
        this.pointerDownRecognized_ = false;
      }
    };

    this.blurHandler_ = () => {
      clearTimeout(this.timeoutId_);
      this.snackbarHasFocus_ = false;
      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || _constants.numbers.MESSAGE_TIMEOUT);
    };
  }

  init() {
    this.adapter_.registerActionClickHandler(this.actionClickHandler_);
    this.adapter_.setAriaHidden();
    this.adapter_.setActionAriaHidden();
  }

  destroy() {
    this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);
    this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);
    this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);
    ['touchstart', 'mousedown', 'focus'].forEach(evtType => {
      this.adapter_.deregisterCapturedInteractionHandler(evtType, this.interactionHandler_);
    });
  }

  dismissesOnAction() {
    return this.dismissOnAction_;
  }

  setDismissOnAction(dismissOnAction) {
    this.dismissOnAction_ = !!dismissOnAction;
  }

  show(data) {
    if (!data) {
      throw new Error('Please provide a data object with at least a message to display.');
    }

    if (!data.message) {
      throw new Error('Please provide a message to be displayed.');
    }

    if (data.actionHandler && !data.actionText) {
      throw new Error('Please provide action text with the handler.');
    }

    if (this.active) {
      this.queue_.push(data);
      return;
    }

    clearTimeout(this.timeoutId_);
    this.snackbarData_ = data;
    this.firstFocus_ = true;
    this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);
    this.adapter_.registerCapturedBlurHandler(this.blurHandler_);
    ['touchstart', 'mousedown', 'focus'].forEach(evtType => {
      this.adapter_.registerCapturedInteractionHandler(evtType, this.interactionHandler_);
    });
    const {
      ACTIVE,
      MULTILINE,
      ACTION_ON_BOTTOM
    } = _constants.cssClasses;
    this.adapter_.setMessageText(this.snackbarData_.message);

    if (this.snackbarData_.multiline) {
      this.adapter_.addClass(MULTILINE);

      if (this.snackbarData_.actionOnBottom) {
        this.adapter_.addClass(ACTION_ON_BOTTOM);
      }
    }

    if (this.snackbarData_.actionHandler) {
      this.adapter_.setActionText(this.snackbarData_.actionText);
      this.actionHandler_ = this.snackbarData_.actionHandler;
      this.setActionHidden_(false);
    } else {
      this.setActionHidden_(true);
      this.actionHandler_ = null;
      this.adapter_.setActionText(null);
    }

    this.active_ = true;
    this.adapter_.addClass(ACTIVE);
    this.adapter_.unsetAriaHidden();
    this.adapter_.notifyShow();
    this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || _constants.numbers.MESSAGE_TIMEOUT);
  }

  handlePossibleTabKeyboardFocus_() {
    const hijackFocus = this.firstFocus_ && !this.pointerDownRecognized_;

    if (hijackFocus) {
      this.setFocusOnAction_();
    }

    this.firstFocus_ = false;
  }

  setFocusOnAction_() {
    this.adapter_.setFocus();
    this.snackbarHasFocus_ = true;
    this.firstFocus_ = false;
  }

  invokeAction_() {
    try {
      if (!this.actionHandler_) {
        return;
      }

      this.actionHandler_();
    } finally {
      if (this.dismissOnAction_) {
        this.cleanup_();
      }
    }
  }

  cleanup_() {
    const allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;

    if (allowDismissal) {
      const {
        ACTIVE,
        MULTILINE,
        ACTION_ON_BOTTOM
      } = _constants.cssClasses;
      this.adapter_.removeClass(ACTIVE);

      const handler = () => {
        clearTimeout(this.timeoutId_);
        this.adapter_.deregisterTransitionEndHandler(handler);
        this.adapter_.removeClass(MULTILINE);
        this.adapter_.removeClass(ACTION_ON_BOTTOM);
        this.setActionHidden_(true);
        this.adapter_.setAriaHidden();
        this.active_ = false;
        this.snackbarHasFocus_ = false;
        this.adapter_.notifyHide();
        this.showNext_();
      };

      this.adapter_.registerTransitionEndHandler(handler);
    }
  }

  showNext_() {
    if (!this.queue_.length) {
      return;
    }

    this.show(this.queue_.shift());
  }

  setActionHidden_(isHidden) {
    if (isHidden) {
      this.adapter_.setActionAriaHidden();
    } else {
      this.adapter_.unsetActionAriaHidden();
    }
  }

}

exports.default = MDCSnackbarFoundation;
},{"@material/base/index":"node_modules/@material/base/index.js","./constants":"node_modules/@material/snackbar/constants.js"}],"node_modules/@material/snackbar/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCSnackbarFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCSnackbar = void 0;

var _index = require("@material/base/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var _index2 = require("@material/animation/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCSnackbar extends _index.MDCComponent {
  static attachTo(root) {
    return new MDCSnackbar(root);
  }

  show(data) {
    this.foundation_.show(data);
  }

  getDefaultFoundation() {
    const {
      TEXT_SELECTOR,
      ACTION_BUTTON_SELECTOR
    } = _foundation.default.strings;

    const getText = () => this.root_.querySelector(TEXT_SELECTOR);

    const getActionButton = () => this.root_.querySelector(ACTION_BUTTON_SELECTOR);
    /* eslint brace-style: "off" */


    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      setAriaHidden: () => this.root_.setAttribute('aria-hidden', 'true'),
      unsetAriaHidden: () => this.root_.removeAttribute('aria-hidden'),
      setActionAriaHidden: () => getActionButton().setAttribute('aria-hidden', 'true'),
      unsetActionAriaHidden: () => getActionButton().removeAttribute('aria-hidden'),
      setActionText: text => {
        getActionButton().textContent = text;
      },
      setMessageText: text => {
        getText().textContent = text;
      },
      setFocus: () => getActionButton().focus(),
      isFocused: () => document.activeElement === getActionButton(),
      visibilityIsHidden: () => document.hidden,
      registerCapturedBlurHandler: handler => getActionButton().addEventListener('blur', handler, true),
      deregisterCapturedBlurHandler: handler => getActionButton().removeEventListener('blur', handler, true),
      registerVisibilityChangeHandler: handler => document.addEventListener('visibilitychange', handler),
      deregisterVisibilityChangeHandler: handler => document.removeEventListener('visibilitychange', handler),
      registerCapturedInteractionHandler: (evt, handler) => document.body.addEventListener(evt, handler, true),
      deregisterCapturedInteractionHandler: (evt, handler) => document.body.removeEventListener(evt, handler, true),
      registerActionClickHandler: handler => getActionButton().addEventListener('click', handler),
      deregisterActionClickHandler: handler => getActionButton().removeEventListener('click', handler),
      registerTransitionEndHandler: handler => this.root_.addEventListener((0, _index2.getCorrectEventName)(window, 'transitionend'), handler),
      deregisterTransitionEndHandler: handler => this.root_.removeEventListener((0, _index2.getCorrectEventName)(window, 'transitionend'), handler),
      notifyShow: () => this.emit(_foundation.default.strings.SHOW_EVENT),
      notifyHide: () => this.emit(_foundation.default.strings.HIDE_EVENT)
    });
  }

  get dismissesOnAction() {
    return this.foundation_.dismissesOnAction();
  }

  set dismissesOnAction(dismissesOnAction) {
    this.foundation_.setDismissOnAction(dismissesOnAction);
  }

}

exports.MDCSnackbar = MDCSnackbar;
},{"@material/base/index":"node_modules/@material/base/index.js","./foundation":"node_modules/@material/snackbar/foundation.js","@material/animation/index":"node_modules/@material/animation/index.js"}],"node_modules/preact-material-components/Snackbar/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Snackbar = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _snackbar = require("@material/snackbar/");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

// TODO: Is that needed?
function shallowDiffers(a, b) {
  for (var i in a) {
    if (!(i in b)) {
      return true;
    }
  }

  for (var _i in b) {
    // noinspection JSUnfilteredForInLoop
    if (a[_i] !== b[_i]) {
      return true;
    }
  }

  return false;
}

var Snackbar =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Snackbar, _MaterialComponent);

  function Snackbar() {
    var _this;

    (0, _classCallCheck2.default)(this, Snackbar);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Snackbar).apply(this, arguments));
    _this.componentName = 'snackbar';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(Snackbar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _snackbar.MDCSnackbar(this.control);

        if (this.props.dismissesOnAction === undefined || this.props.dismissesOnAction === null) {
          this.MDComponent.dismissesOnAction = true;
        } else {
          this.MDComponent.dismissesOnAction = this.props.dismissesOnAction;
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Snackbar.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(props, state) {
      return shallowDiffers(this.props, props) || shallowDiffers(this.state, state);
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({
        "aria-live": "assertive",
        "aria-atomic": "true",
        "aria-hidden": "true",
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-snackbar__text"
      }), (0, _preact.h)("div", {
        className: "mdc-snackbar__action-wrapper"
      }, (0, _preact.h)("button", {
        type: "button",
        className: "mdc-snackbar__action-button"
      })));
    }
  }]);
  return Snackbar;
}(_MaterialComponent2.default);

exports.Snackbar = Snackbar;
var _default = Snackbar;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/snackbar/":"node_modules/@material/snackbar/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/radio/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/selection-control/index");

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Radio. Provides an interface for managing
 * - classes
 * - dom
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCRadioAdapter {
  /** @param {string} className */
  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /** @return {!MDCSelectionControlState} */


  getNativeControl() {}

}

var _default = MDCRadioAdapter;
exports.default = _default;
},{"@material/selection-control/index":"node_modules/@material/selection-control/index.js"}],"node_modules/@material/radio/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  NATIVE_CONTROL_SELECTOR: '.mdc-radio__native-control'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  ROOT: 'mdc-radio',
  DISABLED: 'mdc-radio--disabled'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/radio/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _index = require("@material/selection-control/index");

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCRadioAdapter>}
 */
class MDCRadioFoundation extends _foundation.default {
  /** @return enum {cssClasses} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {strings} */


  static get strings() {
    return _constants.strings;
  }
  /** @return {!MDCRadioAdapter} */


  static get defaultAdapter() {
    return (
      /** @type {!MDCRadioAdapter} */
      {
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        getNativeControl: () =>
        /* !MDCSelectionControlState */
        {}
      }
    );
  }
  /** @return {boolean} */


  isChecked() {
    return this.getNativeControl_().checked;
  }
  /** @param {boolean} checked */


  setChecked(checked) {
    this.getNativeControl_().checked = checked;
  }
  /** @return {boolean} */


  isDisabled() {
    return this.getNativeControl_().disabled;
  }
  /** @param {boolean} disabled */


  setDisabled(disabled) {
    const {
      DISABLED
    } = MDCRadioFoundation.cssClasses;
    this.getNativeControl_().disabled = disabled;

    if (disabled) {
      this.adapter_.addClass(DISABLED);
    } else {
      this.adapter_.removeClass(DISABLED);
    }
  }
  /** @return {?string} */


  getValue() {
    return this.getNativeControl_().value;
  }
  /** @param {?string} value */


  setValue(value) {
    this.getNativeControl_().value = value;
  }
  /**
   * @return {!MDCSelectionControlState}
   * @private
   */


  getNativeControl_() {
    return this.adapter_.getNativeControl() || {
      checked: false,
      disabled: false,
      value: null
    };
  }

}

var _default = MDCRadioFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","@material/selection-control/index":"node_modules/@material/selection-control/index.js","./adapter":"node_modules/@material/radio/adapter.js","./constants":"node_modules/@material/radio/constants.js"}],"node_modules/@material/radio/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCRadioFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCRadio = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _index = require("@material/selection-control/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var _index2 = require("@material/ripple/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends MDCComponent<!MDCRadioFoundation>
 * @implements {MDCSelectionControl}
 */
class MDCRadio extends _component.default {
  static attachTo(root) {
    return new MDCRadio(root);
  }
  /** @return {boolean} */


  get checked() {
    return this.foundation_.isChecked();
  }
  /** @param {boolean} checked */


  set checked(checked) {
    this.foundation_.setChecked(checked);
  }
  /** @return {boolean} */


  get disabled() {
    return this.foundation_.isDisabled();
  }
  /** @param {boolean} disabled */


  set disabled(disabled) {
    this.foundation_.setDisabled(disabled);
  }
  /** @return {?string} */


  get value() {
    return this.foundation_.getValue();
  }
  /** @param {?string} value */


  set value(value) {
    this.foundation_.setValue(value);
  }
  /** @return {!MDCRipple} */


  get ripple() {
    return this.ripple_;
  }

  constructor(...args) {
    super(...args);
    /** @private {!MDCRipple} */

    this.ripple_ = this.initRipple_();
  }
  /**
   * @return {!MDCRipple}
   * @private
   */


  initRipple_() {
    const adapter = Object.assign(_index2.MDCRipple.createAdapter(this), {
      isUnbounded: () => true,
      // Radio buttons technically go "active" whenever there is *any* keyboard interaction. This is not the
      // UI we desire.
      isSurfaceActive: () => false,
      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),
      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler)
    });
    const foundation = new _index2.MDCRippleFoundation(adapter);
    return new _index2.MDCRipple(this.root_, foundation);
  }
  /**
   * Returns the state of the native control element, or null if the native control element is not present.
   * @return {?MDCSelectionControlState}
   * @private
   */


  get nativeControl_() {
    const {
      NATIVE_CONTROL_SELECTOR
    } = _foundation.default.strings;
    const el =
    /** @type {?MDCSelectionControlState} */
    this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
    return el;
  }

  destroy() {
    this.ripple_.destroy();
    super.destroy();
  }
  /** @return {!MDCRadioFoundation} */


  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      getNativeControl: () => this.root_.querySelector(_foundation.default.strings.NATIVE_CONTROL_SELECTOR)
    });
  }

}

exports.MDCRadio = MDCRadio;
},{"@material/base/component":"node_modules/@material/base/component.js","@material/selection-control/index":"node_modules/@material/selection-control/index.js","./foundation":"node_modules/@material/radio/foundation.js","@material/ripple/index":"node_modules/@material/ripple/index.js"}],"node_modules/preact-material-components/Radio/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Radio = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _radio = require("@material/radio/");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Radio =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Radio, _MaterialComponent);

  function Radio() {
    var _this;

    (0, _classCallCheck2.default)(this, Radio);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Radio).apply(this, arguments));
    _this.componentName = 'radio';
    _this.mdcProps = ['disabled'];
    _this.mdcNotifyProps = ['checked'];
    return _this;
  }

  (0, _createClass2.default)(Radio, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Radio.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _radio.MDCRadio(this.control);
      }

      this.afterComponentDidMount();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Radio.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var className = allprops.className,
          props = __rest(allprops, ["className"]);

      return (0, _preact.h)("div", {
        className: className,
        ref: this.setControlRef
      }, (0, _preact.h)("input", Object.assign({
        className: "mdc-radio__native-control",
        type: "radio"
      }, props)), (0, _preact.h)("div", {
        className: "mdc-radio__background"
      }, (0, _preact.h)("div", {
        className: "mdc-radio__outer-circle"
      }), (0, _preact.h)("div", {
        className: "mdc-radio__inner-circle"
      })));
    }
  }]);
  return Radio;
}(_MaterialComponent2.default);

exports.Radio = Radio;
var _default = Radio;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/radio/":"node_modules/@material/radio/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/textfield/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ALWAYS_FLOAT_TYPES = exports.VALIDATION_ATTR_WHITELIST = exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  ARIA_CONTROLS: 'aria-controls',
  INPUT_SELECTOR: '.mdc-text-field__input',
  LABEL_SELECTOR: '.mdc-floating-label',
  ICON_SELECTOR: '.mdc-text-field__icon',
  OUTLINE_SELECTOR: '.mdc-notched-outline',
  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  ROOT: 'mdc-text-field',
  DISABLED: 'mdc-text-field--disabled',
  DENSE: 'mdc-text-field--dense',
  FOCUSED: 'mdc-text-field--focused',
  INVALID: 'mdc-text-field--invalid',
  TEXTAREA: 'mdc-text-field--textarea',
  OUTLINED: 'mdc-text-field--outlined'
};
/** @enum {number} */

exports.cssClasses = cssClasses;
const numbers = {
  LABEL_SCALE: 0.75,
  DENSE_LABEL_SCALE: 0.923
}; // whitelist based off of https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation
// under section: `Validation-related attributes`

exports.numbers = numbers;
const VALIDATION_ATTR_WHITELIST = ['pattern', 'min', 'max', 'required', 'step', 'minlength', 'maxlength']; // Label should always float for these types as they show some UI even if value is empty.

exports.VALIDATION_ATTR_WHITELIST = VALIDATION_ATTR_WHITELIST;
const ALWAYS_FLOAT_TYPES = ['color', 'date', 'datetime-local', 'month', 'range', 'time', 'week'];
exports.ALWAYS_FLOAT_TYPES = ALWAYS_FLOAT_TYPES;
},{}],"node_modules/@material/textfield/helper-text/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Text Field Helper Text.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the TextField helper text into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCTextFieldHelperTextAdapter {
  /**
   * Adds a class to the helper text element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the helper text element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns whether or not the helper text element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Sets an attribute with a given value on the helper text element.
   * @param {string} attr
   * @param {string} value
   */


  setAttr(attr, value) {}
  /**
   * Removes an attribute from the helper text element.
   * @param {string} attr
   */


  removeAttr(attr) {}
  /**
   * Sets the text content for the helper text element.
   * @param {string} content
   */


  setContent(content) {}

}

var _default = MDCTextFieldHelperTextAdapter;
exports.default = _default;
},{}],"node_modules/@material/textfield/helper-text/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  ARIA_HIDDEN: 'aria-hidden',
  ROLE: 'role'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  HELPER_TEXT_PERSISTENT: 'mdc-text-field-helper-text--persistent',
  HELPER_TEXT_VALIDATION_MSG: 'mdc-text-field-helper-text--validation-msg'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/textfield/helper-text/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCTextFieldHelperTextAdapter>}
 * @final
 */
class MDCTextFieldHelperTextFoundation extends _foundation.default {
  /** @return enum {string} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {string} */


  static get strings() {
    return _constants.strings;
  }
  /**
   * {@see MDCTextFieldHelperTextAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCTextFieldHelperTextAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCTextFieldHelperTextAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        setAttr: () => {},
        removeAttr: () => {},
        setContent: () => {}
      }
    );
  }
  /**
   * @param {!MDCTextFieldHelperTextAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCTextFieldHelperTextFoundation.defaultAdapter, adapter));
  }
  /**
   * Sets the content of the helper text field.
   * @param {string} content
   */


  setContent(content) {
    this.adapter_.setContent(content);
  }
  /** @param {boolean} isPersistent Sets the persistency of the helper text. */


  setPersistent(isPersistent) {
    if (isPersistent) {
      this.adapter_.addClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);
    }
  }
  /**
   * @param {boolean} isValidation True to make the helper text act as an
   *   error validation message.
   */


  setValidation(isValidation) {
    if (isValidation) {
      this.adapter_.addClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);
    }
  }
  /** Makes the helper text visible to the screen reader. */


  showToScreenReader() {
    this.adapter_.removeAttr(_constants.strings.ARIA_HIDDEN);
  }
  /**
   * Sets the validity of the helper text based on the input validity.
   * @param {boolean} inputIsValid
   */


  setValidity(inputIsValid) {
    const helperTextIsPersistent = this.adapter_.hasClass(_constants.cssClasses.HELPER_TEXT_PERSISTENT);
    const helperTextIsValidationMsg = this.adapter_.hasClass(_constants.cssClasses.HELPER_TEXT_VALIDATION_MSG);
    const validationMsgNeedsDisplay = helperTextIsValidationMsg && !inputIsValid;

    if (validationMsgNeedsDisplay) {
      this.adapter_.setAttr(_constants.strings.ROLE, 'alert');
    } else {
      this.adapter_.removeAttr(_constants.strings.ROLE);
    }

    if (!helperTextIsPersistent && !validationMsgNeedsDisplay) {
      this.hide_();
    }
  }
  /**
   * Hides the help text from screen readers.
   * @private
   */


  hide_() {
    this.adapter_.setAttr(_constants.strings.ARIA_HIDDEN, 'true');
  }

}

var _default = MDCTextFieldHelperTextFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/textfield/helper-text/adapter.js","./constants":"node_modules/@material/textfield/helper-text/constants.js"}],"node_modules/@material/textfield/icon/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Text Field Icon.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the text field icon into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCTextFieldIconAdapter {
  /**
   * Gets the value of an attribute on the icon element.
   * @param {string} attr
   * @return {string}
   */
  getAttr(attr) {}
  /**
   * Sets an attribute on the icon element.
   * @param {string} attr
   * @param {string} value
   */


  setAttr(attr, value) {}
  /**
   * Removes an attribute from the icon element.
   * @param {string} attr
   */


  removeAttr(attr) {}
  /**
   * Sets the text content of the icon element.
   * @param {string} content
   */


  setContent(content) {}
  /**
   * Registers an event listener on the icon element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  registerInteractionHandler(evtType, handler) {}
  /**
   * Deregisters an event listener on the icon element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  deregisterInteractionHandler(evtType, handler) {}
  /**
   * Emits a custom event "MDCTextField:icon" denoting a user has clicked the icon.
   */


  notifyIconAction() {}

}

var _default = MDCTextFieldIconAdapter;
exports.default = _default;
},{}],"node_modules/@material/textfield/icon/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  ICON_EVENT: 'MDCTextField:icon',
  ICON_ROLE: 'button'
};
exports.strings = strings;
},{}],"node_modules/@material/textfield/icon/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCTextFieldIconAdapter>}
 * @final
 */
class MDCTextFieldIconFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /**
   * {@see MDCTextFieldIconAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCTextFieldIconAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCTextFieldIconAdapter} */
      {
        getAttr: () => {},
        setAttr: () => {},
        removeAttr: () => {},
        setContent: () => {},
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {},
        notifyIconAction: () => {}
      }
    );
  }
  /**
   * @param {!MDCTextFieldIconAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCTextFieldIconFoundation.defaultAdapter, adapter));
    /** @private {string?} */

    this.savedTabIndex_ = null;
    /** @private {function(!Event): undefined} */

    this.interactionHandler_ = evt => this.handleInteraction(evt);
  }

  init() {
    this.savedTabIndex_ = this.adapter_.getAttr('tabindex');
    ['click', 'keydown'].forEach(evtType => {
      this.adapter_.registerInteractionHandler(evtType, this.interactionHandler_);
    });
  }

  destroy() {
    ['click', 'keydown'].forEach(evtType => {
      this.adapter_.deregisterInteractionHandler(evtType, this.interactionHandler_);
    });
  }
  /** @param {boolean} disabled */


  setDisabled(disabled) {
    if (!this.savedTabIndex_) {
      return;
    }

    if (disabled) {
      this.adapter_.setAttr('tabindex', '-1');
      this.adapter_.removeAttr('role');
    } else {
      this.adapter_.setAttr('tabindex', this.savedTabIndex_);
      this.adapter_.setAttr('role', _constants.strings.ICON_ROLE);
    }
  }
  /** @param {string} label */


  setAriaLabel(label) {
    this.adapter_.setAttr('aria-label', label);
  }
  /** @param {string} content */


  setContent(content) {
    this.adapter_.setContent(content);
  }
  /**
   * Handles an interaction event
   * @param {!Event} evt
   */


  handleInteraction(evt) {
    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
      this.adapter_.notifyIconAction();
    }
  }

}

var _default = MDCTextFieldIconFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/textfield/icon/adapter.js","./constants":"node_modules/@material/textfield/icon/constants.js"}],"node_modules/@material/textfield/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FoundationMapType = exports.NativeInputType = exports.MDCTextFieldAdapter = void 0;

var _foundation = _interopRequireDefault(require("./helper-text/foundation"));

var _foundation2 = _interopRequireDefault(require("./icon/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * @typedef {{
 *   value: string,
 *   disabled: boolean,
 *   badInput: boolean,
 *   validity: {
 *     badInput: boolean,
 *     valid: boolean,
 *   },
 * }}
 */
let NativeInputType;
/**
 * @typedef {{
 *   helperText: (!MDCTextFieldHelperTextFoundation|undefined),
 *   icon: (!MDCTextFieldIconFoundation|undefined),
 * }}
 */

exports.NativeInputType = NativeInputType;
let FoundationMapType;
/**
 * Adapter for MDC Text Field.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Text Field into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */

exports.FoundationMapType = FoundationMapType;

class MDCTextFieldAdapter {
  /**
   * Adds a class to the root Element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the root Element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns true if the root element contains the given class name.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Registers an event handler on the root element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  registerTextFieldInteractionHandler(type, handler) {}
  /**
   * Deregisters an event handler on the root element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  deregisterTextFieldInteractionHandler(type, handler) {}
  /**
   * Registers an event listener on the native input element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  registerInputInteractionHandler(evtType, handler) {}
  /**
   * Deregisters an event listener on the native input element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  deregisterInputInteractionHandler(evtType, handler) {}
  /**
   * Registers a validation attribute change listener on the input element.
   * Handler accepts list of attribute names.
   * @param {function(!Array<string>): undefined} handler
   * @return {!MutationObserver}
   */


  registerValidationAttributeChangeHandler(handler) {}
  /**
   * Disconnects a validation attribute observer on the input element.
   * @param {!MutationObserver} observer
   */


  deregisterValidationAttributeChangeHandler(observer) {}
  /**
   * Returns an object representing the native text input element, with a
   * similar API shape. The object returned should include the value, disabled
   * and badInput properties, as well as the checkValidity() function. We never
   * alter the value within our code, however we do update the disabled
   * property, so if you choose to duck-type the return value for this method
   * in your implementation it's important to keep this in mind. Also note that
   * this method can return null, which the foundation will handle gracefully.
   * @return {?Element|?NativeInputType}
   */


  getNativeInput() {}
  /**
   * Returns true if the textfield is focused.
   * We achieve this via `document.activeElement === this.root_`.
   * @return {boolean}
   */


  isFocused() {}
  /**
   * Returns true if the direction of the root element is set to RTL.
   * @return {boolean}
   */


  isRtl() {}
  /**
   * Activates the line ripple.
   */


  activateLineRipple() {}
  /**
   * Deactivates the line ripple.
   */


  deactivateLineRipple() {}
  /**
   * Sets the transform origin of the line ripple.
   * @param {number} normalizedX
   */


  setLineRippleTransformOrigin(normalizedX) {}
  /**
   * Only implement if label exists.
   * Shakes label if shouldShake is true.
   * @param {boolean} shouldShake
   */


  shakeLabel(shouldShake) {}
  /**
   * Only implement if label exists.
   * Floats the label above the input element if shouldFloat is true.
   * @param {boolean} shouldFloat
   */


  floatLabel(shouldFloat) {}
  /**
   * Returns true if label element exists, false if it doesn't.
   * @return {boolean}
   */


  hasLabel() {}
  /**
   * Only implement if label exists.
   * Returns width of label in pixels.
   * @return {number}
   */


  getLabelWidth() {}
  /**
   * Returns true if outline element exists, false if it doesn't.
   * @return {boolean}
   */


  hasOutline() {}
  /**
   * Only implement if outline element exists.
   * Updates SVG Path and outline element based on the
   * label element width and RTL context.
   * @param {number} labelWidth
   * @param {boolean=} isRtl
   */


  notchOutline(labelWidth, isRtl) {}
  /**
   * Only implement if outline element exists.
   * Closes notch in outline element.
   */


  closeOutline() {}

}

exports.MDCTextFieldAdapter = MDCTextFieldAdapter;
},{"./helper-text/foundation":"node_modules/@material/textfield/helper-text/foundation.js","./icon/foundation":"node_modules/@material/textfield/icon/foundation.js"}],"node_modules/@material/textfield/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _foundation2 = _interopRequireDefault(require("./helper-text/foundation"));

var _foundation3 = _interopRequireDefault(require("./icon/foundation"));

var _adapter = require("./adapter");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCTextFieldAdapter>}
 * @final
 */
class MDCTextFieldFoundation extends _foundation.default {
  /** @return enum {string} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {string} */


  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get numbers() {
    return _constants.numbers;
  }
  /** @return {boolean} */


  get shouldShake() {
    return !this.isValid() && !this.isFocused_ && !!this.getValue();
  }
  /**
   * @return {boolean}
   * @private
   */


  get shouldAlwaysFloat_() {
    const type = this.getNativeInput_().type;
    return _constants.ALWAYS_FLOAT_TYPES.indexOf(type) >= 0;
  }
  /** @return {boolean} */


  get shouldFloat() {
    return this.shouldAlwaysFloat_ || this.isFocused_ || !!this.getValue() || this.isBadInput_();
  }
  /**
   * {@see MDCTextFieldAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCTextFieldAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCTextFieldAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        registerTextFieldInteractionHandler: () => {},
        deregisterTextFieldInteractionHandler: () => {},
        registerInputInteractionHandler: () => {},
        deregisterInputInteractionHandler: () => {},
        registerValidationAttributeChangeHandler: () => {},
        deregisterValidationAttributeChangeHandler: () => {},
        getNativeInput: () => {},
        isFocused: () => {},
        isRtl: () => {},
        activateLineRipple: () => {},
        deactivateLineRipple: () => {},
        setLineRippleTransformOrigin: () => {},
        shakeLabel: () => {},
        floatLabel: () => {},
        hasLabel: () => {},
        getLabelWidth: () => {},
        hasOutline: () => {},
        notchOutline: () => {},
        closeOutline: () => {}
      }
    );
  }
  /**
   * @param {!MDCTextFieldAdapter} adapter
   * @param {!FoundationMapType=} foundationMap Map from subcomponent names to their subfoundations.
   */


  constructor(adapter, foundationMap =
  /** @type {!FoundationMapType} */
  {}) {
    super(Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter));
    /** @type {!MDCTextFieldHelperTextFoundation|undefined} */

    this.helperText_ = foundationMap.helperText;
    /** @type {!MDCTextFieldIconFoundation|undefined} */

    this.icon_ = foundationMap.icon;
    /** @private {boolean} */

    this.isFocused_ = false;
    /** @private {boolean} */

    this.receivedUserInput_ = false;
    /** @private {boolean} */

    this.useCustomValidityChecking_ = false;
    /** @private {boolean} */

    this.isValid_ = true;
    /** @private {boolean} */

    this.useNativeValidation_ = true;
    /** @private {function(): undefined} */

    this.inputFocusHandler_ = () => this.activateFocus();
    /** @private {function(): undefined} */


    this.inputBlurHandler_ = () => this.deactivateFocus();
    /** @private {function(): undefined} */


    this.inputInputHandler_ = () => this.autoCompleteFocus();
    /** @private {function(!Event): undefined} */


    this.setPointerXOffset_ = evt => this.setTransformOrigin(evt);
    /** @private {function(!Event): undefined} */


    this.textFieldInteractionHandler_ = () => this.handleTextFieldInteraction();
    /** @private {function(!Array): undefined} */


    this.validationAttributeChangeHandler_ = attributesList => this.handleValidationAttributeChange(attributesList);
    /** @private {!MutationObserver} */


    this.validationObserver_;
  }

  init() {
    if (this.adapter_.isFocused()) {
      this.inputFocusHandler_();
    } else if (this.adapter_.hasLabel() && this.shouldFloat) {
      this.notchOutline(true);
      this.adapter_.floatLabel(true);
    }

    this.adapter_.registerInputInteractionHandler('focus', this.inputFocusHandler_);
    this.adapter_.registerInputInteractionHandler('blur', this.inputBlurHandler_);
    this.adapter_.registerInputInteractionHandler('input', this.inputInputHandler_);
    ['mousedown', 'touchstart'].forEach(evtType => {
      this.adapter_.registerInputInteractionHandler(evtType, this.setPointerXOffset_);
    });
    ['click', 'keydown'].forEach(evtType => {
      this.adapter_.registerTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);
    });
    this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(this.validationAttributeChangeHandler_);
  }

  destroy() {
    this.adapter_.deregisterInputInteractionHandler('focus', this.inputFocusHandler_);
    this.adapter_.deregisterInputInteractionHandler('blur', this.inputBlurHandler_);
    this.adapter_.deregisterInputInteractionHandler('input', this.inputInputHandler_);
    ['mousedown', 'touchstart'].forEach(evtType => {
      this.adapter_.deregisterInputInteractionHandler(evtType, this.setPointerXOffset_);
    });
    ['click', 'keydown'].forEach(evtType => {
      this.adapter_.deregisterTextFieldInteractionHandler(evtType, this.textFieldInteractionHandler_);
    });
    this.adapter_.deregisterValidationAttributeChangeHandler(this.validationObserver_);
  }
  /**
   * Handles user interactions with the Text Field.
   */


  handleTextFieldInteraction() {
    if (this.adapter_.getNativeInput().disabled) {
      return;
    }

    this.receivedUserInput_ = true;
  }
  /**
   * Handles validation attribute changes
   * @param {!Array<string>} attributesList
   */


  handleValidationAttributeChange(attributesList) {
    attributesList.some(attributeName => {
      if (_constants.VALIDATION_ATTR_WHITELIST.indexOf(attributeName) > -1) {
        this.styleValidity_(true);
        return true;
      }
    });
  }
  /**
   * Opens/closes the notched outline.
   * @param {boolean} openNotch
   */


  notchOutline(openNotch) {
    if (!this.adapter_.hasOutline()) {
      return;
    }

    if (openNotch) {
      const isDense = this.adapter_.hasClass(_constants.cssClasses.DENSE);
      const labelScale = isDense ? _constants.numbers.DENSE_LABEL_SCALE : _constants.numbers.LABEL_SCALE;
      const labelWidth = this.adapter_.getLabelWidth() * labelScale;
      const isRtl = this.adapter_.isRtl();
      this.adapter_.notchOutline(labelWidth, isRtl);
    } else {
      this.adapter_.closeOutline();
    }
  }
  /**
   * Activates the text field focus state.
   */


  activateFocus() {
    this.isFocused_ = true;
    this.styleFocused_(this.isFocused_);
    this.adapter_.activateLineRipple();

    if (this.adapter_.hasLabel()) {
      this.notchOutline(this.shouldFloat);
      this.adapter_.floatLabel(this.shouldFloat);
      this.adapter_.shakeLabel(this.shouldShake);
    }

    if (this.helperText_) {
      this.helperText_.showToScreenReader();
    }
  }
  /**
   * Sets the line ripple's transform origin, so that the line ripple activate
   * animation will animate out from the user's click location.
   * @param {!Event} evt
   */


  setTransformOrigin(evt) {
    const targetClientRect = evt.target.getBoundingClientRect();
    const evtCoords = {
      x: evt.clientX,
      y: evt.clientY
    };
    const normalizedX = evtCoords.x - targetClientRect.left;
    this.adapter_.setLineRippleTransformOrigin(normalizedX);
  }
  /**
   * Activates the Text Field's focus state in cases when the input value
   * changes without user input (e.g. programatically).
   */


  autoCompleteFocus() {
    if (!this.receivedUserInput_) {
      this.activateFocus();
    }
  }
  /**
   * Deactivates the Text Field's focus state.
   */


  deactivateFocus() {
    this.isFocused_ = false;
    this.adapter_.deactivateLineRipple();
    const isValid = this.isValid();
    this.styleValidity_(isValid);
    this.styleFocused_(this.isFocused_);

    if (this.adapter_.hasLabel()) {
      this.notchOutline(this.shouldFloat);
      this.adapter_.floatLabel(this.shouldFloat);
      this.adapter_.shakeLabel(this.shouldShake);
    }

    if (!this.shouldFloat) {
      this.receivedUserInput_ = false;
    }
  }
  /**
   * @return {string} The value of the input Element.
   */


  getValue() {
    return this.getNativeInput_().value;
  }
  /**
   * @param {string} value The value to set on the input Element.
   */


  setValue(value) {
    this.getNativeInput_().value = value;
    const isValid = this.isValid();
    this.styleValidity_(isValid);

    if (this.adapter_.hasLabel()) {
      this.notchOutline(this.shouldFloat);
      this.adapter_.floatLabel(this.shouldFloat);
      this.adapter_.shakeLabel(this.shouldShake);
    }
  }
  /**
   * @return {boolean} If a custom validity is set, returns that value.
   *     Otherwise, returns the result of native validity checks.
   */


  isValid() {
    return this.useNativeValidation_ ? this.isNativeInputValid_() : this.isValid_;
  }
  /**
   * @param {boolean} isValid Sets the validity state of the Text Field.
   */


  setValid(isValid) {
    this.isValid_ = isValid;
    this.styleValidity_(isValid);
    const shouldShake = !isValid && !this.isFocused_;

    if (this.adapter_.hasLabel()) {
      this.adapter_.shakeLabel(shouldShake);
    }
  }
  /**
   * Enables or disables the use of native validation. Use this for custom validation.
   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
   */


  setUseNativeValidation(useNativeValidation) {
    this.useNativeValidation_ = useNativeValidation;
  }
  /**
   * @return {boolean} True if the Text Field is disabled.
   */


  isDisabled() {
    return this.getNativeInput_().disabled;
  }
  /**
   * @param {boolean} disabled Sets the text-field disabled or enabled.
   */


  setDisabled(disabled) {
    this.getNativeInput_().disabled = disabled;
    this.styleDisabled_(disabled);
  }
  /**
   * @param {string} content Sets the content of the helper text.
   */


  setHelperTextContent(content) {
    if (this.helperText_) {
      this.helperText_.setContent(content);
    }
  }
  /**
   * Sets the aria label of the icon.
   * @param {string} label
   */


  setIconAriaLabel(label) {
    if (this.icon_) {
      this.icon_.setAriaLabel(label);
    }
  }
  /**
   * Sets the text content of the icon.
   * @param {string} content
   */


  setIconContent(content) {
    if (this.icon_) {
      this.icon_.setContent(content);
    }
  }
  /**
   * @return {boolean} True if the Text Field input fails in converting the
   *     user-supplied value.
   * @private
   */


  isBadInput_() {
    return this.getNativeInput_().validity.badInput;
  }
  /**
   * @return {boolean} The result of native validity checking
   *     (ValidityState.valid).
   */


  isNativeInputValid_() {
    return this.getNativeInput_().validity.valid;
  }
  /**
   * Styles the component based on the validity state.
   * @param {boolean} isValid
   * @private
   */


  styleValidity_(isValid) {
    const {
      INVALID
    } = MDCTextFieldFoundation.cssClasses;

    if (isValid) {
      this.adapter_.removeClass(INVALID);
    } else {
      this.adapter_.addClass(INVALID);
    }

    if (this.helperText_) {
      this.helperText_.setValidity(isValid);
    }
  }
  /**
   * Styles the component based on the focused state.
   * @param {boolean} isFocused
   * @private
   */


  styleFocused_(isFocused) {
    const {
      FOCUSED
    } = MDCTextFieldFoundation.cssClasses;

    if (isFocused) {
      this.adapter_.addClass(FOCUSED);
    } else {
      this.adapter_.removeClass(FOCUSED);
    }
  }
  /**
   * Styles the component based on the disabled state.
   * @param {boolean} isDisabled
   * @private
   */


  styleDisabled_(isDisabled) {
    const {
      DISABLED,
      INVALID
    } = MDCTextFieldFoundation.cssClasses;

    if (isDisabled) {
      this.adapter_.addClass(DISABLED);
      this.adapter_.removeClass(INVALID);
    } else {
      this.adapter_.removeClass(DISABLED);
    }

    if (this.icon_) {
      this.icon_.setDisabled(isDisabled);
    }
  }
  /**
   * @return {!Element|!NativeInputType} The native text input from the
   * host environment, or a dummy if none exists.
   * @private
   */


  getNativeInput_() {
    return this.adapter_.getNativeInput() ||
    /** @type {!NativeInputType} */
    {
      value: '',
      disabled: false,
      validity: {
        badInput: false,
        valid: true
      }
    };
  }

}

var _default = MDCTextFieldFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./helper-text/foundation":"node_modules/@material/textfield/helper-text/foundation.js","./icon/foundation":"node_modules/@material/textfield/icon/foundation.js","./adapter":"node_modules/@material/textfield/adapter.js","./constants":"node_modules/@material/textfield/constants.js"}],"node_modules/@material/line-ripple/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC TextField Line Ripple.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the line ripple into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCLineRippleAdapter {
  /**
   * Adds a class to the line ripple element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the line ripple element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Sets the style property with propertyName to value on the root element.
   * @param {string} propertyName
   * @param {string} value
   */


  setStyle(propertyName, value) {}
  /**
   * Registers an event listener on the line ripple element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  registerEventHandler(evtType, handler) {}
  /**
   * Deregisters an event listener on the line ripple element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  deregisterEventHandler(evtType, handler) {}

}

var _default = MDCLineRippleAdapter;
exports.default = _default;
},{}],"node_modules/@material/line-ripple/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  LINE_RIPPLE_ACTIVE: 'mdc-line-ripple--active',
  LINE_RIPPLE_DEACTIVATING: 'mdc-line-ripple--deactivating'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/line-ripple/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCLineRippleAdapter>}
 * @final
 */
class MDCLineRippleFoundation extends _foundation.default {
  /** @return enum {string} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCLineRippleAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCLineRippleAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCLineRippleAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        setStyle: () => {},
        registerEventHandler: () => {},
        deregisterEventHandler: () => {}
      }
    );
  }
  /**
   * @param {!MDCLineRippleAdapter=} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter));
    /** @private {function(!Event): undefined} */

    this.transitionEndHandler_ = evt => this.handleTransitionEnd(evt);
  }

  init() {
    this.adapter_.registerEventHandler('transitionend', this.transitionEndHandler_);
  }

  destroy() {
    this.adapter_.deregisterEventHandler('transitionend', this.transitionEndHandler_);
  }
  /**
   * Activates the line ripple
   */


  activate() {
    this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);
    this.adapter_.addClass(_constants.cssClasses.LINE_RIPPLE_ACTIVE);
  }
  /**
   * Sets the center of the ripple animation to the given X coordinate.
   * @param {number} xCoordinate
   */


  setRippleCenter(xCoordinate) {
    this.adapter_.setStyle('transform-origin', `${xCoordinate}px center`);
  }
  /**
   * Deactivates the line ripple
   */


  deactivate() {
    this.adapter_.addClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);
  }
  /**
   * Handles a transition end event
   * @param {!Event} evt
   */


  handleTransitionEnd(evt) {
    // Wait for the line ripple to be either transparent or opaque
    // before emitting the animation end event
    const isDeactivating = this.adapter_.hasClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);

    if (evt.propertyName === 'opacity') {
      if (isDeactivating) {
        this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_ACTIVE);
        this.adapter_.removeClass(_constants.cssClasses.LINE_RIPPLE_DEACTIVATING);
      }
    }
  }

}

var _default = MDCLineRippleFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/line-ripple/adapter.js","./constants":"node_modules/@material/line-ripple/constants.js"}],"node_modules/@material/line-ripple/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCLineRippleFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCLineRipple = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCLineRippleFoundation>}
 * @final
 */
class MDCLineRipple extends _component.default {
  /**
   * @param {!Element} root
   * @return {!MDCLineRipple}
   */
  static attachTo(root) {
    return new MDCLineRipple(root);
  }
  /**
   * Activates the line ripple
   */


  activate() {
    this.foundation_.activate();
  }
  /**
   * Deactivates the line ripple
   */


  deactivate() {
    this.foundation_.deactivate();
  }
  /**
   * Sets the transform origin given a user's click location. The `rippleCenter` is the
   * x-coordinate of the middle of the ripple.
   * @param {number} xCoordinate
   */


  setRippleCenter(xCoordinate) {
    this.foundation_.setRippleCenter(xCoordinate);
  }
  /**
   * @return {!MDCLineRippleFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCLineRippleAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      setStyle: (propertyName, value) => this.root_.style[propertyName] = value,
      registerEventHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
      deregisterEventHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler)
    }));
  }

}

exports.MDCLineRipple = MDCLineRipple;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/line-ripple/adapter.js","./foundation":"node_modules/@material/line-ripple/foundation.js"}],"node_modules/@material/textfield/helper-text/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCTextFieldHelperTextFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCTextFieldHelperText = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCTextFieldHelperTextFoundation>}
 * @final
 */
class MDCTextFieldHelperText extends _component.default {
  /**
   * @param {!Element} root
   * @return {!MDCTextFieldHelperText}
   */
  static attachTo(root) {
    return new MDCTextFieldHelperText(root);
  }
  /**
   * @return {!MDCTextFieldHelperTextFoundation}
   */


  get foundation() {
    return this.foundation_;
  }
  /**
   * @return {!MDCTextFieldHelperTextFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCTextFieldHelperTextAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      setAttr: (attr, value) => this.root_.setAttribute(attr, value),
      removeAttr: attr => this.root_.removeAttribute(attr),
      setContent: content => {
        this.root_.textContent = content;
      }
    }));
  }

}

exports.MDCTextFieldHelperText = MDCTextFieldHelperText;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/textfield/helper-text/adapter.js","./foundation":"node_modules/@material/textfield/helper-text/foundation.js"}],"node_modules/@material/textfield/icon/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCTextFieldIconFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCTextFieldIcon = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCTextFieldIconFoundation>}
 * @final
 */
class MDCTextFieldIcon extends _component.default {
  /**
   * @param {!Element} root
   * @return {!MDCTextFieldIcon}
   */
  static attachTo(root) {
    return new MDCTextFieldIcon(root);
  }
  /**
   * @return {!MDCTextFieldIconFoundation}
   */


  get foundation() {
    return this.foundation_;
  }
  /**
   * @return {!MDCTextFieldIconFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCTextFieldIconAdapter} */
    Object.assign({
      getAttr: attr => this.root_.getAttribute(attr),
      setAttr: (attr, value) => this.root_.setAttribute(attr, value),
      removeAttr: attr => this.root_.removeAttribute(attr),
      setContent: content => {
        this.root_.textContent = content;
      },
      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
      notifyIconAction: () => this.emit(_foundation.default.strings.ICON_EVENT, {}
      /* evtData */
      , true
      /* shouldBubble */
      )
    }));
  }

}

exports.MDCTextFieldIcon = MDCTextFieldIcon;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/textfield/icon/adapter.js","./foundation":"node_modules/@material/textfield/icon/foundation.js"}],"node_modules/@material/floating-label/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Floating Label.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the floating label into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCFloatingLabelAdapter {
  /**
   * Adds a class to the label element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the label element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns the width of the label element.
   * @return {number}
   */


  getWidth() {}
  /**
   * Registers an event listener on the root element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  registerInteractionHandler(evtType, handler) {}
  /**
   * Deregisters an event listener on the root element for a given event.
   * @param {string} evtType
   * @param {function(!Event): undefined} handler
   */


  deregisterInteractionHandler(evtType, handler) {}

}

var _default = MDCFloatingLabelAdapter;
exports.default = _default;
},{}],"node_modules/@material/floating-label/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  LABEL_FLOAT_ABOVE: 'mdc-floating-label--float-above',
  LABEL_SHAKE: 'mdc-floating-label--shake'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/floating-label/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCFloatingLabelAdapter>}
 * @final
 */
class MDCFloatingLabelFoundation extends _foundation.default {
  /** @return enum {string} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCFloatingLabelAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCFloatingLabelAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCFloatingLabelAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        getWidth: () => {},
        registerInteractionHandler: () => {},
        deregisterInteractionHandler: () => {}
      }
    );
  }
  /**
   * @param {!MDCFloatingLabelAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCFloatingLabelFoundation.defaultAdapter, adapter));
    /** @private {function(!Event): undefined} */

    this.shakeAnimationEndHandler_ = () => this.handleShakeAnimationEnd_();
  }

  init() {
    this.adapter_.registerInteractionHandler('animationend', this.shakeAnimationEndHandler_);
  }

  destroy() {
    this.adapter_.deregisterInteractionHandler('animationend', this.shakeAnimationEndHandler_);
  }
  /**
   * Returns the width of the label element.
   * @return {number}
   */


  getWidth() {
    return this.adapter_.getWidth();
  }
  /**
   * Styles the label to produce the label shake for errors.
   * @param {boolean} shouldShake adds shake class if true,
   * otherwise removes shake class.
   */


  shake(shouldShake) {
    const {
      LABEL_SHAKE
    } = MDCFloatingLabelFoundation.cssClasses;

    if (shouldShake) {
      this.adapter_.addClass(LABEL_SHAKE);
    } else {
      this.adapter_.removeClass(LABEL_SHAKE);
    }
  }
  /**
   * Styles the label to float or dock.
   * @param {boolean} shouldFloat adds float class if true, otherwise remove
   * float and shake class to dock label.
   */


  float(shouldFloat) {
    const {
      LABEL_FLOAT_ABOVE,
      LABEL_SHAKE
    } = MDCFloatingLabelFoundation.cssClasses;

    if (shouldFloat) {
      this.adapter_.addClass(LABEL_FLOAT_ABOVE);
    } else {
      this.adapter_.removeClass(LABEL_FLOAT_ABOVE);
      this.adapter_.removeClass(LABEL_SHAKE);
    }
  }
  /**
   * Handles an interaction event on the root element.
   */


  handleShakeAnimationEnd_() {
    const {
      LABEL_SHAKE
    } = MDCFloatingLabelFoundation.cssClasses;
    this.adapter_.removeClass(LABEL_SHAKE);
  }

}

var _default = MDCFloatingLabelFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/floating-label/adapter.js","./constants":"node_modules/@material/floating-label/constants.js"}],"node_modules/@material/floating-label/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCFloatingLabelFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCFloatingLabel = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCFloatingLabelFoundation>}
 * @final
 */
class MDCFloatingLabel extends _component.default {
  /**
   * @param {!Element} root
   * @return {!MDCFloatingLabel}
   */
  static attachTo(root) {
    return new MDCFloatingLabel(root);
  }
  /**
   * Styles the label to produce the label shake for errors.
   * @param {boolean} shouldShake styles the label to shake by adding shake class
   * if true, otherwise will stop shaking by removing shake class.
   */


  shake(shouldShake) {
    this.foundation_.shake(shouldShake);
  }
  /**
   * Styles label to float/dock.
   * @param {boolean} shouldFloat styles the label to float by adding float class
   * if true, otherwise docks the label by removing the float class.
   */


  float(shouldFloat) {
    this.foundation_.float(shouldFloat);
  }
  /**
   * @return {number}
   */


  getWidth() {
    return this.foundation_.getWidth();
  }
  /**
   * @return {!MDCFloatingLabelFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      getWidth: () => this.root_.offsetWidth,
      registerInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
      deregisterInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler)
    });
  }

}

exports.MDCFloatingLabel = MDCFloatingLabel;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/floating-label/adapter.js","./foundation":"node_modules/@material/floating-label/foundation.js"}],"node_modules/@material/notched-outline/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Notched Outline.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Notched Outline into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCNotchedOutlineAdapter {
  /**
   * Returns the width of the root element.
   * @return {number}
   */
  getWidth() {}
  /**
   * Returns the height of the root element.
   * @return {number}
   */


  getHeight() {}
  /**
   * Adds a class to the root element.
   * @param {string} className
   */


  addClass(className) {}
  /**
   * Removes a class from the root element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Sets the "d" attribute of the outline element's SVG path.
   * @param {string} value
   */


  setOutlinePathAttr(value) {}
  /**
   * Returns the idle outline element's computed style value of the given css property `propertyName`.
   * We achieve this via `getComputedStyle(...).getPropertyValue(propertyName)`.
   * @param {string} propertyName
   * @return {string}
   */


  getIdleOutlineStyleValue(propertyName) {}

}

var _default = MDCNotchedOutlineAdapter;
exports.default = _default;
},{}],"node_modules/@material/notched-outline/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  PATH_SELECTOR: '.mdc-notched-outline__path',
  IDLE_OUTLINE_SELECTOR: '.mdc-notched-outline__idle'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  OUTLINE_NOTCHED: 'mdc-notched-outline--notched'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/notched-outline/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCNotchedOutlineAdapter>}
 * @final
 */
class MDCNotchedOutlineFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCNotchedOutlineAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCNotchedOutlineAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCNotchedOutlineAdapter} */
      {
        getWidth: () => {},
        getHeight: () => {},
        addClass: () => {},
        removeClass: () => {},
        setOutlinePathAttr: () => {},
        getIdleOutlineStyleValue: () => {}
      }
    );
  }
  /**
   * @param {!MDCNotchedOutlineAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCNotchedOutlineFoundation.defaultAdapter, adapter));
  }
  /**
   * Adds the outline notched selector and updates the notch width
   * calculated based off of notchWidth and isRtl.
   * @param {number} notchWidth
   * @param {boolean=} isRtl
   */


  notch(notchWidth, isRtl = false) {
    const {
      OUTLINE_NOTCHED
    } = MDCNotchedOutlineFoundation.cssClasses;
    this.adapter_.addClass(OUTLINE_NOTCHED);
    this.updateSvgPath_(notchWidth, isRtl);
  }
  /**
   * Removes notched outline selector to close the notch in the outline.
   */


  closeNotch() {
    const {
      OUTLINE_NOTCHED
    } = MDCNotchedOutlineFoundation.cssClasses;
    this.adapter_.removeClass(OUTLINE_NOTCHED);
  }
  /**
   * Updates the SVG path of the focus outline element based on the notchWidth
   * and the RTL context.
   * @param {number} notchWidth
   * @param {boolean=} isRtl
   * @private
   */


  updateSvgPath_(notchWidth, isRtl) {
    // Fall back to reading a specific corner's style because Firefox doesn't report the style on border-radius.
    const radiusStyleValue = this.adapter_.getIdleOutlineStyleValue('border-radius') || this.adapter_.getIdleOutlineStyleValue('border-top-left-radius');
    const radius = parseFloat(radiusStyleValue);
    const width = this.adapter_.getWidth();
    const height = this.adapter_.getHeight();
    const cornerWidth = radius + 1.2;
    const leadingStrokeLength = Math.abs(12 - cornerWidth); // If the notchWidth is 0, the the notched outline doesn't need to add padding.

    let paddedNotchWidth = 0;

    if (notchWidth > 0) {
      paddedNotchWidth = notchWidth + 8;
    } // The right, bottom, and left sides of the outline follow the same SVG path.


    const pathMiddle = 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius + 'v' + (height - 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius + 'h' + (-width + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius + 'v' + (-height + 2 * cornerWidth) + 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;
    let path;

    if (!isRtl) {
      path = 'M' + (cornerWidth + leadingStrokeLength + paddedNotchWidth) + ',' + 1 + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength) + pathMiddle + 'h' + leadingStrokeLength;
    } else {
      path = 'M' + (width - cornerWidth - leadingStrokeLength) + ',' + 1 + 'h' + leadingStrokeLength + pathMiddle + 'h' + (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);
    }

    this.adapter_.setOutlinePathAttr(path);
  }

}

var _default = MDCNotchedOutlineFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/notched-outline/adapter.js","./constants":"node_modules/@material/notched-outline/constants.js"}],"node_modules/@material/notched-outline/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCNotchedOutlineFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCNotchedOutline = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCNotchedOutlineFoundation>}
 * @final
 */
class MDCNotchedOutline extends _component.default {
  /**
   * @param {!Element} root
   * @return {!MDCNotchedOutline}
   */
  static attachTo(root) {
    return new MDCNotchedOutline(root);
  }
  /**
    * Updates outline selectors and SVG path to open notch.
    * @param {number} notchWidth The notch width in the outline.
    * @param {boolean=} isRtl Determines if outline is rtl. If rtl is true, notch
    * will be right justified in outline path, otherwise left justified.
    */


  notch(notchWidth, isRtl) {
    this.foundation_.notch(notchWidth, isRtl);
  }
  /**
   * Updates the outline selectors to close notch and return it to idle state.
   */


  closeNotch() {
    this.foundation_.closeNotch();
  }
  /**
   * @return {!MDCNotchedOutlineFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default({
      getWidth: () => this.root_.offsetWidth,
      getHeight: () => this.root_.offsetHeight,
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      setOutlinePathAttr: value => {
        const path = this.root_.querySelector(_constants.strings.PATH_SELECTOR);
        path.setAttribute('d', value);
      },
      getIdleOutlineStyleValue: propertyName => {
        const idleOutlineElement = this.root_.parentNode.querySelector(_constants.strings.IDLE_OUTLINE_SELECTOR);
        return window.getComputedStyle(idleOutlineElement).getPropertyValue(propertyName);
      }
    });
  }

}

exports.MDCNotchedOutline = MDCNotchedOutline;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/notched-outline/adapter.js","./foundation":"node_modules/@material/notched-outline/foundation.js","./constants":"node_modules/@material/notched-outline/constants.js"}],"node_modules/@material/textfield/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCTextFieldFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
Object.defineProperty(exports, "MDCTextFieldHelperText", {
  enumerable: true,
  get: function () {
    return _index3.MDCTextFieldHelperText;
  }
});
Object.defineProperty(exports, "MDCTextFieldHelperTextFoundation", {
  enumerable: true,
  get: function () {
    return _index3.MDCTextFieldHelperTextFoundation;
  }
});
Object.defineProperty(exports, "MDCTextFieldIcon", {
  enumerable: true,
  get: function () {
    return _index4.MDCTextFieldIcon;
  }
});
Object.defineProperty(exports, "MDCTextFieldIconFoundation", {
  enumerable: true,
  get: function () {
    return _index4.MDCTextFieldIconFoundation;
  }
});
exports.MDCTextField = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _index = require("@material/ripple/index");

var _util = require("@material/ripple/util");

var _constants = require("./constants");

var _adapter = require("./adapter");

var _foundation = _interopRequireDefault(require("./foundation"));

var _index2 = require("@material/line-ripple/index");

var _index3 = require("./helper-text/index");

var _index4 = require("./icon/index");

var _index5 = require("@material/floating-label/index");

var _index6 = require("@material/notched-outline/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends {MDCComponent<!MDCTextFieldFoundation>}
 * @final
 */
class MDCTextField extends _component.default {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @private {?Element} */

    this.input_;
    /** @type {?MDCRipple} */

    this.ripple;
    /** @private {?MDCLineRipple} */

    this.lineRipple_;
    /** @private {?MDCTextFieldHelperText} */

    this.helperText_;
    /** @private {?MDCTextFieldIcon} */

    this.icon_;
    /** @private {?MDCFloatingLabel} */

    this.label_;
    /** @private {?MDCNotchedOutline} */

    this.outline_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCTextField}
   */


  static attachTo(root) {
    return new MDCTextField(root);
  }
  /**
   * @param {(function(!Element): !MDCRipple)=} rippleFactory A function which
   * creates a new MDCRipple.
   * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which
   * creates a new MDCLineRipple.
   * @param {(function(!Element): !MDCTextFieldHelperText)=} helperTextFactory A function which
   * creates a new MDCTextFieldHelperText.
   * @param {(function(!Element): !MDCTextFieldIcon)=} iconFactory A function which
   * creates a new MDCTextFieldIcon.
   * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which
   * creates a new MDCFloatingLabel.
   * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which
   * creates a new MDCNotchedOutline.
   */


  initialize(rippleFactory = (el, foundation) => new _index.MDCRipple(el, foundation), lineRippleFactory = el => new _index2.MDCLineRipple(el), helperTextFactory = el => new _index3.MDCTextFieldHelperText(el), iconFactory = el => new _index4.MDCTextFieldIcon(el), labelFactory = el => new _index5.MDCFloatingLabel(el), outlineFactory = el => new _index6.MDCNotchedOutline(el)) {
    this.input_ = this.root_.querySelector(_constants.strings.INPUT_SELECTOR);
    const labelElement = this.root_.querySelector(_constants.strings.LABEL_SELECTOR);

    if (labelElement) {
      this.label_ = labelFactory(labelElement);
    }

    const lineRippleElement = this.root_.querySelector(_constants.strings.LINE_RIPPLE_SELECTOR);

    if (lineRippleElement) {
      this.lineRipple_ = lineRippleFactory(lineRippleElement);
    }

    const outlineElement = this.root_.querySelector(_constants.strings.OUTLINE_SELECTOR);

    if (outlineElement) {
      this.outline_ = outlineFactory(outlineElement);
    }

    if (this.input_.hasAttribute(_constants.strings.ARIA_CONTROLS)) {
      const helperTextElement = document.getElementById(this.input_.getAttribute(_constants.strings.ARIA_CONTROLS));

      if (helperTextElement) {
        this.helperText_ = helperTextFactory(helperTextElement);
      }
    }

    const iconElement = this.root_.querySelector(_constants.strings.ICON_SELECTOR);

    if (iconElement) {
      this.icon_ = iconFactory(iconElement);
    }

    this.ripple = null;

    if (!this.root_.classList.contains(_constants.cssClasses.TEXTAREA) && !this.root_.classList.contains(_constants.cssClasses.OUTLINED)) {
      const MATCHES = (0, _util.getMatchesProperty)(HTMLElement.prototype);
      const adapter = Object.assign(_index.MDCRipple.createAdapter(
      /** @type {!RippleCapableSurface} */
      this), {
        isSurfaceActive: () => this.input_[MATCHES](':active'),
        registerInteractionHandler: (type, handler) => this.input_.addEventListener(type, handler),
        deregisterInteractionHandler: (type, handler) => this.input_.removeEventListener(type, handler)
      });
      const foundation = new _index.MDCRippleFoundation(adapter);
      this.ripple = rippleFactory(this.root_, foundation);
    }
  }

  destroy() {
    if (this.ripple) {
      this.ripple.destroy();
    }

    if (this.lineRipple_) {
      this.lineRipple_.destroy();
    }

    if (this.helperText_) {
      this.helperText_.destroy();
    }

    if (this.icon_) {
      this.icon_.destroy();
    }

    if (this.label_) {
      this.label_.destroy();
    }

    if (this.outline_) {
      this.outline_.destroy();
    }

    super.destroy();
  }
  /**
   * Initiliazes the Text Field's internal state based on the environment's
   * state.
   */


  initialSyncWithDom() {
    this.disabled = this.input_.disabled;
  }
  /**
   * @return {string} The value of the input.
   */


  get value() {
    return this.foundation_.getValue();
  }
  /**
   * @param {string} value The value to set on the input.
   */


  set value(value) {
    this.foundation_.setValue(value);
  }
  /**
   * @return {boolean} True if the Text Field is disabled.
   */


  get disabled() {
    return this.foundation_.isDisabled();
  }
  /**
   * @param {boolean} disabled Sets the Text Field disabled or enabled.
   */


  set disabled(disabled) {
    this.foundation_.setDisabled(disabled);
  }
  /**
   * @return {boolean} valid True if the Text Field is valid.
   */


  get valid() {
    return this.foundation_.isValid();
  }
  /**
   * @param {boolean} valid Sets the Text Field valid or invalid.
   */


  set valid(valid) {
    this.foundation_.setValid(valid);
  }
  /**
   * @return {boolean} True if the Text Field is required.
   */


  get required() {
    return this.input_.required;
  }
  /**
   * @param {boolean} required Sets the Text Field to required.
   */


  set required(required) {
    this.input_.required = required;
  }
  /**
   * @return {string} The input element's validation pattern.
   */


  get pattern() {
    return this.input_.pattern;
  }
  /**
   * @param {string} pattern Sets the input element's validation pattern.
   */


  set pattern(pattern) {
    this.input_.pattern = pattern;
  }
  /**
   * @return {number} The input element's minLength.
   */


  get minLength() {
    return this.input_.minLength;
  }
  /**
   * @param {number} minLength Sets the input element's minLength.
   */


  set minLength(minLength) {
    this.input_.minLength = minLength;
  }
  /**
   * @return {number} The input element's maxLength.
   */


  get maxLength() {
    return this.input_.maxLength;
  }
  /**
   * @param {number} maxLength Sets the input element's maxLength.
   */


  set maxLength(maxLength) {
    // Chrome throws exception if maxLength is set < 0
    if (maxLength < 0) {
      this.input_.removeAttribute('maxLength');
    } else {
      this.input_.maxLength = maxLength;
    }
  }
  /**
   * @return {string} The input element's min.
   */


  get min() {
    return this.input_.min;
  }
  /**
   * @param {string} min Sets the input element's min.
   */


  set min(min) {
    this.input_.min = min;
  }
  /**
   * @return {string} The input element's max.
   */


  get max() {
    return this.input_.max;
  }
  /**
   * @param {string} max Sets the input element's max.
   */


  set max(max) {
    this.input_.max = max;
  }
  /**
   * @return {string} The input element's step.
   */


  get step() {
    return this.input_.step;
  }
  /**
   * @param {string} step Sets the input element's step.
   */


  set step(step) {
    this.input_.step = step;
  }
  /**
   * Sets the helper text element content.
   * @param {string} content
   */


  set helperTextContent(content) {
    this.foundation_.setHelperTextContent(content);
  }
  /**
   * Sets the aria label of the icon.
   * @param {string} label
   */


  set iconAriaLabel(label) {
    this.foundation_.setIconAriaLabel(label);
  }
  /**
   * Sets the text content of the icon.
   * @param {string} content
   */


  set iconContent(content) {
    this.foundation_.setIconContent(content);
  }
  /**
   * Enables or disables the use of native validation. Use this for custom validation.
   * @param {boolean} useNativeValidation Set this to false to ignore native input validation.
   */


  set useNativeValidation(useNativeValidation) {
    this.foundation_.setUseNativeValidation(useNativeValidation);
  }
  /**
   * Recomputes the outline SVG path for the outline element.
   */


  layout() {
    const openNotch = this.foundation_.shouldFloat;
    this.foundation_.notchOutline(openNotch);
  }
  /**
   * @return {!MDCTextFieldFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCTextFieldAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      registerTextFieldInteractionHandler: (evtType, handler) => this.root_.addEventListener(evtType, handler),
      deregisterTextFieldInteractionHandler: (evtType, handler) => this.root_.removeEventListener(evtType, handler),
      registerValidationAttributeChangeHandler: handler => {
        const getAttributesList = mutationsList => mutationsList.map(mutation => mutation.attributeName);

        const observer = new MutationObserver(mutationsList => handler(getAttributesList(mutationsList)));
        const targetNode = this.root_.querySelector(_constants.strings.INPUT_SELECTOR);
        const config = {
          attributes: true
        };
        observer.observe(targetNode, config);
        return observer;
      },
      deregisterValidationAttributeChangeHandler: observer => observer.disconnect(),
      isFocused: () => {
        return document.activeElement === this.root_.querySelector(_constants.strings.INPUT_SELECTOR);
      },
      isRtl: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl'
    }, this.getInputAdapterMethods_(), this.getLabelAdapterMethods_(), this.getLineRippleAdapterMethods_(), this.getOutlineAdapterMethods_()), this.getFoundationMap_());
  }
  /**
   * @return {!{
   *   shakeLabel: function(boolean): undefined,
   *   floatLabel: function(boolean): undefined,
   *   hasLabel: function(): boolean,
   *   getLabelWidth: function(): number,
   * }}
   */


  getLabelAdapterMethods_() {
    return {
      shakeLabel: shouldShake => this.label_.shake(shouldShake),
      floatLabel: shouldFloat => this.label_.float(shouldFloat),
      hasLabel: () => !!this.label_,
      getLabelWidth: () => this.label_.getWidth()
    };
  }
  /**
   * @return {!{
   *   activateLineRipple: function(): undefined,
   *   deactivateLineRipple: function(): undefined,
   *   setLineRippleTransformOrigin: function(number): undefined,
   * }}
   */


  getLineRippleAdapterMethods_() {
    return {
      activateLineRipple: () => {
        if (this.lineRipple_) {
          this.lineRipple_.activate();
        }
      },
      deactivateLineRipple: () => {
        if (this.lineRipple_) {
          this.lineRipple_.deactivate();
        }
      },
      setLineRippleTransformOrigin: normalizedX => {
        if (this.lineRipple_) {
          this.lineRipple_.setRippleCenter(normalizedX);
        }
      }
    };
  }
  /**
   * @return {!{
   *   notchOutline: function(number, boolean): undefined,
   *   hasOutline: function(): boolean,
   * }}
   */


  getOutlineAdapterMethods_() {
    return {
      notchOutline: (labelWidth, isRtl) => this.outline_.notch(labelWidth, isRtl),
      closeOutline: () => this.outline_.closeNotch(),
      hasOutline: () => !!this.outline_
    };
  }
  /**
   * @return {!{
   *   registerInputInteractionHandler: function(string, function()): undefined,
   *   deregisterInputInteractionHandler: function(string, function()): undefined,
   *   getNativeInput: function(): ?Element,
   * }}
   */


  getInputAdapterMethods_() {
    return {
      registerInputInteractionHandler: (evtType, handler) => this.input_.addEventListener(evtType, handler),
      deregisterInputInteractionHandler: (evtType, handler) => this.input_.removeEventListener(evtType, handler),
      getNativeInput: () => this.input_
    };
  }
  /**
   * Returns a map of all subcomponents to subfoundations.
   * @return {!FoundationMapType}
   */


  getFoundationMap_() {
    return {
      helperText: this.helperText_ ? this.helperText_.foundation : undefined,
      icon: this.icon_ ? this.icon_.foundation : undefined
    };
  }

}

exports.MDCTextField = MDCTextField;
},{"@material/base/component":"node_modules/@material/base/component.js","@material/ripple/index":"node_modules/@material/ripple/index.js","@material/ripple/util":"node_modules/@material/ripple/util.js","./constants":"node_modules/@material/textfield/constants.js","./adapter":"node_modules/@material/textfield/adapter.js","./foundation":"node_modules/@material/textfield/foundation.js","@material/line-ripple/index":"node_modules/@material/line-ripple/index.js","./helper-text/index":"node_modules/@material/textfield/helper-text/index.js","./icon/index":"node_modules/@material/textfield/icon/index.js","@material/floating-label/index":"node_modules/@material/floating-label/index.js","@material/notched-outline/index":"node_modules/@material/notched-outline/index.js"}],"node_modules/preact-material-components/TextField/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TextField = exports.TextFieldInput = exports.Label = exports.HelperText = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _textfield = require("@material/textfield");

var _preact = require("preact");

var _MaterialComponent4 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Icon = _interopRequireDefault(require("../Icon"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var HelperText =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(HelperText, _MaterialComponent);

  function HelperText() {
    var _this;

    (0, _classCallCheck2.default)(this, HelperText);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HelperText).apply(this, arguments));
    _this.componentName = 'text-field-helper-text';
    _this.mdcProps = ['persistent', 'validation-msg'];
    return _this;
  }

  (0, _createClass2.default)(HelperText, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("p", Object.assign({}, props, {
        "aria-hidden": "true"
      }), props.children);
    }
  }]);
  return HelperText;
}(_MaterialComponent4.default);

exports.HelperText = HelperText;

var Label =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(Label, _MaterialComponent2);

  function Label() {
    var _this2;

    (0, _classCallCheck2.default)(this, Label);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Label).apply(this, arguments));
    _this2.componentName = 'floating-label';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(Label, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("label", Object.assign({}, props), props.children);
    }
  }]);
  return Label;
}(_MaterialComponent4.default);

exports.Label = Label;

var TextFieldInput =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(TextFieldInput, _MaterialComponent3);

  function TextFieldInput() {
    var _this3;

    (0, _classCallCheck2.default)(this, TextFieldInput);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextFieldInput).apply(this, arguments));
    _this3.state = {
      jsComponentAttached: false
    };
    _this3.componentName = 'text-field';
    _this3.mdcProps = ['fullwidth', 'textarea', 'dense', 'disabled', 'box', 'outlined'];
    _this3.mdcNotifyProps = ['valid', 'disabled'];
    return _this3;
  }

  (0, _createClass2.default)(TextFieldInput, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this4 = this;

      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentDidMount", this).call(this);
      this.setState({
        jsComponentAttached: true
      }, function () {
        if (_this4.control) {
          _this4.MDComponent = new _textfield.MDCTextField(_this4.control);

          if (_this4.props.onInit) {
            _this4.props.onInit(_this4.MDComponent);
          }

          if (_this4.props.value) {
            _this4.MDComponent.value = _this4.props.value;
          }
        }

        _this4.afterComponentDidMount();
      });
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentWillReceiveProps", this).call(this, nextProps);

      if (this.MDComponent && nextProps.value && this.props.value !== nextProps.value && this.MDComponent.value !== nextProps.value) {
        this.MDComponent.value = nextProps.value;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "getValue",
    value: function getValue() {
      return this.MDComponent ? this.MDComponent.value : null;
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var className = allprops.className,
          outerStyle = allprops.outerStyle,
          outlined = allprops.outlined,
          props = __rest(allprops, ["className", "outerStyle", "outlined"]);

      className = className || '';

      if ('leadingIcon' in props) {
        className += ' mdc-text-field--box mdc-text-field--with-leading-icon';
      }

      if ('trailingIcon' in props) {
        className += ' mdc-text-field--box mdc-text-field--with-trailing-icon';
      }

      if ('value' in props && this.state.jsComponentAttached) {
        className = [className, 'mdc-text-field--upgraded'].join(' ');
      }

      if (props.label && props.fullwidth) {
        console.log('Passing a "label" prop is not supported when using a "fullwidth" text field.');
      } // noinspection RequiredAttributes


      return (0, _preact.h)("div", {
        className: className,
        ref: this.setControlRef,
        style: outerStyle
      }, props.leadingIcon ? (0, _preact.h)(_Icon.default, {
        className: "mdc-text-field__icon"
      }, props.leadingIcon) : null, props.textarea ? (0, _preact.h)("textarea", Object.assign({
        className: "mdc-text-field__input"
      }, props)) : (0, _preact.h)("input", Object.assign({
        type: props.type || 'text',
        className: "mdc-text-field__input",
        placeholder: this.state.jsComponentAttached ? undefined : props.label + this.props.required ? '*' : ''
      }, props)), props.label && this.state.jsComponentAttached && (0, _preact.h)(Label, {
        for: props.id
      }, props.label), props.trailingIcon ? (0, _preact.h)(_Icon.default, {
        className: "mdc-text-field__icon"
      }, props.trailingIcon) : null, props.textarea || outlined ? null : (0, _preact.h)("div", {
        class: "mdc-line-ripple"
      }), outlined ? (0, _preact.h)("div", {
        class: "mdc-notched-outline"
      }, (0, _preact.h)("svg", null, (0, _preact.h)("path", {
        className: "mdc-notched-outline__path"
      }))) : null, outlined ? (0, _preact.h)("div", {
        className: "mdc-notched-outline__idle"
      }) : null);
    }
  }, {
    key: "buildClassName",
    value: function buildClassName(props) {
      var cn = (0, _get2.default)((0, _getPrototypeOf2.default)(TextFieldInput.prototype), "buildClassName", this).call(this, props);

      if (this.MDComponent) {
        cn += ' mdc-text-field--upgraded';
      }

      return cn;
    }
  }]);
  return TextFieldInput;
}(_MaterialComponent4.default);

exports.TextFieldInput = TextFieldInput;
TextFieldInput.defaultProps = {
  valid: true
};

var TextField =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(TextField, _Component);

  function TextField() {
    var _this5;

    (0, _classCallCheck2.default)(this, TextField);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TextField).apply(this, arguments));
    _this5.id = TextField.uid();
    return _this5;
  }

  (0, _createClass2.default)(TextField, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.setState({
        jsComponentAttached: true
      });
    }
  }, {
    key: "render",
    value: function render(allprops) {
      var _this6 = this;

      var className = allprops.className,
          outerStyle = allprops.outerStyle,
          helperTextPersistent = allprops.helperTextPersistent,
          helperTextValidationMsg = allprops.helperTextValidationMsg,
          props = __rest(allprops, ["className", "outerStyle", "helperTextPersistent", "helperTextValidationMsg"]);

      var showDiv = props.helperText;

      if ((props.helperText || props.label) && !props.id) {
        props.id = "tf-".concat(this.id);
      } // Helper text


      var helperTextProps = {
        persistent: helperTextPersistent,
        'validation-msg': helperTextValidationMsg
      };
      return showDiv ? (0, _preact.h)("div", {
        className: className,
        style: outerStyle
      }, (0, _preact.h)(TextFieldInput, Object.assign({}, props, {
        onInit: function onInit(MDComponent) {
          _this6.MDComponent = MDComponent;
        },
        "aria-controls": props.helperText && "".concat(props.id, "-helper-text")
      })), props.helperText && (0, _preact.h)(HelperText, Object.assign({
        id: "".concat(props.id, "-helper-text")
      }, helperTextProps), props.helperText)) : (0, _preact.h)(TextFieldInput, Object.assign({}, props, {
        className: className,
        outerStyle: outerStyle,
        onInit: function onInit(MDComponent) {
          _this6.MDComponent = MDComponent;
        }
      }));
    }
  }], [{
    key: "uid",
    value: function uid() {
      return ++this.uidCounter;
    }
  }]);
  return TextField;
}(_preact.Component);

exports.TextField = TextField;
TextField.uidCounter = 0;

var default_1 =
/*#__PURE__*/
function (_TextField) {
  (0, _inherits2.default)(default_1, _TextField);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(TextField);

exports.default = default_1;
default_1.HelperText = HelperText;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/textfield":"node_modules/@material/textfield/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Icon":"node_modules/preact-material-components/Icon/index.js"}],"node_modules/@material/select/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Select. Provides an interface for managing
 * - classes
 * - dom
 * - event handlers
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCSelectAdapter {
  /**
   * Adds class to root element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the root element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns true if the root element contains the given class name.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Activates the bottom line, showing a focused state.
   */


  activateBottomLine() {}
  /**
   * Deactivates the bottom line.
   */


  deactivateBottomLine() {}
  /**
   * Returns the selected value of the select element.
   * @return {string}
   */


  getValue() {}
  /**
   * Returns true if the direction of the root element is set to RTL.
   * @return {boolean}
   */


  isRtl() {}
  /**
   * Returns true if label element exists, false if it doesn't.
   * @return {boolean}
   */


  hasLabel() {}
  /**
   * Floats label determined based off of the shouldFloat argument.
   * @param {boolean} shouldFloat
   */


  floatLabel(shouldFloat) {}
  /**
   * Returns width of label in pixels, if the label exists.
   * @return {number}
   */


  getLabelWidth() {}
  /**
   * Returns true if outline element exists, false if it doesn't.
   * @return {boolean}
   */


  hasOutline() {}
  /**
   * Updates SVG Path and outline element based on the
   * label element width and RTL context, if the outline exists.
   * @param {number} labelWidth
   * @param {boolean=} isRtl
   */


  notchOutline(labelWidth, isRtl) {}
  /**
   * Closes notch in outline element, if the outline exists.
   */


  closeOutline() {}

}

var _default = MDCSelectAdapter;
exports.default = _default;
},{}],"node_modules/@material/select/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  BOX: 'mdc-select--box',
  DISABLED: 'mdc-select--disabled',
  ROOT: 'mdc-select',
  OUTLINED: 'mdc-select--outlined'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  CHANGE_EVENT: 'MDCSelect:change',
  LINE_RIPPLE_SELECTOR: '.mdc-line-ripple',
  LABEL_SELECTOR: '.mdc-floating-label',
  NATIVE_CONTROL_SELECTOR: '.mdc-select__native-control',
  OUTLINE_SELECTOR: '.mdc-notched-outline'
};
/** @enum {number} */

exports.strings = strings;
const numbers = {
  LABEL_SCALE: 0.75
};
exports.numbers = numbers;
},{}],"node_modules/@material/select/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/base/index");

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/* eslint-enable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCSelectAdapter>}
 * @final
 */
class MDCSelectFoundation extends _index.MDCFoundation {
  /** @return enum {string} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {number} */


  static get numbers() {
    return _constants.numbers;
  }
  /** @return enum {string} */


  static get strings() {
    return _constants.strings;
  }
  /**
   * {@see MDCSelectAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCSelectAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCSelectAdapter} */
      {
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        hasClass: () =>
        /* className: string */
        false,
        activateBottomLine: () => {},
        deactivateBottomLine: () => {},
        getValue: () => {},
        isRtl: () => false,
        hasLabel: () => false,
        floatLabel: () =>
        /* value: boolean */
        {},
        getLabelWidth: () => {},
        hasOutline: () => false,
        notchOutline: () =>
        /* labelWidth: number, isRtl: boolean */
        {},
        closeOutline: () => {}
      }
    );
  }
  /**
   * @param {!MDCSelectAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCSelectFoundation.defaultAdapter, adapter));
  }
  /**
   * Updates the styles of the select to show the disasbled state.
   * @param {boolean} disabled
   */


  updateDisabledStyle(disabled) {
    const {
      DISABLED
    } = MDCSelectFoundation.cssClasses;

    if (disabled) {
      this.adapter_.addClass(DISABLED);
    } else {
      this.adapter_.removeClass(DISABLED);
    }
  }
  /**
   * Handles value changes, via change event or programmatic updates.
   */


  handleChange() {
    const optionHasValue = this.adapter_.getValue().length > 0;
    this.adapter_.floatLabel(optionHasValue);
    this.notchOutline(optionHasValue);
  }
  /**
   * Handles focus events from root element.
   */


  handleFocus() {
    this.adapter_.floatLabel(true);
    this.notchOutline(true);
    this.adapter_.activateBottomLine();
  }
  /**
   * Handles blur events from root element.
   */


  handleBlur() {
    this.handleChange();
    this.adapter_.deactivateBottomLine();
  }
  /**
   * Opens/closes the notched outline.
   * @param {boolean} openNotch
   */


  notchOutline(openNotch) {
    if (!this.adapter_.hasOutline()) {
      return;
    }

    if (openNotch) {
      const labelScale = _constants.numbers.LABEL_SCALE;
      const labelWidth = this.adapter_.getLabelWidth() * labelScale;
      const isRtl = this.adapter_.isRtl();
      this.adapter_.notchOutline(labelWidth, isRtl);
    } else {
      this.adapter_.closeOutline();
    }
  }

}

var _default = MDCSelectFoundation;
exports.default = _default;
},{"@material/base/index":"node_modules/@material/base/index.js","./adapter":"node_modules/@material/select/adapter.js","./constants":"node_modules/@material/select/constants.js"}],"node_modules/@material/select/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCSelectFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCSelect = void 0;

var _index = require("@material/base/index");

var _index2 = require("@material/floating-label/index");

var _index3 = require("@material/line-ripple/index");

var _index4 = require("@material/ripple/index");

var _index5 = require("@material/notched-outline/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCSelectFoundation>
 */
class MDCSelect extends _index.MDCComponent {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @private {?Element} */

    this.nativeControl_;
    /** @type {?MDCRipple} */

    this.ripple;
    /** @private {?MDCLineRipple} */

    this.lineRipple_;
    /** @private {?MDCFloatingLabel} */

    this.label_;
    /** @private {?MDCNotchedOutline} */

    this.outline_;
    /** @private {!Function} */

    this.handleChange_;
    /** @private {!Function} */

    this.handleFocus_;
    /** @private {!Function} */

    this.handleBlur_;
    /** @private {!Function} */

    this.handleClick_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCSelect}
   */


  static attachTo(root) {
    return new MDCSelect(root);
  }
  /**
   * @return {string} The value of the select.
   */


  get value() {
    return this.nativeControl_.value;
  }
  /**
   * @param {string} value The value to set on the select.
   */


  set value(value) {
    this.nativeControl_.value = value;
    this.foundation_.handleChange();
  }
  /**
   * @return {number} The selected index of the select.
   */


  get selectedIndex() {
    return this.nativeControl_.selectedIndex;
  }
  /**
   * @param {number} selectedIndex The index of the option to be set on the select.
   */


  set selectedIndex(selectedIndex) {
    this.nativeControl_.selectedIndex = selectedIndex;
    this.foundation_.handleChange();
  }
  /**
   * @return {boolean} True if the select is disabled.
   */


  get disabled() {
    return this.nativeControl_.disabled;
  }
  /**
   * @param {boolean} disabled Sets the select disabled or enabled.
   */


  set disabled(disabled) {
    this.nativeControl_.disabled = disabled;
    this.foundation_.updateDisabledStyle(disabled);
  }
  /**
   * Recomputes the outline SVG path for the outline element.
   */


  layout() {
    const openNotch = this.nativeControl_.value.length > 0;
    this.foundation_.notchOutline(openNotch);
  }
  /**
   * @param {(function(!Element): !MDCLineRipple)=} lineRippleFactory A function which creates a new MDCLineRipple.
   * @param {(function(!Element): !MDCFloatingLabel)=} labelFactory A function which creates a new MDCFloatingLabel.
   * @param {(function(!Element): !MDCNotchedOutline)=} outlineFactory A function which creates a new MDCNotchedOutline.
   */


  initialize(labelFactory = el => new _index2.MDCFloatingLabel(el), lineRippleFactory = el => new _index3.MDCLineRipple(el), outlineFactory = el => new _index5.MDCNotchedOutline(el)) {
    this.nativeControl_ = this.root_.querySelector(_constants.strings.NATIVE_CONTROL_SELECTOR);
    const labelElement = this.root_.querySelector(_constants.strings.LABEL_SELECTOR);

    if (labelElement) {
      this.label_ = labelFactory(labelElement);
    }

    const lineRippleElement = this.root_.querySelector(_constants.strings.LINE_RIPPLE_SELECTOR);

    if (lineRippleElement) {
      this.lineRipple_ = lineRippleFactory(lineRippleElement);
    }

    const outlineElement = this.root_.querySelector(_constants.strings.OUTLINE_SELECTOR);

    if (outlineElement) {
      this.outline_ = outlineFactory(outlineElement);
    }

    if (this.root_.classList.contains(_constants.cssClasses.BOX)) {
      this.ripple = this.initRipple_();
    }
  }
  /**
   * @private
   * @return {!MDCRipple}
   */


  initRipple_() {
    const adapter = Object.assign(_index4.MDCRipple.createAdapter(this), {
      registerInteractionHandler: (type, handler) => this.nativeControl_.addEventListener(type, handler),
      deregisterInteractionHandler: (type, handler) => this.nativeControl_.removeEventListener(type, handler)
    });
    const foundation = new _index4.MDCRippleFoundation(adapter);
    return new _index4.MDCRipple(this.root_, foundation);
  }
  /**
   * Initializes the select's event listeners and internal state based
   * on the environment's state.
   */


  initialSyncWithDOM() {
    this.handleChange_ = () => this.foundation_.handleChange();

    this.handleFocus_ = () => this.foundation_.handleFocus();

    this.handleBlur_ = () => this.foundation_.handleBlur();

    this.handleClick_ = evt => this.setTransformOrigin_(evt);

    this.nativeControl_.addEventListener('change', this.handleChange_);
    this.nativeControl_.addEventListener('focus', this.handleFocus_);
    this.nativeControl_.addEventListener('blur', this.handleBlur_);

    if (this.lineRipple_) {
      ['mousedown', 'touchstart'].forEach(evtType => {
        this.nativeControl_.addEventListener(evtType, this.handleClick_);
      });
    } // Initially sync floating label


    this.foundation_.handleChange();

    if (this.nativeControl_.disabled) {
      this.disabled = true;
    }
  }

  destroy() {
    this.nativeControl_.removeEventListener('change', this.handleChange_);
    this.nativeControl_.removeEventListener('focus', this.handleFocus_);
    this.nativeControl_.removeEventListener('blur', this.handleBlur_);
    ['mousedown', 'touchstart'].forEach(evtType => {
      this.nativeControl_.removeEventListener(evtType, this.handleClick_);
    });

    if (this.ripple) {
      this.ripple.destroy();
    }

    if (this.outline_) {
      this.outline_.destroy();
    }

    super.destroy();
  }
  /**
   * @return {!MDCSelectFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCSelectAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      getValue: () => this.nativeControl_.value,
      isRtl: () => window.getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',
      activateBottomLine: () => {
        if (this.lineRipple_) {
          this.lineRipple_.activate();
        }
      },
      deactivateBottomLine: () => {
        if (this.lineRipple_) {
          this.lineRipple_.deactivate();
        }
      }
    }, this.getOutlineAdapterMethods_(), this.getLabelAdapterMethods_()));
  }
  /**
   * @return {!{
   *   hasOutline: function(): boolean,
   *   notchOutline: function(number, boolean): undefined,
   *   closeOutline: function(): undefined,
   * }}
   */


  getOutlineAdapterMethods_() {
    return {
      hasOutline: () => !!this.outline_,
      notchOutline: (labelWidth, isRtl) => {
        if (this.outline_) {
          this.outline_.notch(labelWidth, isRtl);
        }
      },
      closeOutline: () => {
        if (this.outline_) {
          this.outline_.closeNotch();
        }
      }
    };
  }
  /**
   * @return {!{
   *   hasLabel: function(): boolean,
   *   floatLabel: function(boolean): undefined,
   *   getLabelWidth: function(): number,
   * }}
   */


  getLabelAdapterMethods_() {
    return {
      hasLabel: () => !!this.label_,
      floatLabel: shouldFloat => {
        if (this.label_) {
          this.label_.float(shouldFloat);
        }
      },
      getLabelWidth: () => {
        return this.label_ ? this.label_.getWidth() : 0;
      }
    };
  }
  /**
   * Sets the line ripple's transform origin, so that the line ripple activate
   * animation will animate out from the user's click location.
   * @param {!(MouseEvent|TouchEvent)} evt
   */


  setTransformOrigin_(evt) {
    const targetClientRect = evt.target.getBoundingClientRect();
    const xCoordinate = evt.clientX;
    const normalizedX = xCoordinate - targetClientRect.left;
    this.lineRipple_.setRippleCenter(normalizedX);
  }

}

exports.MDCSelect = MDCSelect;
},{"@material/base/index":"node_modules/@material/base/index.js","@material/floating-label/index":"node_modules/@material/floating-label/index.js","@material/line-ripple/index":"node_modules/@material/line-ripple/index.js","@material/ripple/index":"node_modules/@material/ripple/index.js","@material/notched-outline/index":"node_modules/@material/notched-outline/index.js","./foundation":"node_modules/@material/select/foundation.js","./adapter":"node_modules/@material/select/adapter.js","./constants":"node_modules/@material/select/constants.js"}],"node_modules/preact-material-components/Select/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Select = exports.SelectOption = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _select = require("@material/select/");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent3 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var SelectOption =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(SelectOption, _MaterialComponent);

  function SelectOption() {
    var _this;

    (0, _classCallCheck2.default)(this, SelectOption);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SelectOption).apply(this, arguments));
    _this.componentName = 'select-item';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(SelectOption, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("option", Object.assign({}, props), props.children);
    }
  }]);
  return SelectOption;
}(_MaterialComponent3.default);

exports.SelectOption = SelectOption;

var Select =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(Select, _MaterialComponent2);

  function Select() {
    var _this2;

    (0, _classCallCheck2.default)(this, Select);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Select).apply(this, arguments));
    _this2.componentName = 'select';
    _this2.mdcProps = ['disabled', 'box', 'outlined'];
    return _this2;
  }

  (0, _createClass2.default)(Select, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Select.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _select.MDCSelect(this.control);
        this.MDComponent.listen('MDCSelect:change', this.onChanged);
      }

      this.updateSelection();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Select.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCSelect:change', this.onChanged);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      this.updateSelection();
    }
  }, {
    key: "onChanged",
    value: function onChanged(e) {
      if (this.MDComponent) {
        e = e || {};
        e.selectedIndex = e.selectedIndex || this.MDComponent.selectedIndex;

        if (this.props.onChange) {
          this.props.onChange(e);
        }
      }
    }
  }, {
    key: "updateSelection",
    value: function updateSelection() {
      if (this.MDComponent) {
        if (this.props.selectedIndex) {
          this.MDComponent.selectedIndex = typeof this.props.selectedIndex === 'number' ? this.props.selectedIndex : 0;
        }

        var selectedIndex = this.MDComponent.selectedIndex;

        if (selectedIndex === 0) {
          if (this.labelRef) {
            this.labelRef.classList.remove('mdc-floating-label--float-above');
          }
        } else {
          if (this.labelRef) {
            this.labelRef.classList.add('mdc-floating-label--float-above');
          }
        }
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var _this3 = this;

      var outlined = allprops.outlined,
          n = allprops.name,
          props = __rest(allprops, ["outlined", "name"]); // noinspection RequiredAttributes


      return (0, _preact.h)("div", Object.assign({
        ref: this.setControlRef
      }, props), (0, _preact.h)("select", {
        class: "mdc-select__native-control",
        name: n
      }, props.hintText && (0, _preact.h)("option", {
        value: "",
        disabled: true,
        selected: true
      }), props.children), props.hintText && (0, _preact.h)("div", {
        class: "mdc-floating-label",
        ref: function ref(_ref) {
          _this3.labelRef = _ref;
        }
      }, props.hintText), !outlined && (0, _preact.h)("div", {
        class: "mdc-line-ripple"
      }), outlined && (0, _preact.h)("div", {
        class: "mdc-notched-outline"
      }, (0, _preact.h)("svg", null, (0, _preact.h)("path", {
        class: "mdc-notched-outline__path"
      }))), outlined && (0, _preact.h)("div", {
        class: "mdc-notched-outline__idle"
      }));
    }
  }]);
  return Select;
}(_MaterialComponent3.default);

exports.Select = Select;

__decorate([_bindDecorator.bind], Select.prototype, "onChanged", null);

var default_1 =
/*#__PURE__*/
function (_Select) {
  (0, _inherits2.default)(default_1, _Select);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Select);

exports.default = default_1;
default_1.Item = SelectOption;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/select/":"node_modules/@material/select/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/Card/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Card = exports.CardMediaContent = exports.CardActionIcon = exports.CardActionButtons = exports.CardActionIcons = exports.CardActionButton = exports.CardMedia = exports.CardActions = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent6 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Button2 = _interopRequireDefault(require("../Button"));

var _Icon2 = _interopRequireDefault(require("../Icon"));

var CardActions =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(CardActions, _MaterialComponent);

  function CardActions() {
    var _this;

    (0, _classCallCheck2.default)(this, CardActions);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardActions).apply(this, arguments));
    _this.componentName = 'card__actions';
    _this.mdcProps = ['full-bleed'];
    return _this;
  }

  (0, _createClass2.default)(CardActions, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return CardActions;
}(_MaterialComponent6.default);

exports.CardActions = CardActions;

var CardMedia =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(CardMedia, _MaterialComponent2);

  function CardMedia() {
    var _this2;

    (0, _classCallCheck2.default)(this, CardMedia);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardMedia).apply(this, arguments));
    _this2.componentName = 'card__media';
    _this2.mdcProps = ['square', '16-9'];
    return _this2;
  }

  (0, _createClass2.default)(CardMedia, [{
    key: "materialDom",
    value: function materialDom(props) {
      if (props.sixteenByNine) {
        props.className = 'mdc-card__media--16-9';
      }

      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return CardMedia;
}(_MaterialComponent6.default);

exports.CardMedia = CardMedia;

var CardActionButton =
/*#__PURE__*/
function (_Button) {
  (0, _inherits2.default)(CardActionButton, _Button);

  function CardActionButton() {
    var _this3;

    (0, _classCallCheck2.default)(this, CardActionButton);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardActionButton).apply(this, arguments));
    _this3.componentName = 'card__action';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(CardActionButton, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("button", Object.assign({
        className: "mdc-button mdc-card__action--button"
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return CardActionButton;
}(_Button2.default);

exports.CardActionButton = CardActionButton;

var CardActionIcons =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(CardActionIcons, _MaterialComponent3);

  function CardActionIcons() {
    var _this4;

    (0, _classCallCheck2.default)(this, CardActionIcons);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardActionIcons).apply(this, arguments));
    _this4.componentName = 'card__action-icons';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(CardActionIcons, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return CardActionIcons;
}(_MaterialComponent6.default);

exports.CardActionIcons = CardActionIcons;

var CardActionButtons =
/*#__PURE__*/
function (_CardActionIcons) {
  (0, _inherits2.default)(CardActionButtons, _CardActionIcons);

  function CardActionButtons() {
    var _this5;

    (0, _classCallCheck2.default)(this, CardActionButtons);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardActionButtons).apply(this, arguments));
    _this5.componentName = 'card__action-buttons';
    return _this5;
  }

  return CardActionButtons;
}(CardActionIcons);

exports.CardActionButtons = CardActionButtons;

var CardActionIcon =
/*#__PURE__*/
function (_Icon) {
  (0, _inherits2.default)(CardActionIcon, _Icon);

  function CardActionIcon() {
    var _this6;

    (0, _classCallCheck2.default)(this, CardActionIcon);
    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardActionIcon).apply(this, arguments));
    _this6.componentName = 'card__action';
    _this6.mdcProps = [];
    return _this6;
  }

  (0, _createClass2.default)(CardActionIcon, [{
    key: "materialDom",
    value: function materialDom(props) {
      if (props.className) {
        props.className += ' mdc-card__action--icon';
      } else {
        props.className = 'mdc-card__action--icon';
      }

      return (0, _get2.default)((0, _getPrototypeOf2.default)(CardActionIcon.prototype), "materialDom", this).call(this, props);
    }
  }]);
  return CardActionIcon;
}(_Icon2.default);

exports.CardActionIcon = CardActionIcon;

var CardMediaContent =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(CardMediaContent, _MaterialComponent4);

  function CardMediaContent() {
    var _this7;

    (0, _classCallCheck2.default)(this, CardMediaContent);
    _this7 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CardMediaContent).apply(this, arguments));
    _this7.componentName = 'card__media-content';
    _this7.mdcProps = [];
    return _this7;
  }

  (0, _createClass2.default)(CardMediaContent, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return CardMediaContent;
}(_MaterialComponent6.default);

exports.CardMediaContent = CardMediaContent;

var Card =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(Card, _MaterialComponent5);

  function Card() {
    var _this8;

    (0, _classCallCheck2.default)(this, Card);
    _this8 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Card).apply(this, arguments));
    _this8.componentName = 'card';
    _this8.mdcProps = ['outlined'];
    return _this8;
  }

  (0, _createClass2.default)(Card, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return Card;
}(_MaterialComponent6.default);

exports.Card = Card;

var default_1 =
/*#__PURE__*/
function (_Card) {
  (0, _inherits2.default)(default_1, _Card);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Card);

exports.default = default_1;
default_1.Actions = CardActions;
default_1.ActionButtons = CardActionButtons;
default_1.ActionButton = CardActionButton;
default_1.ActionIcons = CardActionIcons;
default_1.ActionIcon = CardActionIcon;
default_1.Media = CardMedia;
default_1.CardMediaContent = CardMediaContent;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Button":"node_modules/preact-material-components/Button/index.js","../Icon":"node_modules/preact-material-components/Icon/index.js"}],"node_modules/preact-material-components/Elevation/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Elevation = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var generatedProps = [];

for (var elevationIndex = 0; elevationIndex < 25; elevationIndex++) {
  generatedProps.push('z' + elevationIndex);
}

var Elevation =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Elevation, _MaterialComponent);

  function Elevation() {
    var _this;

    (0, _classCallCheck2.default)(this, Elevation);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Elevation).apply(this, arguments));
    _this.componentName = 'elevation';
    _this.mdcProps = generatedProps;
    return _this;
  }

  (0, _createClass2.default)(Elevation, [{
    key: "materialDom",
    value: function materialDom(props) {
      var className;

      if (props.z) {
        className = 'mdc-elevation--z' + props.z;
      }

      return (0, _preact.h)("p", Object.assign({
        className: className
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return Elevation;
}(_MaterialComponent2.default);

exports.Elevation = Elevation;
var _default = Elevation;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/FormField/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Formfield = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var Formfield =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Formfield, _MaterialComponent);

  function Formfield() {
    var _this;

    (0, _classCallCheck2.default)(this, Formfield);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Formfield).apply(this, arguments));
    _this.componentName = 'form-field';
    _this.mdcProps = ['align-end'];
    return _this;
  }

  (0, _createClass2.default)(Formfield, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return Formfield;
}(_MaterialComponent2.default);

exports.Formfield = Formfield;
var _default = Formfield;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/dialog/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const cssClasses = {
  ROOT: 'mdc-dialog',
  OPEN: 'mdc-dialog--open',
  ANIMATING: 'mdc-dialog--animating',
  BACKDROP: 'mdc-dialog__backdrop',
  SCROLL_LOCK: 'mdc-dialog-scroll-lock',
  ACCEPT_BTN: 'mdc-dialog__footer__button--accept',
  CANCEL_BTN: 'mdc-dialog__footer__button--cancel'
};
exports.cssClasses = cssClasses;
const strings = {
  OPEN_DIALOG_SELECTOR: '.mdc-dialog--open',
  DIALOG_SURFACE_SELECTOR: '.mdc-dialog__surface',
  ACCEPT_SELECTOR: '.mdc-dialog__footer__button--accept',
  ACCEPT_EVENT: 'MDCDialog:accept',
  CANCEL_EVENT: 'MDCDialog:cancel'
};
exports.strings = strings;
const numbers = {
  DIALOG_ANIMATION_TIME_MS: 120
};
exports.numbers = numbers;
},{}],"node_modules/@material/dialog/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/base/index");

var _constants = require("./constants");

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCDialogFoundation extends _index.MDCFoundation {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get numbers() {
    return _constants.numbers;
  }

  static get defaultAdapter() {
    return {
      addClass: () =>
      /* className: string */
      {},
      removeClass: () =>
      /* className: string */
      {},
      addBodyClass: () =>
      /* className: string */
      {},
      removeBodyClass: () =>
      /* className: string */
      {},
      eventTargetHasClass: () =>
      /* target: EventTarget, className: string */

      /* boolean */
      false,
      registerInteractionHandler: () =>
      /* evt: string, handler: EventListener */
      {},
      deregisterInteractionHandler: () =>
      /* evt: string, handler: EventListener */
      {},
      registerSurfaceInteractionHandler: () =>
      /* evt: string, handler: EventListener */
      {},
      deregisterSurfaceInteractionHandler: () =>
      /* evt: string, handler: EventListener */
      {},
      registerDocumentKeydownHandler: () =>
      /* handler: EventListener */
      {},
      deregisterDocumentKeydownHandler: () =>
      /* handler: EventListener */
      {},
      notifyAccept: () => {},
      notifyCancel: () => {},
      trapFocusOnSurface: () => {},
      untrapFocusOnSurface: () => {},
      isDialog: () =>
      /* el: Element */

      /* boolean */
      false
    };
  }

  constructor(adapter) {
    super(Object.assign(MDCDialogFoundation.defaultAdapter, adapter));
    this.isOpen_ = false;

    this.componentClickHandler_ = evt => {
      if (this.adapter_.eventTargetHasClass(evt.target, _constants.cssClasses.BACKDROP)) {
        this.cancel(true);
      }
    };

    this.dialogClickHandler_ = evt => this.handleDialogClick_(evt);

    this.documentKeydownHandler_ = evt => {
      if (evt.key && evt.key === 'Escape' || evt.keyCode === 27) {
        this.cancel(true);
      }
    };

    this.timerId_ = 0;

    this.animationTimerEnd_ = evt => this.handleAnimationTimerEnd_(evt);
  }

  destroy() {
    // Ensure that dialog is cleaned up when destroyed
    if (this.isOpen_) {
      this.close();
    } // Final cleanup of animating class in case the timer has not completed.


    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);
    clearTimeout(this.timerId_);
  }

  open() {
    this.isOpen_ = true;
    this.disableScroll_();
    this.adapter_.registerDocumentKeydownHandler(this.documentKeydownHandler_);
    this.adapter_.registerSurfaceInteractionHandler('click', this.dialogClickHandler_);
    this.adapter_.registerInteractionHandler('click', this.componentClickHandler_);
    clearTimeout(this.timerId_);
    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);
  }

  close() {
    this.isOpen_ = false;
    this.enableScroll_();
    this.adapter_.deregisterSurfaceInteractionHandler('click', this.dialogClickHandler_);
    this.adapter_.deregisterDocumentKeydownHandler(this.documentKeydownHandler_);
    this.adapter_.deregisterInteractionHandler('click', this.componentClickHandler_);
    this.adapter_.untrapFocusOnSurface();
    clearTimeout(this.timerId_);
    this.timerId_ = setTimeout(this.animationTimerEnd_, MDCDialogFoundation.numbers.DIALOG_ANIMATION_TIME_MS);
    this.adapter_.addClass(MDCDialogFoundation.cssClasses.ANIMATING);
    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.OPEN);
  }

  isOpen() {
    return this.isOpen_;
  }

  accept(shouldNotify) {
    if (shouldNotify) {
      this.adapter_.notifyAccept();
    }

    this.close();
  }

  cancel(shouldNotify) {
    if (shouldNotify) {
      this.adapter_.notifyCancel();
    }

    this.close();
  }

  handleDialogClick_(evt) {
    const {
      target
    } = evt;

    if (this.adapter_.eventTargetHasClass(target, _constants.cssClasses.ACCEPT_BTN)) {
      this.accept(true);
    } else if (this.adapter_.eventTargetHasClass(target, _constants.cssClasses.CANCEL_BTN)) {
      this.cancel(true);
    }
  }

  handleAnimationTimerEnd_() {
    this.adapter_.removeClass(MDCDialogFoundation.cssClasses.ANIMATING);

    if (this.isOpen_) {
      this.adapter_.trapFocusOnSurface();
    }
  }

  disableScroll_() {
    this.adapter_.addBodyClass(_constants.cssClasses.SCROLL_LOCK);
  }

  enableScroll_() {
    this.adapter_.removeBodyClass(_constants.cssClasses.SCROLL_LOCK);
  }

}

exports.default = MDCDialogFoundation;
},{"@material/base/index":"node_modules/@material/base/index.js","./constants":"node_modules/@material/dialog/constants.js"}],"node_modules/tabbable/index.js":[function(require,module,exports) {
module.exports = function(el, options) {
  options = options || {};

  var elementDocument = el.ownerDocument || el;
  var basicTabbables = [];
  var orderedTabbables = [];

  // A node is "available" if
  // - it's computed style
  var isUnavailable = createIsUnavailable(elementDocument);

  var candidateSelectors = [
    'input',
    'select',
    'a[href]',
    'textarea',
    'button',
    '[tabindex]',
  ];

  var candidates = el.querySelectorAll(candidateSelectors.join(','));

  if (options.includeContainer) {
    var matches = Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

    if (
      candidateSelectors.some(function(candidateSelector) {
        return matches.call(el, candidateSelector);
      })
    ) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var candidate, candidateIndexAttr, candidateIndex;
  for (var i = 0, l = candidates.length; i < l; i++) {
    candidate = candidates[i];
    candidateIndexAttr = parseInt(candidate.getAttribute('tabindex'), 10)
    candidateIndex = isNaN(candidateIndexAttr) ? candidate.tabIndex : candidateIndexAttr;

    if (
      candidateIndex < 0
      || (candidate.tagName === 'INPUT' && candidate.type === 'hidden')
      || candidate.disabled
      || isUnavailable(candidate, elementDocument)
    ) {
      continue;
    }

    if (candidateIndex === 0) {
      basicTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        index: i,
        tabIndex: candidateIndex,
        node: candidate,
      });
    }
  }

  var tabbableNodes = orderedTabbables
    .sort(function(a, b) {
      return a.tabIndex === b.tabIndex ? a.index - b.index : a.tabIndex - b.tabIndex;
    })
    .map(function(a) {
      return a.node
    });

  Array.prototype.push.apply(tabbableNodes, basicTabbables);

  return tabbableNodes;
}

function createIsUnavailable(elementDocument) {
  // Node cache must be refreshed on every check, in case
  // the content of the element has changed
  var isOffCache = [];

  // "off" means `display: none;`, as opposed to "hidden",
  // which means `visibility: hidden;`. getComputedStyle
  // accurately reflects visiblity in context but not
  // "off" state, so we need to recursively check parents.

  function isOff(node, nodeComputedStyle) {
    if (node === elementDocument.documentElement) return false;

    // Find the cached node (Array.prototype.find not available in IE9)
    for (var i = 0, length = isOffCache.length; i < length; i++) {
      if (isOffCache[i][0] === node) return isOffCache[i][1];
    }

    nodeComputedStyle = nodeComputedStyle || elementDocument.defaultView.getComputedStyle(node);

    var result = false;

    if (nodeComputedStyle.display === 'none') {
      result = true;
    } else if (node.parentNode) {
      result = isOff(node.parentNode);
    }

    isOffCache.push([node, result]);

    return result;
  }

  return function isUnavailable(node) {
    if (node === elementDocument.documentElement) return false;

    var computedStyle = elementDocument.defaultView.getComputedStyle(node);

    if (isOff(node, computedStyle)) return true;

    return computedStyle.visibility === 'hidden';
  }
}

},{}],"node_modules/focus-trap/index.js":[function(require,module,exports) {
var tabbable = require('tabbable');

var listeningFocusTrap = null;

function focusTrap(element, userOptions) {
  var tabbableNodes = [];
  var firstTabbableNode = null;
  var lastTabbableNode = null;
  var nodeFocusedBeforeActivation = null;
  var active = false;
  var paused = false;
  var tabEvent = null;

  var container = (typeof element === 'string')
    ? document.querySelector(element)
    : element;

  var config = userOptions || {};
  config.returnFocusOnDeactivate = (userOptions && userOptions.returnFocusOnDeactivate !== undefined)
    ? userOptions.returnFocusOnDeactivate
    : true;
  config.escapeDeactivates = (userOptions && userOptions.escapeDeactivates !== undefined)
    ? userOptions.escapeDeactivates
    : true;

  var trap = {
    activate: activate,
    deactivate: deactivate,
    pause: pause,
    unpause: unpause,
  };

  return trap;

  function activate(activateOptions) {
    if (active) return;

    var defaultedActivateOptions = {
      onActivate: (activateOptions && activateOptions.onActivate !== undefined)
        ? activateOptions.onActivate
        : config.onActivate,
    };

    active = true;
    paused = false;
    nodeFocusedBeforeActivation = document.activeElement;

    if (defaultedActivateOptions.onActivate) {
      defaultedActivateOptions.onActivate();
    }

    addListeners();
    return trap;
  }

  function deactivate(deactivateOptions) {
    if (!active) return;

    var defaultedDeactivateOptions = {
      returnFocus: (deactivateOptions && deactivateOptions.returnFocus !== undefined)
        ? deactivateOptions.returnFocus
        : config.returnFocusOnDeactivate,
      onDeactivate: (deactivateOptions && deactivateOptions.onDeactivate !== undefined)
        ? deactivateOptions.onDeactivate
        : config.onDeactivate,
    };

    removeListeners();

    if (defaultedDeactivateOptions.onDeactivate) {
      defaultedDeactivateOptions.onDeactivate();
    }

    if (defaultedDeactivateOptions.returnFocus) {
      setTimeout(function () {
        tryFocus(nodeFocusedBeforeActivation);
      }, 0);
    }

    active = false;
    paused = false;
    return this;
  }

  function pause() {
    if (paused || !active) return;
    paused = true;
    removeListeners();
  }

  function unpause() {
    if (!paused || !active) return;
    paused = false;
    addListeners();
  }

  function addListeners() {
    if (!active) return;

    // There can be only one listening focus trap at a time
    if (listeningFocusTrap) {
      listeningFocusTrap.pause();
    }
    listeningFocusTrap = trap;

    updateTabbableNodes();
    // Ensure that the focused element doesn't capture the event that caused the focus trap activation
    setTimeout(function () {
      tryFocus(firstFocusNode());
    }, 0);
    document.addEventListener('focus', checkFocus, true);
    document.addEventListener('click', checkClick, true);
    document.addEventListener('mousedown', checkPointerDown, true);
    document.addEventListener('touchstart', checkPointerDown, true);
    document.addEventListener('keydown', checkKey, true);

    return trap;
  }

  function removeListeners() {
    if (!active || listeningFocusTrap !== trap) return;

    document.removeEventListener('focus', checkFocus, true);
    document.removeEventListener('click', checkClick, true);
    document.removeEventListener('mousedown', checkPointerDown, true);
    document.removeEventListener('touchstart', checkPointerDown, true);
    document.removeEventListener('keydown', checkKey, true);

    listeningFocusTrap = null;

    return trap;
  }

  function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    var node = optionValue;
    if (!optionValue) {
      return null;
    }
    if (typeof optionValue === 'string') {
      node = document.querySelector(optionValue);
      if (!node) {
        throw new Error('`' + optionName + '` refers to no known node');
      }
    }
    if (typeof optionValue === 'function') {
      node = optionValue();
      if (!node) {
        throw new Error('`' + optionName + '` did not return a node');
      }
    }
    return node;
  }

  function firstFocusNode() {
    var node;
    if (getNodeForOption('initialFocus') !== null) {
      node = getNodeForOption('initialFocus');
    } else if (container.contains(document.activeElement)) {
      node = document.activeElement;
    } else {
      node = tabbableNodes[0] || getNodeForOption('fallbackFocus');
    }

    if (!node) {
      throw new Error('You can\'t have a focus-trap without at least one focusable element');
    }

    return node;
  }

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event
  function checkPointerDown(e) {
    if (config.clickOutsideDeactivates && !container.contains(e.target)) {
      deactivate({ returnFocus: false });
    }
  }

  function checkClick(e) {
    if (config.clickOutsideDeactivates) return;
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
  }

  function checkFocus(e) {
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
    // Checking for a blur method here resolves a Firefox issue (#15)
    if (typeof e.target.blur === 'function') e.target.blur();

    if (tabEvent) {
      readjustFocus(tabEvent);
    }
  }

  function checkKey(e) {
    if (e.key === 'Tab' || e.keyCode === 9) {
      handleTab(e);
    }

    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
      deactivate();
    }
  }

  function handleTab(e) {
    updateTabbableNodes();

    if (e.target.hasAttribute('tabindex') && Number(e.target.getAttribute('tabindex')) < 0) {
      return tabEvent = e;
    }

    e.preventDefault();
    var currentFocusIndex = tabbableNodes.indexOf(e.target);

    if (e.shiftKey) {
      if (e.target === firstTabbableNode || tabbableNodes.indexOf(e.target) === -1) {
        return tryFocus(lastTabbableNode);
      }
      return tryFocus(tabbableNodes[currentFocusIndex - 1]);
    }

    if (e.target === lastTabbableNode) return tryFocus(firstTabbableNode);

    tryFocus(tabbableNodes[currentFocusIndex + 1]);
  }

  function updateTabbableNodes() {
    tabbableNodes = tabbable(container);
    firstTabbableNode = tabbableNodes[0];
    lastTabbableNode = tabbableNodes[tabbableNodes.length - 1];
  }

  function readjustFocus(e) {
    if (e.shiftKey) return tryFocus(lastTabbableNode);

    tryFocus(firstTabbableNode);
  }
}

function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
}

function tryFocus(node) {
  if (!node || !node.focus) return;
  if (node === document.activeElement)  return;

  node.focus();
  if (node.tagName.toLowerCase() === 'input') {
    node.select();
  }
}

module.exports = focusTrap;

},{"tabbable":"node_modules/tabbable/index.js"}],"node_modules/@material/dialog/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFocusTrapInstance = createFocusTrapInstance;

var _focusTrap = _interopRequireDefault(require("focus-trap"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
function createFocusTrapInstance(surfaceEl, acceptButtonEl, focusTrapFactory = _focusTrap.default) {
  return focusTrapFactory(surfaceEl, {
    initialFocus: acceptButtonEl,
    clickOutsideDeactivates: true
  });
}
},{"focus-trap":"node_modules/focus-trap/index.js"}],"node_modules/@material/dialog/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCDialogFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.util = exports.MDCDialog = void 0;

var _index = require("@material/base/index");

var _index2 = require("@material/ripple/index");

var _foundation = _interopRequireDefault(require("./foundation"));

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCDialog extends _index.MDCComponent {
  static attachTo(root) {
    return new MDCDialog(root);
  }

  get open() {
    return this.foundation_.isOpen();
  }

  get acceptButton_() {
    return this.root_.querySelector(_foundation.default.strings.ACCEPT_SELECTOR);
  }

  get dialogSurface_() {
    return this.root_.querySelector(_foundation.default.strings.DIALOG_SURFACE_SELECTOR);
  }

  initialize() {
    this.focusTrap_ = util.createFocusTrapInstance(this.dialogSurface_, this.acceptButton_);
    this.footerBtnRipples_ = [];
    const footerBtns = this.root_.querySelectorAll('.mdc-dialog__footer__button');

    for (let i = 0, footerBtn; footerBtn = footerBtns[i]; i++) {
      this.footerBtnRipples_.push(new _index2.MDCRipple(footerBtn));
    }
  }

  destroy() {
    this.footerBtnRipples_.forEach(ripple => ripple.destroy());
    super.destroy();
  }

  show() {
    this.foundation_.open();
  }

  close() {
    this.foundation_.close();
  }

  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      addBodyClass: className => document.body.classList.add(className),
      removeBodyClass: className => document.body.classList.remove(className),
      eventTargetHasClass: (target, className) => target.classList.contains(className),
      registerInteractionHandler: (evt, handler) => this.root_.addEventListener(evt, handler),
      deregisterInteractionHandler: (evt, handler) => this.root_.removeEventListener(evt, handler),
      registerSurfaceInteractionHandler: (evt, handler) => this.dialogSurface_.addEventListener(evt, handler),
      deregisterSurfaceInteractionHandler: (evt, handler) => this.dialogSurface_.removeEventListener(evt, handler),
      registerDocumentKeydownHandler: handler => document.addEventListener('keydown', handler),
      deregisterDocumentKeydownHandler: handler => document.removeEventListener('keydown', handler),
      notifyAccept: () => this.emit(_foundation.default.strings.ACCEPT_EVENT),
      notifyCancel: () => this.emit(_foundation.default.strings.CANCEL_EVENT),
      trapFocusOnSurface: () => this.focusTrap_.activate(),
      untrapFocusOnSurface: () => this.focusTrap_.deactivate(),
      isDialog: el => el === this.dialogSurface_
    });
  }

}

exports.MDCDialog = MDCDialog;
},{"@material/base/index":"node_modules/@material/base/index.js","@material/ripple/index":"node_modules/@material/ripple/index.js","./foundation":"node_modules/@material/dialog/foundation.js","./util":"node_modules/@material/dialog/util.js"}],"node_modules/preact-material-components/Dialog/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Dialog = exports.DialogFooterButton = exports.DialogFooter = exports.DialogBody = exports.DialogHeader = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _dialog = require("@material/dialog/");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent5 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Button2 = require("../Button");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var DialogHeader =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(DialogHeader, _MaterialComponent);

  function DialogHeader() {
    var _this;

    (0, _classCallCheck2.default)(this, DialogHeader);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogHeader).apply(this, arguments));
    _this.componentName = 'dialog__header';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(DialogHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", Object.assign({}, props), (0, _preact.h)("h2", {
        className: "mdc-dialog__header__title"
      }, props.children));
    }
  }]);
  return DialogHeader;
}(_MaterialComponent5.default);

exports.DialogHeader = DialogHeader;

__decorate([_bindDecorator.bind], DialogHeader.prototype, "materialDom", null);

var DialogBody =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(DialogBody, _MaterialComponent2);

  function DialogBody() {
    var _this2;

    (0, _classCallCheck2.default)(this, DialogBody);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogBody).apply(this, arguments));
    _this2.componentName = 'dialog__body';
    _this2.mdcProps = ['scrollable'];
    return _this2;
  }

  (0, _createClass2.default)(DialogBody, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("section", Object.assign({}, props), props.children);
    }
  }]);
  return DialogBody;
}(_MaterialComponent5.default);

exports.DialogBody = DialogBody;

__decorate([_bindDecorator.bind], DialogBody.prototype, "materialDom", null);

var DialogFooter =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(DialogFooter, _MaterialComponent3);

  function DialogFooter() {
    var _this3;

    (0, _classCallCheck2.default)(this, DialogFooter);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooter).apply(this, arguments));
    _this3.componentName = 'dialog__footer';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(DialogFooter, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("footer", Object.assign({}, props), props.children);
    }
  }]);
  return DialogFooter;
}(_MaterialComponent5.default);

exports.DialogFooter = DialogFooter;

__decorate([_bindDecorator.bind], DialogFooter.prototype, "materialDom", null);

var DialogFooterButton =
/*#__PURE__*/
function (_Button) {
  (0, _inherits2.default)(DialogFooterButton, _Button);

  function DialogFooterButton() {
    var _this4;

    (0, _classCallCheck2.default)(this, DialogFooterButton);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DialogFooterButton).apply(this, arguments));
    _this4.componentName = 'dialog__footer__button';
    _this4.mdcProps = ['cancel', 'accept'];
    return _this4;
  }

  (0, _createClass2.default)(DialogFooterButton, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("button", Object.assign({}, props, {
        className: "mdc-button",
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return DialogFooterButton;
}(_Button2.Button);

exports.DialogFooterButton = DialogFooterButton;

__decorate([_bindDecorator.bind], DialogFooterButton.prototype, "materialDom", null);

var Dialog =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(Dialog, _MaterialComponent4);

  function Dialog() {
    var _this5;

    (0, _classCallCheck2.default)(this, Dialog);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Dialog).apply(this, arguments));
    _this5.componentName = 'dialog';
    _this5.mdcProps = [];
    return _this5;
  }

  (0, _createClass2.default)(Dialog, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _dialog.MDCDialog(this.control);
        this.MDComponent.listen('MDCDialog:accept', this.onAccept);
        this.MDComponent.listen('MDCDialog:cancel', this.onCancel);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Dialog.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCDialog:accept', this.onAccept);
        this.MDComponent.unlisten('MDCDialog:cancel', this.onCancel);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onAccept",
    value: function onAccept(e) {
      if (this.props.onAccept) {
        this.props.onAccept(e);
      }
    }
  }, {
    key: "onCancel",
    value: function onCancel(e) {
      if (this.props.onCancel) {
        this.props.onCancel(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("dialog", Object.assign({
        role: 'alertdialog',
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-dialog__surface"
      }, props.children), (0, _preact.h)("div", {
        className: "mdc-dialog__backdrop"
      }));
    }
  }]);
  return Dialog;
}(_MaterialComponent5.default);

exports.Dialog = Dialog;

__decorate([_bindDecorator.bind], Dialog.prototype, "onAccept", null);

__decorate([_bindDecorator.bind], Dialog.prototype, "onCancel", null);

var default_1 =
/*#__PURE__*/
function (_Dialog) {
  (0, _inherits2.default)(default_1, _Dialog);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Dialog);

exports.default = default_1;
default_1.Header = DialogHeader;
default_1.Body = DialogBody;
default_1.Footer = DialogFooter;
default_1.FooterButton = DialogFooterButton;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/dialog/":"node_modules/@material/dialog/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Button":"node_modules/preact-material-components/Button/index.js"}],"node_modules/preact-material-components/List/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.List = exports.ListGroupHeader = exports.ListGroup = exports.ListSecondaryText = exports.ListPrimaryText = exports.ListTextContainer = exports.ListDivider = exports.ListItemMetaText = exports.ListItemMeta = exports.ListItemGraphic = exports.ListLinkItem = exports.ListItem = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent10 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Icon = _interopRequireDefault(require("../Icon"));

var ListItem =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(ListItem, _MaterialComponent);

  function ListItem() {
    var _this;

    (0, _classCallCheck2.default)(this, ListItem);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItem).apply(this, arguments));
    _this.componentName = 'list-item';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(ListItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("li", Object.assign({
        role: "option"
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListItem;
}(_MaterialComponent10.default);

exports.ListItem = ListItem;

var ListLinkItem =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(ListLinkItem, _MaterialComponent2);

  function ListLinkItem() {
    var _this2;

    (0, _classCallCheck2.default)(this, ListLinkItem);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListLinkItem).apply(this, arguments));
    _this2.componentName = 'list-item';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(ListLinkItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("a", Object.assign({
        role: "option"
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListLinkItem;
}(_MaterialComponent10.default);

exports.ListLinkItem = ListLinkItem;

var ListItemGraphic =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(ListItemGraphic, _MaterialComponent3);

  function ListItemGraphic() {
    var _this3;

    (0, _classCallCheck2.default)(this, ListItemGraphic);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemGraphic).apply(this, arguments));
    _this3.componentName = 'list-item__graphic';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(ListItemGraphic, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props, {
        ref: this.setControlRef,
        role: "presentation"
      }), (0, _preact.h)(_Icon.default, {
        "aria-hidden": "true"
      }, props.children));
    }
  }]);
  return ListItemGraphic;
}(_MaterialComponent10.default);

exports.ListItemGraphic = ListItemGraphic;

var ListItemMeta =
/*#__PURE__*/
function (_ListItemGraphic) {
  (0, _inherits2.default)(ListItemMeta, _ListItemGraphic);

  function ListItemMeta() {
    var _this4;

    (0, _classCallCheck2.default)(this, ListItemMeta);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMeta).apply(this, arguments));
    _this4.componentName = 'list-item__meta';
    return _this4;
  }

  return ListItemMeta;
}(ListItemGraphic);

exports.ListItemMeta = ListItemMeta;

var ListItemMetaText =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(ListItemMetaText, _MaterialComponent4);

  function ListItemMetaText() {
    var _this5;

    (0, _classCallCheck2.default)(this, ListItemMetaText);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListItemMetaText).apply(this, arguments));
    _this5.componentName = 'list-item__meta';
    _this5.mdcProps = [];
    return _this5;
  }

  (0, _createClass2.default)(ListItemMetaText, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props, {
        ref: this.setControlRef,
        role: "presentation"
      }), props.children);
    }
  }]);
  return ListItemMetaText;
}(_MaterialComponent10.default);

exports.ListItemMetaText = ListItemMetaText;

var ListDivider =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(ListDivider, _MaterialComponent5);

  function ListDivider() {
    var _this6;

    (0, _classCallCheck2.default)(this, ListDivider);
    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListDivider).apply(this, arguments));
    _this6.componentName = 'list-divider';
    _this6.mdcProps = ['inset'];
    return _this6;
  }

  (0, _createClass2.default)(ListDivider, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("li", Object.assign({
        role: "separator"
      }, props, {
        ref: this.setControlRef
      }));
    }
  }]);
  return ListDivider;
}(_MaterialComponent10.default);

exports.ListDivider = ListDivider;

var ListTextContainer =
/*#__PURE__*/
function (_MaterialComponent6) {
  (0, _inherits2.default)(ListTextContainer, _MaterialComponent6);

  function ListTextContainer() {
    var _this7;

    (0, _classCallCheck2.default)(this, ListTextContainer);
    _this7 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListTextContainer).apply(this, arguments));
    _this7.componentName = 'list-item__text';
    _this7.mdcProps = [];
    return _this7;
  }

  (0, _createClass2.default)(ListTextContainer, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListTextContainer;
}(_MaterialComponent10.default);

exports.ListTextContainer = ListTextContainer;

var ListPrimaryText =
/*#__PURE__*/
function (_ListTextContainer) {
  (0, _inherits2.default)(ListPrimaryText, _ListTextContainer);

  function ListPrimaryText() {
    var _this8;

    (0, _classCallCheck2.default)(this, ListPrimaryText);
    _this8 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListPrimaryText).apply(this, arguments));
    _this8.componentName = 'list-item__primary-text';
    return _this8;
  }

  return ListPrimaryText;
}(ListTextContainer);

exports.ListPrimaryText = ListPrimaryText;

var ListSecondaryText =
/*#__PURE__*/
function (_ListTextContainer2) {
  (0, _inherits2.default)(ListSecondaryText, _ListTextContainer2);

  function ListSecondaryText() {
    var _this9;

    (0, _classCallCheck2.default)(this, ListSecondaryText);
    _this9 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListSecondaryText).apply(this, arguments));
    _this9.componentName = 'list-item__secondary-text';
    return _this9;
  }

  return ListSecondaryText;
}(ListTextContainer);

exports.ListSecondaryText = ListSecondaryText;

var ListGroup =
/*#__PURE__*/
function (_MaterialComponent7) {
  (0, _inherits2.default)(ListGroup, _MaterialComponent7);

  function ListGroup() {
    var _this10;

    (0, _classCallCheck2.default)(this, ListGroup);
    _this10 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroup).apply(this, arguments));
    _this10.componentName = 'list-group';
    _this10.mdcProps = [];
    return _this10;
  }

  (0, _createClass2.default)(ListGroup, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return ListGroup;
}(_MaterialComponent10.default);

exports.ListGroup = ListGroup;

var ListGroupHeader =
/*#__PURE__*/
function (_MaterialComponent8) {
  (0, _inherits2.default)(ListGroupHeader, _MaterialComponent8);

  function ListGroupHeader() {
    var _this11;

    (0, _classCallCheck2.default)(this, ListGroupHeader);
    _this11 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ListGroupHeader).apply(this, arguments));
    _this11.componentName = 'list-group__subheader';
    _this11.mdcProps = [];
    return _this11;
  }

  (0, _createClass2.default)(ListGroupHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("h3", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ListGroupHeader;
}(_MaterialComponent10.default);

exports.ListGroupHeader = ListGroupHeader;

var List =
/*#__PURE__*/
function (_MaterialComponent9) {
  (0, _inherits2.default)(List, _MaterialComponent9);

  function List() {
    var _this12;

    (0, _classCallCheck2.default)(this, List);
    _this12 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(List).apply(this, arguments));
    _this12.componentName = 'list';
    _this12.mdcProps = ['dense', 'two-line', 'avatar-list'];
    return _this12;
  }

  (0, _createClass2.default)(List, [{
    key: "materialDom",
    value: function materialDom(props) {
      if (props.interactive) {
        return (0, _preact.h)("nav", Object.assign({
          ref: this.setControlRef
        }, props), props.children);
      }

      return (0, _preact.h)("ul", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return List;
}(_MaterialComponent10.default);

exports.List = List;

var default_1 =
/*#__PURE__*/
function (_List) {
  (0, _inherits2.default)(default_1, _List);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(List);

exports.default = default_1;
default_1.Item = ListItem;
default_1.LinkItem = ListLinkItem;
default_1.ItemGraphic = ListItemGraphic;
default_1.ItemMeta = ListItemMeta;
default_1.ItemMetaText = ListItemMetaText;
default_1.Divider = ListDivider;
default_1.TextContainer = ListTextContainer;
default_1.PrimaryText = ListPrimaryText;
default_1.SecondaryText = ListSecondaryText;
default_1.Group = ListGroup;
default_1.GroupHeader = ListGroupHeader;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Icon":"node_modules/preact-material-components/Icon/index.js"}],"node_modules/@material/drawer/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Drawer
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Drawer into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCDrawerAdapter {
  /**
   * Adds a class to the root Element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the root Element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns true if the root Element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * @param {!Element} element target element to verify class name
   * @param {string} className class name
   */


  elementHasClass(element, className) {}
  /** @return {!ClientRect} */


  computeBoundingRect() {}
  /**
   * Saves the focus of currently active element.
   */


  saveFocus() {}
  /**
   * Restores focus to element previously saved with 'saveFocus'.
   */


  restoreFocus() {}
  /**
   * Focuses the active / selected navigation item.
   */


  focusActiveNavigationItem() {}
  /**
   * Emits a custom event "MDCDrawer:closed" denoting the drawer has closed.
   */


  notifyClose() {}
  /**
   * Emits a custom event "MDCDrawer:opened" denoting the drawer has opened.
   */


  notifyOpen() {}
  /**
   * Traps focus on root element and focuses the active navigation element.
   */


  trapFocus() {}
  /**
   * Releases focus trap from root element which was set by `trapFocus`
   * and restores focus to where it was prior to calling `trapFocus`.
   */


  releaseFocus() {}

}

var _default = MDCDrawerAdapter;
exports.default = _default;
},{}],"node_modules/@material/drawer/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ROOT: 'mdc-drawer',
  DISMISSIBLE: 'mdc-drawer--dismissible',
  MODAL: 'mdc-drawer--modal',
  OPEN: 'mdc-drawer--open',
  ANIMATE: 'mdc-drawer--animate',
  OPENING: 'mdc-drawer--opening',
  CLOSING: 'mdc-drawer--closing'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  APP_CONTENT_SELECTOR: '.mdc-drawer-app-content',
  SCRIM_SELECTOR: '.mdc-drawer-scrim',
  CLOSE_EVENT: 'MDCDrawer:closed',
  OPEN_EVENT: 'MDCDrawer:opened'
};
exports.strings = strings;
},{}],"node_modules/@material/drawer/dismissible/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adapter = _interopRequireDefault(require("../adapter"));

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCDrawerAdapter>}
 */
class MDCDismissibleDrawerFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get defaultAdapter() {
    return (
      /** @type {!MDCDrawerAdapter} */
      {
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        hasClass: () =>
        /* className: string */
        {},
        elementHasClass: () =>
        /* element: !Element, className: string */
        {},
        computeBoundingRect: () => {},
        notifyClose: () => {},
        notifyOpen: () => {},
        saveFocus: () => {},
        restoreFocus: () => {},
        focusActiveNavigationItem: () => {},
        trapFocus: () => {},
        releaseFocus: () => {}
      }
    );
  }
  /**
   * Function to open the drawer.
   */


  open() {
    if (this.isOpen() || this.isOpening() || this.isClosing()) {
      return;
    }

    this.adapter_.addClass(_constants.cssClasses.OPEN);
    this.adapter_.addClass(_constants.cssClasses.ANIMATE);
    this.adapter_.computeBoundingRect(); // Force reflow.

    this.adapter_.addClass(_constants.cssClasses.OPENING);
    this.adapter_.saveFocus();
  }
  /**
   * Function to close the drawer.
   */


  close() {
    if (!this.isOpen() || this.isOpening() || this.isClosing()) {
      return;
    }

    this.adapter_.addClass(_constants.cssClasses.CLOSING);
  }
  /**
   * Extension point for when drawer finishes open animation.
   * @protected
   */


  opened() {}
  /**
   * Extension point for when drawer finishes close animation.
   * @protected
   */


  closed() {}
  /**
   * Returns true if drawer is in open state.
   * @return {boolean}
   */


  isOpen() {
    return this.adapter_.hasClass(_constants.cssClasses.OPEN);
  }
  /**
   * Returns true if drawer is animating open.
   * @return {boolean}
   */


  isOpening() {
    return this.adapter_.hasClass(_constants.cssClasses.OPENING);
  }
  /**
   * Returns true if drawer is animating closed.
   * @return {boolean}
   */


  isClosing() {
    return this.adapter_.hasClass(_constants.cssClasses.CLOSING);
  }
  /**
   * Keydown handler to close drawer when key is escape.
   * @param evt
   */


  handleKeydown(evt) {
    const {
      keyCode,
      key
    } = evt;
    const isEscape = key === 'Escape' || keyCode === 27;

    if (isEscape) {
      this.close();
    }
  }
  /**
   * Handles a transition end event on the root element.
   * @param {!Event} evt
   */


  handleTransitionEnd(evt) {
    const {
      OPENING,
      CLOSING,
      OPEN,
      ANIMATE,
      ROOT
    } = _constants.cssClasses; // In Edge, transitionend on ripple pseudo-elements yields a target without classList, so check for Element first.

    const isElement = evt.target instanceof Element;

    if (!isElement || !this.adapter_.elementHasClass(
    /** @type {!Element} */
    evt.target, ROOT)) {
      return;
    }

    if (this.isClosing()) {
      this.adapter_.removeClass(OPEN);
      this.adapter_.restoreFocus();
      this.closed();
      this.adapter_.notifyClose();
    } else {
      this.adapter_.focusActiveNavigationItem();
      this.opened();
      this.adapter_.notifyOpen();
    }

    this.adapter_.removeClass(ANIMATE);
    this.adapter_.removeClass(OPENING);
    this.adapter_.removeClass(CLOSING);
  }

}

var _default = MDCDismissibleDrawerFoundation;
exports.default = _default;
},{"../adapter":"node_modules/@material/drawer/adapter.js","@material/base/foundation":"node_modules/@material/base/foundation.js","../constants":"node_modules/@material/drawer/constants.js"}],"node_modules/@material/drawer/modal/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adapter = _interopRequireDefault(require("../adapter"));

var _foundation = _interopRequireDefault(require("../dismissible/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCDismissibleDrawerFoundation<!MDCDrawerAdapter>}
 */
class MDCModalDrawerFoundation extends _foundation.default {
  /**
   * Called when drawer finishes open animation.
   * @override
   */
  opened() {
    this.adapter_.trapFocus();
  }
  /**
   * Called when drawer finishes close animation.
   * @override
   */


  closed() {
    this.adapter_.releaseFocus();
  }
  /**
   * Handles click event on scrim.
   */


  handleScrimClick() {
    this.close();
  }

}

var _default = MDCModalDrawerFoundation;
exports.default = _default;
},{"../adapter":"node_modules/@material/drawer/adapter.js","../dismissible/foundation":"node_modules/@material/drawer/dismissible/foundation.js"}],"node_modules/@material/list/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC List. Provides an interface for managing focus.
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCListAdapter {
  /** @return {number} */
  getListItemCount() {}
  /**
   * @return {number} */


  getFocusedElementIndex() {}
  /**
   * @param {number} index
   * @param {string} attribute
   * @param {string} value
   */


  setAttributeForElementIndex(index, attribute, value) {}
  /**
   * @param {number} index
   * @param {string} attribute
   */


  removeAttributeForElementIndex(index, attribute) {}
  /**
   * @param {number} index
   * @param {string} className
   */


  addClassForElementIndex(index, className) {}
  /**
   * @param {number} index
   * @param {string} className
   */


  removeClassForElementIndex(index, className) {}
  /**
   * Focuses list item at the index specified.
   * @param {number} index
   */


  focusItemAtIndex(index) {}
  /**
   * Sets the tabindex to the value specified for all button/a element children of
   * the list item at the index specified.
   * @param {number} listItemIndex
   * @param {number} tabIndexValue
   */


  setTabIndexForListItemChildren(listItemIndex, tabIndexValue) {}
  /**
   * If the given element has an href, follows the link.
   * @param {!Element} ele
   */


  followHref(ele) {}

}

var _default = MDCListAdapter;
exports.default = _default;
},{}],"node_modules/@material/list/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ROOT: 'mdc-list',
  LIST_ITEM_CLASS: 'mdc-list-item',
  LIST_ITEM_SELECTED_CLASS: 'mdc-list-item--selected',
  LIST_ITEM_ACTIVATED_CLASS: 'mdc-list-item--activated'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  ARIA_ORIENTATION: 'aria-orientation',
  ARIA_ORIENTATION_HORIZONTAL: 'horizontal',
  ARIA_SELECTED: 'aria-selected',
  FOCUSABLE_CHILD_ELEMENTS: `.${cssClasses.LIST_ITEM_CLASS} button:not(:disabled), .${cssClasses.LIST_ITEM_CLASS} a`,
  ENABLED_ITEMS_SELECTOR: '.mdc-list-item:not(.mdc-list-item--disabled)'
};
exports.strings = strings;
},{}],"node_modules/@material/list/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];

class MDCListFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCListAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCListAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCListAdapter} */
      {
        getListItemCount: () => {},
        getFocusedElementIndex: () => {},
        setAttributeForElementIndex: () => {},
        removeAttributeForElementIndex: () => {},
        addClassForElementIndex: () => {},
        removeClassForElementIndex: () => {},
        focusItemAtIndex: () => {},
        setTabIndexForListItemChildren: () => {},
        followHref: () => {}
      }
    );
  }
  /**
   * @param {!MDCListAdapter=} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCListFoundation.defaultAdapter, adapter));
    /** {boolean} */

    this.wrapFocus_ = false;
    /** {boolean} */

    this.isVertical_ = true;
    /** {boolean} */

    this.isSingleSelectionList_ = false;
    /** {number} */

    this.selectedIndex_ = -1;
    /** {boolean} */

    this.useActivatedClass_ = false;
  }
  /**
   * Sets the private wrapFocus_ variable.
   * @param {boolean} value
   */


  setWrapFocus(value) {
    this.wrapFocus_ = value;
  }
  /**
   * Sets the isVertical_ private variable.
   * @param {boolean} value
   */


  setVerticalOrientation(value) {
    this.isVertical_ = value;
  }
  /**
   * Sets the isSingleSelectionList_ private variable.
   * @param {boolean} value
   */


  setSingleSelection(value) {
    this.isSingleSelectionList_ = value;
  }
  /**
   * Sets the useActivatedClass_ private variable.
   * @param {boolean} useActivated
   */


  setUseActivatedClass(useActivated) {
    this.useActivatedClass_ = useActivated;
  }
  /** @param {number} index */


  setSelectedIndex(index) {
    if (index === this.selectedIndex_) {
      return;
    }

    const className = this.useActivatedClass_ ? _constants.cssClasses.LIST_ITEM_ACTIVATED_CLASS : _constants.cssClasses.LIST_ITEM_SELECTED_CLASS;

    if (this.selectedIndex_ >= 0) {
      this.adapter_.removeAttributeForElementIndex(this.selectedIndex_, _constants.strings.ARIA_SELECTED);
      this.adapter_.removeClassForElementIndex(this.selectedIndex_, className);
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', -1);
    }

    if (index >= 0 && this.adapter_.getListItemCount() > index) {
      this.selectedIndex_ = index;
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, _constants.strings.ARIA_SELECTED, true);
      this.adapter_.addClassForElementIndex(this.selectedIndex_, className);
      this.adapter_.setAttributeForElementIndex(this.selectedIndex_, 'tabindex', 0);

      if (this.selectedIndex_ !== 0) {
        this.adapter_.setAttributeForElementIndex(0, 'tabindex', -1);
      }
    }
  }
  /**
   * Focus in handler for the list items.
   * @param evt
   * @param {number} listItemIndex
   */


  handleFocusIn(evt, listItemIndex) {
    if (listItemIndex >= 0) {
      this.adapter_.setTabIndexForListItemChildren(listItemIndex, 0);
    }
  }
  /**
   * Focus out handler for the list items.
   * @param {Event} evt
   * @param {number} listItemIndex
   */


  handleFocusOut(evt, listItemIndex) {
    if (listItemIndex >= 0) {
      this.adapter_.setTabIndexForListItemChildren(listItemIndex, -1);
    }
  }
  /**
   * Key handler for the list.
   * @param {Event} evt
   * @param {boolean} isRootListItem
   * @param {number} listItemIndex
   */


  handleKeydown(evt, isRootListItem, listItemIndex) {
    const arrowLeft = evt.key === 'ArrowLeft' || evt.keyCode === 37;
    const arrowUp = evt.key === 'ArrowUp' || evt.keyCode === 38;
    const arrowRight = evt.key === 'ArrowRight' || evt.keyCode === 39;
    const arrowDown = evt.key === 'ArrowDown' || evt.keyCode === 40;
    const isHome = evt.key === 'Home' || evt.keyCode === 36;
    const isEnd = evt.key === 'End' || evt.keyCode === 35;
    const isEnter = evt.key === 'Enter' || evt.keyCode === 13;
    const isSpace = evt.key === 'Space' || evt.keyCode === 32;
    let currentIndex = this.adapter_.getFocusedElementIndex();

    if (currentIndex === -1) {
      currentIndex = listItemIndex;

      if (currentIndex < 0) {
        // If this event doesn't have a mdc-list-item ancestor from the
        // current list (not from a sublist), return early.
        return;
      }
    }

    if (this.isVertical_ && arrowDown || !this.isVertical_ && arrowRight) {
      this.preventDefaultEvent_(evt);
      this.focusNextElement(currentIndex);
    } else if (this.isVertical_ && arrowUp || !this.isVertical_ && arrowLeft) {
      this.preventDefaultEvent_(evt);
      this.focusPrevElement(currentIndex);
    } else if (isHome) {
      this.preventDefaultEvent_(evt);
      this.focusFirstElement();
    } else if (isEnd) {
      this.preventDefaultEvent_(evt);
      this.focusLastElement();
    } else if (this.isSingleSelectionList_ && (isEnter || isSpace)) {
      this.preventDefaultEvent_(evt); // Check if the space key was pressed on the list item or a child element.

      if (isRootListItem) {
        this.setSelectedIndex(currentIndex); // Explicitly activate links, since we're preventing default on Enter, and Space doesn't activate them.

        this.adapter_.followHref(currentIndex);
      }
    }
  }
  /**
   * Click handler for the list.
   */


  handleClick() {
    const currentIndex = this.adapter_.getFocusedElementIndex();
    if (currentIndex === -1) return;
    this.setSelectedIndex(currentIndex);
  }
  /**
   * Ensures that preventDefault is only called if the containing element doesn't
   * consume the event, and it will cause an unintended scroll.
   * @param {Event} evt
   * @private
   */


  preventDefaultEvent_(evt) {
    const tagName = `${evt.target.tagName}`.toLowerCase();

    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
      evt.preventDefault();
    }
  }
  /**
   * Focuses the next element on the list.
   * @param {number} index
   */


  focusNextElement(index) {
    const count = this.adapter_.getListItemCount();
    let nextIndex = index + 1;

    if (nextIndex >= count) {
      if (this.wrapFocus_) {
        nextIndex = 0;
      } else {
        // Return early because last item is already focused.
        return;
      }
    }

    this.adapter_.focusItemAtIndex(nextIndex);
  }
  /**
   * Focuses the previous element on the list.
   * @param {number} index
   */


  focusPrevElement(index) {
    let prevIndex = index - 1;

    if (prevIndex < 0) {
      if (this.wrapFocus_) {
        prevIndex = this.adapter_.getListItemCount() - 1;
      } else {
        // Return early because first item is already focused.
        return;
      }
    }

    this.adapter_.focusItemAtIndex(prevIndex);
  }

  focusFirstElement() {
    if (this.adapter_.getListItemCount() > 0) {
      this.adapter_.focusItemAtIndex(0);
    }
  }

  focusLastElement() {
    const lastIndex = this.adapter_.getListItemCount() - 1;

    if (lastIndex >= 0) {
      this.adapter_.focusItemAtIndex(lastIndex);
    }
  }

}

var _default = MDCListFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/list/adapter.js","./constants":"node_modules/@material/list/constants.js"}],"node_modules/@material/list/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCListFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCList = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _foundation = _interopRequireDefault(require("./foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCListFoundation>
 */
class MDCList extends _component.default {
  /** @param {...?} args */
  constructor(...args) {
    super(...args);
    /** @private {!Function} */

    this.handleKeydown_;
    /** @private {!Function} */

    this.handleClick_;
    /** @private {!Function} */

    this.focusInEventListener_;
    /** @private {!Function} */

    this.focusOutEventListener_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCList}
   */


  static attachTo(root) {
    return new MDCList(root);
  }

  destroy() {
    this.root_.removeEventListener('keydown', this.handleKeydown_);
    this.root_.removeEventListener('click', this.handleClick_);
    this.root_.removeEventListener('focusin', this.focusInEventListener_);
    this.root_.removeEventListener('focusout', this.focusOutEventListener_);
  }

  initialSyncWithDOM() {
    this.handleClick_ = this.foundation_.handleClick.bind(this.foundation_);
    this.handleKeydown_ = this.handleKeydownEvent_.bind(this);
    this.focusInEventListener_ = this.handleFocusInEvent_.bind(this);
    this.focusOutEventListener_ = this.handleFocusOutEvent_.bind(this);
    this.root_.addEventListener('keydown', this.handleKeydown_);
    this.root_.addEventListener('focusin', this.focusInEventListener_);
    this.root_.addEventListener('focusout', this.focusOutEventListener_);
    this.layout();
    this.initializeListType();
  }

  layout() {
    const direction = this.root_.getAttribute(_constants.strings.ARIA_ORIENTATION);
    this.vertical = direction !== _constants.strings.ARIA_ORIENTATION_HORIZONTAL; // List items need to have at least tabindex=-1 to be focusable.

    [].slice.call(this.root_.querySelectorAll('.mdc-list-item:not([tabindex])')).forEach(ele => {
      ele.setAttribute('tabindex', -1);
    }); // Child button/a elements are not tabbable until the list item is focused.

    [].slice.call(this.root_.querySelectorAll(_constants.strings.FOCUSABLE_CHILD_ELEMENTS)).forEach(ele => ele.setAttribute('tabindex', -1));
  }
  /**
   * Used to figure out which list item this event is targetting. Or returns -1 if
   * there is no list item
   * @param {Event} evt
   * @private
   */


  getListItemIndex_(evt) {
    let eventTarget =
    /** @type {HTMLElement} */
    evt.target;
    let index = -1; // Find the first ancestor that is a list item or the list.

    while (!eventTarget.classList.contains(_constants.cssClasses.LIST_ITEM_CLASS) && !eventTarget.classList.contains(_constants.cssClasses.ROOT)) {
      eventTarget = eventTarget.parentElement;
    } // Get the index of the element if it is a list item.


    if (eventTarget.classList.contains(_constants.cssClasses.LIST_ITEM_CLASS)) {
      index = this.listElements.indexOf(eventTarget);
    }

    return index;
  }
  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  handleFocusInEvent_(evt) {
    const index = this.getListItemIndex_(evt);
    this.foundation_.handleFocusIn(evt, index);
  }
  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  handleFocusOutEvent_(evt) {
    const index = this.getListItemIndex_(evt);
    this.foundation_.handleFocusOut(evt, index);
  }
  /**
   * Used to figure out which element was clicked before sending the event to the foundation.
   * @param {Event} evt
   * @private
   */


  handleKeydownEvent_(evt) {
    const index = this.getListItemIndex_(evt);

    if (index >= 0) {
      this.foundation_.handleKeydown(evt, evt.target.classList.contains(_constants.cssClasses.LIST_ITEM_CLASS), index);
    }
  }

  initializeListType() {
    // Automatically set single selection if selected/activated classes are present.
    const preselectedElement = this.root_.querySelector(`.${_constants.cssClasses.LIST_ITEM_ACTIVATED_CLASS}, .${_constants.cssClasses.LIST_ITEM_SELECTED_CLASS}`);

    if (preselectedElement) {
      if (preselectedElement.classList.contains(_constants.cssClasses.LIST_ITEM_ACTIVATED_CLASS)) {
        this.foundation_.setUseActivatedClass(true);
      }

      this.singleSelection = true;
      this.selectedIndex = this.listElements.indexOf(preselectedElement);
    }
  }
  /** @param {boolean} value */


  set vertical(value) {
    this.foundation_.setVerticalOrientation(value);
  }
  /** @return Array<!Element>*/


  get listElements() {
    return [].slice.call(this.root_.querySelectorAll(_constants.strings.ENABLED_ITEMS_SELECTOR));
  }
  /** @param {boolean} value */


  set wrapFocus(value) {
    this.foundation_.setWrapFocus(value);
  }
  /** @param {boolean} isSingleSelectionList */


  set singleSelection(isSingleSelectionList) {
    if (isSingleSelectionList) {
      this.root_.addEventListener('click', this.handleClick_);
    } else {
      this.root_.removeEventListener('click', this.handleClick_);
    }

    this.foundation_.setSingleSelection(isSingleSelectionList);
  }
  /** @param {number} index */


  set selectedIndex(index) {
    this.foundation_.setSelectedIndex(index);
  }
  /** @return {!MDCListFoundation} */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCListAdapter} */
    Object.assign({
      getListItemCount: () => this.listElements.length,
      getFocusedElementIndex: () => this.listElements.indexOf(document.activeElement),
      setAttributeForElementIndex: (index, attr, value) => {
        const element = this.listElements[index];

        if (element) {
          element.setAttribute(attr, value);
        }
      },
      removeAttributeForElementIndex: (index, attr) => {
        const element = this.listElements[index];

        if (element) {
          element.removeAttribute(attr);
        }
      },
      addClassForElementIndex: (index, className) => {
        const element = this.listElements[index];

        if (element) {
          element.classList.add(className);
        }
      },
      removeClassForElementIndex: (index, className) => {
        const element = this.listElements[index];

        if (element) {
          element.classList.remove(className);
        }
      },
      focusItemAtIndex: index => {
        const element = this.listElements[index];

        if (element) {
          element.focus();
        }
      },
      setTabIndexForListItemChildren: (listItemIndex, tabIndexValue) => {
        const element = this.listElements[listItemIndex];
        const listItemChildren = [].slice.call(element.querySelectorAll(_constants.strings.FOCUSABLE_CHILD_ELEMENTS));
        listItemChildren.forEach(ele => ele.setAttribute('tabindex', tabIndexValue));
      },
      followHref: index => {
        const listItem = this.listElements[index];

        if (listItem && listItem.href) {
          listItem.click();
        }
      }
    }));
  }

}

exports.MDCList = MDCList;
},{"@material/base/component":"node_modules/@material/base/component.js","./foundation":"node_modules/@material/list/foundation.js","./adapter":"node_modules/@material/list/adapter.js","./constants":"node_modules/@material/list/constants.js"}],"node_modules/@material/drawer/node_modules/tabbable/index.js":[function(require,module,exports) {
var candidateSelectors = [
  'input',
  'select',
  'textarea',
  'a[href]',
  'button',
  '[tabindex]',
  'audio[controls]',
  'video[controls]',
  '[contenteditable]:not([contenteditable="false"])',
];
var candidateSelector = candidateSelectors.join(',');

var matches = typeof Element === 'undefined'
  ? function () {}
  : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;

function tabbable(el, options) {
  options = options || {};

  var elementDocument = el.ownerDocument || el;
  var regularTabbables = [];
  var orderedTabbables = [];

  var untouchabilityChecker = new UntouchabilityChecker(elementDocument);
  var candidates = el.querySelectorAll(candidateSelector);

  if (options.includeContainer) {
    if (matches.call(el, candidateSelector)) {
      candidates = Array.prototype.slice.apply(candidates);
      candidates.unshift(el);
    }
  }

  var i, candidate, candidateTabindex;
  for (i = 0; i < candidates.length; i++) {
    candidate = candidates[i];

    if (!isNodeMatchingSelectorTabbable(candidate, untouchabilityChecker)) continue;

    candidateTabindex = getTabindex(candidate);
    if (candidateTabindex === 0) {
      regularTabbables.push(candidate);
    } else {
      orderedTabbables.push({
        documentOrder: i,
        tabIndex: candidateTabindex,
        node: candidate,
      });
    }
  }

  var tabbableNodes = orderedTabbables
    .sort(sortOrderedTabbables)
    .map(function(a) { return a.node })
    .concat(regularTabbables);

  return tabbableNodes;
}

tabbable.isTabbable = isTabbable;
tabbable.isFocusable = isFocusable;

function isNodeMatchingSelectorTabbable(node, untouchabilityChecker) {
  if (
    !isNodeMatchingSelectorFocusable(node, untouchabilityChecker)
    || isNonTabbableRadio(node)
    || getTabindex(node) < 0
  ) {
    return false;
  }
  return true;
}

function isTabbable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, candidateSelector) === false) return false;
  return isNodeMatchingSelectorTabbable(node, untouchabilityChecker);
}

function isNodeMatchingSelectorFocusable(node, untouchabilityChecker) {
  untouchabilityChecker = untouchabilityChecker || new UntouchabilityChecker(node.ownerDocument || node);
  if (
    node.disabled
    || isHiddenInput(node)
    || untouchabilityChecker.isUntouchable(node)
  ) {
    return false;
  }
  return true;
}

var focusableCandidateSelector = candidateSelectors.concat('iframe').join(',');
function isFocusable(node, untouchabilityChecker) {
  if (!node) throw new Error('No node provided');
  if (matches.call(node, focusableCandidateSelector) === false) return false;
  return isNodeMatchingSelectorFocusable(node, untouchabilityChecker);
}

function getTabindex(node) {
  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);
  if (!isNaN(tabindexAttr)) return tabindexAttr;
  // Browsers do not return `tabIndex` correctly for contentEditable nodes;
  // so if they don't have a tabindex attribute specifically set, assume it's 0.
  if (isContentEditable(node)) return 0;
  return node.tabIndex;
}

function sortOrderedTabbables(a, b) {
  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;
}

// Array.prototype.find not available in IE.
function find(list, predicate) {
  for (var i = 0, length = list.length; i < length; i++) {
    if (predicate(list[i])) return list[i];
  }
}

function isContentEditable(node) {
  return node.contentEditable === 'true';
}

function isInput(node) {
  return node.tagName === 'INPUT';
}

function isHiddenInput(node) {
  return isInput(node) && node.type === 'hidden';
}

function isRadio(node) {
  return isInput(node) && node.type === 'radio';
}

function isNonTabbableRadio(node) {
  return isRadio(node) && !isTabbableRadio(node);
}

function getCheckedRadio(nodes) {
  for (var i = 0; i < nodes.length; i++) {
    if (nodes[i].checked) {
      return nodes[i];
    }
  }
}

function isTabbableRadio(node) {
  if (!node.name) return true;
  // This won't account for the edge case where you have radio groups with the same
  // in separate forms on the same page.
  var radioSet = node.ownerDocument.querySelectorAll('input[type="radio"][name="' + node.name + '"]');
  var checked = getCheckedRadio(radioSet);
  return !checked || checked === node;
}

// An element is "untouchable" if *it or one of its ancestors* has
// `visibility: hidden` or `display: none`.
function UntouchabilityChecker(elementDocument) {
  this.doc = elementDocument;
  // Node cache must be refreshed on every check, in case
  // the content of the element has changed. The cache contains tuples
  // mapping nodes to their boolean result.
  this.cache = [];
}

// getComputedStyle accurately reflects `visibility: hidden` of ancestors
// but not `display: none`, so we need to recursively check parents.
UntouchabilityChecker.prototype.hasDisplayNone = function hasDisplayNone(node, nodeComputedStyle) {
  if (node.nodeType !== Node.ELEMENT_NODE) return false;

    // Search for a cached result.
    var cached = find(this.cache, function(item) {
      return item === node;
    });
    if (cached) return cached[1];

    nodeComputedStyle = nodeComputedStyle || this.doc.defaultView.getComputedStyle(node);

    var result = false;

    if (nodeComputedStyle.display === 'none') {
      result = true;
    } else if (node.parentNode) {
      result = this.hasDisplayNone(node.parentNode);
    }

    this.cache.push([node, result]);

    return result;
}

UntouchabilityChecker.prototype.isUntouchable = function isUntouchable(node) {
  if (node === this.doc.documentElement) return false;
  var computedStyle = this.doc.defaultView.getComputedStyle(node);
  if (this.hasDisplayNone(node, computedStyle)) return true;
  return computedStyle.visibility === 'hidden';
}

module.exports = tabbable;

},{}],"node_modules/xtend/immutable.js":[function(require,module,exports) {
module.exports = extend;
var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
  var target = {};

  for (var i = 0; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
}
},{}],"node_modules/@material/drawer/node_modules/focus-trap/index.js":[function(require,module,exports) {
var tabbable = require('tabbable');
var xtend = require('xtend');

var listeningFocusTrap = null;

function focusTrap(element, userOptions) {
  var doc = document;
  var container =
    typeof element === 'string' ? doc.querySelector(element) : element;

  var config = xtend(
    {
      returnFocusOnDeactivate: true,
      escapeDeactivates: true
    },
    userOptions
  );

  var state = {
    firstTabbableNode: null,
    lastTabbableNode: null,
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: false,
    paused: false
  };

  var trap = {
    activate: activate,
    deactivate: deactivate,
    pause: pause,
    unpause: unpause
  };

  return trap;

  function activate(activateOptions) {
    if (state.active) return;

    updateTabbableNodes();

    state.active = true;
    state.paused = false;
    state.nodeFocusedBeforeActivation = doc.activeElement;

    var onActivate =
      activateOptions && activateOptions.onActivate
        ? activateOptions.onActivate
        : config.onActivate;
    if (onActivate) {
      onActivate();
    }

    addListeners();
    return trap;
  }

  function deactivate(deactivateOptions) {
    if (!state.active) return;

    removeListeners();
    state.active = false;
    state.paused = false;

    var onDeactivate =
      deactivateOptions && deactivateOptions.onDeactivate !== undefined
        ? deactivateOptions.onDeactivate
        : config.onDeactivate;
    if (onDeactivate) {
      onDeactivate();
    }

    var returnFocus =
      deactivateOptions && deactivateOptions.returnFocus !== undefined
        ? deactivateOptions.returnFocus
        : config.returnFocusOnDeactivate;
    if (returnFocus) {
      delay(function() {
        tryFocus(state.nodeFocusedBeforeActivation);
      });
    }

    return trap;
  }

  function pause() {
    if (state.paused || !state.active) return;
    state.paused = true;
    removeListeners();
  }

  function unpause() {
    if (!state.paused || !state.active) return;
    state.paused = false;
    addListeners();
  }

  function addListeners() {
    if (!state.active) return;

    // There can be only one listening focus trap at a time
    if (listeningFocusTrap) {
      listeningFocusTrap.pause();
    }
    listeningFocusTrap = trap;

    updateTabbableNodes();

    // Delay ensures that the focused element doesn't capture the event
    // that caused the focus trap activation.
    delay(function() {
      tryFocus(getInitialFocusNode());
    });
    doc.addEventListener('focusin', checkFocusIn, true);
    doc.addEventListener('mousedown', checkPointerDown, true);
    doc.addEventListener('touchstart', checkPointerDown, true);
    doc.addEventListener('click', checkClick, true);
    doc.addEventListener('keydown', checkKey, true);

    return trap;
  }

  function removeListeners() {
    if (!state.active || listeningFocusTrap !== trap) return;

    doc.removeEventListener('focusin', checkFocusIn, true);
    doc.removeEventListener('mousedown', checkPointerDown, true);
    doc.removeEventListener('touchstart', checkPointerDown, true);
    doc.removeEventListener('click', checkClick, true);
    doc.removeEventListener('keydown', checkKey, true);

    listeningFocusTrap = null;

    return trap;
  }

  function getNodeForOption(optionName) {
    var optionValue = config[optionName];
    var node = optionValue;
    if (!optionValue) {
      return null;
    }
    if (typeof optionValue === 'string') {
      node = doc.querySelector(optionValue);
      if (!node) {
        throw new Error('`' + optionName + '` refers to no known node');
      }
    }
    if (typeof optionValue === 'function') {
      node = optionValue();
      if (!node) {
        throw new Error('`' + optionName + '` did not return a node');
      }
    }
    return node;
  }

  function getInitialFocusNode() {
    var node;
    if (getNodeForOption('initialFocus') !== null) {
      node = getNodeForOption('initialFocus');
    } else if (container.contains(doc.activeElement)) {
      node = doc.activeElement;
    } else {
      node = state.firstTabbableNode || getNodeForOption('fallbackFocus');
    }

    if (!node) {
      throw new Error(
        "You can't have a focus-trap without at least one focusable element"
      );
    }

    return node;
  }

  // This needs to be done on mousedown and touchstart instead of click
  // so that it precedes the focus event.
  function checkPointerDown(e) {
    if (container.contains(e.target)) return;
    if (config.clickOutsideDeactivates) {
      deactivate({
        returnFocus: !tabbable.isFocusable(e.target)
      });
    } else {
      e.preventDefault();
    }
  }

  // In case focus escapes the trap for some strange reason, pull it back in.
  function checkFocusIn(e) {
    // In Firefox when you Tab out of an iframe the Document is briefly focused.
    if (container.contains(e.target) || e.target instanceof Document) {
      return;
    }
    e.stopImmediatePropagation();
    tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());
  }

  function checkKey(e) {
    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {
      e.preventDefault();
      deactivate();
      return;
    }
    if (isTabEvent(e)) {
      checkTab(e);
      return;
    }
  }

  // Hijack Tab events on the first and last focusable nodes of the trap,
  // in order to prevent focus from escaping. If it escapes for even a
  // moment it can end up scrolling the page and causing confusion so we
  // kind of need to capture the action at the keydown phase.
  function checkTab(e) {
    updateTabbableNodes();
    if (e.shiftKey && e.target === state.firstTabbableNode) {
      e.preventDefault();
      tryFocus(state.lastTabbableNode);
      return;
    }
    if (!e.shiftKey && e.target === state.lastTabbableNode) {
      e.preventDefault();
      tryFocus(state.firstTabbableNode);
      return;
    }
  }

  function checkClick(e) {
    if (config.clickOutsideDeactivates) return;
    if (container.contains(e.target)) return;
    e.preventDefault();
    e.stopImmediatePropagation();
  }

  function updateTabbableNodes() {
    var tabbableNodes = tabbable(container);
    state.firstTabbableNode = tabbableNodes[0] || getInitialFocusNode();
    state.lastTabbableNode =
      tabbableNodes[tabbableNodes.length - 1] || getInitialFocusNode();
  }

  function tryFocus(node) {
    if (node === doc.activeElement) return;
    if (!node || !node.focus) {
      tryFocus(getInitialFocusNode());
      return;
    }

    node.focus();
    state.mostRecentlyFocusedNode = node;
    if (isSelectableInput(node)) {
      node.select();
    }
  }
}

function isSelectableInput(node) {
  return (
    node.tagName &&
    node.tagName.toLowerCase() === 'input' &&
    typeof node.select === 'function'
  );
}

function isEscapeEvent(e) {
  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;
}

function isTabEvent(e) {
  return e.key === 'Tab' || e.keyCode === 9;
}

function delay(fn) {
  return setTimeout(fn, 0);
}

module.exports = focusTrap;

},{"tabbable":"node_modules/@material/drawer/node_modules/tabbable/index.js","xtend":"node_modules/xtend/immutable.js"}],"node_modules/@material/drawer/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createFocusTrapInstance = createFocusTrapInstance;

var _focusTrap = _interopRequireDefault(require("focus-trap"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @param {!Element} surfaceEl
 * @param {!Function} focusTrapFactory
 * @return {!FocusTrapInstance}
 */
function createFocusTrapInstance(surfaceEl, focusTrapFactory = _focusTrap.default) {
  return focusTrapFactory(surfaceEl, {
    clickOutsideDeactivates: true,
    initialFocus: false,
    // Navigation drawer handles focusing on active nav item.
    escapeDeactivates: false,
    // Navigation drawer handles ESC.
    returnFocusOnDeactivate: false // Navigation drawer handles restore focus.

  });
}
},{"focus-trap":"node_modules/@material/drawer/node_modules/focus-trap/index.js"}],"node_modules/@material/drawer/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCDismissibleDrawerFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
Object.defineProperty(exports, "MDCModalDrawerFoundation", {
  enumerable: true,
  get: function () {
    return _foundation2.default;
  }
});
exports.util = exports.MDCDrawer = void 0;

var _index = require("@material/base/index");

var _foundation = _interopRequireDefault(require("./dismissible/foundation"));

var _foundation2 = _interopRequireDefault(require("./modal/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _index2 = require("@material/list/index");

var _foundation3 = _interopRequireDefault(require("@material/list/foundation"));

var _constants = require("./constants");

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

var _focusTrap = _interopRequireDefault(require("focus-trap"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCDismissibleDrawerFoundation>}
 * @final
 */
class MDCDrawer extends _index.MDCComponent {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @private {!Element} */

    this.previousFocus_;
    /** @private {!Function} */

    this.handleKeydown_;
    /** @private {!Function} */

    this.handleTransitionEnd_;
    /** @private {!Function} */

    this.focusTrapFactory_;
    /** @private {!FocusTrapInstance} */

    this.focusTrap_;
    /** @private {?Element} */

    this.scrim_;
    /** @private {?Function} */

    this.handleScrimClick_;
    /** @private {?MDCList} */

    this.list_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCDrawer}
   */


  static attachTo(root) {
    return new MDCDrawer(root);
  }
  /**
   * Returns true if drawer is in the open position.
   * @return {boolean}
   */


  get open() {
    return this.foundation_.isOpen();
  }
  /**
   * Toggles the drawer open and closed.
   * @param {boolean} isOpen
   */


  set open(isOpen) {
    if (isOpen) {
      this.foundation_.open();
    } else {
      this.foundation_.close();
    }
  }

  initialize(focusTrapFactory = _focusTrap.default, listFactory = el => new _index2.MDCList(el)) {
    const listEl =
    /** @type {!Element} */
    this.root_.querySelector(`.${_foundation3.default.cssClasses.ROOT}`);

    if (listEl) {
      this.list_ = listFactory(listEl);
      this.list_.wrapFocus = true;
    }

    this.focusTrapFactory_ = focusTrapFactory;
  }

  initialSyncWithDOM() {
    const {
      MODAL
    } = _foundation.default.cssClasses;

    if (this.root_.classList.contains(MODAL)) {
      const {
        SCRIM_SELECTOR
      } = _foundation.default.strings;
      this.scrim_ =
      /** @type {!Element} */
      this.root_.parentElement.querySelector(SCRIM_SELECTOR);

      this.handleScrimClick_ = () =>
      /** @type {!MDCModalDrawerFoundation} */
      this.foundation_.handleScrimClick();

      this.scrim_.addEventListener('click', this.handleScrimClick_);
      this.focusTrap_ = util.createFocusTrapInstance(this.root_, this.focusTrapFactory_);
    }

    this.handleKeydown_ = evt => this.foundation_.handleKeydown(evt);

    this.handleTransitionEnd_ = evt => this.foundation_.handleTransitionEnd(evt);

    this.root_.addEventListener('keydown', this.handleKeydown_);
    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);
  }

  destroy() {
    this.root_.removeEventListener('keydown', this.handleKeydown_);
    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

    if (this.list_) {
      this.list_.destroy();
    }

    const {
      MODAL
    } = _foundation.default.cssClasses;

    if (this.root_.classList.contains(MODAL)) {
      this.scrim_.removeEventListener('click',
      /** @type {!Function} */
      this.handleScrimClick_); // Ensure drawer is closed to hide scrim and release focus

      this.open = false;
    }
  }

  getDefaultFoundation() {
    /** @type {!MDCDrawerAdapter} */
    const adapter =
    /** @type {!MDCDrawerAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      elementHasClass: (element, className) => element.classList.contains(className),
      computeBoundingRect: () => this.root_.getBoundingClientRect(),
      saveFocus: () => {
        this.previousFocus_ = document.activeElement;
      },
      restoreFocus: () => {
        const previousFocus = this.previousFocus_ && this.previousFocus_.focus;

        if (this.root_.contains(document.activeElement) && previousFocus) {
          this.previousFocus_.focus();
        }
      },
      focusActiveNavigationItem: () => {
        const activeNavItemEl = this.root_.querySelector(`.${_foundation3.default.cssClasses.LIST_ITEM_ACTIVATED_CLASS}`);

        if (activeNavItemEl) {
          activeNavItemEl.focus();
        }
      },
      notifyClose: () => this.emit(_constants.strings.CLOSE_EVENT, {}, true
      /* shouldBubble */
      ),
      notifyOpen: () => this.emit(_constants.strings.OPEN_EVENT, {}, true
      /* shouldBubble */
      ),
      trapFocus: () => this.focusTrap_.activate(),
      releaseFocus: () => this.focusTrap_.deactivate()
    });
    const {
      DISMISSIBLE,
      MODAL
    } = _foundation.default.cssClasses;

    if (this.root_.classList.contains(DISMISSIBLE)) {
      return new _foundation.default(adapter);
    } else if (this.root_.classList.contains(MODAL)) {
      return new _foundation2.default(adapter);
    } else {
      throw new Error(`MDCDrawer: Failed to instantiate component. Supported variants are ${DISMISSIBLE} and ${MODAL}.`);
    }
  }

}

exports.MDCDrawer = MDCDrawer;
},{"@material/base/index":"node_modules/@material/base/index.js","./dismissible/foundation":"node_modules/@material/drawer/dismissible/foundation.js","./modal/foundation":"node_modules/@material/drawer/modal/foundation.js","./adapter":"node_modules/@material/drawer/adapter.js","@material/list/index":"node_modules/@material/list/index.js","@material/list/foundation":"node_modules/@material/list/foundation.js","./constants":"node_modules/@material/drawer/constants.js","./util":"node_modules/@material/drawer/util.js","focus-trap":"node_modules/@material/drawer/node_modules/focus-trap/index.js"}],"node_modules/preact-material-components/Drawer/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Drawer = exports.DrawerItem = exports.DrawerContent = exports.DrawerHeader = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _drawer = require("@material/drawer");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent4 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _List = require("../List");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var DrawerHeader =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(DrawerHeader, _MaterialComponent);

  function DrawerHeader() {
    var _this;

    (0, _classCallCheck2.default)(this, DrawerHeader);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerHeader).apply(this, arguments));
    _this.componentName = 'drawer__header';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(DrawerHeader, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", Object.assign({
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        className: "mdc-drawer__header-content"
      }, props.children));
    }
  }]);
  return DrawerHeader;
}(_MaterialComponent4.default);

exports.DrawerHeader = DrawerHeader;

var DrawerContent =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(DrawerContent, _MaterialComponent2);

  function DrawerContent() {
    var _this2;

    (0, _classCallCheck2.default)(this, DrawerContent);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerContent).apply(this, arguments));
    _this2.componentName = 'drawer__content';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(DrawerContent, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", {
        class: "mdc-drawer__content"
      }, (0, _preact.h)("nav", Object.assign({
        className: "mdc-list",
        ref: this.setControlRef
      }, props), props.children));
    }
  }]);
  return DrawerContent;
}(_MaterialComponent4.default);

exports.DrawerContent = DrawerContent;

var DrawerItem =
/*#__PURE__*/
function (_ListLinkItem) {
  (0, _inherits2.default)(DrawerItem, _ListLinkItem);

  function DrawerItem() {
    (0, _classCallCheck2.default)(this, DrawerItem);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerItem).apply(this, arguments));
  }

  (0, _createClass2.default)(DrawerItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      var returnedNode = (0, _get2.default)((0, _getPrototypeOf2.default)(DrawerItem.prototype), "materialDom", this).call(this, props);
      /* Logic to add selected class */

      if (props.selected) {
        // @ts-ignore
        (returnedNode.props || returnedNode.attributes).className = 'mdc-list-item--activated';
      }

      return returnedNode;
    }
  }]);
  return DrawerItem;
}(_List.ListLinkItem);

exports.DrawerItem = DrawerItem;

var Drawer =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(Drawer, _MaterialComponent3);

  function Drawer() {
    var _this3;

    (0, _classCallCheck2.default)(this, Drawer);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Drawer).apply(this, arguments));
    _this3.componentName = 'drawer-container';
    _this3.mdcProps = [];
    _this3.mdcNotifyProps = ['open'];
    return _this3;
  }

  (0, _createClass2.default)(Drawer, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Drawer.prototype), "componentDidMount", this).call(this);

      if (this.control && (this.props.modal || this.props.dismissible)) {
        this.MDComponent = new _drawer.MDCDrawer(this.control);
        this.MDComponent.listen('MDCDrawer:opened', this.onOpen);
        this.MDComponent.listen('MDCDrawer:closed', this.onClose);
      }
    }
  }, {
    key: "onOpen",
    value: function onOpen(e) {
      if (this.props.onOpen) {
        this.props.onOpen(e);
      }
    }
  }, {
    key: "onClose",
    value: function onClose(e) {
      if (this.props.onClose) {
        this.props.onClose(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      var classes = ['mdc-drawer']; // cant use mdcProps cuz classes need to be on the inner child and not on root level

      if (props.modal) {
        classes.push('mdc-drawer--modal');
      } else if (props.dismissible) {
        classes.push('mdc-drawer--dismissible');
      }

      return (0, _preact.h)("div", null, (0, _preact.h)("aside", Object.assign({
        class: classes.join(' '),
        ref: this.setControlRef
      }, props), props.children), props.modal && (0, _preact.h)("div", {
        class: "mdc-drawer-scrim"
      }));
    }
  }]);
  return Drawer;
}(_MaterialComponent4.default);

exports.Drawer = Drawer;
Drawer.DrawerContent = DrawerContent;
Drawer.DrawerHeader = DrawerHeader;
Drawer.DrawerItem = DrawerItem;

__decorate([_bindDecorator.bind], Drawer.prototype, "onOpen", null);

__decorate([_bindDecorator.bind], Drawer.prototype, "onClose", null);

var default_1 =
/*#__PURE__*/
function (_Drawer) {
  (0, _inherits2.default)(default_1, _Drawer);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Drawer);

exports.default = default_1;
default_1.DrawerContent = DrawerContent;
default_1.DrawerHeader = DrawerHeader;
default_1.DrawerItem = DrawerItem;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/drawer":"node_modules/@material/drawer/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../List":"node_modules/preact-material-components/List/index.js"}],"node_modules/@material/toolbar/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const cssClasses = {
  FIXED: 'mdc-toolbar--fixed',
  FIXED_LASTROW: 'mdc-toolbar--fixed-lastrow-only',
  FIXED_AT_LAST_ROW: 'mdc-toolbar--fixed-at-last-row',
  TOOLBAR_ROW_FLEXIBLE: 'mdc-toolbar--flexible',
  FLEXIBLE_DEFAULT_BEHAVIOR: 'mdc-toolbar--flexible-default-behavior',
  FLEXIBLE_MAX: 'mdc-toolbar--flexible-space-maximized',
  FLEXIBLE_MIN: 'mdc-toolbar--flexible-space-minimized'
};
exports.cssClasses = cssClasses;
const strings = {
  TITLE_SELECTOR: '.mdc-toolbar__title',
  ICON_SELECTOR: '.mdc-toolbar__icon',
  FIRST_ROW_SELECTOR: '.mdc-toolbar__row:first-child',
  CHANGE_EVENT: 'MDCToolbar:change'
};
exports.strings = strings;
const numbers = {
  MAX_TITLE_SIZE: 2.125,
  MIN_TITLE_SIZE: 1.25,
  TOOLBAR_ROW_HEIGHT: 64,
  TOOLBAR_ROW_MOBILE_HEIGHT: 56,
  TOOLBAR_MOBILE_BREAKPOINT: 600
};
exports.numbers = numbers;
},{}],"node_modules/@material/toolbar/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCToolbarFoundation extends _foundation.default {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get numbers() {
    return _constants.numbers;
  }

  static get defaultAdapter() {
    return {
      hasClass: () =>
      /* className: string */

      /* boolean */
      false,
      addClass: () =>
      /* className: string */
      {},
      removeClass: () =>
      /* className: string */
      {},
      registerScrollHandler: () =>
      /* handler: EventListener */
      {},
      deregisterScrollHandler: () =>
      /* handler: EventListener */
      {},
      registerResizeHandler: () =>
      /* handler: EventListener */
      {},
      deregisterResizeHandler: () =>
      /* handler: EventListener */
      {},
      getViewportWidth: () =>
      /* number */
      0,
      getViewportScrollY: () =>
      /* number */
      0,
      getOffsetHeight: () =>
      /* number */
      0,
      getFirstRowElementOffsetHeight: () =>
      /* number */
      0,
      notifyChange: () =>
      /* evtData: {flexibleExpansionRatio: number} */
      {},
      setStyle: () =>
      /* property: string, value: string */
      {},
      setStyleForTitleElement: () =>
      /* property: string, value: string */
      {},
      setStyleForFlexibleRowElement: () =>
      /* property: string, value: string */
      {},
      setStyleForFixedAdjustElement: () =>
      /* property: string, value: string */
      {}
    };
  }

  constructor(adapter) {
    super(Object.assign(MDCToolbarFoundation.defaultAdapter, adapter));

    this.resizeHandler_ = () => this.checkRowHeight_();

    this.scrollHandler_ = () => this.updateToolbarStyles_();

    this.checkRowHeightFrame_ = 0;
    this.scrollFrame_ = 0;
    this.executedLastChange_ = false;
    this.calculations_ = {
      toolbarRowHeight: 0,
      // Calculated Height ratio. We use ratio to calculate corresponding heights in resize event.
      toolbarRatio: 0,
      // The ratio of toolbar height to row height
      flexibleExpansionRatio: 0,
      // The ratio of flexible space height to row height
      maxTranslateYRatio: 0,
      // The ratio of max toolbar move up distance to row height
      scrollThresholdRatio: 0,
      // The ratio of max scrollTop that we should listen to to row height
      // Derived Heights based on the above key ratios.
      toolbarHeight: 0,
      flexibleExpansionHeight: 0,
      // Flexible row minus toolbar height (derived)
      maxTranslateYDistance: 0,
      // When toolbar only fix last row (derived)
      scrollThreshold: 0
    }; // Toolbar fixed behavior
    // If toolbar is fixed

    this.fixed_ = false; // If fixed is targeted only at the last row

    this.fixedLastrow_ = false; // Toolbar flexible behavior
    // If the first row is flexible

    this.hasFlexibleRow_ = false; // If use the default behavior

    this.useFlexDefaultBehavior_ = false;
  }

  init() {
    this.fixed_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED);
    this.fixedLastrow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FIXED_LASTROW) & this.fixed_;
    this.hasFlexibleRow_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE);

    if (this.hasFlexibleRow_) {
      this.useFlexDefaultBehavior_ = this.adapter_.hasClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_DEFAULT_BEHAVIOR);
    }

    this.initKeyRatio_();
    this.setKeyHeights_();
    this.adapter_.registerResizeHandler(this.resizeHandler_);
    this.adapter_.registerScrollHandler(this.scrollHandler_);
  }

  destroy() {
    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  }

  updateAdjustElementStyles() {
    if (this.fixed_) {
      this.adapter_.setStyleForFixedAdjustElement('margin-top', `${this.calculations_.toolbarHeight}px`);
    }
  }

  getFlexibleExpansionRatio_(scrollTop) {
    // To prevent division by zero when there is no flexibleExpansionHeight
    const delta = 0.0001;
    return Math.max(0, 1 - scrollTop / (this.calculations_.flexibleExpansionHeight + delta));
  }

  checkRowHeight_() {
    cancelAnimationFrame(this.checkRowHeightFrame_);
    this.checkRowHeightFrame_ = requestAnimationFrame(() => this.setKeyHeights_());
  }

  setKeyHeights_() {
    const newToolbarRowHeight = this.getRowHeight_();

    if (newToolbarRowHeight !== this.calculations_.toolbarRowHeight) {
      this.calculations_.toolbarRowHeight = newToolbarRowHeight;
      this.calculations_.toolbarHeight = this.calculations_.toolbarRatio * this.calculations_.toolbarRowHeight;
      this.calculations_.flexibleExpansionHeight = this.calculations_.flexibleExpansionRatio * this.calculations_.toolbarRowHeight;
      this.calculations_.maxTranslateYDistance = this.calculations_.maxTranslateYRatio * this.calculations_.toolbarRowHeight;
      this.calculations_.scrollThreshold = this.calculations_.scrollThresholdRatio * this.calculations_.toolbarRowHeight;
      this.updateAdjustElementStyles();
      this.updateToolbarStyles_();
    }
  }

  updateToolbarStyles_() {
    cancelAnimationFrame(this.scrollFrame_);
    this.scrollFrame_ = requestAnimationFrame(() => {
      const scrollTop = this.adapter_.getViewportScrollY();
      const hasScrolledOutOfThreshold = this.scrolledOutOfThreshold_(scrollTop);

      if (hasScrolledOutOfThreshold && this.executedLastChange_) {
        return;
      }

      const flexibleExpansionRatio = this.getFlexibleExpansionRatio_(scrollTop);
      this.updateToolbarFlexibleState_(flexibleExpansionRatio);

      if (this.fixedLastrow_) {
        this.updateToolbarFixedState_(scrollTop);
      }

      if (this.hasFlexibleRow_) {
        this.updateFlexibleRowElementStyles_(flexibleExpansionRatio);
      }

      this.executedLastChange_ = hasScrolledOutOfThreshold;
      this.adapter_.notifyChange({
        flexibleExpansionRatio: flexibleExpansionRatio
      });
    });
  }

  scrolledOutOfThreshold_(scrollTop) {
    return scrollTop > this.calculations_.scrollThreshold;
  }

  initKeyRatio_() {
    const toolbarRowHeight = this.getRowHeight_();
    const firstRowMaxRatio = this.adapter_.getFirstRowElementOffsetHeight() / toolbarRowHeight;
    this.calculations_.toolbarRatio = this.adapter_.getOffsetHeight() / toolbarRowHeight;
    this.calculations_.flexibleExpansionRatio = firstRowMaxRatio - 1;
    this.calculations_.maxTranslateYRatio = this.fixedLastrow_ ? this.calculations_.toolbarRatio - firstRowMaxRatio : 0;
    this.calculations_.scrollThresholdRatio = (this.fixedLastrow_ ? this.calculations_.toolbarRatio : firstRowMaxRatio) - 1;
  }

  getRowHeight_() {
    const breakpoint = MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;
    return this.adapter_.getViewportWidth() < breakpoint ? MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;
  }

  updateToolbarFlexibleState_(flexibleExpansionRatio) {
    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
    this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);

    if (flexibleExpansionRatio === 1) {
      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX);
    } else if (flexibleExpansionRatio === 0) {
      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN);
    }
  }

  updateToolbarFixedState_(scrollTop) {
    const translateDistance = Math.max(0, Math.min(scrollTop - this.calculations_.flexibleExpansionHeight, this.calculations_.maxTranslateYDistance));
    this.adapter_.setStyle('transform', `translateY(${-translateDistance}px)`);

    if (translateDistance === this.calculations_.maxTranslateYDistance) {
      this.adapter_.addClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
    } else {
      this.adapter_.removeClass(MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW);
    }
  }

  updateFlexibleRowElementStyles_(flexibleExpansionRatio) {
    if (this.fixed_) {
      const height = this.calculations_.flexibleExpansionHeight * flexibleExpansionRatio;
      this.adapter_.setStyleForFlexibleRowElement('height', `${height + this.calculations_.toolbarRowHeight}px`);
    }

    if (this.useFlexDefaultBehavior_) {
      this.updateElementStylesDefaultBehavior_(flexibleExpansionRatio);
    }
  }

  updateElementStylesDefaultBehavior_(flexibleExpansionRatio) {
    const maxTitleSize = MDCToolbarFoundation.numbers.MAX_TITLE_SIZE;
    const minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE;
    const currentTitleSize = (maxTitleSize - minTitleSize) * flexibleExpansionRatio + minTitleSize;
    this.adapter_.setStyleForTitleElement('font-size', `${currentTitleSize}rem`);
  }

}

exports.default = MDCToolbarFoundation;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./constants":"node_modules/@material/toolbar/constants.js"}],"node_modules/@material/toolbar/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCToolbarFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCToolbar = void 0;

var _index = require("@material/base/index");

var _index2 = require("@material/ripple/index");

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCToolbar extends _index.MDCComponent {
  static attachTo(root) {
    return new MDCToolbar(root);
  }

  get firstRowElement_() {
    return this.root_.querySelector(_foundation.default.strings.FIRST_ROW_SELECTOR);
  }

  get titleElement_() {
    return this.root_.querySelector(_foundation.default.strings.TITLE_SELECTOR);
  }

  set fixedAdjustElement(fixedAdjustElement) {
    this.fixedAdjustElement_ = fixedAdjustElement;
    this.foundation_.updateAdjustElementStyles();
  }

  get fixedAdjustElement() {
    return this.fixedAdjustElement_;
  }

  initialize() {
    this.ripples_ = [].map.call(this.root_.querySelectorAll(_foundation.default.strings.ICON_SELECTOR), icon => {
      const ripple = _index2.MDCRipple.attachTo(icon);

      ripple.unbounded = true;
      return ripple;
    });
  }

  destroy() {
    this.ripples_.forEach(ripple => {
      ripple.destroy();
    });
    super.destroy();
  }

  getDefaultFoundation() {
    return new _foundation.default({
      hasClass: className => this.root_.classList.contains(className),
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      registerScrollHandler: handler => window.addEventListener('scroll', handler),
      deregisterScrollHandler: handler => window.removeEventListener('scroll', handler),
      registerResizeHandler: handler => window.addEventListener('resize', handler),
      deregisterResizeHandler: handler => window.removeEventListener('resize', handler),
      getViewportWidth: () => window.innerWidth,
      getViewportScrollY: () => window.pageYOffset,
      getOffsetHeight: () => this.root_.offsetHeight,
      getFirstRowElementOffsetHeight: () => this.firstRowElement_.offsetHeight,
      notifyChange: evtData => this.emit(_foundation.default.strings.CHANGE_EVENT, evtData),
      setStyle: (property, value) => this.root_.style.setProperty(property, value),
      setStyleForTitleElement: (property, value) => this.titleElement_.style.setProperty(property, value),
      setStyleForFlexibleRowElement: (property, value) => this.firstRowElement_.style.setProperty(property, value),
      setStyleForFixedAdjustElement: (property, value) => {
        if (this.fixedAdjustElement) {
          this.fixedAdjustElement.style.setProperty(property, value);
        }
      }
    });
  }

}

exports.MDCToolbar = MDCToolbar;
},{"@material/base/index":"node_modules/@material/base/index.js","@material/ripple/index":"node_modules/@material/ripple/index.js","./foundation":"node_modules/@material/toolbar/foundation.js"}],"node_modules/preact-material-components/Toolbar/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Toolbar = exports.ToolbarTitle = exports.ToolbarIcon = exports.ToolbarSection = exports.ToolbarRow = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _toolbar = require("@material/toolbar");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent6 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ToolbarRow =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(ToolbarRow, _MaterialComponent);

  function ToolbarRow() {
    var _this;

    (0, _classCallCheck2.default)(this, ToolbarRow);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolbarRow).apply(this, arguments));
    _this.componentName = 'toolbar__row';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(ToolbarRow, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return ToolbarRow;
}(_MaterialComponent6.default);

exports.ToolbarRow = ToolbarRow;

var ToolbarSection =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(ToolbarSection, _MaterialComponent2);

  function ToolbarSection() {
    var _this2;

    (0, _classCallCheck2.default)(this, ToolbarSection);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolbarSection).apply(this, arguments));
    _this2.componentName = 'toolbar__section';
    _this2.mdcProps = ['align-start', 'align-end', 'shrink-to-fit'];
    return _this2;
  }

  (0, _createClass2.default)(ToolbarSection, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("section", Object.assign({}, props), props.children);
    }
  }]);
  return ToolbarSection;
}(_MaterialComponent6.default);

exports.ToolbarSection = ToolbarSection;

var ToolbarIcon =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(ToolbarIcon, _MaterialComponent3);

  function ToolbarIcon(props) {
    var _this3;

    (0, _classCallCheck2.default)(this, ToolbarIcon);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolbarIcon).call(this));
    _this3.componentName = 'toolbar__icon';
    _this3.mdcProps = [];

    if (props.menu) {
      _this3.componentName = 'toolbar__menu-icon';
    }

    return _this3;
  }

  (0, _createClass2.default)(ToolbarIcon, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("a", Object.assign({
        className: "material-icons"
      }, props), props.children || 'menu');
    }
  }]);
  return ToolbarIcon;
}(_MaterialComponent6.default);

exports.ToolbarIcon = ToolbarIcon;

var ToolbarTitle =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(ToolbarTitle, _MaterialComponent4);

  function ToolbarTitle() {
    var _this4;

    (0, _classCallCheck2.default)(this, ToolbarTitle);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToolbarTitle).apply(this, arguments));
    _this4.componentName = 'toolbar__title';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(ToolbarTitle, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props), props.children);
    }
  }]);
  return ToolbarTitle;
}(_MaterialComponent6.default);

exports.ToolbarTitle = ToolbarTitle;

var Toolbar =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(Toolbar, _MaterialComponent5);

  function Toolbar() {
    var _this5;

    (0, _classCallCheck2.default)(this, Toolbar);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Toolbar).apply(this, arguments));
    _this5.componentName = 'toolbar';
    _this5.mdcProps = ['fixed', 'fixed-lastrow-only', 'waterfall', 'flexible', 'flexible-default-behavior'];
    return _this5;
  }

  (0, _createClass2.default)(Toolbar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Toolbar.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _toolbar.MDCToolbar(this.control);
        this.MDComponent.listen('MDCToolbar:change', this.onChange);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Toolbar.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCToolbar:change', this.onChange);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      if (this.props.onChange) {
        this.props.onChange(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", Object.assign({
        ref: this.setControlRef
      }, props), props.children);
    }
  }]);
  return Toolbar;
}(_MaterialComponent6.default);

exports.Toolbar = Toolbar;

__decorate([_bindDecorator.bind], Toolbar.prototype, "onChange", null);

var default_1 =
/*#__PURE__*/
function (_Toolbar) {
  (0, _inherits2.default)(default_1, _Toolbar);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Toolbar);

exports.default = default_1;
default_1.Section = ToolbarSection;
default_1.Icon = ToolbarIcon;
default_1.Title = ToolbarTitle;
default_1.Row = ToolbarRow;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/toolbar":"node_modules/@material/toolbar/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/top-app-bar/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Top App Bar
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Top App Bar into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCTopAppBarAdapter {
  /**
   * Adds a class to the root Element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the root Element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns true if the root Element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Sets the specified inline style property on the root Element to the given value.
   * @param {string} property
   * @param {string} value
   */


  setStyle(property, value) {}
  /**
   * Gets the height of the top app bar.
   * @return {number}
   */


  getTopAppBarHeight() {}
  /**
   * Registers an event handler on the navigation icon element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  registerNavigationIconInteractionHandler(type, handler) {}
  /**
   * Deregisters an event handler on the navigation icon element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  deregisterNavigationIconInteractionHandler(type, handler) {}
  /**
   * Emits an event when the navigation icon is clicked.
   */


  notifyNavigationIconClicked() {}
  /** @param {function(!Event)} handler */


  registerScrollHandler(handler) {}
  /** @param {function(!Event)} handler */


  deregisterScrollHandler(handler) {}
  /** @param {function(!Event)} handler */


  registerResizeHandler(handler) {}
  /** @param {function(!Event)} handler */


  deregisterResizeHandler(handler) {}
  /** @return {number} */


  getViewportScrollY() {}
  /** @return {number} */


  getTotalActionItems() {}

}

var _default = MDCTopAppBarAdapter;
exports.default = _default;
},{}],"node_modules/@material/top-app-bar/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  FIXED_CLASS: 'mdc-top-app-bar--fixed',
  FIXED_SCROLLED_CLASS: 'mdc-top-app-bar--fixed-scrolled',
  SHORT_CLASS: 'mdc-top-app-bar--short',
  SHORT_HAS_ACTION_ITEM_CLASS: 'mdc-top-app-bar--short-has-action-item',
  SHORT_COLLAPSED_CLASS: 'mdc-top-app-bar--short-collapsed'
};
/** @enum {number} */

exports.cssClasses = cssClasses;
const numbers = {
  DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,
  MAX_TOP_APP_BAR_HEIGHT: 128
};
/** @enum {string} */

exports.numbers = numbers;
const strings = {
  ACTION_ITEM_SELECTOR: '.mdc-top-app-bar__action-item',
  NAVIGATION_EVENT: 'MDCTopAppBar:nav',
  NAVIGATION_ICON_SELECTOR: '.mdc-top-app-bar__navigation-icon',
  ROOT_SELECTOR: '.mdc-top-app-bar',
  TITLE_SELECTOR: '.mdc-top-app-bar__title'
};
exports.strings = strings;
},{}],"node_modules/@material/top-app-bar/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constants = require("./constants");

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCTopAppBarAdapter>}
 */
class MDCTopAppBarBaseFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {number} */


  static get numbers() {
    return _constants.numbers;
  }
  /**
   * {@see MDCTopAppBarAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCTopAppBarAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCTopAppBarAdapter} */
      {
        hasClass: () =>
        /* className: string */
        {},
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        setStyle: () =>
        /* property: string, value: string */
        {},
        getTopAppBarHeight: () => {},
        registerNavigationIconInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        deregisterNavigationIconInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        notifyNavigationIconClicked: () => {},
        registerScrollHandler: () =>
        /* handler: EventListener */
        {},
        deregisterScrollHandler: () =>
        /* handler: EventListener */
        {},
        registerResizeHandler: () =>
        /* handler: EventListener */
        {},
        deregisterResizeHandler: () =>
        /* handler: EventListener */
        {},
        getViewportScrollY: () =>
        /* number */
        0,
        getTotalActionItems: () =>
        /* number */
        0
      }
    );
  }
  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */


  constructor(
  /** @type {!MDCTopAppBarAdapter} */
  adapter) {
    super(Object.assign(MDCTopAppBarBaseFoundation.defaultAdapter, adapter));

    this.navClickHandler_ = () => this.adapter_.notifyNavigationIconClicked();

    this.scrollHandler_ = () => {};
  }

  init() {
    this.adapter_.registerNavigationIconInteractionHandler('click', this.navClickHandler_);
  }

  destroy() {
    this.adapter_.deregisterNavigationIconInteractionHandler('click', this.navClickHandler_);
  }

  initScrollHandler() {
    this.adapter_.registerScrollHandler(this.scrollHandler_);
  }

  destroyScrollHandler() {
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  }

}

var _default = MDCTopAppBarBaseFoundation;
exports.default = _default;
},{"./constants":"node_modules/@material/top-app-bar/constants.js","./adapter":"node_modules/@material/top-app-bar/adapter.js","@material/base/foundation":"node_modules/@material/base/foundation.js"}],"node_modules/@material/top-app-bar/fixed/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constants = require("../constants");

var _adapter = _interopRequireDefault(require("../adapter"));

var _foundation = _interopRequireDefault(require("../foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCTopAppBarFoundation<!MDCFixedTopAppBarFoundation>}
 * @final
 */
class MDCFixedTopAppBarFoundation extends _foundation.default {
  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  constructor(adapter) {
    super(adapter);
    /** State variable for the previous scroll iteration top app bar state */

    this.wasScrolled_ = false;

    this.scrollHandler_ = () => this.fixedScrollHandler_();
  }

  init() {
    super.init();
    this.adapter_.registerScrollHandler(this.scrollHandler_);
  }

  destroy() {
    super.destroy();
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  }
  /**
   * Scroll handler for applying/removing the modifier class
   * on the fixed top app bar.
   */


  fixedScrollHandler_() {
    const currentScroll = this.adapter_.getViewportScrollY();

    if (currentScroll <= 0) {
      if (this.wasScrolled_) {
        this.adapter_.removeClass(_constants.cssClasses.FIXED_SCROLLED_CLASS);
        this.wasScrolled_ = false;
      }
    } else {
      if (!this.wasScrolled_) {
        this.adapter_.addClass(_constants.cssClasses.FIXED_SCROLLED_CLASS);
        this.wasScrolled_ = true;
      }
    }
  }

}

var _default = MDCFixedTopAppBarFoundation;
exports.default = _default;
},{"../constants":"node_modules/@material/top-app-bar/constants.js","../adapter":"node_modules/@material/top-app-bar/adapter.js","../foundation":"node_modules/@material/top-app-bar/foundation.js"}],"node_modules/@material/top-app-bar/short/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adapter = _interopRequireDefault(require("../adapter"));

var _foundation = _interopRequireDefault(require("../foundation"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCShortTopAppBarFoundation>}
 * @final
 */
class MDCShortTopAppBarFoundation extends _foundation.default {
  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  constructor(adapter) {
    super(adapter); // State variable for the current top app bar state

    this.isCollapsed = false;

    this.scrollHandler_ = () => this.shortAppBarScrollHandler_();
  }

  init() {
    super.init();
    const isAlwaysCollapsed = this.adapter_.hasClass(_constants.cssClasses.SHORT_COLLAPSED_CLASS);

    if (this.adapter_.getTotalActionItems() > 0) {
      this.adapter_.addClass(_constants.cssClasses.SHORT_HAS_ACTION_ITEM_CLASS);
    }

    if (!isAlwaysCollapsed) {
      this.adapter_.registerScrollHandler(this.scrollHandler_);
      this.shortAppBarScrollHandler_();
    }
  }

  destroy() {
    super.destroy();
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
  }
  /**
   * Scroll handler for applying/removing the collapsed modifier class
   * on the short top app bar.
   * @private
   */


  shortAppBarScrollHandler_() {
    const currentScroll = this.adapter_.getViewportScrollY();

    if (currentScroll <= 0) {
      if (this.isCollapsed) {
        this.adapter_.removeClass(_constants.cssClasses.SHORT_COLLAPSED_CLASS);
        this.isCollapsed = false;
      }
    } else {
      if (!this.isCollapsed) {
        this.adapter_.addClass(_constants.cssClasses.SHORT_COLLAPSED_CLASS);
        this.isCollapsed = true;
      }
    }
  }

}

var _default = MDCShortTopAppBarFoundation;
exports.default = _default;
},{"../adapter":"node_modules/@material/top-app-bar/adapter.js","../foundation":"node_modules/@material/top-app-bar/foundation.js","../constants":"node_modules/@material/top-app-bar/constants.js"}],"node_modules/@material/top-app-bar/standard/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adapter = _interopRequireDefault(require("../adapter"));

var _foundation = _interopRequireDefault(require("../foundation"));

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const INITIAL_VALUE = 0;
/**
 * @extends {MDCTopAppBarBaseFoundation<!MDCTopAppBarFoundation>}
 * @final
 */

class MDCTopAppBarFoundation extends _foundation.default {
  /**
   * @param {!MDCTopAppBarAdapter} adapter
   */
  constructor(adapter) {
    super(adapter);
    /**
     * Used for diffs of current scroll position vs previous scroll position
     * @private {number}
     */

    this.lastScrollPosition_ = this.adapter_.getViewportScrollY();
    /**
     * Used to verify when the top app bar is completely showing or completely hidden
     * @private {number}
     */

    this.topAppBarHeight_ = this.adapter_.getTopAppBarHeight();
    /**
     * wasDocked_ is used to indicate if the top app bar was docked in the previous
     * scroll handler iteration.
     * @private {boolean}
     */

    this.wasDocked_ = true;
    /**
     * isDockedShowing_ is used to indicate if the top app bar is docked in the fully
     * shown position.
     * @private {boolean}
     */

    this.isDockedShowing_ = true;
    /**
     * Variable for current scroll position of the top app bar
     * @private {number}
     */

    this.currentAppBarOffsetTop_ = 0;
    /**
     * Used to prevent the top app bar from being scrolled out of view during resize events
     * @private {boolean} */

    this.isCurrentlyBeingResized_ = false;
    /**
     * The timeout that's used to throttle the resize events
     * @private {number}
     */

    this.resizeThrottleId_ = INITIAL_VALUE;
    /**
     * The timeout that's used to debounce toggling the isCurrentlyBeingResized_ variable after a resize
     * @private {number}
     */

    this.resizeDebounceId_ = INITIAL_VALUE;

    this.scrollHandler_ = () => this.topAppBarScrollHandler_();

    this.resizeHandler_ = () => this.topAppBarResizeHandler_();
  }

  init() {
    super.init();
    this.adapter_.registerScrollHandler(this.scrollHandler_);
    this.adapter_.registerResizeHandler(this.resizeHandler_);
  }

  destroy() {
    super.destroy();
    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
    this.adapter_.setStyle('top', '');
  }
  /**
   * Function to determine if the DOM needs to update.
   * @return {boolean}
   * @private
   */


  checkForUpdate_() {
    const offscreenBoundaryTop = -this.topAppBarHeight_;
    const hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0;
    const hasAnyPixelsOnscreen = this.currentAppBarOffsetTop_ > offscreenBoundaryTop;
    const partiallyShowing = hasAnyPixelsOffscreen && hasAnyPixelsOnscreen; // If it's partially showing, it can't be docked.

    if (partiallyShowing) {
      this.wasDocked_ = false;
    } else {
      // Not previously docked and not partially showing, it's now docked.
      if (!this.wasDocked_) {
        this.wasDocked_ = true;
        return true;
      } else if (this.isDockedShowing_ !== hasAnyPixelsOnscreen) {
        this.isDockedShowing_ = hasAnyPixelsOnscreen;
        return true;
      }
    }

    return partiallyShowing;
  }
  /**
   * Function to move the top app bar if needed.
   * @private
   */


  moveTopAppBar_() {
    if (this.checkForUpdate_()) {
      // Once the top app bar is fully hidden we use the max potential top app bar height as our offset
      // so the top app bar doesn't show if the window resizes and the new height > the old height.
      let offset = this.currentAppBarOffsetTop_;

      if (Math.abs(offset) >= this.topAppBarHeight_) {
        offset = -_constants.numbers.MAX_TOP_APP_BAR_HEIGHT;
      }

      this.adapter_.setStyle('top', offset + 'px');
    }
  }
  /**
   * Scroll handler for the default scroll behavior of the top app bar.
   * @private
   */


  topAppBarScrollHandler_() {
    const currentScrollPosition = Math.max(this.adapter_.getViewportScrollY(), 0);
    const diff = currentScrollPosition - this.lastScrollPosition_;
    this.lastScrollPosition_ = currentScrollPosition; // If the window is being resized the lastScrollPosition_ needs to be updated but the
    // current scroll of the top app bar should stay in the same position.

    if (!this.isCurrentlyBeingResized_) {
      this.currentAppBarOffsetTop_ -= diff;

      if (this.currentAppBarOffsetTop_ > 0) {
        this.currentAppBarOffsetTop_ = 0;
      } else if (Math.abs(this.currentAppBarOffsetTop_) > this.topAppBarHeight_) {
        this.currentAppBarOffsetTop_ = -this.topAppBarHeight_;
      }

      this.moveTopAppBar_();
    }
  }
  /**
   * Top app bar resize handler that throttle/debounce functions that execute updates.
   * @private
   */


  topAppBarResizeHandler_() {
    // Throttle resize events 10 p/s
    if (!this.resizeThrottleId_) {
      this.resizeThrottleId_ = setTimeout(() => {
        this.resizeThrottleId_ = INITIAL_VALUE;
        this.throttledResizeHandler_();
      }, _constants.numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
    }

    this.isCurrentlyBeingResized_ = true;

    if (this.resizeDebounceId_) {
      clearTimeout(this.resizeDebounceId_);
    }

    this.resizeDebounceId_ = setTimeout(() => {
      this.topAppBarScrollHandler_();
      this.isCurrentlyBeingResized_ = false;
      this.resizeDebounceId_ = INITIAL_VALUE;
    }, _constants.numbers.DEBOUNCE_THROTTLE_RESIZE_TIME_MS);
  }
  /**
   * Throttled function that updates the top app bar scrolled values if the
   * top app bar height changes.
   * @private
   */


  throttledResizeHandler_() {
    const currentHeight = this.adapter_.getTopAppBarHeight();

    if (this.topAppBarHeight_ !== currentHeight) {
      this.wasDocked_ = false; // Since the top app bar has a different height depending on the screen width, this
      // will ensure that the top app bar remains in the correct location if
      // completely hidden and a resize makes the top app bar a different height.

      this.currentAppBarOffsetTop_ -= this.topAppBarHeight_ - currentHeight;
      this.topAppBarHeight_ = currentHeight;
    }

    this.topAppBarScrollHandler_();
  }

}

var _default = MDCTopAppBarFoundation;
exports.default = _default;
},{"../adapter":"node_modules/@material/top-app-bar/adapter.js","../foundation":"node_modules/@material/top-app-bar/foundation.js","../constants":"node_modules/@material/top-app-bar/constants.js"}],"node_modules/@material/top-app-bar/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCTopAppBarBaseFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
Object.defineProperty(exports, "MDCFixedTopAppBarFoundation", {
  enumerable: true,
  get: function () {
    return _foundation2.default;
  }
});
Object.defineProperty(exports, "MDCShortTopAppBarFoundation", {
  enumerable: true,
  get: function () {
    return _foundation3.default;
  }
});
Object.defineProperty(exports, "MDCTopAppBarFoundation", {
  enumerable: true,
  get: function () {
    return _foundation4.default;
  }
});
exports.MDCTopAppBar = void 0;

var _adapter = _interopRequireDefault(require("./adapter"));

var _component = _interopRequireDefault(require("@material/base/component"));

var _index = require("@material/ripple/index");

var _constants = require("./constants");

var _foundation = _interopRequireDefault(require("./foundation"));

var _foundation2 = _interopRequireDefault(require("./fixed/foundation"));

var _foundation3 = _interopRequireDefault(require("./short/foundation"));

var _foundation4 = _interopRequireDefault(require("./standard/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCComponent<!MDCTopAppBarBaseFoundation>}
 * @final
 */
class MDCTopAppBar extends _component.default {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @private {?Element} */

    this.navIcon_;
    /** @type {?Array<MDCRipple>} */

    this.iconRipples_;
    /** @type {Object} */

    this.scrollTarget_;
  }

  initialize(rippleFactory = el => _index.MDCRipple.attachTo(el)) {
    this.navIcon_ = this.root_.querySelector(_constants.strings.NAVIGATION_ICON_SELECTOR); // Get all icons in the toolbar and instantiate the ripples

    const icons = [].slice.call(this.root_.querySelectorAll(_constants.strings.ACTION_ITEM_SELECTOR));

    if (this.navIcon_) {
      icons.push(this.navIcon_);
    }

    this.iconRipples_ = icons.map(icon => {
      const ripple = rippleFactory(icon);
      ripple.unbounded = true;
      return ripple;
    });
  }

  destroy() {
    this.iconRipples_.forEach(iconRipple => iconRipple.destroy());
    super.destroy();
  }

  setScrollTarget(target) {
    this.foundation_.destroyScrollHandler();
    this.scrollTarget_ = target;
    this.foundation_.initScrollHandler();
  }
  /**
   * @param {!Element} root
   * @return {!MDCTopAppBar}
   */


  static attachTo(root) {
    return new MDCTopAppBar(root);
  }
  /**
   * @return {!MDCTopAppBarBaseFoundation}
   */


  getDefaultFoundation() {
    /** @type {!MDCTopAppBarAdapter} */
    const adapter =
    /** @type {!MDCTopAppBarAdapter} */
    Object.assign({
      hasClass: className => this.root_.classList.contains(className),
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      setStyle: (property, value) => this.root_.style.setProperty(property, value),
      getTopAppBarHeight: () => this.root_.clientHeight,
      registerNavigationIconInteractionHandler: (evtType, handler) => {
        if (this.navIcon_) {
          this.navIcon_.addEventListener(evtType, handler);
        }
      },
      deregisterNavigationIconInteractionHandler: (evtType, handler) => {
        if (this.navIcon_) {
          this.navIcon_.removeEventListener(evtType, handler);
        }
      },
      notifyNavigationIconClicked: () => {
        this.emit(_constants.strings.NAVIGATION_EVENT, {});
      },
      registerScrollHandler: handler => this.scrollTarget_.addEventListener('scroll', handler),
      deregisterScrollHandler: handler => this.scrollTarget_.removeEventListener('scroll', handler),
      registerResizeHandler: handler => window.addEventListener('resize', handler),
      deregisterResizeHandler: handler => window.removeEventListener('resize', handler),
      getViewportScrollY: () => this.scrollTarget_[this.scrollTarget_ === window ? 'pageYOffset' : 'scrollTop'],
      getTotalActionItems: () => this.root_.querySelectorAll(_constants.strings.ACTION_ITEM_SELECTOR).length
    });
    this.scrollTarget_ = window;
    /** @type {!MDCTopAppBarBaseFoundation} */

    let foundation;

    if (this.root_.classList.contains(_constants.cssClasses.SHORT_CLASS)) {
      foundation = new _foundation3.default(adapter);
    } else if (this.root_.classList.contains(_constants.cssClasses.FIXED_CLASS)) {
      foundation = new _foundation2.default(adapter);
    } else {
      foundation = new _foundation4.default(adapter);
    }

    return foundation;
  }

}

exports.MDCTopAppBar = MDCTopAppBar;
},{"./adapter":"node_modules/@material/top-app-bar/adapter.js","@material/base/component":"node_modules/@material/base/component.js","@material/ripple/index":"node_modules/@material/ripple/index.js","./constants":"node_modules/@material/top-app-bar/constants.js","./foundation":"node_modules/@material/top-app-bar/foundation.js","./fixed/foundation":"node_modules/@material/top-app-bar/fixed/foundation.js","./short/foundation":"node_modules/@material/top-app-bar/short/foundation.js","./standard/foundation":"node_modules/@material/top-app-bar/standard/foundation.js"}],"node_modules/preact-material-components/TopAppBar/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TopAppBar = exports.TopAppBarTitle = exports.TopAppBarIcon = exports.TopAppBarSection = exports.TopAppBarRow = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _topAppBar = require("@material/top-app-bar");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent6 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var TopAppBarRow =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(TopAppBarRow, _MaterialComponent);

  function TopAppBarRow() {
    var _this;

    (0, _classCallCheck2.default)(this, TopAppBarRow);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarRow).apply(this, arguments));
    _this.componentName = 'top-app-bar__row';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(TopAppBarRow, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return TopAppBarRow;
}(_MaterialComponent6.default);

exports.TopAppBarRow = TopAppBarRow;

var TopAppBarSection =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(TopAppBarSection, _MaterialComponent2);

  function TopAppBarSection() {
    var _this2;

    (0, _classCallCheck2.default)(this, TopAppBarSection);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarSection).apply(this, arguments));
    _this2.componentName = 'top-app-bar__section';
    _this2.mdcProps = ['align-start', 'align-end'];
    return _this2;
  }

  (0, _createClass2.default)(TopAppBarSection, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("section", Object.assign({}, props), props.children);
    }
  }]);
  return TopAppBarSection;
}(_MaterialComponent6.default);

exports.TopAppBarSection = TopAppBarSection;

var TopAppBarIcon =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(TopAppBarIcon, _MaterialComponent3);

  function TopAppBarIcon() {
    var _this3;

    (0, _classCallCheck2.default)(this, TopAppBarIcon);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarIcon).apply(this, arguments));
    _this3.componentName = 'top-app-bar__icon';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(TopAppBarIcon, [{
    key: "materialDom",
    value: function materialDom(props) {
      var className = props.navigation ? 'material-icons mdc-top-app-bar__navigation-icon' : 'material-icons';
      return (0, _preact.h)("a", Object.assign({
        className: className
      }, props), props.children);
    }
  }]);
  return TopAppBarIcon;
}(_MaterialComponent6.default);

exports.TopAppBarIcon = TopAppBarIcon;

var TopAppBarTitle =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(TopAppBarTitle, _MaterialComponent4);

  function TopAppBarTitle() {
    var _this4;

    (0, _classCallCheck2.default)(this, TopAppBarTitle);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBarTitle).apply(this, arguments));
    _this4.componentName = 'top-app-bar__title';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(TopAppBarTitle, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props), props.children);
    }
  }]);
  return TopAppBarTitle;
}(_MaterialComponent6.default);

exports.TopAppBarTitle = TopAppBarTitle;

var TopAppBar =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(TopAppBar, _MaterialComponent5);

  function TopAppBar() {
    var _this5;

    (0, _classCallCheck2.default)(this, TopAppBar);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(TopAppBar).apply(this, arguments));
    _this5.componentName = 'top-app-bar';
    _this5.mdcProps = ['short', 'short-collapsed', 'fixed', 'prominent'];
    return _this5;
  }

  (0, _createClass2.default)(TopAppBar, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TopAppBar.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        var comp = new _topAppBar.MDCTopAppBar(this.control);
        comp.listen('MDCTopAppBar:nav', this.onNav);
        this.MDComponent = comp;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(TopAppBar.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCTopAppBar:nav', this.onNav);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onNav",
    value: function onNav(e) {
      if (this.props.onNav) {
        this.props.onNav(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("header", Object.assign({
        ref: this.setControlRef
      }, props), props.children);
    }
  }]);
  return TopAppBar;
}(_MaterialComponent6.default);

exports.TopAppBar = TopAppBar;

__decorate([_bindDecorator.bind], TopAppBar.prototype, "onNav", null);

var default_1 =
/*#__PURE__*/
function (_TopAppBar) {
  (0, _inherits2.default)(default_1, _TopAppBar);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(TopAppBar);

exports.default = default_1;
default_1.Section = TopAppBarSection;
default_1.Icon = TopAppBarIcon;
default_1.Title = TopAppBarTitle;
default_1.Row = TopAppBarRow;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/top-app-bar":"node_modules/@material/top-app-bar/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/Typography/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Typography = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Typography =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Typography, _MaterialComponent);

  function Typography() {
    var _this;

    (0, _classCallCheck2.default)(this, Typography);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Typography).apply(this, arguments));
    _this.componentName = 'typography';
    _this.mdcProps = ['headline1', 'headline2', 'headline3', 'headline4', 'headline5', 'headline6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'button', 'caption', 'overline', 'title'];
    return _this;
  }

  (0, _createClass2.default)(Typography, [{
    key: "materialDom",
    value: function materialDom(allprops) {
      var tag = allprops.tag,
          props = __rest(allprops, ["tag"]);

      var Tag = tag ? tag : 'span';
      return (0, _preact.h)(Tag, Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return Typography;
}(_MaterialComponent2.default);

exports.Typography = Typography;
var _default = Typography;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/ImageList/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ImageList = exports.ImageListLabel = exports.ImageListSupporting = exports.ImageListImage = exports.ImageListItem = exports.ImageListAspectContainer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent7 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var ImageListAspectContainer =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(ImageListAspectContainer, _MaterialComponent);

  function ImageListAspectContainer() {
    var _this;

    (0, _classCallCheck2.default)(this, ImageListAspectContainer);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageListAspectContainer).apply(this, arguments));
    _this.componentName = 'image-list__image-aspect-container';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(ImageListAspectContainer, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return ImageListAspectContainer;
}(_MaterialComponent7.default);

exports.ImageListAspectContainer = ImageListAspectContainer;

var ImageListItem =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(ImageListItem, _MaterialComponent2);

  function ImageListItem() {
    var _this2;

    (0, _classCallCheck2.default)(this, ImageListItem);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageListItem).apply(this, arguments));
    _this2.componentName = 'image-list__item';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(ImageListItem, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("li", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ImageListItem;
}(_MaterialComponent7.default);

exports.ImageListItem = ImageListItem;

var ImageListImage =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(ImageListImage, _MaterialComponent3);

  function ImageListImage() {
    var _this3;

    (0, _classCallCheck2.default)(this, ImageListImage);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageListImage).apply(this, arguments));
    _this3.componentName = 'image-list__image';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(ImageListImage, [{
    key: "materialDom",
    value: function materialDom(allprops) {
      var src = allprops.src,
          props = __rest(allprops, ["src"]);

      return (0, _preact.h)("img", Object.assign({
        src: src
      }, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ImageListImage;
}(_MaterialComponent7.default);

exports.ImageListImage = ImageListImage;

var ImageListSupporting =
/*#__PURE__*/
function (_MaterialComponent4) {
  (0, _inherits2.default)(ImageListSupporting, _MaterialComponent4);

  function ImageListSupporting() {
    var _this4;

    (0, _classCallCheck2.default)(this, ImageListSupporting);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageListSupporting).apply(this, arguments));
    _this4.componentName = 'image-list__supporting';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(ImageListSupporting, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return ImageListSupporting;
}(_MaterialComponent7.default);

exports.ImageListSupporting = ImageListSupporting;

var ImageListLabel =
/*#__PURE__*/
function (_MaterialComponent5) {
  (0, _inherits2.default)(ImageListLabel, _MaterialComponent5);

  function ImageListLabel() {
    var _this5;

    (0, _classCallCheck2.default)(this, ImageListLabel);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageListLabel).apply(this, arguments));
    _this5.componentName = 'image-list__label';
    _this5.mdcProps = [];
    return _this5;
  }

  (0, _createClass2.default)(ImageListLabel, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("span", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ImageListLabel;
}(_MaterialComponent7.default);

exports.ImageListLabel = ImageListLabel;

var ImageList =
/*#__PURE__*/
function (_MaterialComponent6) {
  (0, _inherits2.default)(ImageList, _MaterialComponent6);

  function ImageList() {
    var _this6;

    (0, _classCallCheck2.default)(this, ImageList);
    _this6 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ImageList).apply(this, arguments));
    _this6.componentName = 'image-list';
    _this6.mdcProps = ['masonry', 'with-text-protection'];
    return _this6;
  }

  (0, _createClass2.default)(ImageList, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("ul", Object.assign({}, props, {
        ref: this.setControlRef
      }), props.children);
    }
  }]);
  return ImageList;
}(_MaterialComponent7.default);

exports.ImageList = ImageList;

var default_1 =
/*#__PURE__*/
function (_ImageList) {
  (0, _inherits2.default)(default_1, _ImageList);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(ImageList);

exports.default = default_1;
default_1.Item = ImageListItem;
default_1.AspectContainer = ImageListAspectContainer;
default_1.Image = ImageListImage;
default_1.Supporting = ImageListSupporting;
default_1.Label = ImageListLabel;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/linear-progress/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const cssClasses = {
  CLOSED_CLASS: 'mdc-linear-progress--closed',
  INDETERMINATE_CLASS: 'mdc-linear-progress--indeterminate',
  REVERSED_CLASS: 'mdc-linear-progress--reversed'
};
exports.cssClasses = cssClasses;
const strings = {
  PRIMARY_BAR_SELECTOR: '.mdc-linear-progress__primary-bar',
  BUFFER_SELECTOR: '.mdc-linear-progress__buffer'
};
exports.strings = strings;
},{}],"node_modules/@material/linear-progress/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = require("@material/base/index");

var _index2 = require("@material/animation/index");

var _constants = require("./constants");

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCLinearProgressFoundation extends _index.MDCFoundation {
  static get cssClasses() {
    return _constants.cssClasses;
  }

  static get strings() {
    return _constants.strings;
  }

  static get defaultAdapter() {
    return {
      addClass: () =>
      /* className: string */
      {},
      getPrimaryBar: () =>
      /* el: Element */
      {},
      getBuffer: () =>
      /* el: Element */
      {},
      hasClass: () =>
      /* className: string */
      false,
      removeClass: () =>
      /* className: string */
      {},
      setStyle: () =>
      /* el: Element, styleProperty: string, value: string */
      {}
    };
  }

  constructor(adapter) {
    super(Object.assign(MDCLinearProgressFoundation.defaultAdapter, adapter));
  }

  init() {
    this.determinate_ = !this.adapter_.hasClass(_constants.cssClasses.INDETERMINATE_CLASS);
    this.reverse_ = this.adapter_.hasClass(_constants.cssClasses.REVERSED_CLASS);
    this.progress_ = 0;
  }

  setDeterminate(isDeterminate) {
    this.determinate_ = isDeterminate;

    if (this.determinate_) {
      this.adapter_.removeClass(_constants.cssClasses.INDETERMINATE_CLASS);
      this.setScale_(this.adapter_.getPrimaryBar(), this.progress_);
    } else {
      this.adapter_.addClass(_constants.cssClasses.INDETERMINATE_CLASS);
      this.setScale_(this.adapter_.getPrimaryBar(), 1);
      this.setScale_(this.adapter_.getBuffer(), 1);
    }
  }

  setProgress(value) {
    this.progress_ = value;

    if (this.determinate_) {
      this.setScale_(this.adapter_.getPrimaryBar(), value);
    }
  }

  setBuffer(value) {
    if (this.determinate_) {
      this.setScale_(this.adapter_.getBuffer(), value);
    }
  }

  setReverse(isReversed) {
    this.reverse_ = isReversed;

    if (this.reverse_) {
      this.adapter_.addClass(_constants.cssClasses.REVERSED_CLASS);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.REVERSED_CLASS);
    }
  }

  open() {
    this.adapter_.removeClass(_constants.cssClasses.CLOSED_CLASS);
  }

  close() {
    this.adapter_.addClass(_constants.cssClasses.CLOSED_CLASS);
  }

  setScale_(el, scaleValue) {
    const value = 'scaleX(' + scaleValue + ')';

    _index2.transformStyleProperties.forEach(transformStyleProperty => {
      this.adapter_.setStyle(el, transformStyleProperty, value);
    });
  }

}

exports.default = MDCLinearProgressFoundation;
},{"@material/base/index":"node_modules/@material/base/index.js","@material/animation/index":"node_modules/@material/animation/index.js","./constants":"node_modules/@material/linear-progress/constants.js"}],"node_modules/@material/linear-progress/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCLinearProgressFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCLinearProgress = void 0;

var _index = require("@material/base/index");

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
class MDCLinearProgress extends _index.MDCComponent {
  static attachTo(root) {
    return new MDCLinearProgress(root);
  }

  set determinate(value) {
    this.foundation_.setDeterminate(value);
  }

  set progress(value) {
    this.foundation_.setProgress(value);
  }

  set buffer(value) {
    this.foundation_.setBuffer(value);
  }

  set reverse(value) {
    this.foundation_.setReverse(value);
  }

  open() {
    this.foundation_.open();
  }

  close() {
    this.foundation_.close();
  }

  getDefaultFoundation() {
    return new _foundation.default({
      addClass: className => this.root_.classList.add(className),
      getPrimaryBar: () => this.root_.querySelector(_foundation.default.strings.PRIMARY_BAR_SELECTOR),
      getBuffer: () => this.root_.querySelector(_foundation.default.strings.BUFFER_SELECTOR),
      hasClass: className => this.root_.classList.contains(className),
      removeClass: className => this.root_.classList.remove(className),
      setStyle: (el, styleProperty, value) => el.style[styleProperty] = value
    });
  }

}

exports.MDCLinearProgress = MDCLinearProgress;
},{"@material/base/index":"node_modules/@material/base/index.js","./foundation":"node_modules/@material/linear-progress/foundation.js"}],"node_modules/preact-material-components/LinearProgress/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LinearProgress = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _linearProgress = require("@material/linear-progress");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var LinearProgress =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(LinearProgress, _MaterialComponent);

  function LinearProgress() {
    var _this;

    (0, _classCallCheck2.default)(this, LinearProgress);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LinearProgress).apply(this, arguments));
    _this.componentName = 'linear-progress';
    _this.mdcProps = ['reversed', 'indeterminate'];
    _this.themeProps = ['primary', 'secondary'];
    _this.mdcNotifyProps = ['progress'];
    return _this;
  }

  (0, _createClass2.default)(LinearProgress, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(LinearProgress.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _linearProgress.MDCLinearProgress(this.control);
        this.MDComponent.determinate = !this.props.indeterminate;
        this.MDComponent.reverse = !!this.props.reversed;
      }

      this.afterComponentDidMount();
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      (0, _get2.default)((0, _getPrototypeOf2.default)(LinearProgress.prototype), "componentWillReceiveProps", this).call(this, nextProps);

      if (this.MDComponent) {
        this.MDComponent.determinate = !this.props.indeterminate;
        this.MDComponent.reverse = !!nextProps.reversed;
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(LinearProgress.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      // TODO: Fix theme props
      return (0, _preact.h)("div", Object.assign({
        role: "progressbar"
      }, props, {
        ref: this.setControlRef
      }), (0, _preact.h)("div", {
        className: "mdc-linear-progress__buffering-dots"
      }), (0, _preact.h)("div", {
        className: "mdc-linear-progress__buffer"
      }), (0, _preact.h)("div", {
        className: "mdc-linear-progress__bar mdc-linear-progress__primary-bar"
      }, (0, _preact.h)("span", {
        className: "mdc-linear-progress__bar-inner"
      })), (0, _preact.h)("div", {
        className: "mdc-linear-progress__bar mdc-linear-progress__secondary-bar"
      }, (0, _preact.h)("span", {
        className: "mdc-linear-progress__bar-inner"
      })));
    }
  }]);
  return LinearProgress;
}(_MaterialComponent2.default);

exports.LinearProgress = LinearProgress;
var _default = LinearProgress;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/linear-progress":"node_modules/@material/linear-progress/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/preact-material-components/LayoutGrid/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.LayoutGrid = exports.LayoutGridCell = exports.LayoutGridInner = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _preact = require("preact");

var _MaterialComponent4 = _interopRequireDefault(require("../Base/MaterialComponent"));

var LayoutGridInner =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(LayoutGridInner, _MaterialComponent);

  function LayoutGridInner() {
    var _this;

    (0, _classCallCheck2.default)(this, LayoutGridInner);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LayoutGridInner).apply(this, arguments));
    _this.componentName = 'layout-grid__inner';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(LayoutGridInner, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({
        ref: this.setControlRef
      }, props), props.children);
    }
  }]);
  return LayoutGridInner;
}(_MaterialComponent4.default);

exports.LayoutGridInner = LayoutGridInner;

var LayoutGridCell =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(LayoutGridCell, _MaterialComponent2);

  function LayoutGridCell() {
    var _this2;

    (0, _classCallCheck2.default)(this, LayoutGridCell);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LayoutGridCell).apply(this, arguments));
    _this2.componentName = 'layout-grid__cell';
    _this2.mdcProps = [];
    return _this2;
  }

  (0, _createClass2.default)(LayoutGridCell, [{
    key: "render",
    value: function render(props) {
      var element = (0, _get2.default)((0, _getPrototypeOf2.default)(LayoutGridCell.prototype), "render", this).call(this, props); // remove the extra attributes used for customising this element - keep the DOM clean

      Object.keys(LayoutGridCell.propsDict).forEach(function (key) {
        return (// @ts-ignore
          delete (element.props || element.attributes)[LayoutGridCell.propsDict[key]]
        );
      });
      return element;
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props, {
        className: LayoutGridCell.createClassName(props),
        ref: this.setControlRef
      }), props.children);
    }
  }], [{
    key: "createClassName",
    value: function createClassName(props) {
      var baseClass = 'mdc-layout-grid__cell--';
      var classes = [];

      if (props[LayoutGridCell.propsDict.cols]) {
        classes.push("".concat(baseClass, "span-").concat(props[LayoutGridCell.propsDict.cols]));
      }

      if (props[LayoutGridCell.propsDict.desktop]) {
        classes.push("".concat(baseClass, "span-").concat(props[LayoutGridCell.propsDict.desktop], "-desktop"));
      }

      if (props[LayoutGridCell.propsDict.tablet]) {
        classes.push("".concat(baseClass, "span-").concat(props[LayoutGridCell.propsDict.tablet], "-tablet"));
      }

      if (props[LayoutGridCell.propsDict.phone]) {
        classes.push("".concat(baseClass, "span-").concat(props[LayoutGridCell.propsDict.phone], "-phone"));
      }

      if (props[LayoutGridCell.propsDict.order]) {
        classes.push("".concat(baseClass, "order-").concat(props[LayoutGridCell.propsDict.order]));
      }

      if (props[LayoutGridCell.propsDict.align]) {
        classes.push("".concat(baseClass, "align-").concat(props[LayoutGridCell.propsDict.align]));
      }

      return classes.join(' ');
    }
  }]);
  return LayoutGridCell;
}(_MaterialComponent4.default);

exports.LayoutGridCell = LayoutGridCell;
LayoutGridCell.propsDict = {
  align: 'align',
  cols: 'cols',
  desktop: 'desktopCols',
  order: 'order',
  phone: 'phoneCols',
  tablet: 'tabletCols'
};

var LayoutGrid =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(LayoutGrid, _MaterialComponent3);

  function LayoutGrid() {
    var _this3;

    (0, _classCallCheck2.default)(this, LayoutGrid);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(LayoutGrid).apply(this, arguments));
    _this3.componentName = 'layout-grid';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(LayoutGrid, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({
        ref: this.setControlRef
      }, props), props.children);
    }
  }]);
  return LayoutGrid;
}(_MaterialComponent4.default);

exports.LayoutGrid = LayoutGrid;

var default_1 =
/*#__PURE__*/
function (_LayoutGrid) {
  (0, _inherits2.default)(default_1, _LayoutGrid);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(LayoutGrid);

exports.default = default_1;
default_1.Cell = LayoutGridCell;
default_1.Inner = LayoutGridInner;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/menu/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MDCMenuAdapter = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Menu. Provides an interface for managing
 * - selected element classes
 * - get focused elements
 * - toggling a checkbox inside a list item
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCMenuAdapter {
  /**
   * Adds a class to the element at the index provided.
   * @param {number} index
   * @param {string} className
   */
  addClassToElementAtIndex(index, className) {}
  /**
   * Removes a class from the element at the index provided
   * @param {number} index
   * @param {string} className
   */


  removeClassFromElementAtIndex(index, className) {}
  /**
   * Adds an attribute, with value, to the element at the index provided.
   * @param {number} index
   * @param {string} attr
   * @param {string} value
   */


  addAttributeToElementAtIndex(index, attr, value) {}
  /**
   * Removes an attribute from an element at the index provided.
   * @param {number} index
   * @param {string} attr
   */


  removeAttributeFromElementAtIndex(index, attr) {}
  /**
   * Returns true if the element contains the className.
   * @param {?HTMLElement} element
   * @param {string} className
   * @return {boolean} true if the element contains the className
   */


  elementContainsClass(element, className) {}
  /**
   * Closes the menu-surface.
   */


  closeSurface() {}
  /**
   * Returns the index for the element provided.
   * @param {?HTMLElement} element
   * @return {number} index of the element in the list or -1 if it is not in the list.
   */


  getElementIndex(element) {}
  /**
   * Returns the parentElement of the provided element.
   * @param {?HTMLElement} element
   * @return {?HTMLElement} parentElement of the element provided.
   */


  getParentElement(element) {}
  /**
   * Returns the element within the selectionGroup containing the selected element class.
   * @param {!HTMLElement} selectionGroup
   * @return {number} element within the selectionGroup that contains the selected element class.
   */


  getSelectedElementIndex(selectionGroup) {}
  /**
   * Emits an event using the evtData.
   * @param {{
  *    index: number
  *   }} evtData
   */


  notifySelected(evtData) {}
  /**
   * Returns the checkbox contained within the element at the index specified.
   * @param {number} index
   * @return {?HTMLElement} checkbox
   */


  getCheckboxAtIndex(index) {}
  /**
   * Toggles the checkbox within a list item.
   * @param {!HTMLElement} target
   */


  toggleCheckbox(target) {}

}

exports.MDCMenuAdapter = MDCMenuAdapter;
},{}],"node_modules/@material/menu/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ROOT: 'mdc-menu',
  MENU_SELECTED_LIST_ITEM: 'mdc-menu-item--selected',
  MENU_SELECTION_GROUP: 'mdc-menu__selection-group'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  SELECTED_EVENT: 'MDCMenu:selected',
  ARIA_SELECTED_ATTR: 'aria-selected',
  LIST_SELECTOR: '.mdc-list',
  CHECKBOX_SELECTOR: 'input[type="checkbox"]'
};
exports.strings = strings;
},{}],"node_modules/@material/menu-surface/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MDCMenuSurfaceAdapter = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDCMenuSurface. Provides an interface for managing
 * - classes
 * - dom
 * - focus
 * - position
 * - dimensions
 * - event handlers
 *
 * Additionally, provides type information for the adapter to the Closure
 * compiler.
 *
 * Implement this adapter for your framework of choice to delegate updates to
 * the component in your framework of choice. See architecture documentation
 * for more details.
 * https://github.com/material-components/material-components-web/blob/master/docs/code/architecture.md
 *
 * @record
 */
class MDCMenuSurfaceAdapter {
  /** @param {string} className */
  addClass(className) {}
  /** @param {string} className */


  removeClass(className) {}
  /**
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /** @return {boolean} */


  hasAnchor() {}
  /** Emits an event when the menu surface is closed. */


  notifyClose() {}
  /** Emits an event when the menu surface is opened. */


  notifyOpen() {}
  /**
   * @return {boolean}
   * @param {EventTarget} el
   */


  isElementInContainer(el) {}
  /** @return {boolean} */


  isRtl() {}
  /** @param {string} origin */


  setTransformOrigin(origin) {}
  /** @return {boolean} */


  isFocused() {}
  /** Saves the element that was focused before the menu surface was opened. */


  saveFocus() {}
  /** Restores focus to the element that was focused before the menu surface was opened. */


  restoreFocus() {}
  /** @return {boolean} */


  isFirstElementFocused() {}
  /** @return {boolean} */


  isLastElementFocused() {}
  /** Focuses the first focusable element in the menu-surface. */


  focusFirstElement() {}
  /** Focuses the first focusable element in the menu-surface. */


  focusLastElement() {}
  /** @return {!{width: number, height: number}} */


  getInnerDimensions() {}
  /** @return {!{width: number, height: number, top: number, right: number, bottom: number, left: number}} */


  getAnchorDimensions() {}
  /** @return {!{ width: number, height: number }} */


  getWindowDimensions() {}
  /** @return {!{ width: number, height: number }} */


  getBodyDimensions() {}
  /** @return {!{ width: number, height: number }} */


  getWindowScroll() {}
  /** @param {!{
  *   top: (string|undefined),
  *   right: (string|undefined),
  *   bottom: (string|undefined),
  *   left: (string|undefined)
  * }} position */


  setPosition(position) {}
  /** @param {string} height */


  setMaxHeight(height) {}

}

exports.MDCMenuSurfaceAdapter = MDCMenuSurfaceAdapter;
},{}],"node_modules/@material/menu-surface/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Corner = exports.CornerBit = exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ANCHOR: 'mdc-menu-surface--anchor',
  ANIMATING_CLOSED: 'mdc-menu-surface--animating-closed',
  ANIMATING_OPEN: 'mdc-menu-surface--animating-open',
  FIXED: 'mdc-menu-surface--fixed',
  OPEN: 'mdc-menu-surface--open',
  ROOT: 'mdc-menu-surface'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  CLOSED_EVENT: 'MDCMenuSurface:closed',
  OPENED_EVENT: 'MDCMenuSurface:opened',
  FOCUSABLE_ELEMENTS: 'button:not(:disabled), [href]:not([aria-disabled="true"]), input:not(:disabled), ' + 'select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex="-1"]):not([aria-disabled="true"])'
};
/** @enum {number} */

exports.strings = strings;
const numbers = {
  // Total duration of menu-surface open animation.
  TRANSITION_OPEN_DURATION: 120,
  // Total duration of menu-surface close animation.
  TRANSITION_CLOSE_DURATION: 75,
  // Margin left to the edge of the viewport when menu-surface is at maximum possible height.
  MARGIN_TO_EDGE: 32,
  // Ratio of anchor width to menu-surface width for switching from corner positioning to center positioning.
  ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO: 0.67
};
/**
 * Enum for bits in the {@see Corner) bitmap.
 * @enum {number}
 */

exports.numbers = numbers;
const CornerBit = {
  BOTTOM: 1,
  CENTER: 2,
  RIGHT: 4,
  FLIP_RTL: 8
};
/**
 * Enum for representing an element corner for positioning the menu-surface.
 *
 * The START constants map to LEFT if element directionality is left
 * to right and RIGHT if the directionality is right to left.
 * Likewise END maps to RIGHT or LEFT depending on the directionality.
 *
 * @enum {number}
 */

exports.CornerBit = CornerBit;
const Corner = {
  TOP_LEFT: 0,
  TOP_RIGHT: CornerBit.RIGHT,
  BOTTOM_LEFT: CornerBit.BOTTOM,
  BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
  TOP_START: CornerBit.FLIP_RTL,
  TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
  BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
  BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
};
exports.Corner = Corner;
},{}],"node_modules/@material/menu-surface/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AnchorMargin = exports.MDCMenuSurfaceFoundation = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = require("./adapter");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @typedef {{
 *   top: number,
 *   right: number,
 *   bottom: number,
 *   left: number
 * }}
 */
let AnchorMargin;
/* eslint-disable no-unused-vars */

/**
 * @typedef {{
 *   viewport: { width: number, height: number },
 *   viewportDistance: {top: number, right: number, bottom: number, left: number},
 *   anchorHeight: number,
 *   anchorWidth: number,
 *   surfaceHeight: number,
 *   surfaceWidth: number,
 *   bodyDimensions,
 *   windowScroll,
 * }}
 */

exports.AnchorMargin = AnchorMargin;
let AutoLayoutMeasurements;
/* eslint-enable no-unused-vars */

/**
 * @extends {MDCFoundation<!MDCMenuSurfaceAdapter>}
 */
class MDCMenuSurfaceFoundation extends _foundation.default {
  /** @return enum{cssClasses} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum{string} */


  static get strings() {
    return _constants.strings;
  }
  /** @return enum {number} */


  static get numbers() {
    return _constants.numbers;
  }
  /** @return enum{number} */


  static get Corner() {
    return _constants.Corner;
  }
  /**
   * {@see MDCMenuSurfaceAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCMenuSurfaceAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCMenuSurfaceAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => false,
        hasAnchor: () => false,
        notifyClose: () => {},
        notifyOpen: () => {},
        isElementInContainer: () => false,
        isRtl: () => false,
        setTransformOrigin: () => {},
        isFocused: () => false,
        saveFocus: () => {},
        restoreFocus: () => {},
        isFirstElementFocused: () => {},
        isLastElementFocused: () => {},
        focusFirstElement: () => {},
        focusLastElement: () => {},
        getInnerDimensions: () => ({}),
        getAnchorDimensions: () => ({}),
        getWindowDimensions: () => ({}),
        getBodyDimensions: () => ({}),
        getWindowScroll: () => ({}),
        setPosition: () => {},
        setMaxHeight: () => {}
      }
    );
  }
  /** @param {!MDCMenuSurfaceAdapter} adapter */


  constructor(adapter) {
    super(Object.assign(MDCMenuSurfaceFoundation.defaultAdapter, adapter));
    /** @private {boolean} */

    this.isOpen_ = false;
    /** @private {number} */

    this.openAnimationEndTimerId_ = 0;
    /** @private {number} */

    this.closeAnimationEndTimerId_ = 0;
    /** @private {number} */

    this.animationRequestId_ = 0;
    /** @private {!{ width: number, height: number }} */

    this.dimensions_;
    /** @private {!Corner} */

    this.anchorCorner_ = _constants.Corner.TOP_START;
    /** @private {!AnchorMargin} */

    this.anchorMargin_ = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
    /** @private {?AutoLayoutMeasurements} */

    this.measures_ = null;
    /** @private {boolean} */

    this.quickOpen_ = false;
    /** @private {boolean} */

    this.hoistedElement_ = false;
    /** @private {boolean} */

    this.isFixedPosition_ = false;
    /** @private {!{x: number, y: number}} */

    this.position_ = {
      x: 0,
      y: 0
    };
  }

  init() {
    const {
      ROOT,
      OPEN
    } = MDCMenuSurfaceFoundation.cssClasses;

    if (!this.adapter_.hasClass(ROOT)) {
      throw new Error(`${ROOT} class required in root element.`);
    }

    if (this.adapter_.hasClass(OPEN)) {
      this.isOpen_ = true;
    }
  }

  destroy() {
    clearTimeout(this.openAnimationEndTimerId_);
    clearTimeout(this.closeAnimationEndTimerId_); // Cancel any currently running animations.

    cancelAnimationFrame(this.animationRequestId_);
  }
  /**
   * @param {!Corner} corner Default anchor corner alignment of top-left menu surface corner.
   */


  setAnchorCorner(corner) {
    this.anchorCorner_ = corner;
  }
  /**
   * @param {!AnchorMargin} margin set of margin values from anchor.
   */


  setAnchorMargin(margin) {
    this.anchorMargin_.top = typeof margin.top === 'number' ? margin.top : 0;
    this.anchorMargin_.right = typeof margin.right === 'number' ? margin.right : 0;
    this.anchorMargin_.bottom = typeof margin.bottom === 'number' ? margin.bottom : 0;
    this.anchorMargin_.left = typeof margin.left === 'number' ? margin.left : 0;
  }
  /**
   * Used to indicate if the menu-surface is hoisted to the body.
   * @param {boolean} isHoisted
   */


  setIsHoisted(isHoisted) {
    this.hoistedElement_ = isHoisted;
  }
  /**
   * Used to set the menu-surface calculations based on a fixed position menu.
   * @param {boolean} isFixedPosition
   */


  setFixedPosition(isFixedPosition) {
    this.isFixedPosition_ = isFixedPosition;
  }
  /**
   * Sets the menu-surface position on the page.
   * @param {number} x
   * @param {number} y
   */


  setAbsolutePosition(x, y) {
    this.position_.x = this.typeCheckisFinite_(x) ? x : 0;
    this.position_.y = this.typeCheckisFinite_(y) ? y : 0;
  }
  /** @param {boolean} quickOpen */


  setQuickOpen(quickOpen) {
    this.quickOpen_ = quickOpen;
  }
  /**
   * Handle clicks and close if not within menu-surface element.
   * @param {!Event} evt
   */


  handleBodyClick(evt) {
    const el = evt.target;

    if (this.adapter_.isElementInContainer(el)) {
      return;
    }

    this.close();
  }

  /**
   * Handle keys that close the surface.
   * @param {!Event} evt
   */
  handleKeydown(evt) {
    const {
      keyCode,
      key,
      shiftKey
    } = evt;
    const isEscape = key === 'Escape' || keyCode === 27;
    const isTab = key === 'Tab' || keyCode === 9;

    if (isEscape) {
      this.close();
    } else if (isTab) {
      if (this.adapter_.isLastElementFocused() && !shiftKey) {
        this.adapter_.focusFirstElement();
        evt.preventDefault();
      } else if (this.adapter_.isFirstElementFocused() && shiftKey) {
        this.adapter_.focusLastElement();
        evt.preventDefault();
      }
    }
  }
  /**
   * @return {!AutoLayoutMeasurements} Measurements used to position menu surface popup.
   */


  getAutoLayoutMeasurements_() {
    let anchorRect = this.adapter_.getAnchorDimensions();
    const viewport = this.adapter_.getWindowDimensions();
    const bodyDimensions = this.adapter_.getBodyDimensions();
    const windowScroll = this.adapter_.getWindowScroll();

    if (!anchorRect) {
      anchorRect =
      /** @type {ClientRect} */
      {
        x: this.position_.x,
        y: this.position_.y,
        top: this.position_.y,
        bottom: this.position_.y,
        left: this.position_.x,
        right: this.position_.x,
        height: 0,
        width: 0
      };
    }

    return {
      viewport,
      bodyDimensions,
      windowScroll,
      viewportDistance: {
        top: anchorRect.top,
        right: viewport.width - anchorRect.right,
        left: anchorRect.left,
        bottom: viewport.height - anchorRect.bottom
      },
      anchorHeight: anchorRect.height,
      anchorWidth: anchorRect.width,
      surfaceHeight: this.dimensions_.height,
      surfaceWidth: this.dimensions_.width
    };
  }
  /**
   * Computes the corner of the anchor from which to animate and position the menu surface.
   * @return {!Corner}
   * @private
   */


  getOriginCorner_() {
    // Defaults: open from the top left.
    let corner = _constants.Corner.TOP_LEFT;
    const {
      viewportDistance,
      anchorHeight,
      anchorWidth,
      surfaceHeight,
      surfaceWidth
    } = this.measures_;
    const isBottomAligned = Boolean(this.anchorCorner_ & _constants.CornerBit.BOTTOM);
    const availableTop = isBottomAligned ? viewportDistance.top + anchorHeight + this.anchorMargin_.bottom : viewportDistance.top + this.anchorMargin_.top;
    const availableBottom = isBottomAligned ? viewportDistance.bottom - this.anchorMargin_.bottom : viewportDistance.bottom + anchorHeight - this.anchorMargin_.top;
    const topOverflow = surfaceHeight - availableTop;
    const bottomOverflow = surfaceHeight - availableBottom;

    if (bottomOverflow > 0 && topOverflow < bottomOverflow) {
      corner |= _constants.CornerBit.BOTTOM;
    }

    const isRtl = this.adapter_.isRtl();
    const isFlipRtl = Boolean(this.anchorCorner_ & _constants.CornerBit.FLIP_RTL);
    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & _constants.CornerBit.RIGHT);
    const isAlignedRight = avoidHorizontalOverlap && !isRtl || !avoidHorizontalOverlap && isFlipRtl && isRtl;
    const availableLeft = isAlignedRight ? viewportDistance.left + anchorWidth + this.anchorMargin_.right : viewportDistance.left + this.anchorMargin_.left;
    const availableRight = isAlignedRight ? viewportDistance.right - this.anchorMargin_.right : viewportDistance.right + anchorWidth - this.anchorMargin_.left;
    const leftOverflow = surfaceWidth - availableLeft;
    const rightOverflow = surfaceWidth - availableRight;

    if (leftOverflow < 0 && isAlignedRight && isRtl || avoidHorizontalOverlap && !isAlignedRight && leftOverflow < 0 || rightOverflow > 0 && leftOverflow < rightOverflow) {
      corner |= _constants.CornerBit.RIGHT;
    }

    return (
      /** @type {Corner} */
      corner
    );
  }
  /**
   * @param {!Corner} corner Origin corner of the menu surface.
   * @return {number} Horizontal offset of menu surface origin corner from corresponding anchor corner.
   * @private
   */


  getHorizontalOriginOffset_(corner) {
    const {
      anchorWidth
    } = this.measures_; // isRightAligned corresponds to using the 'right' property on the surface.

    const isRightAligned = Boolean(corner & _constants.CornerBit.RIGHT);
    const avoidHorizontalOverlap = Boolean(this.anchorCorner_ & _constants.CornerBit.RIGHT);

    if (isRightAligned) {
      const rightOffset = avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.left : this.anchorMargin_.right; // For hoisted or fixed elements, adjust the offset by the difference between viewport width and body width so
      // when we calculate the right value (`adjustPositionForHoistedElement_`) based on the element position,
      // the right property is correct.

      if (this.hoistedElement_ || this.isFixedPosition_) {
        return rightOffset - (this.measures_.viewport.width - this.measures_.bodyDimensions.width);
      }

      return rightOffset;
    }

    return avoidHorizontalOverlap ? anchorWidth - this.anchorMargin_.right : this.anchorMargin_.left;
  }
  /**
   * @param {!Corner} corner Origin corner of the menu surface.
   * @return {number} Vertical offset of menu surface origin corner from corresponding anchor corner.
   * @private
   */


  getVerticalOriginOffset_(corner) {
    const {
      anchorHeight
    } = this.measures_;
    const isBottomAligned = Boolean(corner & _constants.CornerBit.BOTTOM);
    const avoidVerticalOverlap = Boolean(this.anchorCorner_ & _constants.CornerBit.BOTTOM);
    let y = 0;

    if (isBottomAligned) {
      y = avoidVerticalOverlap ? anchorHeight - this.anchorMargin_.top : -this.anchorMargin_.bottom;
    } else {
      y = avoidVerticalOverlap ? anchorHeight + this.anchorMargin_.bottom : this.anchorMargin_.top;
    }

    return y;
  }
  /**
   * @param {!Corner} corner Origin corner of the menu surface.
   * @return {number} Maximum height of the menu surface, based on available space. 0 indicates should not be set.
   * @private
   */


  getMenuSurfaceMaxHeight_(corner) {
    let maxHeight = 0;
    const {
      viewportDistance
    } = this.measures_;
    const isBottomAligned = Boolean(corner & _constants.CornerBit.BOTTOM);
    const {
      MARGIN_TO_EDGE
    } = MDCMenuSurfaceFoundation.numbers; // When maximum height is not specified, it is handled from css.

    if (isBottomAligned) {
      maxHeight = viewportDistance.top + this.anchorMargin_.top - MARGIN_TO_EDGE;

      if (!(this.anchorCorner_ & _constants.CornerBit.BOTTOM)) {
        maxHeight += this.measures_.anchorHeight;
      }
    } else {
      maxHeight = viewportDistance.bottom - this.anchorMargin_.bottom + this.measures_.anchorHeight - MARGIN_TO_EDGE;

      if (this.anchorCorner_ & _constants.CornerBit.BOTTOM) {
        maxHeight -= this.measures_.anchorHeight;
      }
    }

    return maxHeight;
  }
  /** @private */


  autoPosition_() {
    // Compute measurements for autoposition methods reuse.
    this.measures_ = this.getAutoLayoutMeasurements_();
    const corner = this.getOriginCorner_();
    const maxMenuSurfaceHeight = this.getMenuSurfaceMaxHeight_(corner);
    const verticalAlignment = corner & _constants.CornerBit.BOTTOM ? 'bottom' : 'top';
    let horizontalAlignment = corner & _constants.CornerBit.RIGHT ? 'right' : 'left';
    const horizontalOffset = this.getHorizontalOriginOffset_(corner);
    const verticalOffset = this.getVerticalOriginOffset_(corner);
    let position = {
      [horizontalAlignment]: horizontalOffset ? horizontalOffset : '0',
      [verticalAlignment]: verticalOffset ? verticalOffset : '0'
    };
    const {
      anchorWidth,
      surfaceWidth
    } = this.measures_; // Center align when anchor width is comparable or greater than menu surface, otherwise keep corner.

    if (anchorWidth / surfaceWidth > _constants.numbers.ANCHOR_TO_MENU_SURFACE_WIDTH_RATIO) {
      horizontalAlignment = 'center';
    } // If the menu-surface has been hoisted to the body, it's no longer relative to the anchor element


    if (this.hoistedElement_ || this.isFixedPosition_) {
      position = this.adjustPositionForHoistedElement_(position);
    }

    for (const prop in position) {
      if (position.hasOwnProperty(prop) && position[prop] !== '0') {
        position[prop] = `${parseInt(position[prop], 10)}px`;
      }
    }

    this.adapter_.setTransformOrigin(`${horizontalAlignment} ${verticalAlignment}`);
    this.adapter_.setPosition(position);
    this.adapter_.setMaxHeight(maxMenuSurfaceHeight ? maxMenuSurfaceHeight + 'px' : ''); // Clear measures after positioning is complete.

    this.measures_ = null;
  }
  /**
   * Calculates the offsets for positioning the menu-surface when the menu-surface has been
   * hoisted to the body.
   * @param {!{
   *   top: (string|undefined),
   *   right: (string|undefined),
   *   bottom: (string|undefined),
   *   left: (string|undefined)
   * }} position
   * @return {!{
   *   top: (string|undefined),
   *   right: (string|undefined),
   *   bottom: (string|undefined),
   *   left: (string|undefined)
   * }} position
   * @private
   */


  adjustPositionForHoistedElement_(position) {
    const {
      bodyDimensions,
      windowScroll,
      viewport,
      viewportDistance
    } = this.measures_;

    for (const prop in position) {
      if (position.hasOwnProperty(prop)) {
        // Hoisted surfaces need to have the anchor elements location on the page added to the
        // position properties for proper alignment on the body.
        if (viewportDistance.hasOwnProperty(prop)) {
          position[prop] = parseInt(position[prop], 10) + viewportDistance[prop];
        } // Surfaces that are absolutely positioned need to have additional calculations for scroll
        // and bottom positioning.


        if (!this.isFixedPosition_ && prop === 'top') {
          position[prop] = parseInt(position[prop], 10) + windowScroll.y;
        } else if (!this.isFixedPosition_ && prop === 'bottom') {
          position[prop] = bodyDimensions.height - (viewport.height + windowScroll.y) + parseInt(position[prop], 10);
        }
      }
    }

    return position;
  }
  /**
   * Open the menu surface.
   */


  open() {
    this.adapter_.saveFocus();

    if (!this.quickOpen_) {
      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);
    }

    this.animationRequestId_ = requestAnimationFrame(() => {
      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);
      this.dimensions_ = this.adapter_.getInnerDimensions();
      this.autoPosition_();

      if (this.quickOpen_) {
        this.adapter_.notifyOpen();
      } else {
        this.openAnimationEndTimerId_ = setTimeout(() => {
          this.openAnimationEndTimerId_ = 0;
          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_OPEN);
          this.adapter_.notifyOpen();
        }, _constants.numbers.TRANSITION_OPEN_DURATION);
      }
    });
    this.isOpen_ = true;
  }
  /**
   * Closes the menu surface.
   */


  close() {
    if (!this.quickOpen_) {
      this.adapter_.addClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);
    }

    requestAnimationFrame(() => {
      this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.OPEN);

      if (this.quickOpen_) {
        this.adapter_.notifyClose();
      } else {
        this.closeAnimationEndTimerId_ = setTimeout(() => {
          this.closeAnimationEndTimerId_ = 0;
          this.adapter_.removeClass(MDCMenuSurfaceFoundation.cssClasses.ANIMATING_CLOSED);
          this.adapter_.notifyClose();
        }, _constants.numbers.TRANSITION_CLOSE_DURATION);
      }
    });
    this.isOpen_ = false;
    this.maybeRestoreFocus_();
  }
  /**
   * The last focused element when the menu surface was opened should regain focus, if the user is
   * focused on or within the menu surface when it is closed.
   * @private
   */


  maybeRestoreFocus_() {
    if (this.adapter_.isFocused() || this.adapter_.isElementInContainer(document.activeElement)) {
      this.adapter_.restoreFocus();
    }
  }
  /** @return {boolean} */


  isOpen() {
    return this.isOpen_;
  }
  /**
   * isFinite that doesn't force conversion to number type.
   * Equivalent to Number.isFinite in ES2015, but is not included in IE11.
   * @param {number} num
   * @return {boolean}
   * @private
   */


  typeCheckisFinite_(num) {
    return typeof num === 'number' && isFinite(num);
  }

}

exports.MDCMenuSurfaceFoundation = MDCMenuSurfaceFoundation;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/menu-surface/adapter.js","./constants":"node_modules/@material/menu-surface/constants.js"}],"node_modules/@material/menu/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MDCMenuFoundation = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = require("./adapter");

var _constants = require("./constants");

var _foundation2 = require("@material/menu-surface/foundation");

var _foundation3 = _interopRequireDefault(require("@material/list/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const ELEMENTS_KEY_ALLOWED_IN = ['input', 'button', 'textarea', 'select'];
/**
 * @extends {MDCFoundation<!MDCMenuAdapter>}
 */

class MDCMenuFoundation extends _foundation.default {
  /** @return enum{cssClasses} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum{strings} */


  static get strings() {
    return _constants.strings;
  }
  /**
   * {@see MDCMenuAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCMenuAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCMenuAdapter} */
      {
        addClassToElementAtIndex: () => {},
        removeClassFromElementAtIndex: () => {},
        addAttributeToElementAtIndex: () => {},
        removeAttributeFromElementAtIndex: () => {},
        elementContainsClass: () => {},
        closeSurface: () => {},
        getElementIndex: () => {},
        getParentElement: () => {},
        getSelectedElementIndex: () => {},
        notifySelected: () => {},
        getCheckboxAtIndex: () => {},
        toggleCheckbox: () => {}
      }
    );
  }
  /** @param {!MDCMenuAdapter} adapter */


  constructor(adapter) {
    super(Object.assign(MDCMenuFoundation.defaultAdapter, adapter));
    /** @type {number} */

    this.closeAnimationEndTimerId_ = 0;
  }

  destroy() {
    if (this.closeAnimationEndTimerId_) {
      clearTimeout(this.closeAnimationEndTimerId_);
    }

    this.adapter_.closeSurface();
  }
  /**
   * Handler function for the keydown events.
   * @param {!Event} evt
   */


  handleKeydown(evt) {
    const {
      key,
      keyCode
    } = evt;
    const isSpace = key === 'Space' || keyCode === 32;
    const isEnter = key === 'Enter' || keyCode === 13;
    const isTab = key === 'Tab' || keyCode === 9;

    if (isSpace || isEnter) {
      this.handleAction_(evt);
    } else if (isTab) {
      this.adapter_.closeSurface();
    }
  }
  /**
   * Handler function for the click events.
   * @param {!Event} evt
   */


  handleClick(evt) {
    this.handleAction_(evt);
  }
  /**
   * Combined action handling for click/keypress events.
   * @param {!Event} evt
   * @private
   */


  handleAction_(evt) {
    const listItem = this.getListItem_(
    /** @type {HTMLElement} */
    evt.target);

    if (listItem) {
      this.handleSelection_(listItem);
      this.preventDefaultEvent_(evt);
    }
  }
  /**
   * Handler for a selected list item.
   * @param {?HTMLElement} listItem
   * @private
   */


  handleSelection_(listItem) {
    const index = this.adapter_.getElementIndex(listItem);

    if (index < 0) {
      return;
    }

    this.adapter_.notifySelected({
      index
    });
    this.adapter_.closeSurface();
    const checkbox = this.adapter_.getCheckboxAtIndex(index);

    if (checkbox) {
      this.adapter_.toggleCheckbox(
      /** @type {!HTMLElement} */
      checkbox);
    } // Wait for the menu to close before adding/removing classes that affect styles.


    this.closeAnimationEndTimerId_ = setTimeout(() => {
      const selectionGroup = this.getSelectionGroup_(listItem);

      if (selectionGroup !== null) {
        this.handleSelectionGroup_(
        /** @type {!HTMLElement} */
        selectionGroup, index);
      }
    }, _foundation2.MDCMenuSurfaceFoundation.numbers.TRANSITION_CLOSE_DURATION);
  }
  /**
   * Handles toggling the selected classes in a selection group when a
   * selection is made.
   * @param {!HTMLElement} selectionGroup
   * @param {number} index The selected index value
   * @private
   */


  handleSelectionGroup_(selectionGroup, index) {
    // De-select the previous selection in this group.
    const selectedIndex = this.adapter_.getSelectedElementIndex(selectionGroup);

    if (selectedIndex >= 0) {
      this.adapter_.removeAttributeFromElementAtIndex(selectedIndex, _constants.strings.ARIA_SELECTED_ATTR);
      this.adapter_.removeClassFromElementAtIndex(selectedIndex, _constants.cssClasses.MENU_SELECTED_LIST_ITEM);
    } // Select the new list item in this group.


    this.adapter_.addClassToElementAtIndex(index, _constants.cssClasses.MENU_SELECTED_LIST_ITEM);
    this.adapter_.addAttributeToElementAtIndex(index, _constants.strings.ARIA_SELECTED_ATTR, 'true');
  }
  /**
   * Returns the parent selection group of an element if one exists.
   * @param listItem
   * @return {?HTMLElement} parent selection group element or null.
   * @private
   */


  getSelectionGroup_(listItem) {
    let parent = this.adapter_.getParentElement(listItem);
    let isGroup = this.adapter_.elementContainsClass(parent, _constants.cssClasses.MENU_SELECTION_GROUP); // Iterate through ancestors until we find the group or get to the list.

    while (!isGroup && !this.adapter_.elementContainsClass(parent, _foundation3.default.cssClasses.ROOT)) {
      parent = this.adapter_.getParentElement(parent);
      isGroup = this.adapter_.elementContainsClass(parent, _constants.cssClasses.MENU_SELECTION_GROUP);
    }

    if (isGroup) {
      return parent;
    } else {
      return null;
    }
  }
  /**
   * Find the first ancestor with the mdc-list-item class.
   * @param {?HTMLElement} target
   * @return {?HTMLElement}
   * @private
   */


  getListItem_(target) {
    let isListItem = this.adapter_.elementContainsClass(target, _foundation3.default.cssClasses.LIST_ITEM_CLASS);

    while (!isListItem) {
      target = this.adapter_.getParentElement(target);

      if (target) {
        isListItem = this.adapter_.elementContainsClass(target, _foundation3.default.cssClasses.LIST_ITEM_CLASS);
      } else {
        // target has no parent element.
        return null;
      }
    }

    return target;
  }
  /**
   * Ensures that preventDefault is only called if the containing element doesn't
   * consume the event, and it will cause an unintended scroll.
   * @param {!Event} evt
   * @private
   */


  preventDefaultEvent_(evt) {
    const target =
    /** @type {!HTMLElement} */
    evt.target;
    const tagName = `${target.tagName}`.toLowerCase();

    if (ELEMENTS_KEY_ALLOWED_IN.indexOf(tagName) === -1) {
      evt.preventDefault();
    }
  }

}

exports.MDCMenuFoundation = MDCMenuFoundation;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/menu/adapter.js","./constants":"node_modules/@material/menu/constants.js","@material/menu-surface/foundation":"node_modules/@material/menu-surface/foundation.js","@material/list/foundation":"node_modules/@material/list/foundation.js"}],"node_modules/@material/menu-surface/util.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTransformPropertyName = getTransformPropertyName;

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @type {string|undefined} */
let storedTransformPropertyName_;
/**
 * Returns the name of the correct transform property to use on the current browser.
 * @param {!Window} globalObj
 * @param {boolean=} forceRefresh
 * @return {string}
 */

function getTransformPropertyName(globalObj, forceRefresh = false) {
  if (storedTransformPropertyName_ === undefined || forceRefresh) {
    const el = globalObj.document.createElement('div');
    const transformPropertyName = 'transform' in el.style ? 'transform' : 'webkitTransform';
    storedTransformPropertyName_ = transformPropertyName;
  }

  return storedTransformPropertyName_;
}
},{}],"node_modules/@material/menu-surface/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCMenuSurfaceFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.MDCMenuSurfaceFoundation;
  }
});
Object.defineProperty(exports, "AnchorMargin", {
  enumerable: true,
  get: function () {
    return _foundation.AnchorMargin;
  }
});
Object.defineProperty(exports, "Corner", {
  enumerable: true,
  get: function () {
    return _constants.Corner;
  }
});
Object.defineProperty(exports, "CornerBit", {
  enumerable: true,
  get: function () {
    return _constants.CornerBit;
  }
});
exports.util = exports.MDCMenuSurface = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var util = _interopRequireWildcard(require("./util"));

exports.util = util;

var _foundation = require("./foundation");

var _adapter = require("./adapter");

var _constants = require("./constants");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCMenuSurfaceFoundation>
 */
class MDCMenuSurface extends _component.default {
  /** @param {...?} args */
  constructor(...args) {
    super(...args);
    /** @private {!Element} */

    this.previousFocus_;
    /** @private {!Element} */

    this.anchorElement;
    /** @private {Element} */

    this.firstFocusableElement_;
    /** @private {Element} */

    this.lastFocusableElement_;
    /** @private {!Function} */

    this.handleKeydown_;
    /** @private {!Function} */

    this.handleBodyClick_;
    /** @private {!Function} */

    this.registerBodyClickListener_;
    /** @private {!Function} */

    this.deregisterBodyClickListener_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCMenuSurface}
   */


  static attachTo(root) {
    return new MDCMenuSurface(root);
  }

  initialSyncWithDOM() {
    if (this.root_.parentElement && this.root_.parentElement.classList.contains(_constants.cssClasses.ANCHOR)) {
      this.anchorElement = this.root_.parentElement;
    }

    if (this.root_.classList.contains(_constants.cssClasses.FIXED)) {
      this.setFixedPosition(true);
    }

    this.handleKeydown_ = evt => this.foundation_.handleKeydown(evt);

    this.handleBodyClick_ = evt => this.foundation_.handleBodyClick(evt);

    this.registerBodyClickListener_ = () => document.body.addEventListener('click', this.handleBodyClick_);

    this.deregisterBodyClickListener_ = () => document.body.removeEventListener('click', this.handleBodyClick_);

    this.root_.addEventListener('keydown', this.handleKeydown_);
    this.root_.addEventListener(_constants.strings.OPENED_EVENT, this.registerBodyClickListener_);
    this.root_.addEventListener(_constants.strings.CLOSED_EVENT, this.deregisterBodyClickListener_);
  }

  destroy() {
    this.root_.removeEventListener('keydown', this.handleKeydown_);
    this.root_.removeEventListener(_constants.strings.OPENED_EVENT, this.registerBodyClickListener_);
    this.root_.removeEventListener(_constants.strings.CLOSED_EVENT, this.deregisterBodyClickListener_);
    super.destroy();
  }
  /** @return {boolean} */


  get open() {
    return this.foundation_.isOpen();
  }
  /** @param {boolean} value */


  set open(value) {
    if (value) {
      const focusableElements = this.root_.querySelectorAll(_constants.strings.FOCUSABLE_ELEMENTS);
      this.firstFocusableElement_ = focusableElements.length > 0 ? focusableElements[0] : null;
      this.lastFocusableElement_ = focusableElements.length > 0 ? focusableElements[focusableElements.length - 1] : null;
      this.foundation_.open();
    } else {
      this.foundation_.close();
    }
  }
  /**
   * Removes the menu-surface from it's current location and appends it to the
   * body to overcome any overflow:hidden issues.
   */


  hoistMenuToBody() {
    document.body.appendChild(this.root_.parentElement.removeChild(this.root_));
    this.setIsHoisted(true);
  }
  /**
   * Sets the foundation to use page offsets for an positioning when the menu
   * is hoisted to the body.
   * @param {boolean} isHoisted
   */


  setIsHoisted(isHoisted) {
    this.foundation_.setIsHoisted(isHoisted);
  }
  /**
   * Sets the element that the menu-surface is anchored to.
   * @param {!Element} element
   */


  setMenuSurfaceAnchorElement(element) {
    this.anchorElement = element;
  }
  /**
   * Sets the menu-surface to position: fixed.
   * @param {boolean} isFixed
   */


  setFixedPosition(isFixed) {
    if (isFixed) {
      this.root_.classList.add(_constants.cssClasses.FIXED);
    } else {
      this.root_.classList.remove(_constants.cssClasses.FIXED);
    }

    this.foundation_.setFixedPosition(isFixed);
  }
  /**
   * Sets the absolute x/y position to position based on. Requires the menu to be hoisted.
   * @param {number} x
   * @param {number} y
   */


  setAbsolutePosition(x, y) {
    this.foundation_.setAbsolutePosition(x, y);
    this.setIsHoisted(true);
  }
  /**
   * @param {!Corner} corner Default anchor corner alignment of top-left
   *     surface corner.
   */


  setAnchorCorner(corner) {
    this.foundation_.setAnchorCorner(corner);
  }
  /**
   * @param {!AnchorMargin} margin
   */


  setAnchorMargin(margin) {
    this.foundation_.setAnchorMargin(margin);
  }
  /** @param {boolean} quickOpen */


  set quickOpen(quickOpen) {
    this.foundation_.setQuickOpen(quickOpen);
  }
  /** @return {!MDCMenuSurfaceFoundation} */


  getDefaultFoundation() {
    return new _foundation.MDCMenuSurfaceFoundation(
    /** @type {!MDCMenuSurfaceAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      hasAnchor: () => !!this.anchorElement,
      notifyClose: () => this.emit(_foundation.MDCMenuSurfaceFoundation.strings.CLOSED_EVENT, {}),
      notifyOpen: () => this.emit(_foundation.MDCMenuSurfaceFoundation.strings.OPENED_EVENT, {}),
      isElementInContainer: el => this.root_ === el || this.root_.contains(el),
      isRtl: () => getComputedStyle(this.root_).getPropertyValue('direction') === 'rtl',
      setTransformOrigin: origin => {
        this.root_.style[`${util.getTransformPropertyName(window)}-origin`] = origin;
      }
    }, this.getFocusAdapterMethods_(), this.getDimensionAdapterMethods_()));
  }
  /**
   * @return {!{
   * isFocused: function(): boolean,
   * saveFocus: function(),
   * restoreFocus: function(),
   * isFirstElementFocused: function(): boolean,
   * isLastElementFocused: function(): boolean,
   * focusFirstElement: function(),
   * focusLastElement: function(),
   * }}
   * @private
   */


  getFocusAdapterMethods_() {
    return {
      isFocused: () => document.activeElement === this.root_,
      saveFocus: () => {
        this.previousFocus_ = document.activeElement;
      },
      restoreFocus: () => {
        if (this.root_.contains(document.activeElement)) {
          if (this.previousFocus_ && this.previousFocus_.focus) {
            this.previousFocus_.focus();
          }
        }
      },
      isFirstElementFocused: () => this.firstFocusableElement_ && this.firstFocusableElement_ === document.activeElement,
      isLastElementFocused: () => this.lastFocusableElement_ && this.lastFocusableElement_ === document.activeElement,
      focusFirstElement: () => this.firstFocusableElement_ && this.firstFocusableElement_.focus && this.firstFocusableElement_.focus(),
      focusLastElement: () => this.lastFocusableElement_ && this.lastFocusableElement_.focus && this.lastFocusableElement_.focus()
    };
  }
  /**
   * @return {!{
   * getInnerDimensions: function(),
   * getAnchorDimensions: function(): (HTMLElement | null | * | ClientRect),
   * getWindowDimensions: function(),
   * setPosition: function(*),
   * setMaxHeight: function(string)}}
   * @private
   */


  getDimensionAdapterMethods_() {
    return {
      getInnerDimensions: () => {
        return {
          width: this.root_.offsetWidth,
          height: this.root_.offsetHeight
        };
      },
      getAnchorDimensions: () => this.anchorElement && this.anchorElement.getBoundingClientRect(),
      getWindowDimensions: () => {
        return {
          width: window.innerWidth,
          height: window.innerHeight
        };
      },
      getBodyDimensions: () => {
        return {
          width: document.body.clientWidth,
          height: document.body.clientHeight
        };
      },
      getWindowScroll: () => {
        return {
          x: window.pageXOffset,
          y: window.pageYOffset
        };
      },
      setPosition: position => {
        this.root_.style.left = 'left' in position ? position.left : null;
        this.root_.style.right = 'right' in position ? position.right : null;
        this.root_.style.top = 'top' in position ? position.top : null;
        this.root_.style.bottom = 'bottom' in position ? position.bottom : null;
      },
      setMaxHeight: height => {
        this.root_.style.maxHeight = height;
      }
    };
  }

}

exports.MDCMenuSurface = MDCMenuSurface;
},{"@material/base/component":"node_modules/@material/base/component.js","./util":"node_modules/@material/menu-surface/util.js","./foundation":"node_modules/@material/menu-surface/foundation.js","./adapter":"node_modules/@material/menu-surface/adapter.js","./constants":"node_modules/@material/menu-surface/constants.js"}],"node_modules/@material/menu/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCMenuFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.MDCMenuFoundation;
  }
});
Object.defineProperty(exports, "Corner", {
  enumerable: true,
  get: function () {
    return _index.Corner;
  }
});
Object.defineProperty(exports, "AnchorMargin", {
  enumerable: true,
  get: function () {
    return _foundation2.AnchorMargin;
  }
});
exports.MDCMenu = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _foundation = require("./foundation");

var _constants = require("./constants");

var _index = require("@material/menu-surface/index");

var _foundation2 = require("@material/menu-surface/foundation");

var _index2 = require("@material/list/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCMenuFoundation>
 */
class MDCMenu extends _component.default {
  /** @param {...?} args */
  constructor(...args) {
    super(...args);
    /** @private {!MDCMenuSurface} */

    this.menuSurface_;
    /** @private {!MDCList} */

    this.list_;
    /** @private {!Function} */

    this.handleKeydown_;
    /** @private {!Function} */

    this.handleClick_;
    /** @private {!Function} */

    this.afterOpenedCallback_;
  }
  /**
   * @param {!HTMLElement} root
   * @return {!MDCMenu}
   */


  static attachTo(root) {
    return new MDCMenu(root);
  }

  initialize(menuSurfaceFactory = el => new _index.MDCMenuSurface(el), listFactory = el => new _index2.MDCList(el)) {
    this.menuSurface_ = menuSurfaceFactory(this.root_);
    const list = this.root_.querySelector(_constants.strings.LIST_SELECTOR);

    if (list) {
      this.list_ = listFactory(list);
      this.list_.wrapFocus = true;
    }
  }

  initialSyncWithDOM() {
    this.afterOpenedCallback_ = () => this.handleAfterOpened_();

    this.handleKeydown_ = evt => this.foundation_.handleKeydown(evt);

    this.handleClick_ = evt => this.foundation_.handleClick(evt);

    this.menuSurface_.listen(_foundation2.MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);
    this.listen('keydown', this.handleKeydown_);
    this.listen('click', this.handleClick_);
  }

  destroy() {
    if (this.list_) {
      this.list_.destroy();
    }

    this.menuSurface_.destroy();
    this.menuSurface_.unlisten(_foundation2.MDCMenuSurfaceFoundation.strings.OPENED_EVENT, this.afterOpenedCallback_);
    this.unlisten('keydown', this.handleKeydown_);
    this.unlisten('click', this.handleClick_);
    super.destroy();
  }
  /** @return {boolean} */


  get open() {
    return this.menuSurface_.open;
  }
  /** @param {boolean} value */


  set open(value) {
    this.menuSurface_.open = value;
  }
  /**
   * @param {!Corner} corner Default anchor corner alignment of top-left
   *     menu corner.
   */


  setAnchorCorner(corner) {
    this.menuSurface_.setAnchorCorner(corner);
  }
  /**
   * @param {!AnchorMargin} margin
   */


  setAnchorMargin(margin) {
    this.menuSurface_.setAnchorMargin(margin);
  }
  /**
   * Return the items within the menu. Note that this only contains the set of elements within
   * the items container that are proper list items, and not supplemental / presentational DOM
   * elements.
   * @return {!Array<!HTMLElement>}
   */


  get items() {
    return this.list_.listElements;
  }
  /**
   * Return the item within the menu at the index specified.
   * @param {number} index
   * @return {?HTMLElement}
   */


  getOptionByIndex(index) {
    const items = this.items;

    if (index < items.length) {
      return this.items[index];
    } else {
      return null;
    }
  }
  /** @param {boolean} quickOpen */


  set quickOpen(quickOpen) {
    this.menuSurface_.quickOpen = quickOpen;
  }
  /** @param {boolean} isFixed */


  setFixedPosition(isFixed) {
    this.menuSurface_.setFixedPosition(isFixed);
  }

  hoistMenuToBody() {
    this.menuSurface_.hoistMenuToBody();
  }
  /** @param {boolean} isHoisted */


  setIsHoisted(isHoisted) {
    this.menuSurface_.setIsHoisted(isHoisted);
  }
  /**
   * @param {number} x
   * @param {number} y
   */


  setAbsolutePosition(x, y) {
    this.menuSurface_.setAbsolutePosition(x, y);
  }
  /**
   * Sets the element that the menu-surface is anchored to.
   * @param {!HTMLElement} element
   */


  setAnchorElement(element) {
    this.menuSurface_.anchorElement = element;
  }

  handleAfterOpened_() {
    const list = this.items;

    if (list.length > 0) {
      list[0].focus();
    }
  }
  /** @return {!MDCMenuFoundation} */


  getDefaultFoundation() {
    return new _foundation.MDCMenuFoundation({
      addClassToElementAtIndex: (index, className) => {
        const list = this.items;
        list[index].classList.add(className);
      },
      removeClassFromElementAtIndex: (index, className) => {
        const list = this.items;
        list[index].classList.remove(className);
      },
      addAttributeToElementAtIndex: (index, attr, value) => {
        const list = this.items;
        list[index].setAttribute(attr, value);
      },
      removeAttributeFromElementAtIndex: (index, attr) => {
        const list = this.items;
        list[index].removeAttribute(attr);
      },
      elementContainsClass: (element, className) => element.classList.contains(className),
      closeSurface: () => this.open = false,
      getElementIndex: element => this.items.indexOf(element),
      getParentElement: element => element.parentElement,
      getSelectedElementIndex: selectionGroup => {
        return this.items.indexOf(selectionGroup.querySelector(`.${_constants.cssClasses.MENU_SELECTED_LIST_ITEM}`));
      },
      notifySelected: evtData => this.emit(_constants.strings.SELECTED_EVENT, {
        index: evtData.index,
        item: this.items[evtData.index]
      }),
      getCheckboxAtIndex: index => {
        const list = this.items;
        return list[index].querySelector(_constants.strings.CHECKBOX_SELECTOR);
      },
      toggleCheckbox: checkBox => {
        checkBox.checked = !checkBox.checked;
        const event = document.createEvent('Event');
        event.initEvent('change', false, true);
        checkBox.dispatchEvent(event);
      }
    });
  }

}

exports.MDCMenu = MDCMenu;
},{"@material/base/component":"node_modules/@material/base/component.js","./foundation":"node_modules/@material/menu/foundation.js","./constants":"node_modules/@material/menu/constants.js","@material/menu-surface/index":"node_modules/@material/menu-surface/index.js","@material/menu-surface/foundation":"node_modules/@material/menu-surface/foundation.js","@material/list/index":"node_modules/@material/list/index.js"}],"node_modules/preact-material-components/Menu/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MenuItem", {
  enumerable: true,
  get: function get() {
    return _List.ListItem;
  }
});
exports.default = exports.Menu = exports.MenuAnchor = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _menu = require("@material/menu");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent3 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _List = require("../List");

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var MenuAnchor =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(MenuAnchor, _MaterialComponent);

  function MenuAnchor() {
    var _this;

    (0, _classCallCheck2.default)(this, MenuAnchor);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MenuAnchor).apply(this, arguments));
    _this.componentName = 'menu-surface--anchor';
    _this.mdcProps = [];
    return _this;
  }

  (0, _createClass2.default)(MenuAnchor, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), this.props.children);
    }
  }]);
  return MenuAnchor;
}(_MaterialComponent3.default);

exports.MenuAnchor = MenuAnchor;

var Menu =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(Menu, _MaterialComponent2);

  function Menu() {
    var _this2;

    (0, _classCallCheck2.default)(this, Menu);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Menu).apply(this, arguments));
    _this2.componentName = 'menu';
    _this2.mdcProps = ['open', 'open-from-top-left', 'open-from-top-right', 'open-from-bottom-left', 'open-from-bottom-right'];
    _this2.mdcNotifyProps = ['open'];
    return _this2;
  }

  (0, _createClass2.default)(Menu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Menu.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _menu.MDCMenu(this.control);
        this.MDComponent.listen('MDCMenu:selected', this.onSelect);
        this.MDComponent.listen('MDCMenu:cancel', this.onCancel);
      }

      this.afterComponentDidMount();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Menu.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCMenu:selected', this.onSelect);
        this.MDComponent.unlisten('MDCMenu:cancel', this.onCancel);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "onSelect",
    value: function onSelect(e) {
      if (this.props.onSelect) {
        this.props.onSelect(e);
      }

      this.onMenuClosed(e);
    }
  }, {
    key: "onCancel",
    value: function onCancel(e) {
      if (this.props.onCancel) {
        this.props.onCancel(e);
      }

      this.onMenuClosed(e);
    }
  }, {
    key: "onMenuClosed",
    value: function onMenuClosed(e) {
      if (this.props.onMenuClosed) {
        this.props.onMenuClosed(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({
        class: "mdc-menu-surface",
        tabIndex: "-1"
      }, props, {
        ref: this.setControlRef
      }), (0, _preact.h)(_List.List, {
        className: "mdc-menu__items",
        role: "menu",
        "aria-hidden": "true"
      }, props.children));
    }
  }]);
  return Menu;
}(_MaterialComponent3.default);

exports.Menu = Menu;

__decorate([_bindDecorator.bind], Menu.prototype, "onSelect", null);

__decorate([_bindDecorator.bind], Menu.prototype, "onCancel", null);

__decorate([_bindDecorator.bind], Menu.prototype, "onMenuClosed", null);

var default_1 =
/*#__PURE__*/
function (_Menu) {
  (0, _inherits2.default)(default_1, _Menu);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(Menu);

exports.default = default_1;
default_1.Anchor = MenuAnchor;
default_1.Item = _List.ListItem;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/menu":"node_modules/@material/menu/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../List":"node_modules/preact-material-components/List/index.js"}],"node_modules/@material/slider/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.numbers = exports.strings = exports.cssClasses = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const cssClasses = {
  ACTIVE: 'mdc-slider--active',
  DISABLED: 'mdc-slider--disabled',
  DISCRETE: 'mdc-slider--discrete',
  FOCUS: 'mdc-slider--focus',
  IN_TRANSIT: 'mdc-slider--in-transit',
  IS_DISCRETE: 'mdc-slider--discrete',
  HAS_TRACK_MARKER: 'mdc-slider--display-markers'
};
/** @enum {string} */

exports.cssClasses = cssClasses;
const strings = {
  TRACK_SELECTOR: '.mdc-slider__track',
  TRACK_MARKER_CONTAINER_SELECTOR: '.mdc-slider__track-marker-container',
  LAST_TRACK_MARKER_SELECTOR: '.mdc-slider__track-marker:last-child',
  THUMB_CONTAINER_SELECTOR: '.mdc-slider__thumb-container',
  PIN_VALUE_MARKER_SELECTOR: '.mdc-slider__pin-value-marker',
  ARIA_VALUEMIN: 'aria-valuemin',
  ARIA_VALUEMAX: 'aria-valuemax',
  ARIA_VALUENOW: 'aria-valuenow',
  ARIA_DISABLED: 'aria-disabled',
  STEP_DATA_ATTR: 'data-step',
  CHANGE_EVENT: 'MDCSlider:change',
  INPUT_EVENT: 'MDCSlider:input'
};
/** @enum {number} */

exports.strings = strings;
const numbers = {
  PAGE_FACTOR: 4
};
exports.numbers = numbers;
},{}],"node_modules/@material/slider/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint-disable no-unused-vars */

/**
 * Adapter for MDC Slider.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Slider into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCSliderAdapter {
  /**
   * Returns true if className exists for the slider Element
   * @param {string} className
   * @return {boolean}
   */
  hasClass(className) {}
  /**
   * Adds a class to the slider Element
   * @param {string} className
   */


  addClass(className) {}
  /**
   * Removes a class from the slider Element
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns a string if attribute name exists on the slider Element,
   * otherwise returns null
   * @param {string} name
   * @return {?string}
   */


  getAttribute(name) {}
  /**
   * Sets attribute name on slider Element to value
   * @param {string} name
   * @param {string} value
   */


  setAttribute(name, value) {}
  /**
   * Removes attribute name from slider Element
   * @param {string} name
   */


  removeAttribute(name) {}
  /**
   * Returns the bounding client rect for the slider Element
   * @return {?ClientRect}
   */


  computeBoundingRect() {}
  /**
   * Returns the tab index of the slider Element
   * @return {number}
   */


  getTabIndex() {}
  /**
   * Registers an event handler on the root element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  registerInteractionHandler(type, handler) {}
  /**
   * Deregisters an event handler on the root element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  deregisterInteractionHandler(type, handler) {}
  /**
   * Registers an event handler on the thumb container element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  registerThumbContainerInteractionHandler(type, handler) {}
  /**
   * Deregisters an event handler on the thumb container element for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  deregisterThumbContainerInteractionHandler(type, handler) {}
  /**
   * Registers an event handler on the body for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  registerBodyInteractionHandler(type, handler) {}
  /**
   * Deregisters an event handler on the body for a given event.
   * @param {string} type
   * @param {function(!Event): undefined} handler
   */


  deregisterBodyInteractionHandler(type, handler) {}
  /**
   * Registers an event handler for the window resize event
   * @param {function(!Event): undefined} handler
   */


  registerResizeHandler(handler) {}
  /**
   * Deregisters an event handler for the window resize event
   * @param {function(!Event): undefined} handler
   */


  deregisterResizeHandler(handler) {}
  /**
   * Emits a custom event MDCSlider:input from the root
   */


  notifyInput() {}
  /**
   * Emits a custom event MDCSlider:change from the root
   */


  notifyChange() {}
  /**
   * Sets a style property of the thumb container element to the passed value
   * @param {string} propertyName
   * @param {string} value
   */


  setThumbContainerStyleProperty(propertyName, value) {}
  /**
   * Sets a style property of the track element to the passed value
   * @param {string} propertyName
   * @param {string} value
   */


  setTrackStyleProperty(propertyName, value) {}
  /**
   * Sets the inner text of the pin marker to the passed value
   * @param {number} value
   */


  setMarkerValue(value) {}
  /**
   * Appends the passed number of track markers to the track mark container element
   * @param {number} numMarkers
   */


  appendTrackMarkers(numMarkers) {}
  /**
   * Removes all track markers fromt he track mark container element
   */


  removeTrackMarkers() {}
  /**
   * Sets a style property of the last track marker to the passed value
   * @param {string} propertyName
   * @param {string} value
   */


  setLastTrackMarkersStyleProperty(propertyName, value) {}
  /**
   * Returns true if the root element is RTL, otherwise false
   * @return {boolean}
   */


  isRTL() {}

}

var _default = MDCSliderAdapter;
exports.default = _default;
},{}],"node_modules/@material/slider/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _constants = require("./constants");

var _adapter = _interopRequireDefault(require("./adapter"));

var _index = require("@material/animation/index");

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const KEY_IDS = {
  ARROW_LEFT: 'ArrowLeft',
  ARROW_RIGHT: 'ArrowRight',
  ARROW_UP: 'ArrowUp',
  ARROW_DOWN: 'ArrowDown',
  HOME: 'Home',
  END: 'End',
  PAGE_UP: 'PageUp',
  PAGE_DOWN: 'PageDown'
};
/** @enum {string} */

const MOVE_EVENT_MAP = {
  'mousedown': 'mousemove',
  'touchstart': 'touchmove',
  'pointerdown': 'pointermove'
};
const DOWN_EVENTS = ['mousedown', 'pointerdown', 'touchstart'];
const UP_EVENTS = ['mouseup', 'pointerup', 'touchend'];
/**
 * @extends {MDCFoundation<!MDCSliderAdapter>}
 */

class MDCSliderFoundation extends _foundation.default {
  /** @return enum {cssClasses} */
  static get cssClasses() {
    return _constants.cssClasses;
  }
  /** @return enum {strings} */


  static get strings() {
    return _constants.strings;
  }
  /** @return enum {numbers} */


  static get numbers() {
    return _constants.numbers;
  }
  /** @return {!MDCSliderAdapter} */


  static get defaultAdapter() {
    return (
      /** @type {!MDCSliderAdapter} */
      {
        hasClass: () =>
        /* className: string */

        /* boolean */
        false,
        addClass: () =>
        /* className: string */
        {},
        removeClass: () =>
        /* className: string */
        {},
        getAttribute: () =>
        /* name: string */

        /* string|null */
        null,
        setAttribute: () =>
        /* name: string, value: string */
        {},
        removeAttribute: () =>
        /* name: string */
        {},
        computeBoundingRect: () => (
        /* ClientRect */
        {
          top: 0,
          right: 0,
          bottom: 0,
          left: 0,
          width: 0,
          height: 0
        }),
        getTabIndex: () =>
        /* number */
        0,
        registerInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        deregisterInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        registerThumbContainerInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        deregisterThumbContainerInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        registerBodyInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        deregisterBodyInteractionHandler: () =>
        /* type: string, handler: EventListener */
        {},
        registerResizeHandler: () =>
        /* handler: EventListener */
        {},
        deregisterResizeHandler: () =>
        /* handler: EventListener */
        {},
        notifyInput: () => {},
        notifyChange: () => {},
        setThumbContainerStyleProperty: () =>
        /* propertyName: string, value: string */
        {},
        setTrackStyleProperty: () =>
        /* propertyName: string, value: string */
        {},
        setMarkerValue: () =>
        /* value: number */
        {},
        appendTrackMarkers: () =>
        /* numMarkers: number */
        {},
        removeTrackMarkers: () => {},
        setLastTrackMarkersStyleProperty: () =>
        /* propertyName: string, value: string */
        {},
        isRTL: () =>
        /* boolean */
        false
      }
    );
  }
  /**
   * Creates a new instance of MDCSliderFoundation
   * @param {?MDCSliderAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCSliderFoundation.defaultAdapter, adapter));
    /** @private {?ClientRect} */

    this.rect_ = null; // We set this to NaN since we want it to be a number, but we can't use '0' or '-1'
    // because those could be valid tabindices set by the client code.

    this.savedTabIndex_ = NaN;
    this.active_ = false;
    this.inTransit_ = false;
    this.isDiscrete_ = false;
    this.hasTrackMarker_ = false;
    this.handlingThumbTargetEvt_ = false;
    this.min_ = 0;
    this.max_ = 100;
    this.step_ = 0;
    this.value_ = 0;
    this.disabled_ = false;
    this.preventFocusState_ = false;
    this.updateUIFrame_ = 0;

    this.thumbContainerPointerHandler_ = () => {
      this.handlingThumbTargetEvt_ = true;
    };

    this.interactionStartHandler_ = evt => this.handleDown_(evt);

    this.keydownHandler_ = evt => this.handleKeydown_(evt);

    this.focusHandler_ = () => this.handleFocus_();

    this.blurHandler_ = () => this.handleBlur_();

    this.resizeHandler_ = () => this.layout();
  }

  init() {
    this.isDiscrete_ = this.adapter_.hasClass(_constants.cssClasses.IS_DISCRETE);
    this.hasTrackMarker_ = this.adapter_.hasClass(_constants.cssClasses.HAS_TRACK_MARKER);
    DOWN_EVENTS.forEach(evtName => this.adapter_.registerInteractionHandler(evtName, this.interactionStartHandler_));
    this.adapter_.registerInteractionHandler('keydown', this.keydownHandler_);
    this.adapter_.registerInteractionHandler('focus', this.focusHandler_);
    this.adapter_.registerInteractionHandler('blur', this.blurHandler_);
    DOWN_EVENTS.forEach(evtName => {
      this.adapter_.registerThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);
    });
    this.adapter_.registerResizeHandler(this.resizeHandler_);
    this.layout(); // At last step, provide a reasonable default value to discrete slider

    if (this.isDiscrete_ && this.getStep() == 0) {
      this.step_ = 1;
    }
  }

  destroy() {
    DOWN_EVENTS.forEach(evtName => {
      this.adapter_.deregisterInteractionHandler(evtName, this.interactionStartHandler_);
    });
    this.adapter_.deregisterInteractionHandler('keydown', this.keydownHandler_);
    this.adapter_.deregisterInteractionHandler('focus', this.focusHandler_);
    this.adapter_.deregisterInteractionHandler('blur', this.blurHandler_);
    DOWN_EVENTS.forEach(evtName => {
      this.adapter_.deregisterThumbContainerInteractionHandler(evtName, this.thumbContainerPointerHandler_);
    });
    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
  }

  setupTrackMarker() {
    if (this.isDiscrete_ && this.hasTrackMarker_ && this.getStep() != 0) {
      const min = this.getMin();
      const max = this.getMax();
      const step = this.getStep();
      let numMarkers = (max - min) / step; // In case distance between max & min is indivisible to step,
      // we place the secondary to last marker proportionally at where thumb
      // could reach and place the last marker at max value

      const indivisible = Math.ceil(numMarkers) !== numMarkers;

      if (indivisible) {
        numMarkers = Math.ceil(numMarkers);
      }

      this.adapter_.removeTrackMarkers();
      this.adapter_.appendTrackMarkers(numMarkers);

      if (indivisible) {
        const lastStepRatio = (max - numMarkers * step) / step + 1;
        const flex = (0, _index.getCorrectPropertyName)(window, 'flex');
        this.adapter_.setLastTrackMarkersStyleProperty(flex, String(lastStepRatio));
      }
    }
  }

  layout() {
    this.rect_ = this.adapter_.computeBoundingRect();
    this.updateUIForCurrentValue_();
  }
  /** @return {number} */


  getValue() {
    return this.value_;
  }
  /** @param {number} value */


  setValue(value) {
    this.setValue_(value, false);
  }
  /** @return {number} */


  getMax() {
    return this.max_;
  }
  /** @param {number} max */


  setMax(max) {
    if (max < this.min_) {
      throw new Error('Cannot set max to be less than the slider\'s minimum value');
    }

    this.max_ = max;
    this.setValue_(this.value_, false, true);
    this.adapter_.setAttribute(_constants.strings.ARIA_VALUEMAX, String(this.max_));
    this.setupTrackMarker();
  }
  /** @return {number} */


  getMin() {
    return this.min_;
  }
  /** @param {number} min */


  setMin(min) {
    if (min > this.max_) {
      throw new Error('Cannot set min to be greater than the slider\'s maximum value');
    }

    this.min_ = min;
    this.setValue_(this.value_, false, true);
    this.adapter_.setAttribute(_constants.strings.ARIA_VALUEMIN, String(this.min_));
    this.setupTrackMarker();
  }
  /** @return {number} */


  getStep() {
    return this.step_;
  }
  /** @param {number} step */


  setStep(step) {
    if (step < 0) {
      throw new Error('Step cannot be set to a negative number');
    }

    if (this.isDiscrete_ && (typeof step !== 'number' || step < 1)) {
      step = 1;
    }

    this.step_ = step;
    this.setValue_(this.value_, false, true);
    this.setupTrackMarker();
  }
  /** @return {boolean} */


  isDisabled() {
    return this.disabled_;
  }
  /** @param {boolean} disabled */


  setDisabled(disabled) {
    this.disabled_ = disabled;
    this.toggleClass_(_constants.cssClasses.DISABLED, this.disabled_);

    if (this.disabled_) {
      this.savedTabIndex_ = this.adapter_.getTabIndex();
      this.adapter_.setAttribute(_constants.strings.ARIA_DISABLED, 'true');
      this.adapter_.removeAttribute('tabindex');
    } else {
      this.adapter_.removeAttribute(_constants.strings.ARIA_DISABLED);

      if (!isNaN(this.savedTabIndex_)) {
        this.adapter_.setAttribute('tabindex', String(this.savedTabIndex_));
      }
    }
  }
  /**
   * Called when the user starts interacting with the slider
   * @param {!Event} evt
   * @private
   */


  handleDown_(evt) {
    if (this.disabled_) {
      return;
    }

    this.preventFocusState_ = true;
    this.setInTransit_(!this.handlingThumbTargetEvt_);
    this.handlingThumbTargetEvt_ = false;
    this.setActive_(true);

    const moveHandler = evt => {
      this.handleMove_(evt);
    }; // Note: upHandler is [de]registered on ALL potential pointer-related release event types, since some browsers
    // do not always fire these consistently in pairs.
    // (See https://github.com/material-components/material-components-web/issues/1192)


    const upHandler = () => {
      this.handleUp_();
      this.adapter_.deregisterBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);
      UP_EVENTS.forEach(evtName => this.adapter_.deregisterBodyInteractionHandler(evtName, upHandler));
    };

    this.adapter_.registerBodyInteractionHandler(MOVE_EVENT_MAP[evt.type], moveHandler);
    UP_EVENTS.forEach(evtName => this.adapter_.registerBodyInteractionHandler(evtName, upHandler));
    this.setValueFromEvt_(evt);
  }
  /**
   * Called when the user moves the slider
   * @param {!Event} evt
   * @private
   */


  handleMove_(evt) {
    evt.preventDefault();
    this.setValueFromEvt_(evt);
  }
  /**
   * Called when the user's interaction with the slider ends
   * @private
   */


  handleUp_() {
    this.setActive_(false);
    this.adapter_.notifyChange();
  }
  /**
   * Returns the pageX of the event
   * @param {!Event} evt
   * @return {number}
   * @private
   */


  getPageX_(evt) {
    if (evt.targetTouches && evt.targetTouches.length > 0) {
      return evt.targetTouches[0].pageX;
    }

    return evt.pageX;
  }
  /**
   * Sets the slider value from an event
   * @param {!Event} evt
   * @private
   */


  setValueFromEvt_(evt) {
    const pageX = this.getPageX_(evt);
    const value = this.computeValueFromPageX_(pageX);
    this.setValue_(value, true);
  }
  /**
   * Computes the new value from the pageX position
   * @param {number} pageX
   * @return {number}
   */


  computeValueFromPageX_(pageX) {
    const {
      max_: max,
      min_: min
    } = this;
    const xPos = pageX - this.rect_.left;
    let pctComplete = xPos / this.rect_.width;

    if (this.adapter_.isRTL()) {
      pctComplete = 1 - pctComplete;
    } // Fit the percentage complete between the range [min,max]
    // by remapping from [0, 1] to [min, min+(max-min)].


    return min + pctComplete * (max - min);
  }
  /**
   * Handles keydown events
   * @param {!Event} evt
   */


  handleKeydown_(evt) {
    const keyId = this.getKeyId_(evt);
    const value = this.getValueForKeyId_(keyId);

    if (isNaN(value)) {
      return;
    } // Prevent page from scrolling due to key presses that would normally scroll the page


    evt.preventDefault();
    this.adapter_.addClass(_constants.cssClasses.FOCUS);
    this.setValue_(value, true);
    this.adapter_.notifyChange();
  }
  /**
   * Returns the computed name of the event
   * @param {!Event} kbdEvt
   * @return {string}
   */


  getKeyId_(kbdEvt) {
    if (kbdEvt.key === KEY_IDS.ARROW_LEFT || kbdEvt.keyCode === 37) {
      return KEY_IDS.ARROW_LEFT;
    }

    if (kbdEvt.key === KEY_IDS.ARROW_RIGHT || kbdEvt.keyCode === 39) {
      return KEY_IDS.ARROW_RIGHT;
    }

    if (kbdEvt.key === KEY_IDS.ARROW_UP || kbdEvt.keyCode === 38) {
      return KEY_IDS.ARROW_UP;
    }

    if (kbdEvt.key === KEY_IDS.ARROW_DOWN || kbdEvt.keyCode === 40) {
      return KEY_IDS.ARROW_DOWN;
    }

    if (kbdEvt.key === KEY_IDS.HOME || kbdEvt.keyCode === 36) {
      return KEY_IDS.HOME;
    }

    if (kbdEvt.key === KEY_IDS.END || kbdEvt.keyCode === 35) {
      return KEY_IDS.END;
    }

    if (kbdEvt.key === KEY_IDS.PAGE_UP || kbdEvt.keyCode === 33) {
      return KEY_IDS.PAGE_UP;
    }

    if (kbdEvt.key === KEY_IDS.PAGE_DOWN || kbdEvt.keyCode === 34) {
      return KEY_IDS.PAGE_DOWN;
    }

    return '';
  }
  /**
   * Computes the value given a keyboard key ID
   * @param {string} keyId
   * @return {number}
   */


  getValueForKeyId_(keyId) {
    const {
      max_: max,
      min_: min,
      step_: step
    } = this;
    let delta = step || (max - min) / 100;
    const valueNeedsToBeFlipped = this.adapter_.isRTL() && (keyId === KEY_IDS.ARROW_LEFT || keyId === KEY_IDS.ARROW_RIGHT);

    if (valueNeedsToBeFlipped) {
      delta = -delta;
    }

    switch (keyId) {
      case KEY_IDS.ARROW_LEFT:
      case KEY_IDS.ARROW_DOWN:
        return this.value_ - delta;

      case KEY_IDS.ARROW_RIGHT:
      case KEY_IDS.ARROW_UP:
        return this.value_ + delta;

      case KEY_IDS.HOME:
        return this.min_;

      case KEY_IDS.END:
        return this.max_;

      case KEY_IDS.PAGE_UP:
        return this.value_ + delta * _constants.numbers.PAGE_FACTOR;

      case KEY_IDS.PAGE_DOWN:
        return this.value_ - delta * _constants.numbers.PAGE_FACTOR;

      default:
        return NaN;
    }
  }

  handleFocus_() {
    if (this.preventFocusState_) {
      return;
    }

    this.adapter_.addClass(_constants.cssClasses.FOCUS);
  }

  handleBlur_() {
    this.preventFocusState_ = false;
    this.adapter_.removeClass(_constants.cssClasses.FOCUS);
  }
  /**
   * Sets the value of the slider
   * @param {number} value
   * @param {boolean} shouldFireInput
   * @param {boolean=} force
   */


  setValue_(value, shouldFireInput, force = false) {
    if (value === this.value_ && !force) {
      return;
    }

    const {
      min_: min,
      max_: max
    } = this;
    const valueSetToBoundary = value === min || value === max;

    if (this.step_ && !valueSetToBoundary) {
      value = this.quantize_(value);
    }

    if (value < min) {
      value = min;
    } else if (value > max) {
      value = max;
    }

    this.value_ = value;
    this.adapter_.setAttribute(_constants.strings.ARIA_VALUENOW, String(this.value_));
    this.updateUIForCurrentValue_();

    if (shouldFireInput) {
      this.adapter_.notifyInput();

      if (this.isDiscrete_) {
        this.adapter_.setMarkerValue(value);
      }
    }
  }
  /**
   * Calculates the quantized value
   * @param {number} value
   * @return {number}
   */


  quantize_(value) {
    const numSteps = Math.round(value / this.step_);
    const quantizedVal = numSteps * this.step_;
    return quantizedVal;
  }

  updateUIForCurrentValue_() {
    const {
      max_: max,
      min_: min,
      value_: value
    } = this;
    const pctComplete = (value - min) / (max - min);
    let translatePx = pctComplete * this.rect_.width;

    if (this.adapter_.isRTL()) {
      translatePx = this.rect_.width - translatePx;
    }

    const transformProp = (0, _index.getCorrectPropertyName)(window, 'transform');
    const transitionendEvtName = (0, _index.getCorrectEventName)(window, 'transitionend');

    if (this.inTransit_) {
      const onTransitionEnd = () => {
        this.setInTransit_(false);
        this.adapter_.deregisterThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
      };

      this.adapter_.registerThumbContainerInteractionHandler(transitionendEvtName, onTransitionEnd);
    }

    this.updateUIFrame_ = requestAnimationFrame(() => {
      // NOTE(traviskaufman): It would be nice to use calc() here,
      // but IE cannot handle calcs in transforms correctly.
      // See: https://goo.gl/NC2itk
      // Also note that the -50% offset is used to center the slider thumb.
      this.adapter_.setThumbContainerStyleProperty(transformProp, `translateX(${translatePx}px) translateX(-50%)`);
      this.adapter_.setTrackStyleProperty(transformProp, `scaleX(${pctComplete})`);
    });
  }
  /**
   * Toggles the active state of the slider
   * @param {boolean} active
   */


  setActive_(active) {
    this.active_ = active;
    this.toggleClass_(_constants.cssClasses.ACTIVE, this.active_);
  }
  /**
   * Toggles the inTransit state of the slider
   * @param {boolean} inTransit
   */


  setInTransit_(inTransit) {
    this.inTransit_ = inTransit;
    this.toggleClass_(_constants.cssClasses.IN_TRANSIT, this.inTransit_);
  }
  /**
   * Conditionally adds or removes a class based on shouldBePresent
   * @param {string} className
   * @param {boolean} shouldBePresent
   */


  toggleClass_(className, shouldBePresent) {
    if (shouldBePresent) {
      this.adapter_.addClass(className);
    } else {
      this.adapter_.removeClass(className);
    }
  }

}

var _default = MDCSliderFoundation;
exports.default = _default;
},{"./constants":"node_modules/@material/slider/constants.js","./adapter":"node_modules/@material/slider/adapter.js","@material/animation/index":"node_modules/@material/animation/index.js","@material/base/foundation":"node_modules/@material/base/foundation.js"}],"node_modules/@material/slider/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCSliderFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCSlider = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _constants = require("./constants");

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends MDCComponent<!MDCSliderFoundation>
 */
class MDCSlider extends _component.default {
  static attachTo(root) {
    return new MDCSlider(root);
  }

  constructor(...args) {
    super(...args);
    /** @type {?Element} */

    this.thumbContainer_;
    /** @type {?Element} */

    this.track_;
    /** @type {?Element} */

    this.pinValueMarker_;
    /** @type {?Element} */

    this.trackMarkerContainer_;
  }
  /** @return {number} */


  get value() {
    return this.foundation_.getValue();
  }
  /** @param {number} value */


  set value(value) {
    this.foundation_.setValue(value);
  }
  /** @return {number} */


  get min() {
    return this.foundation_.getMin();
  }
  /** @param {number} min */


  set min(min) {
    this.foundation_.setMin(min);
  }
  /** @return {number} */


  get max() {
    return this.foundation_.getMax();
  }
  /** @param {number} max */


  set max(max) {
    this.foundation_.setMax(max);
  }
  /** @return {number} */


  get step() {
    return this.foundation_.getStep();
  }
  /** @param {number} step */


  set step(step) {
    this.foundation_.setStep(step);
  }
  /** @return {boolean} */


  get disabled() {
    return this.foundation_.isDisabled();
  }
  /** @param {boolean} disabled */


  set disabled(disabled) {
    this.foundation_.setDisabled(disabled);
  }

  initialize() {
    this.thumbContainer_ = this.root_.querySelector(_constants.strings.THUMB_CONTAINER_SELECTOR);
    this.track_ = this.root_.querySelector(_constants.strings.TRACK_SELECTOR);
    this.pinValueMarker_ = this.root_.querySelector(_constants.strings.PIN_VALUE_MARKER_SELECTOR);
    this.trackMarkerContainer_ = this.root_.querySelector(_constants.strings.TRACK_MARKER_CONTAINER_SELECTOR);
  }
  /**
   * @return {!MDCSliderFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCSliderAdapter} */
    {
      hasClass: className => this.root_.classList.contains(className),
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      getAttribute: name => this.root_.getAttribute(name),
      setAttribute: (name, value) => this.root_.setAttribute(name, value),
      removeAttribute: name => this.root_.removeAttribute(name),
      computeBoundingRect: () => this.root_.getBoundingClientRect(),
      getTabIndex: () => this.root_.tabIndex,
      registerInteractionHandler: (type, handler) => {
        this.root_.addEventListener(type, handler);
      },
      deregisterInteractionHandler: (type, handler) => {
        this.root_.removeEventListener(type, handler);
      },
      registerThumbContainerInteractionHandler: (type, handler) => {
        this.thumbContainer_.addEventListener(type, handler);
      },
      deregisterThumbContainerInteractionHandler: (type, handler) => {
        this.thumbContainer_.removeEventListener(type, handler);
      },
      registerBodyInteractionHandler: (type, handler) => {
        document.body.addEventListener(type, handler);
      },
      deregisterBodyInteractionHandler: (type, handler) => {
        document.body.removeEventListener(type, handler);
      },
      registerResizeHandler: handler => {
        window.addEventListener('resize', handler);
      },
      deregisterResizeHandler: handler => {
        window.removeEventListener('resize', handler);
      },
      notifyInput: () => {
        this.emit(_constants.strings.INPUT_EVENT, this);
      },
      notifyChange: () => {
        this.emit(_constants.strings.CHANGE_EVENT, this);
      },
      setThumbContainerStyleProperty: (propertyName, value) => {
        this.thumbContainer_.style.setProperty(propertyName, value);
      },
      setTrackStyleProperty: (propertyName, value) => {
        this.track_.style.setProperty(propertyName, value);
      },
      setMarkerValue: value => {
        this.pinValueMarker_.innerText = value;
      },
      appendTrackMarkers: numMarkers => {
        const frag = document.createDocumentFragment();

        for (let i = 0; i < numMarkers; i++) {
          const marker = document.createElement('div');
          marker.classList.add('mdc-slider__track-marker');
          frag.appendChild(marker);
        }

        this.trackMarkerContainer_.appendChild(frag);
      },
      removeTrackMarkers: () => {
        while (this.trackMarkerContainer_.firstChild) {
          this.trackMarkerContainer_.removeChild(this.trackMarkerContainer_.firstChild);
        }
      },
      setLastTrackMarkersStyleProperty: (propertyName, value) => {
        // We remove and append new nodes, thus, the last track marker must be dynamically found.
        const lastTrackMarker = this.root_.querySelector(_constants.strings.LAST_TRACK_MARKER_SELECTOR);
        lastTrackMarker.style.setProperty(propertyName, value);
      },
      isRTL: () => getComputedStyle(this.root_).direction === 'rtl'
    });
  }

  initialSyncWithDOM() {
    const origValueNow = parseFloat(this.root_.getAttribute(_constants.strings.ARIA_VALUENOW));
    this.min = parseFloat(this.root_.getAttribute(_constants.strings.ARIA_VALUEMIN)) || this.min;
    this.max = parseFloat(this.root_.getAttribute(_constants.strings.ARIA_VALUEMAX)) || this.max;
    this.step = parseFloat(this.root_.getAttribute(_constants.strings.STEP_DATA_ATTR)) || this.step;
    this.value = origValueNow || this.value;
    this.disabled = this.root_.hasAttribute(_constants.strings.ARIA_DISABLED) && this.root_.getAttribute(_constants.strings.ARIA_DISABLED) !== 'false';
    this.foundation_.setupTrackMarker();
  }

  layout() {
    this.foundation_.layout();
  }
  /** @param {number=} amount */


  stepUp(amount = this.step || 1) {
    this.value += amount;
  }
  /** @param {number=} amount */


  stepDown(amount = this.step || 1) {
    this.value -= amount;
  }

}

exports.MDCSlider = MDCSlider;
},{"@material/base/component":"node_modules/@material/base/component.js","./constants":"node_modules/@material/slider/constants.js","./adapter":"node_modules/@material/slider/adapter.js","./foundation":"node_modules/@material/slider/foundation.js"}],"node_modules/preact-material-components/Slider/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Slider = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _slider = require("@material/slider");

var _bindDecorator = require("bind-decorator");

var _preact = require("preact");

var _MaterialComponent2 = _interopRequireDefault(require("../Base/MaterialComponent"));

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if ((typeof Reflect === "undefined" ? "undefined" : (0, _typeof2.default)(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  }
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Slider =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Slider, _MaterialComponent);

  function Slider() {
    var _this;

    (0, _classCallCheck2.default)(this, Slider);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Slider).apply(this, arguments));
    _this.componentName = 'slider';
    _this.mdcProps = ['discrete'];
    return _this;
  }

  (0, _createClass2.default)(Slider, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Slider.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _slider.MDCSlider(this.control);
        this.MDComponent.listen('MDCSlider:change', this.onChange);
        this.MDComponent.listen('MDCSlider:input', this.onInput);
      }

      this.setValue(this.props.value); // set initial value programatically because of error if min is greater than initial max
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(Slider.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.unlisten('MDCSlider:change', this.onChange);
        this.MDComponent.unlisten('MDCSlider:input', this.onInput);
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "getValue",
    value: function getValue() {
      if (this.MDComponent) {
        return this.MDComponent.value;
      }
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      var _this$props = this.props,
          _this$props$disabled = _this$props.disabled,
          disabled = _this$props$disabled === void 0 ? false : _this$props$disabled,
          _this$props$min = _this$props.min,
          min = _this$props$min === void 0 ? 0 : _this$props$min,
          _this$props$max = _this$props.max,
          max = _this$props$max === void 0 ? 100 : _this$props$max,
          step = _this$props.step;

      if (this.MDComponent) {
        if (min > this.MDComponent.max) {
          this.MDComponent.max = max;
          this.MDComponent.min = min;
        } else {
          this.MDComponent.min = min;
          this.MDComponent.max = max;
        }

        if (value) {
          this.MDComponent.value = value;
        }

        this.MDComponent.disabled = disabled;

        if (step) {
          this.MDComponent.step = step;
        }
      }
    }
  }, {
    key: "onChange",
    value: function onChange(e) {
      if (this.props.onChange) {
        this.props.onChange(e);
      }
    }
  }, {
    key: "onInput",
    value: function onInput(e) {
      if (this.props.onInput) {
        this.props.onInput(e);
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var _allprops$tabindex = allprops.tabindex,
          tabIndex = _allprops$tabindex === void 0 ? 0 : _allprops$tabindex,
          props = __rest(allprops, ["tabindex"]);

      this.setValue(allprops);
      return (0, _preact.h)("div", Object.assign({
        tabIndex: tabIndex,
        role: "slider",
        "aria-label": "Select Value",
        ref: this.setControlRef
      }, props), (0, _preact.h)("div", {
        class: "mdc-slider__track-container"
      }, (0, _preact.h)("div", {
        class: "mdc-slider__track"
      })), (0, _preact.h)("div", {
        class: "mdc-slider__thumb-container"
      }, props.discrete && (0, _preact.h)("div", {
        class: "mdc-slider__pin"
      }, (0, _preact.h)("span", {
        class: "mdc-slider__pin-value-marker"
      })), (0, _preact.h)("svg", {
        class: "mdc-slider__thumb",
        width: "21",
        height: "21"
      }, (0, _preact.h)("circle", {
        cx: "10.5",
        cy: "10.5",
        r: "7.875"
      })), (0, _preact.h)("div", {
        class: "mdc-slider__focus-ring"
      })));
    }
  }]);
  return Slider;
}(_MaterialComponent2.default);

exports.Slider = Slider;

__decorate([_bindDecorator.bind], Slider.prototype, "onChange", null);

__decorate([_bindDecorator.bind], Slider.prototype, "onInput", null);

var _default = Slider;
exports.default = _default;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/typeof":"node_modules/@babel/runtime/helpers/typeof.js","@material/slider":"node_modules/@material/slider/index.js","bind-decorator":"node_modules/bind-decorator/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js"}],"node_modules/@material/chips/chip/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Chip.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Chip into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCChipAdapter {
  /**
   * Adds a class to the root element.
   * @param {string} className
   */
  addClass(className) {}
  /**
   * Removes a class from the root element.
   * @param {string} className
   */


  removeClass(className) {}
  /**
   * Returns true if the root element contains the given class.
   * @param {string} className
   * @return {boolean}
   */


  hasClass(className) {}
  /**
   * Adds a class to the leading icon element.
   * @param {string} className
   */


  addClassToLeadingIcon(className) {}
  /**
   * Removes a class from the leading icon element.
   * @param {string} className
   */


  removeClassFromLeadingIcon(className) {}
  /**
   * Returns true if target has className, false otherwise.
   * @param {!EventTarget} target
   * @param {string} className
   * @return {boolean}
   */


  eventTargetHasClass(target, className) {}
  /**
   * Emits a custom "MDCChip:interaction" event denoting the chip has been
   * interacted with (typically on click or keydown).
   */


  notifyInteraction() {}
  /**
   * Emits a custom "MDCChip:trailingIconInteraction" event denoting the trailing icon has been
   * interacted with (typically on click or keydown).
   */


  notifyTrailingIconInteraction() {}
  /**
   * Emits a custom event "MDCChip:removal" denoting the chip will be removed.
   */


  notifyRemoval() {}
  /**
   * Returns the computed property value of the given style property on the root element.
   * @param {string} propertyName
   * @return {string}
   */


  getComputedStyleValue(propertyName) {}
  /**
   * Sets the property value of the given style property on the root element.
   * @param {string} propertyName
   * @param {string} value
   */


  setStyleProperty(propertyName, value) {}

}

var _default = MDCChipAdapter;
exports.default = _default;
},{}],"node_modules/@material/chips/chip/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  ENTRY_ANIMATION_NAME: 'mdc-chip-entry',
  INTERACTION_EVENT: 'MDCChip:interaction',
  TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',
  REMOVAL_EVENT: 'MDCChip:removal',
  CHECKMARK_SELECTOR: '.mdc-chip__checkmark',
  LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',
  TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  CHECKMARK: 'mdc-chip__checkmark',
  CHIP_EXIT: 'mdc-chip--exit',
  HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',
  LEADING_ICON: 'mdc-chip__icon--leading',
  TRAILING_ICON: 'mdc-chip__icon--trailing',
  SELECTED: 'mdc-chip--selected'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/chips/chip/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MDCChipRemovalEventType = exports.MDCChipInteractionEventType = exports.MDCChipFoundation = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * @extends {MDCFoundation<!MDCChipAdapter>}
 * @final
 */
class MDCChipFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCChipAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCChipAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCChipAdapter} */
      {
        addClass: () => {},
        removeClass: () => {},
        hasClass: () => {},
        addClassToLeadingIcon: () => {},
        removeClassFromLeadingIcon: () => {},
        eventTargetHasClass: () => {},
        notifyInteraction: () => {},
        notifyTrailingIconInteraction: () => {},
        notifyRemoval: () => {},
        getComputedStyleValue: () => {},
        setStyleProperty: () => {}
      }
    );
  }
  /**
   * @param {!MDCChipAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCChipFoundation.defaultAdapter, adapter));
    /**
     * Whether a trailing icon click should immediately trigger exit/removal of the chip.
     * @private {boolean}
     * */

    this.shouldRemoveOnTrailingIconClick_ = true;
  }
  /**
   * @return {boolean}
   */


  isSelected() {
    return this.adapter_.hasClass(_constants.cssClasses.SELECTED);
  }
  /**
   * @param {boolean} selected
   */


  setSelected(selected) {
    if (selected) {
      this.adapter_.addClass(_constants.cssClasses.SELECTED);
    } else {
      this.adapter_.removeClass(_constants.cssClasses.SELECTED);
    }
  }
  /**
   * @return {boolean}
   */


  getShouldRemoveOnTrailingIconClick() {
    return this.shouldRemoveOnTrailingIconClick_;
  }
  /**
   * @param {boolean} shouldRemove
   */


  setShouldRemoveOnTrailingIconClick(shouldRemove) {
    this.shouldRemoveOnTrailingIconClick_ = shouldRemove;
  }
  /**
   * Begins the exit animation which leads to removal of the chip.
   */


  beginExit() {
    this.adapter_.addClass(_constants.cssClasses.CHIP_EXIT);
  }
  /**
   * Handles an interaction event on the root element.
   * @param {!Event} evt
   */


  handleInteraction(evt) {
    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
      this.adapter_.notifyInteraction();
    }
  }
  /**
   * Handles a transition end event on the root element.
   * @param {!Event} evt
   */


  handleTransitionEnd(evt) {
    // Handle transition end event on the chip when it is about to be removed.
    if (this.adapter_.eventTargetHasClass(
    /** @type {!EventTarget} */
    evt.target, _constants.cssClasses.CHIP_EXIT)) {
      if (evt.propertyName === 'width') {
        this.adapter_.notifyRemoval();
      } else if (evt.propertyName === 'opacity') {
        // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5
        const chipWidth = this.adapter_.getComputedStyleValue('width'); // On the next frame (once we get the computed width), explicitly set the chip's width
        // to its current pixel width, so we aren't transitioning out of 'auto'.

        requestAnimationFrame(() => {
          this.adapter_.setStyleProperty('width', chipWidth); // To mitigate jitter, start transitioning padding and margin before width.

          this.adapter_.setStyleProperty('padding', '0');
          this.adapter_.setStyleProperty('margin', '0'); // On the next frame (once width is explicitly set), transition width to 0.

          requestAnimationFrame(() => {
            this.adapter_.setStyleProperty('width', '0');
          });
        });
      }

      return;
    } // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.


    if (evt.propertyName !== 'opacity') {
      return;
    }

    if (this.adapter_.eventTargetHasClass(
    /** @type {!EventTarget} */
    evt.target, _constants.cssClasses.LEADING_ICON) && this.adapter_.hasClass(_constants.cssClasses.SELECTED)) {
      this.adapter_.addClassToLeadingIcon(_constants.cssClasses.HIDDEN_LEADING_ICON);
    } else if (this.adapter_.eventTargetHasClass(
    /** @type {!EventTarget} */
    evt.target, _constants.cssClasses.CHECKMARK) && !this.adapter_.hasClass(_constants.cssClasses.SELECTED)) {
      this.adapter_.removeClassFromLeadingIcon(_constants.cssClasses.HIDDEN_LEADING_ICON);
    }
  }
  /**
   * Handles an interaction event on the trailing icon element. This is used to
   * prevent the ripple from activating on interaction with the trailing icon.
   * @param {!Event} evt
   */


  handleTrailingIconInteraction(evt) {
    evt.stopPropagation();

    if (evt.type === 'click' || evt.key === 'Enter' || evt.keyCode === 13) {
      this.adapter_.notifyTrailingIconInteraction();

      if (this.shouldRemoveOnTrailingIconClick_) {
        this.beginExit();
      }
    }
  }

}
/**
 * @typedef {{
 *   detail: {
 *     chipId: string,
 *   },
 *   bubbles: boolean,
 * }}
 */


exports.MDCChipFoundation = MDCChipFoundation;
let MDCChipInteractionEventType;
/**
 * @typedef {{
 *   detail: {
 *     chipId: string,
 *     root: Element,
 *   },
 *   bubbles: boolean,
 * }}
 */

exports.MDCChipInteractionEventType = MDCChipInteractionEventType;
let MDCChipRemovalEventType;
exports.MDCChipRemovalEventType = MDCChipRemovalEventType;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/chips/chip/adapter.js","./constants":"node_modules/@material/chips/chip/constants.js"}],"node_modules/@material/chips/chip/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCChipFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.MDCChipFoundation;
  }
});
exports.MDCChip = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _index = require("@material/ripple/index");

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = require("./foundation");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
const INTERACTION_EVENTS = ['click', 'keydown'];
/**
 * @extends {MDCComponent<!MDCChipFoundation>}
 * @final
 */

class MDCChip extends _component.default {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @type {string} */

    this.id;
    /** @private {?Element} */

    this.leadingIcon_;
    /** @private {?Element} */

    this.trailingIcon_;
    /** @private {!MDCRipple} */

    this.ripple_;
    /** @private {?function(?Event): undefined} */

    this.handleInteraction_;
    /** @private {?function(!Event): undefined} */

    this.handleTransitionEnd_;
    /** @private {function(!Event): undefined} */

    this.handleTrailingIconInteraction_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCChip}
   */


  static attachTo(root) {
    return new MDCChip(root);
  }

  initialize(rippleFactory = (el, foundation) => new _index.MDCRipple(el, foundation)) {
    this.id = this.root_.id;
    this.leadingIcon_ = this.root_.querySelector(_constants.strings.LEADING_ICON_SELECTOR);
    this.trailingIcon_ = this.root_.querySelector(_constants.strings.TRAILING_ICON_SELECTOR); // Adjust ripple size for chips with animated growing width. This applies when filter chips without
    // a leading icon are selected, and a leading checkmark will cause the chip width to expand.

    const checkmarkEl = this.root_.querySelector(_constants.strings.CHECKMARK_SELECTOR);

    if (checkmarkEl && !this.leadingIcon_) {
      const adapter = Object.assign(_index.MDCRipple.createAdapter(this), {
        computeBoundingRect: () => {
          const height = this.root_.getBoundingClientRect().height; // The checkmark's width is initially set to 0, so use the checkmark's height as a proxy since the
          // checkmark should always be square.

          const width = this.root_.getBoundingClientRect().width + checkmarkEl.getBoundingClientRect().height;
          return {
            height,
            width
          };
        }
      });
      this.ripple_ = rippleFactory(this.root_, new _index.MDCRippleFoundation(adapter));
    } else {
      this.ripple_ = rippleFactory(this.root_);
    }
  }

  initialSyncWithDOM() {
    this.handleInteraction_ = evt => this.foundation_.handleInteraction(evt);

    this.handleTransitionEnd_ = evt => this.foundation_.handleTransitionEnd(evt);

    this.handleTrailingIconInteraction_ = evt => this.foundation_.handleTrailingIconInteraction(evt);

    INTERACTION_EVENTS.forEach(evtType => {
      this.root_.addEventListener(evtType, this.handleInteraction_);
    });
    this.root_.addEventListener('transitionend', this.handleTransitionEnd_);

    if (this.trailingIcon_) {
      INTERACTION_EVENTS.forEach(evtType => {
        this.trailingIcon_.addEventListener(evtType, this.handleTrailingIconInteraction_);
      });
    }
  }

  destroy() {
    this.ripple_.destroy();
    INTERACTION_EVENTS.forEach(evtType => {
      this.root_.removeEventListener(evtType, this.handleInteraction_);
    });
    this.root_.removeEventListener('transitionend', this.handleTransitionEnd_);

    if (this.trailingIcon_) {
      INTERACTION_EVENTS.forEach(evtType => {
        this.trailingIcon_.removeEventListener(evtType, this.handleTrailingIconInteraction_);
      });
    }

    super.destroy();
  }
  /**
   * Returns whether the chip is selected.
   * @return {boolean}
   */


  get selected() {
    return this.foundation_.isSelected();
  }
  /**
   * Sets selected state on the chip.
   * @param {boolean} selected
   */


  set selected(selected) {
    this.foundation_.setSelected(selected);
  }
  /**
   * Returns whether a trailing icon click should trigger exit/removal of the chip.
   * @return {boolean}
   */


  get shouldRemoveOnTrailingIconClick() {
    return this.foundation_.getShouldRemoveOnTrailingIconClick();
  }
  /**
   * Sets whether a trailing icon click should trigger exit/removal of the chip.
   * @param {boolean} shouldRemove
   */


  set shouldRemoveOnTrailingIconClick(shouldRemove) {
    this.foundation_.setShouldRemoveOnTrailingIconClick(shouldRemove);
  }
  /**
   * Begins the exit animation which leads to removal of the chip.
   */


  beginExit() {
    this.foundation_.beginExit();
  }
  /**
   * @return {!MDCChipFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.MDCChipFoundation(
    /** @type {!MDCChipAdapter} */
    Object.assign({
      addClass: className => this.root_.classList.add(className),
      removeClass: className => this.root_.classList.remove(className),
      hasClass: className => this.root_.classList.contains(className),
      addClassToLeadingIcon: className => {
        if (this.leadingIcon_) {
          this.leadingIcon_.classList.add(className);
        }
      },
      removeClassFromLeadingIcon: className => {
        if (this.leadingIcon_) {
          this.leadingIcon_.classList.remove(className);
        }
      },
      eventTargetHasClass: (target, className) => target.classList.contains(className),
      notifyInteraction: () => this.emit(_constants.strings.INTERACTION_EVENT, {
        chipId: this.id
      }, true
      /* shouldBubble */
      ),
      notifyTrailingIconInteraction: () => this.emit(_constants.strings.TRAILING_ICON_INTERACTION_EVENT, {
        chipId: this.id
      }, true
      /* shouldBubble */
      ),
      notifyRemoval: () => this.emit(_constants.strings.REMOVAL_EVENT, {
        chipId: this.id,
        root: this.root_
      }, true
      /* shouldBubble */
      ),
      getComputedStyleValue: propertyName => window.getComputedStyle(this.root_).getPropertyValue(propertyName),
      setStyleProperty: (propertyName, value) => this.root_.style.setProperty(propertyName, value)
    }));
  }
  /** @return {!MDCRipple} */


  get ripple() {
    return this.ripple_;
  }

}

exports.MDCChip = MDCChip;
},{"@material/base/component":"node_modules/@material/base/component.js","@material/ripple/index":"node_modules/@material/ripple/index.js","./adapter":"node_modules/@material/chips/chip/adapter.js","./foundation":"node_modules/@material/chips/chip/foundation.js","./constants":"node_modules/@material/chips/chip/constants.js"}],"node_modules/@material/chips/chip-set/adapter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/* eslint no-unused-vars: [2, {"args": "none"}] */

/**
 * Adapter for MDC Chip Set.
 *
 * Defines the shape of the adapter expected by the foundation. Implement this
 * adapter to integrate the Chip Set into your framework. See
 * https://github.com/material-components/material-components-web/blob/master/docs/authoring-components.md
 * for more information.
 *
 * @record
 */
class MDCChipSetAdapter {
  /**
   * Returns true if the root element contains the given class name.
   * @param {string} className
   * @return {boolean}
   */
  hasClass(className) {}
  /**
   * Removes the chip with the given id from the chip set.
   * @param {string} chipId
   */


  removeChip(chipId) {}
  /**
   * Sets the selected state of the chip with the given id.
   * @param {string} chipId
   * @param {boolean} selected
   */


  setSelected(chipId, selected) {}

}

var _default = MDCChipSetAdapter;
exports.default = _default;
},{}],"node_modules/@material/chips/chip-set/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cssClasses = exports.strings = void 0;

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/** @enum {string} */
const strings = {
  CHIP_SELECTOR: '.mdc-chip'
};
/** @enum {string} */

exports.strings = strings;
const cssClasses = {
  CHOICE: 'mdc-chip-set--choice',
  FILTER: 'mdc-chip-set--filter'
};
exports.cssClasses = cssClasses;
},{}],"node_modules/@material/chips/chip-set/foundation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _foundation = _interopRequireDefault(require("@material/base/foundation"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation2 = require("../chip/foundation");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
// eslint-disable-next-line no-unused-vars

/**
 * @extends {MDCFoundation<!MDCChipSetAdapter>}
 * @final
 */
class MDCChipSetFoundation extends _foundation.default {
  /** @return enum {string} */
  static get strings() {
    return _constants.strings;
  }
  /** @return enum {string} */


  static get cssClasses() {
    return _constants.cssClasses;
  }
  /**
   * {@see MDCChipSetAdapter} for typing information on parameters and return
   * types.
   * @return {!MDCChipSetAdapter}
   */


  static get defaultAdapter() {
    return (
      /** @type {!MDCChipSetAdapter} */
      {
        hasClass: () => {},
        removeChip: () => {},
        setSelected: () => {}
      }
    );
  }
  /**
   * @param {!MDCChipSetAdapter} adapter
   */


  constructor(adapter) {
    super(Object.assign(MDCChipSetFoundation.defaultAdapter, adapter));
    /**
     * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.
     * @private {!Array<string>}
     */

    this.selectedChipIds_ = [];
  }
  /**
   * Returns an array of the IDs of all selected chips.
   * @return {!Array<string>}
   */


  getSelectedChipIds() {
    return this.selectedChipIds_;
  }
  /**
   * Toggles selection of the chip with the given id.
   * @param {string} chipId
   */


  toggleSelect(chipId) {
    if (this.selectedChipIds_.indexOf(chipId) >= 0) {
      this.deselect(chipId);
    } else {
      this.select(chipId);
    }
  }
  /**
   * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.
   * @param {string} chipId
   */


  select(chipId) {
    if (this.selectedChipIds_.indexOf(chipId) >= 0) {
      return;
    }

    if (this.adapter_.hasClass(_constants.cssClasses.CHOICE) && this.selectedChipIds_.length > 0) {
      this.adapter_.setSelected(this.selectedChipIds_[0], false);
      this.selectedChipIds_.length = 0;
    }

    this.adapter_.setSelected(chipId, true);
    this.selectedChipIds_.push(chipId);
  }
  /**
   * Deselects the chip with the given id.
   * @param {string} chipId
   */


  deselect(chipId) {
    const index = this.selectedChipIds_.indexOf(chipId);

    if (index >= 0) {
      this.selectedChipIds_.splice(index, 1);
      this.adapter_.setSelected(chipId, false);
    }
  }
  /**
   * Handles a chip interaction event
   * @param {!MDCChipInteractionEventType} evt
   */


  handleChipInteraction(evt) {
    const {
      chipId
    } = evt.detail;

    if (this.adapter_.hasClass(_constants.cssClasses.CHOICE) || this.adapter_.hasClass(_constants.cssClasses.FILTER)) {
      this.toggleSelect(chipId);
    }
  }
  /**
   * Handles the event when a chip is removed.
   * @param {!MDCChipRemovalEventType} evt
   */


  handleChipRemoval(evt) {
    const {
      chipId
    } = evt.detail;
    this.deselect(chipId);
    this.adapter_.removeChip(chipId);
  }

}

var _default = MDCChipSetFoundation;
exports.default = _default;
},{"@material/base/foundation":"node_modules/@material/base/foundation.js","./adapter":"node_modules/@material/chips/chip-set/adapter.js","../chip/foundation":"node_modules/@material/chips/chip/foundation.js","./constants":"node_modules/@material/chips/chip-set/constants.js"}],"node_modules/@material/chips/chip-set/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCChipSetFoundation", {
  enumerable: true,
  get: function () {
    return _foundation.default;
  }
});
exports.MDCChipSet = void 0;

var _component = _interopRequireDefault(require("@material/base/component"));

var _adapter = _interopRequireDefault(require("./adapter"));

var _foundation = _interopRequireDefault(require("./foundation"));

var _index = require("../chip/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
let idCounter = 0;
/**
 * @extends {MDCComponent<!MDCChipSetFoundation>}
 * @final
 */

class MDCChipSet extends _component.default {
  /**
   * @param {...?} args
   */
  constructor(...args) {
    super(...args);
    /** @type {!Array<!MDCChip>} */

    this.chips;
    /** @private {(function(!Element): !MDCChip)} */

    this.chipFactory_;
    /** @private {?function(?Event): undefined} */

    this.handleChipInteraction_;
    /** @private {?function(?Event): undefined} */

    this.handleChipRemoval_;
  }
  /**
   * @param {!Element} root
   * @return {!MDCChipSet}
   */


  static attachTo(root) {
    return new MDCChipSet(root);
  }
  /**
   * @param {(function(!Element): !MDCChip)=} chipFactory A function which
   * creates a new MDCChip.
   */


  initialize(chipFactory = el => new _index.MDCChip(el)) {
    this.chipFactory_ = chipFactory;
    this.chips = this.instantiateChips_(this.chipFactory_);
  }

  initialSyncWithDOM() {
    this.chips.forEach(chip => {
      if (chip.selected) {
        this.foundation_.select(chip.id);
      }
    });

    this.handleChipInteraction_ = evt => this.foundation_.handleChipInteraction(evt);

    this.handleChipRemoval_ = evt => this.foundation_.handleChipRemoval(evt);

    this.root_.addEventListener(_index.MDCChipFoundation.strings.INTERACTION_EVENT, this.handleChipInteraction_);
    this.root_.addEventListener(_index.MDCChipFoundation.strings.REMOVAL_EVENT, this.handleChipRemoval_);
  }

  destroy() {
    this.chips.forEach(chip => {
      chip.destroy();
    });
    this.root_.removeEventListener(_index.MDCChipFoundation.strings.INTERACTION_EVENT, this.handleChipInteraction_);
    this.root_.removeEventListener(_index.MDCChipFoundation.strings.REMOVAL_EVENT, this.handleChipRemoval_);
    super.destroy();
  }
  /**
   * Adds a new chip object to the chip set from the given chip element.
   * @param {!Element} chipEl
   */


  addChip(chipEl) {
    chipEl.id = chipEl.id || `mdc-chip-${++idCounter}`;
    this.chips.push(this.chipFactory_(chipEl));
  }
  /**
   * Returns an array of the IDs of all selected chips.
   * @return {!Array<string>}
   */


  get selectedChipIds() {
    return this.foundation_.getSelectedChipIds();
  }
  /**
   * @return {!MDCChipSetFoundation}
   */


  getDefaultFoundation() {
    return new _foundation.default(
    /** @type {!MDCChipSetAdapter} */
    Object.assign({
      hasClass: className => this.root_.classList.contains(className),
      removeChip: chipId => {
        const index = this.findChipIndex_(chipId);

        if (index >= 0) {
          this.chips[index].destroy();
          this.chips.splice(index, 1);
        }
      },
      setSelected: (chipId, selected) => {
        const index = this.findChipIndex_(chipId);

        if (index >= 0) {
          this.chips[index].selected = selected;
        }
      }
    }));
  }
  /**
   * Instantiates chip components on all of the chip set's child chip elements.
   * @param {(function(!Element): !MDCChip)} chipFactory
   * @return {!Array<!MDCChip>}
   */


  instantiateChips_(chipFactory) {
    const chipElements = [].slice.call(this.root_.querySelectorAll(_foundation.default.strings.CHIP_SELECTOR));
    return chipElements.map(el => {
      el.id = el.id || `mdc-chip-${++idCounter}`;
      return chipFactory(el);
    });
  }
  /**
   * Returns the index of the chip with the given id, or -1 if the chip does not exist.
   * @param {string} chipId
   * @return {number}
   */


  findChipIndex_(chipId) {
    for (let i = 0; i < this.chips.length; i++) {
      if (this.chips[i].id === chipId) {
        return i;
      }
    }

    return -1;
  }

}

exports.MDCChipSet = MDCChipSet;
},{"@material/base/component":"node_modules/@material/base/component.js","./adapter":"node_modules/@material/chips/chip-set/adapter.js","./foundation":"node_modules/@material/chips/chip-set/foundation.js","../chip/index":"node_modules/@material/chips/chip/index.js"}],"node_modules/@material/chips/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MDCChipFoundation", {
  enumerable: true,
  get: function () {
    return _index.MDCChipFoundation;
  }
});
Object.defineProperty(exports, "MDCChip", {
  enumerable: true,
  get: function () {
    return _index.MDCChip;
  }
});
Object.defineProperty(exports, "MDCChipSetFoundation", {
  enumerable: true,
  get: function () {
    return _index2.MDCChipSetFoundation;
  }
});
Object.defineProperty(exports, "MDCChipSet", {
  enumerable: true,
  get: function () {
    return _index2.MDCChipSet;
  }
});

var _index = require("./chip/index");

var _index2 = require("./chip-set/index");
},{"./chip/index":"node_modules/@material/chips/chip/index.js","./chip-set/index":"node_modules/@material/chips/chip-set/index.js"}],"node_modules/preact-material-components/Chips/index.js":[function(require,module,exports) {
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ChipSet = exports.ChipText = exports.ChipCheckmark = exports.ChipIcon = exports.Chip = void 0;

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _chips = require("@material/chips");

var _preact = require("preact");

var _MaterialComponent4 = _interopRequireDefault(require("../Base/MaterialComponent"));

var _Icon3 = _interopRequireDefault(require("../Icon"));

var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};

  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  }

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};

var Chip =
/*#__PURE__*/
function (_MaterialComponent) {
  (0, _inherits2.default)(Chip, _MaterialComponent);

  function Chip() {
    var _this;

    (0, _classCallCheck2.default)(this, Chip);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Chip).apply(this, arguments));
    _this.componentName = 'chip';
    _this.mdcProps = ['selected'];
    return _this;
  }

  (0, _createClass2.default)(Chip, [{
    key: "materialDom",
    value: function materialDom(allprops) {
      var children = allprops.children,
          props = __rest(allprops, ["children"]);

      return (0, _preact.h)("div", Object.assign({}, props, {
        ref: this.setControlRef
      }), children);
    }
  }]);
  return Chip;
}(_MaterialComponent4.default);

exports.Chip = Chip;

var ChipIcon =
/*#__PURE__*/
function (_Icon) {
  (0, _inherits2.default)(ChipIcon, _Icon);

  function ChipIcon() {
    var _this2;

    (0, _classCallCheck2.default)(this, ChipIcon);
    _this2 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChipIcon).apply(this, arguments));
    _this2.componentName = 'chip__icon';
    _this2.mdcProps = ['leading', 'trailing'];
    return _this2;
  }

  (0, _createClass2.default)(ChipIcon, [{
    key: "materialDom",
    value: function materialDom(allprops) {
      var children = allprops.children,
          props = __rest(allprops, ["children"]);

      var otherprops = {};

      if (props.trailing) {
        otherprops.tabindex = 0;
        otherprops.role = 'button';
      }

      return (0, _preact.h)(_Icon3.default, Object.assign({}, props, otherprops), children);
    }
  }]);
  return ChipIcon;
}(_Icon3.default);

exports.ChipIcon = ChipIcon;

var ChipCheckmark =
/*#__PURE__*/
function (_Icon2) {
  (0, _inherits2.default)(ChipCheckmark, _Icon2);

  function ChipCheckmark() {
    var _this3;

    (0, _classCallCheck2.default)(this, ChipCheckmark);
    _this3 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChipCheckmark).apply(this, arguments));
    _this3.componentName = 'chip__checkmark';
    _this3.mdcProps = [];
    return _this3;
  }

  (0, _createClass2.default)(ChipCheckmark, [{
    key: "materialDom",
    value: function materialDom(props) {
      return (0, _preact.h)("div", Object.assign({}, props), (0, _preact.h)("svg", {
        class: "mdc-chip__checkmark-svg",
        viewBox: "-2 -3 30 30"
      }, (0, _preact.h)("path", {
        class: "mdc-chip__checkmark-path",
        fill: "none",
        stroke: "black",
        d: "M1.73,12.91 8.1,19.28 22.79,4.59"
      })));
    }
  }]);
  return ChipCheckmark;
}(_Icon3.default);

exports.ChipCheckmark = ChipCheckmark;

var ChipText =
/*#__PURE__*/
function (_MaterialComponent2) {
  (0, _inherits2.default)(ChipText, _MaterialComponent2);

  function ChipText() {
    var _this4;

    (0, _classCallCheck2.default)(this, ChipText);
    _this4 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChipText).apply(this, arguments));
    _this4.componentName = 'chip__text';
    _this4.mdcProps = [];
    return _this4;
  }

  (0, _createClass2.default)(ChipText, [{
    key: "materialDom",
    value: function materialDom(allprops) {
      var children = allprops.children,
          props = __rest(allprops, ["children"]);

      return (0, _preact.h)("div", Object.assign({}, props), children);
    }
  }]);
  return ChipText;
}(_MaterialComponent4.default);

exports.ChipText = ChipText;

var ChipSet =
/*#__PURE__*/
function (_MaterialComponent3) {
  (0, _inherits2.default)(ChipSet, _MaterialComponent3);

  function ChipSet() {
    var _this5;

    (0, _classCallCheck2.default)(this, ChipSet);
    _this5 = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ChipSet).apply(this, arguments));
    _this5.componentName = 'chip-set';
    _this5.mdcProps = ['choice', 'filter', 'input'];
    return _this5;
  }

  (0, _createClass2.default)(ChipSet, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(ChipSet.prototype), "componentDidMount", this).call(this);

      if (this.control) {
        this.MDComponent = new _chips.MDCChipSet(this.control);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(ChipSet.prototype), "componentWillUnmount", this).call(this);

      if (this.MDComponent) {
        this.MDComponent.destroy();
      }
    }
  }, {
    key: "materialDom",
    value: function materialDom(allprops) {
      var children = allprops.children,
          props = __rest(allprops, ["children"]);

      return (0, _preact.h)("div", Object.assign({}, props, {
        ref: this.setControlRef
      }), children);
    }
  }]);
  return ChipSet;
}(_MaterialComponent4.default);

exports.ChipSet = ChipSet;

var default_1 =
/*#__PURE__*/
function (_ChipSet) {
  (0, _inherits2.default)(default_1, _ChipSet);

  function default_1() {
    (0, _classCallCheck2.default)(this, default_1);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(default_1).apply(this, arguments));
  }

  return default_1;
}(ChipSet);

exports.default = default_1;
default_1.Chip = Chip;
default_1.Icon = ChipIcon;
default_1.Text = ChipText;
default_1.Checkmark = ChipCheckmark;

},{"@babel/runtime/helpers/interopRequireDefault":"node_modules/@babel/runtime/helpers/interopRequireDefault.js","@babel/runtime/helpers/get":"node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/classCallCheck":"node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/possibleConstructorReturn":"node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"node_modules/@babel/runtime/helpers/getPrototypeOf.js","@babel/runtime/helpers/inherits":"node_modules/@babel/runtime/helpers/inherits.js","@material/chips":"node_modules/@material/chips/index.js","preact":"node_modules/preact/dist/preact.module.js","../Base/MaterialComponent":"node_modules/preact-material-components/Base/MaterialComponent.js","../Icon":"node_modules/preact-material-components/Icon/index.js"}],"node_modules/preact-material-components/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Button", {
  enumerable: true,
  get: function () {
    return _Button.default;
  }
});
Object.defineProperty(exports, "Checkbox", {
  enumerable: true,
  get: function () {
    return _Checkbox.default;
  }
});
Object.defineProperty(exports, "Fab", {
  enumerable: true,
  get: function () {
    return _Fab.default;
  }
});
Object.defineProperty(exports, "Icon", {
  enumerable: true,
  get: function () {
    return _Icon.default;
  }
});
Object.defineProperty(exports, "IconButton", {
  enumerable: true,
  get: function () {
    return _IconButton.default;
  }
});
Object.defineProperty(exports, "Switch", {
  enumerable: true,
  get: function () {
    return _Switch.default;
  }
});
Object.defineProperty(exports, "Snackbar", {
  enumerable: true,
  get: function () {
    return _Snackbar.default;
  }
});
Object.defineProperty(exports, "Radio", {
  enumerable: true,
  get: function () {
    return _Radio.default;
  }
});
Object.defineProperty(exports, "TextField", {
  enumerable: true,
  get: function () {
    return _TextField.default;
  }
});
Object.defineProperty(exports, "Select", {
  enumerable: true,
  get: function () {
    return _Select.default;
  }
});
Object.defineProperty(exports, "Card", {
  enumerable: true,
  get: function () {
    return _Card.default;
  }
});
Object.defineProperty(exports, "Elevation", {
  enumerable: true,
  get: function () {
    return _Elevation.default;
  }
});
Object.defineProperty(exports, "FormField", {
  enumerable: true,
  get: function () {
    return _FormField.default;
  }
});
Object.defineProperty(exports, "Dialog", {
  enumerable: true,
  get: function () {
    return _Dialog.default;
  }
});
Object.defineProperty(exports, "List", {
  enumerable: true,
  get: function () {
    return _List.default;
  }
});
Object.defineProperty(exports, "Drawer", {
  enumerable: true,
  get: function () {
    return _Drawer.default;
  }
});
Object.defineProperty(exports, "Toolbar", {
  enumerable: true,
  get: function () {
    return _Toolbar.default;
  }
});
Object.defineProperty(exports, "TopAppBar", {
  enumerable: true,
  get: function () {
    return _TopAppBar.default;
  }
});
Object.defineProperty(exports, "Typography", {
  enumerable: true,
  get: function () {
    return _Typography.default;
  }
});
Object.defineProperty(exports, "ImageList", {
  enumerable: true,
  get: function () {
    return _ImageList.default;
  }
});
Object.defineProperty(exports, "LinearProgress", {
  enumerable: true,
  get: function () {
    return _LinearProgress.default;
  }
});
Object.defineProperty(exports, "LayoutGrid", {
  enumerable: true,
  get: function () {
    return _LayoutGrid.default;
  }
});
Object.defineProperty(exports, "Menu", {
  enumerable: true,
  get: function () {
    return _Menu.default;
  }
});
Object.defineProperty(exports, "Slider", {
  enumerable: true,
  get: function () {
    return _Slider.default;
  }
});
Object.defineProperty(exports, "Chips", {
  enumerable: true,
  get: function () {
    return _Chips.default;
  }
});

var _Button = _interopRequireDefault(require("./Button"));

var _Checkbox = _interopRequireDefault(require("./Checkbox"));

var _Fab = _interopRequireDefault(require("./Fab"));

var _Icon = _interopRequireDefault(require("./Icon"));

var _IconButton = _interopRequireDefault(require("./IconButton"));

var _Switch = _interopRequireDefault(require("./Switch"));

var _Snackbar = _interopRequireDefault(require("./Snackbar"));

var _Radio = _interopRequireDefault(require("./Radio"));

var _TextField = _interopRequireDefault(require("./TextField"));

var _Select = _interopRequireDefault(require("./Select"));

var _Card = _interopRequireDefault(require("./Card"));

var _Elevation = _interopRequireDefault(require("./Elevation"));

var _FormField = _interopRequireDefault(require("./FormField"));

var _Dialog = _interopRequireDefault(require("./Dialog"));

var _List = _interopRequireDefault(require("./List"));

var _Drawer = _interopRequireDefault(require("./Drawer"));

var _Toolbar = _interopRequireDefault(require("./Toolbar"));

var _TopAppBar = _interopRequireDefault(require("./TopAppBar"));

var _Typography = _interopRequireDefault(require("./Typography"));

var _ImageList = _interopRequireDefault(require("./ImageList"));

var _LinearProgress = _interopRequireDefault(require("./LinearProgress"));

var _LayoutGrid = _interopRequireDefault(require("./LayoutGrid"));

var _Menu = _interopRequireDefault(require("./Menu"));

var _Slider = _interopRequireDefault(require("./Slider"));

var _Chips = _interopRequireDefault(require("./Chips"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./Button":"node_modules/preact-material-components/Button/index.js","./Checkbox":"node_modules/preact-material-components/Checkbox/index.js","./Fab":"node_modules/preact-material-components/Fab/index.js","./Icon":"node_modules/preact-material-components/Icon/index.js","./IconButton":"node_modules/preact-material-components/IconButton/index.js","./Switch":"node_modules/preact-material-components/Switch/index.js","./Snackbar":"node_modules/preact-material-components/Snackbar/index.js","./Radio":"node_modules/preact-material-components/Radio/index.js","./TextField":"node_modules/preact-material-components/TextField/index.js","./Select":"node_modules/preact-material-components/Select/index.js","./Card":"node_modules/preact-material-components/Card/index.js","./Elevation":"node_modules/preact-material-components/Elevation/index.js","./FormField":"node_modules/preact-material-components/FormField/index.js","./Dialog":"node_modules/preact-material-components/Dialog/index.js","./List":"node_modules/preact-material-components/List/index.js","./Drawer":"node_modules/preact-material-components/Drawer/index.js","./Toolbar":"node_modules/preact-material-components/Toolbar/index.js","./TopAppBar":"node_modules/preact-material-components/TopAppBar/index.js","./Typography":"node_modules/preact-material-components/Typography/index.js","./ImageList":"node_modules/preact-material-components/ImageList/index.js","./LinearProgress":"node_modules/preact-material-components/LinearProgress/index.js","./LayoutGrid":"node_modules/preact-material-components/LayoutGrid/index.js","./Menu":"node_modules/preact-material-components/Menu/index.js","./Slider":"node_modules/preact-material-components/Slider/index.js","./Chips":"node_modules/preact-material-components/Chips/index.js"}],"js/components/NameCard.jsx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _preactMaterialComponents = require("preact-material-components");

var _constants = require("../helper/constants");

var _helpers = require("../helper/helpers");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var NameCard = /*#__PURE__*/function (_Component) {
  _inherits(NameCard, _Component);

  var _super = _createSuper(NameCard);

  function NameCard() {
    _classCallCheck(this, NameCard);

    return _super.apply(this, arguments);
  }

  _createClass(NameCard, [{
    key: "render",
    value: function render() {
      var _NAME_CARD_COORD = _slicedToArray(_constants.NAME_CARD_COORD, 2),
          x = _NAME_CARD_COORD[0],
          y = _NAME_CARD_COORD[1];

      var _unitCoordToWindowCoo = (0, _helpers.unitCoordToWindowCoord)(x, y),
          _unitCoordToWindowCoo2 = _slicedToArray(_unitCoordToWindowCoo, 2),
          xPos = _unitCoordToWindowCoo2[0],
          yPos = _unitCoordToWindowCoo2[1];

      return (0, _preact.h)(_preactMaterialComponents.Button, {
        className: "fixed-square name-card",
        disabled: true,
        style: {
          left: xPos - _constants.GRID_SQUARE_WIDTH / 2,
          top: yPos - _constants.GRID_SQUARE_HEIGHT / 2,
          backgroundColor: _constants.DEFAULT_COLOR
        }
      }, "Justin Hong");
    }
  }]);

  return NameCard;
}(_preact.Component);

exports.default = NameCard;
},{"preact":"node_modules/preact/dist/preact.module.js","preact-material-components":"node_modules/preact-material-components/index.js","../helper/constants":"js/helper/constants.js","../helper/helpers":"js/helper/helpers.js"}],"node_modules/tslib/tslib.es6.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.__extends = __extends;
exports.__rest = __rest;
exports.__decorate = __decorate;
exports.__param = __param;
exports.__metadata = __metadata;
exports.__awaiter = __awaiter;
exports.__generator = __generator;
exports.__createBinding = __createBinding;
exports.__exportStar = __exportStar;
exports.__values = __values;
exports.__read = __read;
exports.__spread = __spread;
exports.__spreadArrays = __spreadArrays;
exports.__await = __await;
exports.__asyncGenerator = __asyncGenerator;
exports.__asyncDelegator = __asyncDelegator;
exports.__asyncValues = __asyncValues;
exports.__makeTemplateObject = __makeTemplateObject;
exports.__importStar = __importStar;
exports.__importDefault = __importDefault;
exports.__classPrivateFieldGet = __classPrivateFieldGet;
exports.__classPrivateFieldSet = __classPrivateFieldSet;
exports.__assign = void 0;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/* global Reflect, Promise */
var extendStatics = function (d, b) {
  extendStatics = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (d, b) {
    d.__proto__ = b;
  } || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
  };

  return extendStatics(d, b);
};

function __extends(d, b) {
  extendStatics(d, b);

  function __() {
    this.constructor = d;
  }

  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function () {
  exports.__assign = __assign = Object.assign || function __assign(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];

      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }

    return t;
  };

  return __assign.apply(this, arguments);
};

exports.__assign = __assign;

function __rest(s, e) {
  var t = {};

  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
}

function __decorate(decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
  return function (target, key) {
    decorator(target, key, paramIndex);
  };
}

function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}

function __generator(thisArg, body) {
  var _ = {
    label: 0,
    sent: function () {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];

      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;

        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };

        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;

        case 7:
          op = _.ops.pop();

          _.trys.pop();

          continue;

        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }

          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }

          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }

          if (t && _.label < t[2]) {
            _.label = t[2];

            _.ops.push(op);

            break;
          }

          if (t[2]) _.ops.pop();

          _.trys.pop();

          continue;
      }

      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
}

function __createBinding(o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
}

function __exportStar(m, exports) {
  for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
      r,
      ar = [],
      e;

  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }

  return ar;
}

function __spread() {
  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));

  return ar;
}

function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}

;

function __await(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []),
      i,
      q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i;

  function verb(n) {
    if (g[n]) i[n] = function (v) {
      return new Promise(function (a, b) {
        q.push([n, v, a, b]) > 1 || resume(n, v);
      });
    };
  }

  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }

  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }

  function fulfill(value) {
    resume("next", value);
  }

  function reject(value) {
    resume("throw", value);
  }

  function settle(f, v) {
    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
  }
}

function __asyncDelegator(o) {
  var i, p;
  return i = {}, verb("next"), verb("throw", function (e) {
    throw e;
  }), verb("return"), i[Symbol.iterator] = function () {
    return this;
  }, i;

  function verb(n, f) {
    i[n] = o[n] ? function (v) {
      return (p = !p) ? {
        value: __await(o[n](v)),
        done: n === "return"
      } : f ? f(v) : v;
    } : f;
  }
}

function __asyncValues(o) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator],
      i;
  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
    return this;
  }, i);

  function verb(n) {
    i[n] = o[n] && function (v) {
      return new Promise(function (resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }

  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function (v) {
      resolve({
        value: v,
        done: d
      });
    }, reject);
  }
}

function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
}

;

function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
  result.default = mod;
  return result;
}

function __importDefault(mod) {
  return mod && mod.__esModule ? mod : {
    default: mod
  };
}

function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }

  return privateMap.get(receiver);
}

function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }

  privateMap.set(receiver, value);
  return value;
}
},{}],"node_modules/@firebase/util/dist/index.cjs.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.reject = function () { };
        this.resolve = function () { };
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(global.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
function isBrowserExtension() {
    var runtime = typeof chrome === 'object'
        ? chrome.runtime
        : typeof browser === 'object'
            ? browser.runtime
            : undefined;
    return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/** Detects Electron apps. */
function isElectron() {
    return getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */
function isIE() {
    var ua = getUA();
    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */
function isUWP() {
    return getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */
function isSafari() {
    return (!isNode() &&
        navigator.userAgent.includes('Safari') &&
        !navigator.userAgent.includes('Chrome'));
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    tslib.__extends(FirebaseError, _super);
    function FirebaseError(code, message) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage);
        // Keys with an underscore at the end of their name are not included in
        // error.data for some reason.
        // TODO: Replace with Object.entries when lib is updated to es2017.
        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
            var key = _b[_a];
            if (key.slice(-1) !== '_') {
                if (key in error) {
                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
                }
                error[key] = customData[key];
            }
        }
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? String(value) : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    }
    else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, [
            'next',
            'error',
            'complete'
        ])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentNumber, callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

exports.CONSTANTS = CONSTANTS;
exports.Deferred = Deferred;
exports.ErrorFactory = ErrorFactory;
exports.FirebaseError = FirebaseError;
exports.Sha1 = Sha1;
exports.assert = assert;
exports.assertionError = assertionError;
exports.async = async;
exports.base64 = base64;
exports.base64Decode = base64Decode;
exports.base64Encode = base64Encode;
exports.contains = contains;
exports.createSubscribe = createSubscribe;
exports.decode = decode;
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.errorPrefix = errorPrefix;
exports.getUA = getUA;
exports.isAdmin = isAdmin;
exports.isBrowser = isBrowser;
exports.isBrowserExtension = isBrowserExtension;
exports.isElectron = isElectron;
exports.isEmpty = isEmpty;
exports.isIE = isIE;
exports.isMobileCordova = isMobileCordova;
exports.isNode = isNode;
exports.isNodeSdk = isNodeSdk;
exports.isReactNative = isReactNative;
exports.isSafari = isSafari;
exports.isUWP = isUWP;
exports.isValidFormat = isValidFormat;
exports.isValidTimestamp = isValidTimestamp;
exports.issuedAtTime = issuedAtTime;
exports.jsonEval = jsonEval;
exports.map = map;
exports.querystring = querystring;
exports.querystringDecode = querystringDecode;
exports.safeGet = safeGet;
exports.stringLength = stringLength;
exports.stringToByteArray = stringToByteArray$1;
exports.stringify = stringify;
exports.validateArgCount = validateArgCount;
exports.validateCallback = validateCallback;
exports.validateContextObject = validateContextObject;
exports.validateNamespace = validateNamespace;


},{"tslib":"node_modules/tslib/tslib.es6.js"}],"node_modules/@firebase/component/dist/index.cjs.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var util = require('@firebase/util');

/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */
var Component = /** @class */ (function () {
    /**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */
    function Component(name, instanceFactory, type) {
        this.name = name;
        this.instanceFactory = instanceFactory;
        this.type = type;
        this.multipleInstances = false;
        /**
         * Properties to be added to the service namespace
         */
        this.serviceProps = {};
        this.instantiationMode = "LAZY" /* LAZY */;
    }
    Component.prototype.setInstantiationMode = function (mode) {
        this.instantiationMode = mode;
        return this;
    };
    Component.prototype.setMultipleInstances = function (multipleInstances) {
        this.multipleInstances = multipleInstances;
        return this;
    };
    Component.prototype.setServiceProps = function (props) {
        this.serviceProps = props;
        return this;
    };
    return Component;
}());

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */
var Provider = /** @class */ (function () {
    function Provider(name, container) {
        this.name = name;
        this.container = container;
        this.component = null;
        this.instances = new Map();
        this.instancesDeferred = new Map();
    }
    /**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */
    Provider.prototype.get = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (!this.instancesDeferred.has(normalizedIdentifier)) {
            var deferred = new util.Deferred();
            this.instancesDeferred.set(normalizedIdentifier, deferred);
            // If the service instance is available, resolve the promise with it immediately
            try {
                var instance = this.getOrInitializeService(normalizedIdentifier);
                if (instance) {
                    deferred.resolve(instance);
                }
            }
            catch (e) {
                // when the instance factory throws an exception during get(), it should not cause
                // a fatal error. We just return the unresolved promise in this case.
            }
        }
        return this.instancesDeferred.get(normalizedIdentifier).promise;
    };
    Provider.prototype.getImmediate = function (options) {
        var _a = tslib.__assign({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        try {
            var instance = this.getOrInitializeService(normalizedIdentifier);
            if (!instance) {
                if (optional) {
                    return null;
                }
                throw Error("Service " + this.name + " is not available");
            }
            return instance;
        }
        catch (e) {
            if (optional) {
                return null;
            }
            else {
                throw e;
            }
        }
    };
    Provider.prototype.getComponent = function () {
        return this.component;
    };
    Provider.prototype.setComponent = function (component) {
        var e_1, _a;
        if (component.name !== this.name) {
            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
        }
        if (this.component) {
            throw Error("Component for " + this.name + " has already been provided");
        }
        this.component = component;
        // if the service is eager, initialize the default instance
        if (isComponentEager(component)) {
            try {
                this.getOrInitializeService(DEFAULT_ENTRY_NAME);
            }
            catch (e) {
                // when the instance factory for an eager Component throws an exception during the eager
                // initialization, it should not cause a fatal error.
                // TODO: Investigate if we need to make it configurable, because some component may want to cause
                // a fatal error in this case?
            }
        }
        try {
            // Create service instances for the pending promises and resolve them
            // NOTE: if this.multipleInstances is false, only the default instance will be created
            // and all promises with resolve with it regardless of the identifier.
            for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];
                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
                try {
                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
                    var instance = this.getOrInitializeService(normalizedIdentifier);
                    instanceDeferred.resolve(instance);
                }
                catch (e) {
                    // when the instance factory throws an exception, it should not cause
                    // a fatal error. We just leave the promise unresolved.
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Provider.prototype.clearInstance = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        this.instancesDeferred.delete(identifier);
        this.instances.delete(identifier);
    };
    // app.delete() will call this method on every provider to delete the services
    // TODO: should we mark the provider as deleted?
    Provider.prototype.delete = function () {
        return tslib.__awaiter(this, void 0, void 0, function () {
            var services;
            return tslib.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        services = Array.from(this.instances.values());
                        return [4 /*yield*/, Promise.all(services
                                .filter(function (service) { return 'INTERNAL' in service; })
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service.INTERNAL.delete(); }))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Provider.prototype.isComponentSet = function () {
        return this.component != null;
    };
    Provider.prototype.getOrInitializeService = function (identifier) {
        var instance = this.instances.get(identifier);
        if (!instance && this.component) {
            instance = this.component.instanceFactory(this.container, normalizeIdentifierForFactory(identifier));
            this.instances.set(identifier, instance);
        }
        return instance || null;
    };
    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
        if (this.component) {
            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
        }
        else {
            return identifier; // assume multiple instances are supported before the component is provided.
        }
    };
    return Provider;
}());
// undefined should be passed to the service factory for the default instance
function normalizeIdentifierForFactory(identifier) {
    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}
function isComponentEager(component) {
    return component.instantiationMode === "EAGER" /* EAGER */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */
var ComponentContainer = /** @class */ (function () {
    function ComponentContainer(name) {
        this.name = name;
        this.providers = new Map();
    }
    /**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */
    ComponentContainer.prototype.addComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            throw new Error("Component " + component.name + " has already been registered with " + this.name);
        }
        provider.setComponent(component);
    };
    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            // delete the existing provider from the container, so we can register the new component
            this.providers.delete(component.name);
        }
        this.addComponent(component);
    };
    /**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */
    ComponentContainer.prototype.getProvider = function (name) {
        if (this.providers.has(name)) {
            return this.providers.get(name);
        }
        // create a Provider for a service that hasn't registered with Firebase
        var provider = new Provider(name, this);
        this.providers.set(name, provider);
        return provider;
    };
    ComponentContainer.prototype.getProviders = function () {
        return Array.from(this.providers.values());
    };
    return ComponentContainer;
}());

exports.Component = Component;
exports.ComponentContainer = ComponentContainer;
exports.Provider = Provider;


},{"tslib":"node_modules/tslib/tslib.es6.js","@firebase/util":"node_modules/@firebase/util/dist/index.cjs.js"}],"node_modules/@firebase/logger/dist/index.esm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setLogLevel = setLogLevel;
exports.setUserLogHandler = setUserLogHandler;
exports.Logger = exports.LogLevel = void 0;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __spreadArrays() {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

  return r;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var _a;
/**
 * A container for all of the Logger instances
 */


var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */

var LogLevel;
exports.LogLevel = LogLevel;

(function (LogLevel) {
  LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
  LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
  LogLevel[LogLevel["INFO"] = 2] = "INFO";
  LogLevel[LogLevel["WARN"] = 3] = "WARN";
  LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
  LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (exports.LogLevel = LogLevel = {}));

var levelStringToEnum = {
  'debug': LogLevel.DEBUG,
  'verbose': LogLevel.VERBOSE,
  'info': LogLevel.INFO,
  'warn': LogLevel.WARN,
  'error': LogLevel.ERROR,
  'silent': LogLevel.SILENT
};
/**
 * The default log level
 */

var defaultLogLevel = LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */

var ConsoleMethod = (_a = {}, _a[LogLevel.DEBUG] = 'log', _a[LogLevel.VERBOSE] = 'log', _a[LogLevel.INFO] = 'info', _a[LogLevel.WARN] = 'warn', _a[LogLevel.ERROR] = 'error', _a);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */

var defaultLogHandler = function (instance, logType) {
  var args = [];

  for (var _i = 2; _i < arguments.length; _i++) {
    args[_i - 2] = arguments[_i];
  }

  if (logType < instance.logLevel) {
    return;
  }

  var now = new Date().toISOString();
  var method = ConsoleMethod[logType];

  if (method) {
    console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
  } else {
    throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
  }
};

var Logger =
/** @class */
function () {
  /**
   * Gives you an instance of a Logger to capture messages according to
   * Firebase's logging scheme.
   *
   * @param name The name that the logs will be associated with
   */
  function Logger(name) {
    this.name = name;
    /**
     * The log level of the given Logger instance.
     */

    this._logLevel = defaultLogLevel;
    /**
     * The main (internal) log handler for the Logger instance.
     * Can be set to a new function in internal package code but not by user.
     */

    this._logHandler = defaultLogHandler;
    /**
     * The optional, additional, user-defined log handler for the Logger instance.
     */

    this._userLogHandler = null;
    /**
     * Capture the current instance for later use
     */

    instances.push(this);
  }

  Object.defineProperty(Logger.prototype, "logLevel", {
    get: function () {
      return this._logLevel;
    },
    set: function (val) {
      if (!(val in LogLevel)) {
        throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
      }

      this._logLevel = val;
    },
    enumerable: true,
    configurable: true
  }); // Workaround for setter/getter having to be the same type.

  Logger.prototype.setLogLevel = function (val) {
    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
  };

  Object.defineProperty(Logger.prototype, "logHandler", {
    get: function () {
      return this._logHandler;
    },
    set: function (val) {
      if (typeof val !== 'function') {
        throw new TypeError('Value assigned to `logHandler` must be a function');
      }

      this._logHandler = val;
    },
    enumerable: true,
    configurable: true
  });
  Object.defineProperty(Logger.prototype, "userLogHandler", {
    get: function () {
      return this._userLogHandler;
    },
    set: function (val) {
      this._userLogHandler = val;
    },
    enumerable: true,
    configurable: true
  });
  /**
   * The functions below are all based on the `console` interface
   */

  Logger.prototype.debug = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
  };

  Logger.prototype.log = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
  };

  Logger.prototype.info = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
  };

  Logger.prototype.warn = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
  };

  Logger.prototype.error = function () {
    var args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }

    this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));

    this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
  };

  return Logger;
}();

exports.Logger = Logger;

function setLogLevel(level) {
  instances.forEach(function (inst) {
    inst.setLogLevel(level);
  });
}

function setUserLogHandler(logCallback, options) {
  var _loop_1 = function (instance) {
    var customLogLevel = null;

    if (options && options.level) {
      customLogLevel = levelStringToEnum[options.level];
    }

    if (logCallback === null) {
      instance.userLogHandler = null;
    } else {
      instance.userLogHandler = function (instance, level) {
        var args = [];

        for (var _i = 2; _i < arguments.length; _i++) {
          args[_i - 2] = arguments[_i];
        }

        var message = args.map(function (arg) {
          if (arg == null) {
            return null;
          } else if (typeof arg === 'string') {
            return arg;
          } else if (typeof arg === 'number' || typeof arg === 'boolean') {
            return arg.toString();
          } else if (arg instanceof Error) {
            return arg.message;
          } else {
            try {
              return JSON.stringify(arg);
            } catch (ignored) {
              return null;
            }
          }
        }).filter(function (arg) {
          return arg;
        }).join(' ');

        if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
          logCallback({
            level: LogLevel[level].toLowerCase(),
            message: message,
            args: args,
            type: instance.name
          });
        }
      };
    }
  };

  for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
    var instance = instances_1[_i];

    _loop_1(instance);
  }
}
},{}],"node_modules/@firebase/app/dist/index.cjs.js":[function(require,module,exports) {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var util = require('@firebase/util');
var component = require('@firebase/component');
var logger$1 = require('@firebase/logger');

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
        'Firebase App instance.',
    _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',
    _a);
var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);

var name$1 = "@firebase/app";
var version = "0.6.7";

var name$2 = "@firebase/analytics";

var name$3 = "@firebase/auth";

var name$4 = "@firebase/database";

var name$5 = "@firebase/functions";

var name$6 = "@firebase/installations";

var name$7 = "@firebase/messaging";

var name$8 = "@firebase/performance";

var name$9 = "@firebase/remote-config";

var name$a = "@firebase/storage";

var name$b = "@firebase/firestore";

var name$c = "firebase-wrapper";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a$1;
var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {},
    _a$1[name$1] = 'fire-core',
    _a$1[name$2] = 'fire-analytics',
    _a$1[name$3] = 'fire-auth',
    _a$1[name$4] = 'fire-rtdb',
    _a$1[name$5] = 'fire-fn',
    _a$1[name$6] = 'fire-iid',
    _a$1[name$7] = 'fire-fcm',
    _a$1[name$8] = 'fire-perf',
    _a$1[name$9] = 'fire-rc',
    _a$1[name$a] = 'fire-gcs',
    _a$1[name$b] = 'fire-fst',
    _a$1['fire-js'] = 'fire-js',
    _a$1[name$c] = 'fire-js-all',
    _a$1);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new logger$1.Logger('@firebase/app');

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        var e_1, _a;
        var _this = this;
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = util.deepCopy(options);
        this.container = new component.ComponentContainer(config.name);
        // add itself to container
        this._addComponent(new component.Component('app', function () { return _this; }, "PUBLIC" /* PUBLIC */));
        try {
            // populate ComponentContainer with existing components
            for (var _b = tslib.__values(this.firebase_.INTERNAL.components.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var component$1 = _c.value;
                this._addComponent(component$1);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: true,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        // getImmediate will always succeed because _getService is only called for registered components.
        return this.container.getProvider(name).getImmediate({
            identifier: instanceIdentifier
        });
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.container.getProvider(name).clearInstance(instanceIdentifier);
    };
    /**
     * @param component the component being added to this app's container
     */
    FirebaseAppImpl.prototype._addComponent = function (component) {
        try {
            this.container.addComponent(component);
        }
        catch (e) {
            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
        }
    };
    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
        this.container.addOrOverwriteComponent(component);
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version$1 = "7.15.5";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var components = new Map();
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        registerVersion: registerVersion,
        setLogLevel: logger$1.setLogLevel,
        onLog: onLog,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version$1,
        INTERNAL: {
            registerComponent: registerComponent,
            removeApp: removeApp,
            components: components,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!util.contains(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if (util.contains(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    function registerComponent(component) {
        var e_1, _a;
        var componentName = component.name;
        if (components.has(componentName)) {
            logger.debug("There were multiple attempts to register component " + componentName + ".");
            return component.type === "PUBLIC" /* PUBLIC */
                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    namespace[componentName]
                : null;
        }
        components.set(componentName, component);
        // create service namespace for public components
        if (component.type === "PUBLIC" /* PUBLIC */) {
            // The Service namespace is an accessor function ...
            var serviceNamespace = function (appArg) {
                if (appArg === void 0) { appArg = app(); }
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                if (typeof appArg[componentName] !== 'function') {
                    // Invalid argument.
                    // This happens in the following case: firebase.storage('gs:/')
                    throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                        appName: componentName
                    });
                }
                // Forward service instance lookup to the FirebaseApp.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                return appArg[componentName]();
            };
            // ... and a container for service-level properties.
            if (component.serviceProps !== undefined) {
                util.deepExtend(serviceNamespace, component.serviceProps);
            }
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            namespace[componentName] = serviceNamespace;
            // Patch the FirebaseAppImpl prototype
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            firebaseAppImpl.prototype[componentName] =
                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
                // option added to the no-explicit-any rule when ESlint releases it.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var serviceFxn = this._getService.bind(this, componentName);
                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
                };
        }
        try {
            // add the component to existing app instances
            for (var _b = tslib.__values(Object.keys(apps)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var appName = _c.value;
                apps[appName]._addComponent(component);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return component.type === "PUBLIC" /* PUBLIC */
            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                namespace[componentName]
            : null;
    }
    function registerVersion(libraryKeyOrName, version, variant) {
        var _a;
        // TODO: We can use this check to whitelist strings when/if we set up
        // a good whitelist system.
        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
        if (variant) {
            library += "-" + variant;
        }
        var libraryMismatch = library.match(/\s|\//);
        var versionMismatch = version.match(/\s|\//);
        if (libraryMismatch || versionMismatch) {
            var warning = [
                "Unable to register library \"" + library + "\" with version \"" + version + "\":"
            ];
            if (libraryMismatch) {
                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
            }
            if (libraryMismatch && versionMismatch) {
                warning.push('and');
            }
            if (versionMismatch) {
                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
            }
            logger.warn(warning.join(' '));
            return;
        }
        registerComponent(new component.Component(library + "-version", function () { return ({ library: library, version: version }); }, "VERSION" /* VERSION */));
    }
    function onLog(logCallback, options) {
        if (logCallback !== null && typeof logCallback !== 'function') {
            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */, {
                appName: name
            });
        }
        logger$1.setUserLogHandler(logCallback, options);
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = tslib.__assign(tslib.__assign({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: util.createSubscribe,
        ErrorFactory: util.ErrorFactory,
        deepExtend: util.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        util.deepExtend(namespace, props);
    }
    return namespace;
}
var firebase = createFirebaseNamespace();

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PlatformLoggerService = /** @class */ (function () {
    function PlatformLoggerService(container) {
        this.container = container;
    }
    // In initial implementation, this will be called by installations on
    // auth token refresh, and installations will send this string.
    PlatformLoggerService.prototype.getPlatformInfoString = function () {
        var providers = this.container.getProviders();
        // Loop through providers and get library/version pairs from any that are
        // version components.
        return providers
            .map(function (provider) {
            if (isVersionServiceProvider(provider)) {
                var service = provider.getImmediate();
                return service.library + "/" + service.version;
            }
            else {
                return null;
            }
        })
            .filter(function (logString) { return logString; })
            .join(' ');
    };
    return PlatformLoggerService;
}());
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */
function isVersionServiceProvider(provider) {
    var component = provider.getComponent();
    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerCoreComponents(firebase, variant) {
    firebase.INTERNAL.registerComponent(new component.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, "PRIVATE" /* PRIVATE */));
    // Register `app` package.
    firebase.registerVersion(name$1, version, variant);
    // Register platform SDK identifier (no version).
    firebase.registerVersion('fire-js', '');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if (util.isBrowser() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var initializeApp = firebase.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebase.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if (util.isNode()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase$1 = firebase;
registerCoreComponents(firebase$1);

exports.default = firebase$1;
exports.firebase = firebase$1;


},{"tslib":"node_modules/tslib/tslib.es6.js","@firebase/util":"node_modules/@firebase/util/dist/index.cjs.js","@firebase/component":"node_modules/@firebase/component/dist/index.cjs.js","@firebase/logger":"node_modules/@firebase/logger/dist/index.esm.js"}],"node_modules/firebase/app/dist/index.cjs.js":[function(require,module,exports) {
'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var firebase = _interopDefault(require('@firebase/app'));

var name = "firebase";
var version = "7.15.5";

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
firebase.registerVersion(name, version, 'app');

module.exports = firebase;


},{"@firebase/app":"node_modules/@firebase/app/dist/index.cjs.js"}],"node_modules/idb/build/idb.js":[function(require,module,exports) {
var define;
var global = arguments[3];
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.idb = {}));
}(this, function (exports) { 'use strict';

  function toArray(arr) {
    return Array.prototype.slice.call(arr);
  }

  function promisifyRequest(request) {
    return new Promise(function(resolve, reject) {
      request.onsuccess = function() {
        resolve(request.result);
      };

      request.onerror = function() {
        reject(request.error);
      };
    });
  }

  function promisifyRequestCall(obj, method, args) {
    var request;
    var p = new Promise(function(resolve, reject) {
      request = obj[method].apply(obj, args);
      promisifyRequest(request).then(resolve, reject);
    });

    p.request = request;
    return p;
  }

  function promisifyCursorRequestCall(obj, method, args) {
    var p = promisifyRequestCall(obj, method, args);
    return p.then(function(value) {
      if (!value) return;
      return new Cursor(value, p.request);
    });
  }

  function proxyProperties(ProxyClass, targetProp, properties) {
    properties.forEach(function(prop) {
      Object.defineProperty(ProxyClass.prototype, prop, {
        get: function() {
          return this[targetProp][prop];
        },
        set: function(val) {
          this[targetProp][prop] = val;
        }
      });
    });
  }

  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return promisifyRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return this[targetProp][prop].apply(this[targetProp], arguments);
      };
    });
  }

  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {
    properties.forEach(function(prop) {
      if (!(prop in Constructor.prototype)) return;
      ProxyClass.prototype[prop] = function() {
        return promisifyCursorRequestCall(this[targetProp], prop, arguments);
      };
    });
  }

  function Index(index) {
    this._index = index;
  }

  proxyProperties(Index, '_index', [
    'name',
    'keyPath',
    'multiEntry',
    'unique'
  ]);

  proxyRequestMethods(Index, '_index', IDBIndex, [
    'get',
    'getKey',
    'getAll',
    'getAllKeys',
    'count'
  ]);

  proxyCursorRequestMethods(Index, '_index', IDBIndex, [
    'openCursor',
    'openKeyCursor'
  ]);

  function Cursor(cursor, request) {
    this._cursor = cursor;
    this._request = request;
  }

  proxyProperties(Cursor, '_cursor', [
    'direction',
    'key',
    'primaryKey',
    'value'
  ]);

  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [
    'update',
    'delete'
  ]);

  // proxy 'next' methods
  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {
    if (!(methodName in IDBCursor.prototype)) return;
    Cursor.prototype[methodName] = function() {
      var cursor = this;
      var args = arguments;
      return Promise.resolve().then(function() {
        cursor._cursor[methodName].apply(cursor._cursor, args);
        return promisifyRequest(cursor._request).then(function(value) {
          if (!value) return;
          return new Cursor(value, cursor._request);
        });
      });
    };
  });

  function ObjectStore(store) {
    this._store = store;
  }

  ObjectStore.prototype.createIndex = function() {
    return new Index(this._store.createIndex.apply(this._store, arguments));
  };

  ObjectStore.prototype.index = function() {
    return new Index(this._store.index.apply(this._store, arguments));
  };

  proxyProperties(ObjectStore, '_store', [
    'name',
    'keyPath',
    'indexNames',
    'autoIncrement'
  ]);

  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [
    'put',
    'add',
    'delete',
    'clear',
    'get',
    'getAll',
    'getKey',
    'getAllKeys',
    'count'
  ]);

  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [
    'openCursor',
    'openKeyCursor'
  ]);

  proxyMethods(ObjectStore, '_store', IDBObjectStore, [
    'deleteIndex'
  ]);

  function Transaction(idbTransaction) {
    this._tx = idbTransaction;
    this.complete = new Promise(function(resolve, reject) {
      idbTransaction.oncomplete = function() {
        resolve();
      };
      idbTransaction.onerror = function() {
        reject(idbTransaction.error);
      };
      idbTransaction.onabort = function() {
        reject(idbTransaction.error);
      };
    });
  }

  Transaction.prototype.objectStore = function() {
    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));
  };

  proxyProperties(Transaction, '_tx', [
    'objectStoreNames',
    'mode'
  ]);

  proxyMethods(Transaction, '_tx', IDBTransaction, [
    'abort'
  ]);

  function UpgradeDB(db, oldVersion, transaction) {
    this._db = db;
    this.oldVersion = oldVersion;
    this.transaction = new Transaction(transaction);
  }

  UpgradeDB.prototype.createObjectStore = function() {
    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));
  };

  proxyProperties(UpgradeDB, '_db', [
    'name',
    'version',
    'objectStoreNames'
  ]);

  proxyMethods(UpgradeDB, '_db', IDBDatabase, [
    'deleteObjectStore',
    'close'
  ]);

  function DB(db) {
    this._db = db;
  }

  DB.prototype.transaction = function() {
    return new Transaction(this._db.transaction.apply(this._db, arguments));
  };

  proxyProperties(DB, '_db', [
    'name',
    'version',
    'objectStoreNames'
  ]);

  proxyMethods(DB, '_db', IDBDatabase, [
    'close'
  ]);

  // Add cursor iterators
  // TODO: remove this once browsers do the right thing with promises
  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {
    [ObjectStore, Index].forEach(function(Constructor) {
      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.
      if (!(funcName in Constructor.prototype)) return;

      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {
        var args = toArray(arguments);
        var callback = args[args.length - 1];
        var nativeObject = this._store || this._index;
        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));
        request.onsuccess = function() {
          callback(request.result);
        };
      };
    });
  });

  // polyfill getAll
  [Index, ObjectStore].forEach(function(Constructor) {
    if (Constructor.prototype.getAll) return;
    Constructor.prototype.getAll = function(query, count) {
      var instance = this;
      var items = [];

      return new Promise(function(resolve) {
        instance.iterateCursor(query, function(cursor) {
          if (!cursor) {
            resolve(items);
            return;
          }
          items.push(cursor.value);

          if (count !== undefined && items.length == count) {
            resolve(items);
            return;
          }
          cursor.continue();
        });
      });
    };
  });

  function openDb(name, version, upgradeCallback) {
    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);
    var request = p.request;

    if (request) {
      request.onupgradeneeded = function(event) {
        if (upgradeCallback) {
          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));
        }
      };
    }

    return p.then(function(db) {
      return new DB(db);
    });
  }

  function deleteDb(name) {
    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);
  }

  exports.openDb = openDb;
  exports.deleteDb = deleteDb;

  Object.defineProperty(exports, '__esModule', { value: true });

}));

},{}],"node_modules/@firebase/installations/dist/index.esm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerInstallations = registerInstallations;

var _app = _interopRequireDefault(require("@firebase/app"));

var _component = require("@firebase/component");

var _tslib = require("tslib");

var _util = require("@firebase/util");

var _idb = require("idb");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var name = "@firebase/installations";
var version = "0.4.13";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var PENDING_TIMEOUT_MS = 10000;
var PACKAGE_VERSION = "w:" + version;
var INTERNAL_AUTH_VERSION = 'FIS_v2';
var INSTALLATIONS_API_URL = 'https://firebaseinstallations.googleapis.com/v1';
var TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour

var SERVICE = 'installations';
var SERVICE_NAME = 'Installations';
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var _a;

var ERROR_DESCRIPTION_MAP = (_a = {}, _a["missing-app-config-values"
/* MISSING_APP_CONFIG_VALUES */
] = 'Missing App configuration value: "{$valueName}"', _a["not-registered"
/* NOT_REGISTERED */
] = 'Firebase Installation is not registered.', _a["installation-not-found"
/* INSTALLATION_NOT_FOUND */
] = 'Firebase Installation not found.', _a["request-failed"
/* REQUEST_FAILED */
] = '{$requestName} request failed with error "{$serverCode} {$serverStatus}: {$serverMessage}"', _a["app-offline"
/* APP_OFFLINE */
] = 'Could not process request. Application offline.', _a["delete-pending-registration"
/* DELETE_PENDING_REGISTRATION */
] = "Can't delete installation while there is a pending registration request.", _a);
var ERROR_FACTORY = new _util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);
/** Returns true if error is a FirebaseError that is based on an error from the server. */

function isServerError(error) {
  return error instanceof _util.FirebaseError && error.code.includes("request-failed"
  /* REQUEST_FAILED */
  );
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function getInstallationsEndpoint(_a) {
  var projectId = _a.projectId;
  return INSTALLATIONS_API_URL + "/projects/" + projectId + "/installations";
}

function extractAuthTokenInfoFromResponse(response) {
  return {
    token: response.token,
    requestStatus: 2
    /* COMPLETED */
    ,
    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),
    creationTime: Date.now()
  };
}

function getErrorFromResponse(requestName, response) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var responseJson, errorData;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , response.json()];

        case 1:
          responseJson = _a.sent();
          errorData = responseJson.error;
          return [2
          /*return*/
          , ERROR_FACTORY.create("request-failed"
          /* REQUEST_FAILED */
          , {
            requestName: requestName,
            serverCode: errorData.code,
            serverMessage: errorData.message,
            serverStatus: errorData.status
          })];
      }
    });
  });
}

function getHeaders(_a) {
  var apiKey = _a.apiKey;
  return new Headers({
    'Content-Type': 'application/json',
    Accept: 'application/json',
    'x-goog-api-key': apiKey
  });
}

function getHeadersWithAuth(appConfig, _a) {
  var refreshToken = _a.refreshToken;
  var headers = getHeaders(appConfig);
  headers.append('Authorization', getAuthorizationHeader(refreshToken));
  return headers;
}
/**
 * Calls the passed in fetch wrapper and returns the response.
 * If the returned response has a status of 5xx, re-runs the function once and
 * returns the response.
 */


function retryIfServerError(fn) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var result;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , fn()];

        case 1:
          result = _a.sent();

          if (result.status >= 500 && result.status < 600) {
            // Internal Server Error. Retry request.
            return [2
            /*return*/
            , fn()];
          }

          return [2
          /*return*/
          , result];
      }
    });
  });
}

function getExpiresInFromResponseExpiresIn(responseExpiresIn) {
  // This works because the server will never respond with fractions of a second.
  return Number(responseExpiresIn.replace('s', '000'));
}

function getAuthorizationHeader(refreshToken) {
  return INTERNAL_AUTH_VERSION + " " + refreshToken;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function createInstallationRequest(appConfig, _a) {
  var fid = _a.fid;
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var endpoint, headers, body, request, response, responseValue, registeredInstallationEntry;
    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          endpoint = getInstallationsEndpoint(appConfig);
          headers = getHeaders(appConfig);
          body = {
            fid: fid,
            authVersion: INTERNAL_AUTH_VERSION,
            appId: appConfig.appId,
            sdkVersion: PACKAGE_VERSION
          };
          request = {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(body)
          };
          return [4
          /*yield*/
          , retryIfServerError(function () {
            return fetch(endpoint, request);
          })];

        case 1:
          response = _b.sent();
          if (!response.ok) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , response.json()];

        case 2:
          responseValue = _b.sent();
          registeredInstallationEntry = {
            fid: responseValue.fid || fid,
            registrationStatus: 2
            /* COMPLETED */
            ,
            refreshToken: responseValue.refreshToken,
            authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)
          };
          return [2
          /*return*/
          , registeredInstallationEntry];

        case 3:
          return [4
          /*yield*/
          , getErrorFromResponse('Create Installation', response)];

        case 4:
          throw _b.sent();
      }
    });
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Returns a promise that resolves after given time passes. */


function sleep(ms) {
  return new Promise(function (resolve) {
    setTimeout(resolve, ms);
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function bufferToBase64UrlSafe(array) {
  var b64 = btoa(String.fromCharCode.apply(String, (0, _tslib.__spread)(array)));
  return b64.replace(/\+/g, '-').replace(/\//g, '_');
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var VALID_FID_PATTERN = /^[cdef][\w-]{21}$/;
var INVALID_FID = '';
/**
 * Generates a new FID using random values from Web Crypto API.
 * Returns an empty string if FID generation fails for any reason.
 */

function generateFid() {
  try {
    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5
    // bytes. our implementation generates a 17 byte array instead.
    var fidByteArray = new Uint8Array(17);
    var crypto_1 = self.crypto || self.msCrypto;
    crypto_1.getRandomValues(fidByteArray); // Replace the first 4 random bits with the constant FID header of 0b0111.

    fidByteArray[0] = 112 + fidByteArray[0] % 16;
    var fid = encode(fidByteArray);
    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;
  } catch (_a) {
    // FID generation errored
    return INVALID_FID;
  }
}
/** Converts a FID Uint8Array to a base64 string representation. */


function encode(fidByteArray) {
  var b64String = bufferToBase64UrlSafe(fidByteArray); // Remove the 23rd character that was added because of the extra 4 bits at the
  // end of our 17 byte array, and the '=' padding.

  return b64String.substr(0, 22);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Returns a string key that can be used to identify the app. */


function getKey(appConfig) {
  return appConfig.appName + "!" + appConfig.appId;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var fidChangeCallbacks = new Map();
/**
 * Calls the onIdChange callbacks with the new FID value, and broadcasts the
 * change to other tabs.
 */

function fidChanged(appConfig, fid) {
  var key = getKey(appConfig);
  callFidChangeCallbacks(key, fid);
  broadcastFidChange(key, fid);
}

function addCallback(appConfig, callback) {
  // Open the broadcast channel if it's not already open,
  // to be able to listen to change events from other tabs.
  getBroadcastChannel();
  var key = getKey(appConfig);
  var callbackSet = fidChangeCallbacks.get(key);

  if (!callbackSet) {
    callbackSet = new Set();
    fidChangeCallbacks.set(key, callbackSet);
  }

  callbackSet.add(callback);
}

function removeCallback(appConfig, callback) {
  var key = getKey(appConfig);
  var callbackSet = fidChangeCallbacks.get(key);

  if (!callbackSet) {
    return;
  }

  callbackSet.delete(callback);

  if (callbackSet.size === 0) {
    fidChangeCallbacks.delete(key);
  } // Close broadcast channel if there are no more callbacks.


  closeBroadcastChannel();
}

function callFidChangeCallbacks(key, fid) {
  var e_1, _a;

  var callbacks = fidChangeCallbacks.get(key);

  if (!callbacks) {
    return;
  }

  try {
    for (var callbacks_1 = (0, _tslib.__values)(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {
      var callback = callbacks_1_1.value;
      callback(fid);
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }
}

function broadcastFidChange(key, fid) {
  var channel = getBroadcastChannel();

  if (channel) {
    channel.postMessage({
      key: key,
      fid: fid
    });
  }

  closeBroadcastChannel();
}

var broadcastChannel = null;
/** Opens and returns a BroadcastChannel if it is supported by the browser. */

function getBroadcastChannel() {
  if (!broadcastChannel && 'BroadcastChannel' in self) {
    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');

    broadcastChannel.onmessage = function (e) {
      callFidChangeCallbacks(e.data.key, e.data.fid);
    };
  }

  return broadcastChannel;
}

function closeBroadcastChannel() {
  if (fidChangeCallbacks.size === 0 && broadcastChannel) {
    broadcastChannel.close();
    broadcastChannel = null;
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var DATABASE_NAME = 'firebase-installations-database';
var DATABASE_VERSION = 1;
var OBJECT_STORE_NAME = 'firebase-installations-store';
var dbPromise = null;

function getDbPromise() {
  if (!dbPromise) {
    dbPromise = (0, _idb.openDb)(DATABASE_NAME, DATABASE_VERSION, function (upgradeDB) {
      // We don't use 'break' in this switch statement, the fall-through
      // behavior is what we want, because if there are multiple versions between
      // the old version and the current version, we want ALL the migrations
      // that correspond to those versions to run, not only the last one.
      // eslint-disable-next-line default-case
      switch (upgradeDB.oldVersion) {
        case 0:
          upgradeDB.createObjectStore(OBJECT_STORE_NAME);
      }
    });
  }

  return dbPromise;
}
/** Assigns or overwrites the record for the given key with the given value. */


function set(appConfig, value) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var key, db, tx, objectStore, oldValue;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          key = getKey(appConfig);
          return [4
          /*yield*/
          , getDbPromise()];

        case 1:
          db = _a.sent();
          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
          objectStore = tx.objectStore(OBJECT_STORE_NAME);
          return [4
          /*yield*/
          , objectStore.get(key)];

        case 2:
          oldValue = _a.sent();
          return [4
          /*yield*/
          , objectStore.put(value, key)];

        case 3:
          _a.sent();

          return [4
          /*yield*/
          , tx.complete];

        case 4:
          _a.sent();

          if (!oldValue || oldValue.fid !== value.fid) {
            fidChanged(appConfig, value.fid);
          }

          return [2
          /*return*/
          , value];
      }
    });
  });
}
/** Removes record(s) from the objectStore that match the given key. */


function remove(appConfig) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var key, db, tx;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          key = getKey(appConfig);
          return [4
          /*yield*/
          , getDbPromise()];

        case 1:
          db = _a.sent();
          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
          return [4
          /*yield*/
          , tx.objectStore(OBJECT_STORE_NAME).delete(key)];

        case 2:
          _a.sent();

          return [4
          /*yield*/
          , tx.complete];

        case 3:
          _a.sent();

          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Atomically updates a record with the result of updateFn, which gets
 * called with the current value. If newValue is undefined, the record is
 * deleted instead.
 * @return Updated value
 */


function update(appConfig, updateFn) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var key, db, tx, store, oldValue, newValue;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          key = getKey(appConfig);
          return [4
          /*yield*/
          , getDbPromise()];

        case 1:
          db = _a.sent();
          tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');
          store = tx.objectStore(OBJECT_STORE_NAME);
          return [4
          /*yield*/
          , store.get(key)];

        case 2:
          oldValue = _a.sent();
          newValue = updateFn(oldValue);
          if (!(newValue === undefined)) return [3
          /*break*/
          , 4];
          return [4
          /*yield*/
          , store.delete(key)];

        case 3:
          _a.sent();

          return [3
          /*break*/
          , 6];

        case 4:
          return [4
          /*yield*/
          , store.put(newValue, key)];

        case 5:
          _a.sent();

          _a.label = 6;

        case 6:
          return [4
          /*yield*/
          , tx.complete];

        case 7:
          _a.sent();

          if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {
            fidChanged(appConfig, newValue.fid);
          }

          return [2
          /*return*/
          , newValue];
      }
    });
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Updates and returns the InstallationEntry from the database.
 * Also triggers a registration request if it is necessary and possible.
 */


function getInstallationEntry(appConfig) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var registrationPromise, installationEntry, _a;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4
          /*yield*/
          , update(appConfig, function (oldEntry) {
            var installationEntry = updateOrCreateInstallationEntry(oldEntry);
            var entryWithPromise = triggerRegistrationIfNecessary(appConfig, installationEntry);
            registrationPromise = entryWithPromise.registrationPromise;
            return entryWithPromise.installationEntry;
          })];

        case 1:
          installationEntry = _b.sent();
          if (!(installationEntry.fid === INVALID_FID)) return [3
          /*break*/
          , 3];
          _a = {};
          return [4
          /*yield*/
          , registrationPromise];

        case 2:
          // FID generation failed. Waiting for the FID from the server.
          return [2
          /*return*/
          , (_a.installationEntry = _b.sent(), _a)];

        case 3:
          return [2
          /*return*/
          , {
            installationEntry: installationEntry,
            registrationPromise: registrationPromise
          }];
      }
    });
  });
}
/**
 * Creates a new Installation Entry if one does not exist.
 * Also clears timed out pending requests.
 */


function updateOrCreateInstallationEntry(oldEntry) {
  var entry = oldEntry || {
    fid: generateFid(),
    registrationStatus: 0
    /* NOT_STARTED */

  };
  return clearTimedOutRequest(entry);
}
/**
 * If the Firebase Installation is not registered yet, this will trigger the
 * registration and return an InProgressInstallationEntry.
 *
 * If registrationPromise does not exist, the installationEntry is guaranteed
 * to be registered.
 */


function triggerRegistrationIfNecessary(appConfig, installationEntry) {
  if (installationEntry.registrationStatus === 0
  /* NOT_STARTED */
  ) {
      if (!navigator.onLine) {
        // Registration required but app is offline.
        var registrationPromiseWithError = Promise.reject(ERROR_FACTORY.create("app-offline"
        /* APP_OFFLINE */
        ));
        return {
          installationEntry: installationEntry,
          registrationPromise: registrationPromiseWithError
        };
      } // Try registering. Change status to IN_PROGRESS.


      var inProgressEntry = {
        fid: installationEntry.fid,
        registrationStatus: 1
        /* IN_PROGRESS */
        ,
        registrationTime: Date.now()
      };
      var registrationPromise = registerInstallation(appConfig, inProgressEntry);
      return {
        installationEntry: inProgressEntry,
        registrationPromise: registrationPromise
      };
    } else if (installationEntry.registrationStatus === 1
  /* IN_PROGRESS */
  ) {
      return {
        installationEntry: installationEntry,
        registrationPromise: waitUntilFidRegistration(appConfig)
      };
    } else {
    return {
      installationEntry: installationEntry
    };
  }
}
/** This will be executed only once for each new Firebase Installation. */


function registerInstallation(appConfig, installationEntry) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var registeredInstallationEntry, e_1;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 2,, 7]);

          return [4
          /*yield*/
          , createInstallationRequest(appConfig, installationEntry)];

        case 1:
          registeredInstallationEntry = _a.sent();
          return [2
          /*return*/
          , set(appConfig, registeredInstallationEntry)];

        case 2:
          e_1 = _a.sent();
          if (!(isServerError(e_1) && e_1.serverCode === 409)) return [3
          /*break*/
          , 4]; // Server returned a "FID can not be used" error.
          // Generate a new ID next time.

          return [4
          /*yield*/
          , remove(appConfig)];

        case 3:
          // Server returned a "FID can not be used" error.
          // Generate a new ID next time.
          _a.sent();

          return [3
          /*break*/
          , 6];

        case 4:
          // Registration failed. Set FID as not registered.
          return [4
          /*yield*/
          , set(appConfig, {
            fid: installationEntry.fid,
            registrationStatus: 0
            /* NOT_STARTED */

          })];

        case 5:
          // Registration failed. Set FID as not registered.
          _a.sent();

          _a.label = 6;

        case 6:
          throw e_1;

        case 7:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/** Call if FID registration is pending in another request. */


function waitUntilFidRegistration(appConfig) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var entry, _a, installationEntry, registrationPromise;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4
          /*yield*/
          , updateInstallationRequest(appConfig)];

        case 1:
          entry = _b.sent();
          _b.label = 2;

        case 2:
          if (!(entry.registrationStatus === 1
          /* IN_PROGRESS */
          )) return [3
            /*break*/
            , 5]; // createInstallation request still in progress.

          return [4
          /*yield*/
          , sleep(100)];

        case 3:
          // createInstallation request still in progress.
          _b.sent();

          return [4
          /*yield*/
          , updateInstallationRequest(appConfig)];

        case 4:
          entry = _b.sent();
          return [3
          /*break*/
          , 2];

        case 5:
          if (!(entry.registrationStatus === 0
          /* NOT_STARTED */
          )) return [3
            /*break*/
            , 7];
          return [4
          /*yield*/
          , getInstallationEntry(appConfig)];

        case 6:
          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;

          if (registrationPromise) {
            return [2
            /*return*/
            , registrationPromise];
          } else {
            // if there is no registrationPromise, entry is registered.
            return [2
            /*return*/
            , installationEntry];
          }

        case 7:
          return [2
          /*return*/
          , entry];
      }
    });
  });
}
/**
 * Called only if there is a CreateInstallation request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * CreateInstallation request.
 *
 * Returns the updated InstallationEntry.
 */


function updateInstallationRequest(appConfig) {
  return update(appConfig, function (oldEntry) {
    if (!oldEntry) {
      throw ERROR_FACTORY.create("installation-not-found"
      /* INSTALLATION_NOT_FOUND */
      );
    }

    return clearTimedOutRequest(oldEntry);
  });
}

function clearTimedOutRequest(entry) {
  if (hasInstallationRequestTimedOut(entry)) {
    return {
      fid: entry.fid,
      registrationStatus: 0
      /* NOT_STARTED */

    };
  }

  return entry;
}

function hasInstallationRequestTimedOut(installationEntry) {
  return installationEntry.registrationStatus === 1
  /* IN_PROGRESS */
  && installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now();
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function generateAuthTokenRequest(_a, installationEntry) {
  var appConfig = _a.appConfig,
      platformLoggerProvider = _a.platformLoggerProvider;
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var endpoint, headers, platformLogger, body, request, response, responseValue, completedAuthToken;
    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);
          headers = getHeadersWithAuth(appConfig, installationEntry);
          platformLogger = platformLoggerProvider.getImmediate({
            optional: true
          });

          if (platformLogger) {
            headers.append('x-firebase-client', platformLogger.getPlatformInfoString());
          }

          body = {
            installation: {
              sdkVersion: PACKAGE_VERSION
            }
          };
          request = {
            method: 'POST',
            headers: headers,
            body: JSON.stringify(body)
          };
          return [4
          /*yield*/
          , retryIfServerError(function () {
            return fetch(endpoint, request);
          })];

        case 1:
          response = _b.sent();
          if (!response.ok) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , response.json()];

        case 2:
          responseValue = _b.sent();
          completedAuthToken = extractAuthTokenInfoFromResponse(responseValue);
          return [2
          /*return*/
          , completedAuthToken];

        case 3:
          return [4
          /*yield*/
          , getErrorFromResponse('Generate Auth Token', response)];

        case 4:
          throw _b.sent();
      }
    });
  });
}

function getGenerateAuthTokenEndpoint(appConfig, _a) {
  var fid = _a.fid;
  return getInstallationsEndpoint(appConfig) + "/" + fid + "/authTokens:generate";
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns a valid authentication token for the installation. Generates a new
 * token if one doesn't exist, is expired or about to expire.
 *
 * Should only be called if the Firebase Installation is registered.
 */


function refreshAuthToken(dependencies, forceRefresh) {
  if (forceRefresh === void 0) {
    forceRefresh = false;
  }

  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var tokenPromise, entry, authToken, _a;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4
          /*yield*/
          , update(dependencies.appConfig, function (oldEntry) {
            if (!isEntryRegistered(oldEntry)) {
              throw ERROR_FACTORY.create("not-registered"
              /* NOT_REGISTERED */
              );
            }

            var oldAuthToken = oldEntry.authToken;

            if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {
              // There is a valid token in the DB.
              return oldEntry;
            } else if (oldAuthToken.requestStatus === 1
            /* IN_PROGRESS */
            ) {
                // There already is a token request in progress.
                tokenPromise = waitUntilAuthTokenRequest(dependencies, forceRefresh);
                return oldEntry;
              } else {
              // No token or token expired.
              if (!navigator.onLine) {
                throw ERROR_FACTORY.create("app-offline"
                /* APP_OFFLINE */
                );
              }

              var inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);
              tokenPromise = fetchAuthTokenFromServer(dependencies, inProgressEntry);
              return inProgressEntry;
            }
          })];

        case 1:
          entry = _b.sent();
          if (!tokenPromise) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , tokenPromise];

        case 2:
          _a = _b.sent();
          return [3
          /*break*/
          , 4];

        case 3:
          _a = entry.authToken;
          _b.label = 4;

        case 4:
          authToken = _a;
          return [2
          /*return*/
          , authToken];
      }
    });
  });
}
/**
 * Call only if FID is registered and Auth Token request is in progress.
 *
 * Waits until the current pending request finishes. If the request times out,
 * tries once in this thread as well.
 */


function waitUntilAuthTokenRequest(dependencies, forceRefresh) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var entry, authToken;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , updateAuthTokenRequest(dependencies.appConfig)];

        case 1:
          entry = _a.sent();
          _a.label = 2;

        case 2:
          if (!(entry.authToken.requestStatus === 1
          /* IN_PROGRESS */
          )) return [3
            /*break*/
            , 5]; // generateAuthToken still in progress.

          return [4
          /*yield*/
          , sleep(100)];

        case 3:
          // generateAuthToken still in progress.
          _a.sent();

          return [4
          /*yield*/
          , updateAuthTokenRequest(dependencies.appConfig)];

        case 4:
          entry = _a.sent();
          return [3
          /*break*/
          , 2];

        case 5:
          authToken = entry.authToken;

          if (authToken.requestStatus === 0
          /* NOT_STARTED */
          ) {
              // The request timed out or failed in a different call. Try again.
              return [2
              /*return*/
              , refreshAuthToken(dependencies, forceRefresh)];
            } else {
            return [2
            /*return*/
            , authToken];
          }

      }
    });
  });
}
/**
 * Called only if there is a GenerateAuthToken request in progress.
 *
 * Updates the InstallationEntry in the DB based on the status of the
 * GenerateAuthToken request.
 *
 * Returns the updated InstallationEntry.
 */


function updateAuthTokenRequest(appConfig) {
  return update(appConfig, function (oldEntry) {
    if (!isEntryRegistered(oldEntry)) {
      throw ERROR_FACTORY.create("not-registered"
      /* NOT_REGISTERED */
      );
    }

    var oldAuthToken = oldEntry.authToken;

    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {
      return (0, _tslib.__assign)((0, _tslib.__assign)({}, oldEntry), {
        authToken: {
          requestStatus: 0
          /* NOT_STARTED */

        }
      });
    }

    return oldEntry;
  });
}

function fetchAuthTokenFromServer(dependencies, installationEntry) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var authToken, updatedInstallationEntry, e_1, updatedInstallationEntry;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          _a.trys.push([0, 3,, 8]);

          return [4
          /*yield*/
          , generateAuthTokenRequest(dependencies, installationEntry)];

        case 1:
          authToken = _a.sent();
          updatedInstallationEntry = (0, _tslib.__assign)((0, _tslib.__assign)({}, installationEntry), {
            authToken: authToken
          });
          return [4
          /*yield*/
          , set(dependencies.appConfig, updatedInstallationEntry)];

        case 2:
          _a.sent();

          return [2
          /*return*/
          , authToken];

        case 3:
          e_1 = _a.sent();
          if (!(isServerError(e_1) && (e_1.serverCode === 401 || e_1.serverCode === 404))) return [3
          /*break*/
          , 5]; // Server returned a "FID not found" or a "Invalid authentication" error.
          // Generate a new ID next time.

          return [4
          /*yield*/
          , remove(dependencies.appConfig)];

        case 4:
          // Server returned a "FID not found" or a "Invalid authentication" error.
          // Generate a new ID next time.
          _a.sent();

          return [3
          /*break*/
          , 7];

        case 5:
          updatedInstallationEntry = (0, _tslib.__assign)((0, _tslib.__assign)({}, installationEntry), {
            authToken: {
              requestStatus: 0
              /* NOT_STARTED */

            }
          });
          return [4
          /*yield*/
          , set(dependencies.appConfig, updatedInstallationEntry)];

        case 6:
          _a.sent();

          _a.label = 7;

        case 7:
          throw e_1;

        case 8:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function isEntryRegistered(installationEntry) {
  return installationEntry !== undefined && installationEntry.registrationStatus === 2
  /* COMPLETED */
  ;
}

function isAuthTokenValid(authToken) {
  return authToken.requestStatus === 2
  /* COMPLETED */
  && !isAuthTokenExpired(authToken);
}

function isAuthTokenExpired(authToken) {
  var now = Date.now();
  return now < authToken.creationTime || authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER;
}
/** Returns an updated InstallationEntry with an InProgressAuthToken. */


function makeAuthTokenRequestInProgressEntry(oldEntry) {
  var inProgressAuthToken = {
    requestStatus: 1
    /* IN_PROGRESS */
    ,
    requestTime: Date.now()
  };
  return (0, _tslib.__assign)((0, _tslib.__assign)({}, oldEntry), {
    authToken: inProgressAuthToken
  });
}

function hasAuthTokenRequestTimedOut(authToken) {
  return authToken.requestStatus === 1
  /* IN_PROGRESS */
  && authToken.requestTime + PENDING_TIMEOUT_MS < Date.now();
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function getId(dependencies) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var _a, installationEntry, registrationPromise;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4
          /*yield*/
          , getInstallationEntry(dependencies.appConfig)];

        case 1:
          _a = _b.sent(), installationEntry = _a.installationEntry, registrationPromise = _a.registrationPromise;

          if (registrationPromise) {
            registrationPromise.catch(console.error);
          } else {
            // If the installation is already registered, update the authentication
            // token if needed.
            refreshAuthToken(dependencies).catch(console.error);
          }

          return [2
          /*return*/
          , installationEntry.fid];
      }
    });
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function getToken(dependencies, forceRefresh) {
  if (forceRefresh === void 0) {
    forceRefresh = false;
  }

  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var authToken;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , completeInstallationRegistration(dependencies.appConfig)];

        case 1:
          _a.sent();

          return [4
          /*yield*/
          , refreshAuthToken(dependencies, forceRefresh)];

        case 2:
          authToken = _a.sent();
          return [2
          /*return*/
          , authToken.token];
      }
    });
  });
}

function completeInstallationRegistration(appConfig) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var registrationPromise;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          return [4
          /*yield*/
          , getInstallationEntry(appConfig)];

        case 1:
          registrationPromise = _a.sent().registrationPromise;
          if (!registrationPromise) return [3
          /*break*/
          , 3]; // A createInstallation request is in progress. Wait until it finishes.

          return [4
          /*yield*/
          , registrationPromise];

        case 2:
          // A createInstallation request is in progress. Wait until it finishes.
          _a.sent();

          _a.label = 3;

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function deleteInstallationRequest(appConfig, installationEntry) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var endpoint, headers, request, response;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          endpoint = getDeleteEndpoint(appConfig, installationEntry);
          headers = getHeadersWithAuth(appConfig, installationEntry);
          request = {
            method: 'DELETE',
            headers: headers
          };
          return [4
          /*yield*/
          , retryIfServerError(function () {
            return fetch(endpoint, request);
          })];

        case 1:
          response = _a.sent();
          if (!!response.ok) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , getErrorFromResponse('Delete Installation', response)];

        case 2:
          throw _a.sent();

        case 3:
          return [2
          /*return*/
          ];
      }
    });
  });
}

function getDeleteEndpoint(appConfig, _a) {
  var fid = _a.fid;
  return getInstallationsEndpoint(appConfig) + "/" + fid;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function deleteInstallation(dependencies) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var appConfig, entry;
    return (0, _tslib.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          appConfig = dependencies.appConfig;
          return [4
          /*yield*/
          , update(appConfig, function (oldEntry) {
            if (oldEntry && oldEntry.registrationStatus === 0
            /* NOT_STARTED */
            ) {
                // Delete the unregistered entry without sending a deleteInstallation request.
                return undefined;
              }

            return oldEntry;
          })];

        case 1:
          entry = _a.sent();
          if (!entry) return [3
          /*break*/
          , 6];
          if (!(entry.registrationStatus === 1
          /* IN_PROGRESS */
          )) return [3
            /*break*/
            , 2]; // Can't delete while trying to register.

          throw ERROR_FACTORY.create("delete-pending-registration"
          /* DELETE_PENDING_REGISTRATION */
          );

        case 2:
          if (!(entry.registrationStatus === 2
          /* COMPLETED */
          )) return [3
            /*break*/
            , 6];
          if (!!navigator.onLine) return [3
          /*break*/
          , 3];
          throw ERROR_FACTORY.create("app-offline"
          /* APP_OFFLINE */
          );

        case 3:
          return [4
          /*yield*/
          , deleteInstallationRequest(appConfig, entry)];

        case 4:
          _a.sent();

          return [4
          /*yield*/
          , remove(appConfig)];

        case 5:
          _a.sent();

          _a.label = 6;

        case 6:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Sets a new callback that will get called when Installation ID changes.
 * Returns an unsubscribe function that will remove the callback when called.
 */


function onIdChange(_a, callback) {
  var appConfig = _a.appConfig;
  addCallback(appConfig, callback);
  return function () {
    removeCallback(appConfig, callback);
  };
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function extractAppConfig(app) {
  var e_1, _a;

  if (!app || !app.options) {
    throw getMissingValueError('App Configuration');
  }

  if (!app.name) {
    throw getMissingValueError('App Name');
  } // Required app config keys


  var configKeys = ['projectId', 'apiKey', 'appId'];

  try {
    for (var configKeys_1 = (0, _tslib.__values)(configKeys), configKeys_1_1 = configKeys_1.next(); !configKeys_1_1.done; configKeys_1_1 = configKeys_1.next()) {
      var keyName = configKeys_1_1.value;

      if (!app.options[keyName]) {
        throw getMissingValueError(keyName);
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (configKeys_1_1 && !configKeys_1_1.done && (_a = configKeys_1.return)) _a.call(configKeys_1);
    } finally {
      if (e_1) throw e_1.error;
    }
  }

  return {
    appName: app.name,
    projectId: app.options.projectId,
    apiKey: app.options.apiKey,
    appId: app.options.appId
  };
}

function getMissingValueError(valueName) {
  return ERROR_FACTORY.create("missing-app-config-values"
  /* MISSING_APP_CONFIG_VALUES */
  , {
    valueName: valueName
  });
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function registerInstallations(instance) {
  var installationsName = 'installations';
  instance.INTERNAL.registerComponent(new _component.Component(installationsName, function (container) {
    var app = container.getProvider('app').getImmediate(); // Throws if app isn't configured properly.

    var appConfig = extractAppConfig(app);
    var platformLoggerProvider = container.getProvider('platform-logger');
    var dependencies = {
      appConfig: appConfig,
      platformLoggerProvider: platformLoggerProvider
    };
    var installations = {
      app: app,
      getId: function () {
        return getId(dependencies);
      },
      getToken: function (forceRefresh) {
        return getToken(dependencies, forceRefresh);
      },
      delete: function () {
        return deleteInstallation(dependencies);
      },
      onIdChange: function (callback) {
        return onIdChange(dependencies, callback);
      }
    };
    return installations;
  }, "PUBLIC"
  /* PUBLIC */
  ));
  instance.registerVersion(name, version);
}

registerInstallations(_app.default);
},{"@firebase/app":"node_modules/@firebase/app/dist/index.cjs.js","@firebase/component":"node_modules/@firebase/component/dist/index.cjs.js","tslib":"node_modules/tslib/tslib.es6.js","@firebase/util":"node_modules/@firebase/util/dist/index.cjs.js","idb":"node_modules/idb/build/idb.js"}],"node_modules/@firebase/analytics/dist/index.esm.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.factory = factory;
exports.getGlobalVars = getGlobalVars;
exports.registerAnalytics = registerAnalytics;
exports.resetGlobalVars = resetGlobalVars;
exports.settings = settings;

var _app = _interopRequireDefault(require("@firebase/app"));

require("@firebase/installations");

var _tslib = require("tslib");

var _logger = require("@firebase/logger");

var _util = require("@firebase/util");

var _component = require("@firebase/component");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ANALYTICS_ID_FIELD = 'measurementId'; // Key to attach FID to in gtag params.

var GA_FID_KEY = 'firebase_id';
var ORIGIN_KEY = 'origin';
var GTAG_URL = 'https://www.googletagmanager.com/gtag/js';
var GtagCommand;

(function (GtagCommand) {
  GtagCommand["EVENT"] = "event";
  GtagCommand["SET"] = "set";
  GtagCommand["CONFIG"] = "config";
})(GtagCommand || (GtagCommand = {}));
/*
 * Officially recommended event names for gtag.js
 * Any other string is also allowed.
 */


var EventName;

(function (EventName) {
  EventName["ADD_SHIPPING_INFO"] = "add_shipping_info";
  EventName["ADD_PAYMENT_INFO"] = "add_payment_info";
  EventName["ADD_TO_CART"] = "add_to_cart";
  EventName["ADD_TO_WISHLIST"] = "add_to_wishlist";
  EventName["BEGIN_CHECKOUT"] = "begin_checkout";
  /** @deprecated */

  EventName["CHECKOUT_PROGRESS"] = "checkout_progress";
  EventName["EXCEPTION"] = "exception";
  EventName["GENERATE_LEAD"] = "generate_lead";
  EventName["LOGIN"] = "login";
  EventName["PAGE_VIEW"] = "page_view";
  EventName["PURCHASE"] = "purchase";
  EventName["REFUND"] = "refund";
  EventName["REMOVE_FROM_CART"] = "remove_from_cart";
  EventName["SCREEN_VIEW"] = "screen_view";
  EventName["SEARCH"] = "search";
  EventName["SELECT_CONTENT"] = "select_content";
  EventName["SELECT_ITEM"] = "select_item";
  EventName["SELECT_PROMOTION"] = "select_promotion";
  /** @deprecated */

  EventName["SET_CHECKOUT_OPTION"] = "set_checkout_option";
  EventName["SHARE"] = "share";
  EventName["SIGN_UP"] = "sign_up";
  EventName["TIMING_COMPLETE"] = "timing_complete";
  EventName["VIEW_CART"] = "view_cart";
  EventName["VIEW_ITEM"] = "view_item";
  EventName["VIEW_ITEM_LIST"] = "view_item_list";
  EventName["VIEW_PROMOTION"] = "view_promotion";
  EventName["VIEW_SEARCH_RESULTS"] = "view_search_results";
})(EventName || (EventName = {}));
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Logs an analytics event through the Firebase SDK.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param eventName Google Analytics event name, choose from standard list or use a custom string.
 * @param eventParams Analytics event parameters.
 */


function logEvent(gtagFunction, analyticsId, eventName, eventParams, options) {
  var params = eventParams || {};

  if (!options || !options.global) {
    params = (0, _tslib.__assign)((0, _tslib.__assign)({}, eventParams), {
      'send_to': analyticsId
    });
  } // Workaround for http://b/141370449 - third argument cannot be undefined.


  gtagFunction(GtagCommand.EVENT, eventName, params || {});
} // TODO: Brad is going to add `screen_name` to GA Gold config parameter schema

/**
 * Set screen_name parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param screenName Screen name string to set.
 */


function setCurrentScreen(gtagFunction, analyticsId, screenName, options) {
  if (options && options.global) {
    gtagFunction(GtagCommand.SET, {
      'screen_name': screenName
    });
  } else {
    gtagFunction(GtagCommand.CONFIG, analyticsId, {
      update: true,
      'screen_name': screenName
    });
  }
}
/**
 * Set user_id parameter for this Google Analytics ID.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param id User ID string to set
 */


function setUserId(gtagFunction, analyticsId, id, options) {
  if (options && options.global) {
    gtagFunction(GtagCommand.SET, {
      'user_id': id
    });
  } else {
    gtagFunction(GtagCommand.CONFIG, analyticsId, {
      update: true,
      'user_id': id
    });
  }
}
/**
 * Set all other user properties other than user_id and screen_name.
 *
 * @param gtagFunction Wrapped gtag function that waits for fid to be set before sending an event
 * @param properties Map of user properties to set
 */


function setUserProperties(gtagFunction, analyticsId, properties, options) {
  if (options && options.global) {
    var flatProperties = {};

    for (var _i = 0, _a = Object.keys(properties); _i < _a.length; _i++) {
      var key = _a[_i]; // use dot notation for merge behavior in gtag.js

      flatProperties["user_properties." + key] = properties[key];
    }

    gtagFunction(GtagCommand.SET, flatProperties);
  } else {
    gtagFunction(GtagCommand.CONFIG, analyticsId, {
      update: true,
      'user_properties': properties
    });
  }
}
/**
 * Set whether collection is enabled for this ID.
 *
 * @param enabled If true, collection is enabled for this ID.
 */


function setAnalyticsCollectionEnabled(analyticsId, enabled) {
  window["ga-disable-" + analyticsId] = !enabled;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var logger = new _logger.Logger('@firebase/analytics');
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Initialize the analytics instance in gtag.js by calling config command with fid.
 *
 * NOTE: We combine analytics initialization and setting fid together because we want fid to be
 * part of the `page_view` event that's sent during the initialization
 * @param app Firebase app
 * @param gtagCore The gtag function that's not wrapped.
 */

function initializeGAId(app, installations, gtagCore) {
  return (0, _tslib.__awaiter)(this, void 0, void 0, function () {
    var fid;

    var _a;

    return (0, _tslib.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4
          /*yield*/
          , installations.getId()];

        case 1:
          fid = _b.sent(); // This command initializes gtag.js and only needs to be called once for the entire web app,
          // but since it is idempotent, we can call it multiple times.
          // We keep it together with other initialization logic for better code structure.
          // eslint-disable-next-line @typescript-eslint/no-explicit-any

          gtagCore('js', new Date()); // It should be the first config command called on this GA-ID
          // Initialize this GA-ID and set FID on it using the gtag config API.

          gtagCore(GtagCommand.CONFIG, app.options[ANALYTICS_ID_FIELD], (_a = {}, _a[GA_FID_KEY] = fid, // guard against developers accidentally setting properties with prefix `firebase_`
          _a[ORIGIN_KEY] = 'firebase', _a.update = true, _a));
          return [2
          /*return*/
          ];
      }
    });
  });
}

function insertScriptTag(dataLayerName) {
  var script = document.createElement('script'); // We are not providing an analyticsId in the URL because it would trigger a `page_view`
  // without fid. We will initialize ga-id using gtag (config) command together with fid.

  script.src = GTAG_URL + "?l=" + dataLayerName;
  script.async = true;
  document.head.appendChild(script);
}
/** Get reference to, or create, global datalayer.
 * @param dataLayerName Name of datalayer (most often the default, "_dataLayer")
 */


function getOrCreateDataLayer(dataLayerName) {
  // Check for existing dataLayer and create if needed.
  var dataLayer = [];

  if (Array.isArray(window[dataLayerName])) {
    dataLayer = window[dataLayerName];
  } else {
    window[dataLayerName] = dataLayer;
  }

  return dataLayer;
}
/**
 * Wraps a standard gtag function with extra code to wait for completion of
 * relevant initialization promises before sending requests.
 *
 * @param gtagCore Basic gtag function that just appends to dataLayer
 * @param initializedIdPromisesMap Map of gaIds to their initialization promises
 */


function wrapGtag(gtagCore, initializedIdPromisesMap) {
  return function (command, idOrNameOrParams, gtagParams) {
    // If event, check that relevant initialization promises have completed.
    if (command === GtagCommand.EVENT) {
      var initializationPromisesToWaitFor = []; // If there's a 'send_to' param, check if any ID specified matches
      // a FID we have begun a fetch on.

      if (gtagParams && gtagParams['send_to']) {
        var gaSendToList = gtagParams['send_to']; // Make it an array if is isn't, so it can be dealt with the same way.

        if (!Array.isArray(gaSendToList)) {
          gaSendToList = [gaSendToList];
        }

        for (var _i = 0, gaSendToList_1 = gaSendToList; _i < gaSendToList_1.length; _i++) {
          var sendToId = gaSendToList_1[_i];
          var initializationPromise = initializedIdPromisesMap[sendToId]; // Groups will not be in the map.

          if (initializationPromise) {
            initializationPromisesToWaitFor.push(initializationPromise);
          } else {
            // There is an item in 'send_to' that is not associated
            // directly with an FID, possibly a group.  Empty this array
            // and let it get populated below.
            initializationPromisesToWaitFor = [];
            break;
          }
        }
      } // This will be unpopulated if there was no 'send_to' field , or
      // if not all entries in the 'send_to' field could be mapped to
      // a FID. In these cases, wait on all pending initialization promises.


      if (initializationPromisesToWaitFor.length === 0) {
        for (var _a = 0, _b = Object.values(initializedIdPromisesMap); _a < _b.length; _a++) {
          var idPromise = _b[_a];
          initializationPromisesToWaitFor.push(idPromise);
        }
      } // Run core gtag function with args after all relevant initialization
      // promises have been resolved.


      Promise.all(initializationPromisesToWaitFor) // Workaround for http://b/141370449 - third argument cannot be undefined.
      .then(function () {
        return gtagCore(GtagCommand.EVENT, idOrNameOrParams, gtagParams || {});
      }).catch(function (e) {
        return logger.error(e);
      });
    } else if (command === GtagCommand.CONFIG) {
      var initializationPromiseToWait = initializedIdPromisesMap[idOrNameOrParams] || Promise.resolve();
      initializationPromiseToWait.then(function () {
        gtagCore(GtagCommand.CONFIG, idOrNameOrParams, gtagParams);
      }).catch(function (e) {
        return logger.error(e);
      });
    } else {
      // SET command.
      // Splitting calls for CONFIG and SET to make it clear which signature
      // Typescript is checking.
      gtagCore(GtagCommand.SET, idOrNameOrParams);
    }
  };
}
/**
 * Creates global gtag function or wraps existing one if found.
 * This wrapped function attaches Firebase instance ID (FID) to gtag 'config' and
 * 'event' calls that belong to the GAID associated with this Firebase instance.
 *
 * @param initializedIdPromisesMap Map of gaId to initialization promises.
 * @param dataLayerName Name of global GA datalayer array.
 * @param gtagFunctionName Name of global gtag function ("gtag" if not user-specified)
 */


function wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagFunctionName) {
  // Create a basic core gtag function
  var gtagCore = function () {
    var _args = [];

    for (var _i = 0; _i < arguments.length; _i++) {
      _args[_i] = arguments[_i];
    } // Must push IArguments object, not an array.


    window[dataLayerName].push(arguments);
  }; // Replace it with existing one if found


  if (window[gtagFunctionName] && typeof window[gtagFunctionName] === 'function') {
    // @ts-ignore
    gtagCore = window[gtagFunctionName];
  }

  window[gtagFunctionName] = wrapGtag(gtagCore, initializedIdPromisesMap);
  return {
    gtagCore: gtagCore,
    wrappedGtag: window[gtagFunctionName]
  };
}
/**
 * Returns first script tag in DOM matching our gtag url pattern.
 */


function findGtagScriptOnPage() {
  var scriptTags = window.document.getElementsByTagName('script');

  for (var _i = 0, _a = Object.values(scriptTags); _i < _a.length; _i++) {
    var tag = _a[_i];

    if (tag.src && tag.src.includes(GTAG_URL)) {
      return tag;
    }
  }

  return null;
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var _a;

var ERRORS = (_a = {}, _a["no-ga-id"
/* NO_GA_ID */
] = "\"" + ANALYTICS_ID_FIELD + "\" field is empty in " + 'Firebase config. Firebase Analytics ' + 'requires this field to contain a valid measurement ID.', _a["already-exists"
/* ALREADY_EXISTS */
] = 'A Firebase Analytics instance with the measurement ID ${id} ' + ' already exists. ' + 'Only one Firebase Analytics instance can be created for each measurement ID.', _a["already-initialized"
/* ALREADY_INITIALIZED */
] = 'Firebase Analytics has already been initialized.' + 'settings() must be called before initializing any Analytics instance' + 'or it will have no effect.', _a["interop-component-reg-failed"
/* INTEROP_COMPONENT_REG_FAILED */
] = 'Firebase Analytics Interop Component failed to instantiate', _a);
var ERROR_FACTORY = new _util.ErrorFactory('analytics', 'Analytics', ERRORS);
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Maps gaId to FID fetch promises.
 */

var initializedIdPromisesMap = {};
/**
 * Name for window global data layer array used by GA: defaults to 'dataLayer'.
 */

var dataLayerName = 'dataLayer';
/**
 * Name for window global gtag function used by GA: defaults to 'gtag'.
 */

var gtagName = 'gtag';
/**
 * Reproduction of standard gtag function or reference to existing
 * gtag function on window object.
 */

var gtagCoreFunction;
/**
 * Wrapper around gtag function that ensures FID is sent with all
 * relevant event and config calls.
 */

var wrappedGtagFunction;
/**
 * Flag to ensure page initialization steps (creation or wrapping of
 * dataLayer and gtag script) are only run once per page load.
 */

var globalInitDone = false;
/**
 * For testing
 */

function resetGlobalVars(newGlobalInitDone, newGaInitializedPromise) {
  if (newGlobalInitDone === void 0) {
    newGlobalInitDone = false;
  }

  if (newGaInitializedPromise === void 0) {
    newGaInitializedPromise = {};
  }

  globalInitDone = newGlobalInitDone;
  initializedIdPromisesMap = newGaInitializedPromise;
  dataLayerName = 'dataLayer';
  gtagName = 'gtag';
}
/**
 * For testing
 */


function getGlobalVars() {
  return {
    initializedIdPromisesMap: initializedIdPromisesMap
  };
}
/**
 * This must be run before calling firebase.analytics() or it won't
 * have any effect.
 * @param options Custom gtag and dataLayer names.
 */


function settings(options) {
  if (globalInitDone) {
    throw ERROR_FACTORY.create("already-initialized"
    /* ALREADY_INITIALIZED */
    );
  }

  if (options.dataLayerName) {
    dataLayerName = options.dataLayerName;
  }

  if (options.gtagName) {
    gtagName = options.gtagName;
  }
}

function factory(app, installations) {
  var analyticsId = app.options[ANALYTICS_ID_FIELD];

  if (!analyticsId) {
    throw ERROR_FACTORY.create("no-ga-id"
    /* NO_GA_ID */
    );
  }

  if (initializedIdPromisesMap[analyticsId] != null) {
    throw ERROR_FACTORY.create("already-exists"
    /* ALREADY_EXISTS */
    , {
      id: analyticsId
    });
  }

  if (!globalInitDone) {
    // Steps here should only be done once per page: creation or wrapping
    // of dataLayer and global gtag function.
    // Detect if user has already put the gtag <script> tag on this page.
    if (!findGtagScriptOnPage()) {
      insertScriptTag(dataLayerName);
    }

    getOrCreateDataLayer(dataLayerName);

    var _a = wrapOrCreateGtag(initializedIdPromisesMap, dataLayerName, gtagName),
        wrappedGtag = _a.wrappedGtag,
        gtagCore = _a.gtagCore;

    wrappedGtagFunction = wrappedGtag;
    gtagCoreFunction = gtagCore;
    globalInitDone = true;
  } // Async but non-blocking.


  initializedIdPromisesMap[analyticsId] = initializeGAId(app, installations, gtagCoreFunction);
  var analyticsInstance = {
    app: app,
    logEvent: function (eventName, eventParams, options) {
      return logEvent(wrappedGtagFunction, analyticsId, eventName, eventParams, options);
    },
    setCurrentScreen: function (screenName, options) {
      return setCurrentScreen(wrappedGtagFunction, analyticsId, screenName, options);
    },
    setUserId: function (id, options) {
      return setUserId(wrappedGtagFunction, analyticsId, id, options);
    },
    setUserProperties: function (properties, options) {
      return setUserProperties(wrappedGtagFunction, analyticsId, properties, options);
    },
    setAnalyticsCollectionEnabled: function (enabled) {
      return setAnalyticsCollectionEnabled(analyticsId, enabled);
    }
  };
  return analyticsInstance;
}

var name = "@firebase/analytics";
var version = "0.3.8";
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Type constant for Firebase Analytics.
 */

var ANALYTICS_TYPE = 'analytics';

function registerAnalytics(instance) {
  instance.INTERNAL.registerComponent(new _component.Component(ANALYTICS_TYPE, function (container) {
    // getImmediate for FirebaseApp will always succeed
    var app = container.getProvider('app').getImmediate();
    var installations = container.getProvider('installations').getImmediate();
    return factory(app, installations);
  }, "PUBLIC"
  /* PUBLIC */
  ).setServiceProps({
    settings: settings,
    EventName: EventName
  }));
  instance.INTERNAL.registerComponent(new _component.Component('analytics-internal', internalFactory, "PRIVATE"
  /* PRIVATE */
  ));
  instance.registerVersion(name, version);

  function internalFactory(container) {
    try {
      var analytics = container.getProvider(ANALYTICS_TYPE).getImmediate();
      return {
        logEvent: analytics.logEvent
      };
    } catch (e) {
      throw ERROR_FACTORY.create("interop-component-reg-failed"
      /* INTEROP_COMPONENT_REG_FAILED */
      , {
        reason: e
      });
    }
  }
}

registerAnalytics(_app.default);
},{"@firebase/app":"node_modules/@firebase/app/dist/index.cjs.js","@firebase/installations":"node_modules/@firebase/installations/dist/index.esm.js","tslib":"node_modules/tslib/tslib.es6.js","@firebase/logger":"node_modules/@firebase/logger/dist/index.esm.js","@firebase/util":"node_modules/@firebase/util/dist/index.cjs.js","@firebase/component":"node_modules/@firebase/component/dist/index.cjs.js"}],"node_modules/firebase/analytics/dist/index.esm.js":[function(require,module,exports) {
"use strict";

require("@firebase/analytics");
},{"@firebase/analytics":"node_modules/@firebase/analytics/dist/index.esm.js"}],"node_modules/@firebase/webchannel-wrapper/dist/index.esm.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createWebChannelTransport = exports.XhrIo = exports.WebChannel = exports.EventType = exports.ErrorCode = exports.default = void 0;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
function __values(o) {
  var s = typeof Symbol === "function" && Symbol.iterator,
      m = s && o[s],
      i = 0;
  if (m) return m.call(o);
  if (o && typeof o.length === "number") return {
    next: function () {
      if (o && i >= o.length) o = void 0;
      return {
        value: o && o[i++],
        done: !o
      };
    }
  };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};
var g,
    goog = goog || {},
    k = commonjsGlobal || self;

function aa() {}

function ba(a) {
  var b = typeof a;
  if ("object" == b) {
    if (a) {
      if (a instanceof Array) return "array";
      if (a instanceof Object) return b;
      var c = Object.prototype.toString.call(a);
      if ("[object Window]" == c) return "object";
      if ("[object Array]" == c || "number" == typeof a.length && "undefined" != typeof a.splice && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("splice")) return "array";
      if ("[object Function]" == c || "undefined" != typeof a.call && "undefined" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable("call")) return "function";
    } else return "null";
  } else if ("function" == b && "undefined" == typeof a.call) return "object";
  return b;
}

function da(a) {
  var b = ba(a);
  return "array" == b || "object" == b && "number" == typeof a.length;
}

function m(a) {
  var b = typeof a;
  return "object" == b && null != a || "function" == b;
}

function ea(a) {
  return Object.prototype.hasOwnProperty.call(a, fa) && a[fa] || (a[fa] = ++ha);
}

var fa = "closure_uid_" + (1E9 * Math.random() >>> 0),
    ha = 0;

function ia(a, b, c) {
  return a.call.apply(a.bind, arguments);
}

function ja(a, b, c) {
  if (!a) throw Error();

  if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function () {
      var e = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(e, d);
      return a.apply(b, e);
    };
  }

  return function () {
    return a.apply(b, arguments);
  };
}

function n(a, b, c) {
  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? n = ia : n = ja;
  return n.apply(null, arguments);
}

function ka(a, b) {
  var c = Array.prototype.slice.call(arguments, 1);
  return function () {
    var d = c.slice();
    d.push.apply(d, arguments);
    return a.apply(this, d);
  };
}

var q = Date.now || function () {
  return +new Date();
};

function r(a, b) {
  function c() {}

  c.prototype = b.prototype;
  a.M = b.prototype;
  a.prototype = new c();
  a.prototype.constructor = a;
}

function t() {
  this.j = this.j;
  this.i = this.i;
}

var la = 0;
t.prototype.j = !1;

t.prototype.da = function () {
  if (!this.j && (this.j = !0, this.C(), 0 != la)) {
    var a = ea(this);
  }
};

t.prototype.C = function () {
  if (this.i) for (; this.i.length;) this.i.shift()();
};

var na = Array.prototype.indexOf ? function (a, b) {
  return Array.prototype.indexOf.call(a, b, void 0);
} : function (a, b) {
  if ("string" === typeof a) return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0);

  for (var c = 0; c < a.length; c++) if (c in a && a[c] === b) return c;

  return -1;
},
    oa = Array.prototype.forEach ? function (a, b, c) {
  Array.prototype.forEach.call(a, b, c);
} : function (a, b, c) {
  for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++) f in e && b.call(c, e[f], f, a);
};

function pa(a) {
  a: {
    var b = qa;

    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++) if (e in d && b.call(void 0, d[e], e, a)) {
      b = e;
      break a;
    }

    b = -1;
  }

  return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b];
}

function ra(a) {
  return Array.prototype.concat.apply([], arguments);
}

function sa(a) {
  var b = a.length;

  if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++) c[d] = a[d];

    return c;
  }

  return [];
}

function wa(a) {
  return /^[\s\xa0]*$/.test(a);
}

var xa = String.prototype.trim ? function (a) {
  return a.trim();
} : function (a) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1];
};

function u(a, b) {
  return -1 != a.indexOf(b);
}

function ya(a, b) {
  return a < b ? -1 : a > b ? 1 : 0;
}

var v;

a: {
  var za = k.navigator;

  if (za) {
    var Aa = za.userAgent;

    if (Aa) {
      v = Aa;
      break a;
    }
  }

  v = "";
}

function Ba(a, b, c) {
  for (var d in a) b.call(c, a[d], d, a);
}

function Ca(a) {
  var b = {};

  for (var c in a) b[c] = a[c];

  return b;
}

var Da = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

function Ea(a, b) {
  var c, d;

  for (var e = 1; e < arguments.length; e++) {
    d = arguments[e];

    for (c in d) a[c] = d[c];

    for (var f = 0; f < Da.length; f++) c = Da[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
  }
}

function Fa(a) {
  Fa[" "](a);
  return a;
}

Fa[" "] = aa;

function Ga(a, b) {
  var c = Ha;
  return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a);
}

var Ia = u(v, "Opera"),
    w = u(v, "Trident") || u(v, "MSIE"),
    Ja = u(v, "Edge"),
    Ka = Ja || w,
    La = u(v, "Gecko") && !(u(v.toLowerCase(), "webkit") && !u(v, "Edge")) && !(u(v, "Trident") || u(v, "MSIE")) && !u(v, "Edge"),
    Ma = u(v.toLowerCase(), "webkit") && !u(v, "Edge");

function Na() {
  var a = k.document;
  return a ? a.documentMode : void 0;
}

var Oa;

a: {
  var Pa = "",
      Qa = function () {
    var a = v;
    if (La) return /rv:([^\);]+)(\)|;)/.exec(a);
    if (Ja) return /Edge\/([\d\.]+)/.exec(a);
    if (w) return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a);
    if (Ma) return /WebKit\/(\S+)/.exec(a);
    if (Ia) return /(?:Version)[ \/]?(\S+)/.exec(a);
  }();

  Qa && (Pa = Qa ? Qa[1] : "");

  if (w) {
    var Ra = Na();

    if (null != Ra && Ra > parseFloat(Pa)) {
      Oa = String(Ra);
      break a;
    }
  }

  Oa = Pa;
}

var Ha = {};

function Sa(a) {
  return Ga(a, function () {
    {
      var b = 0;
      var e = xa(String(Oa)).split("."),
          f = xa(String(a)).split("."),
          h = Math.max(e.length, f.length);

      for (var l = 0; 0 == b && l < h; l++) {
        var c = e[l] || "",
            d = f[l] || "";

        do {
          c = /(\d*)(\D*)(.*)/.exec(c) || ["", "", "", ""];
          d = /(\d*)(\D*)(.*)/.exec(d) || ["", "", "", ""];
          if (0 == c[0].length && 0 == d[0].length) break;
          b = ya(0 == c[1].length ? 0 : parseInt(c[1], 10), 0 == d[1].length ? 0 : parseInt(d[1], 10)) || ya(0 == c[2].length, 0 == d[2].length) || ya(c[2], d[2]);
          c = c[3];
          d = d[3];
        } while (0 == b);
      }
    }
    return 0 <= b;
  });
}

var Ta;

if (k.document && w) {
  var Ua = Na();
  Ta = Ua ? Ua : parseInt(Oa, 10) || void 0;
} else Ta = void 0;

var Va = Ta;

var Wa = !w || 9 <= Number(Va),
    Xa = w && !Sa("9"),
    Ya = function () {
  if (!k.addEventListener || !Object.defineProperty) return !1;
  var a = !1,
      b = Object.defineProperty({}, "passive", {
    get: function () {
      a = !0;
    }
  });

  try {
    k.addEventListener("test", aa, b), k.removeEventListener("test", aa, b);
  } catch (c) {}

  return a;
}();

function x(a, b) {
  this.type = a;
  this.a = this.target = b;
  this.defaultPrevented = !1;
}

x.prototype.b = function () {
  this.defaultPrevented = !0;
};

function y(a, b) {
  x.call(this, a ? a.type : "");
  this.relatedTarget = this.a = this.target = null;
  this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
  this.key = "";
  this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
  this.pointerId = 0;
  this.pointerType = "";
  this.c = null;

  if (a) {
    var c = this.type = a.type,
        d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
    this.target = a.target || a.srcElement;
    this.a = b;

    if (b = a.relatedTarget) {
      if (La) {
        a: {
          try {
            Fa(b.nodeName);
            var e = !0;
            break a;
          } catch (f) {}

          e = !1;
        }

        e || (b = null);
      }
    } else "mouseover" == c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);

    this.relatedTarget = b;
    d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
    this.button = a.button;
    this.key = a.key || "";
    this.ctrlKey = a.ctrlKey;
    this.altKey = a.altKey;
    this.shiftKey = a.shiftKey;
    this.metaKey = a.metaKey;
    this.pointerId = a.pointerId || 0;
    this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Za[a.pointerType] || "";
    this.c = a;
    a.defaultPrevented && this.b();
  }
}

r(y, x);
var Za = {
  2: "touch",
  3: "pen",
  4: "mouse"
};

y.prototype.b = function () {
  y.M.b.call(this);
  var a = this.c;
  if (a.preventDefault) a.preventDefault();else if (a.returnValue = !1, Xa) try {
    if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode) a.keyCode = -1;
  } catch (b) {}
};

var A = "closure_listenable_" + (1E6 * Math.random() | 0),
    $a = 0;

function ab(a, b, c, d, e) {
  this.listener = a;
  this.proxy = null;
  this.src = b;
  this.type = c;
  this.capture = !!d;
  this.aa = e;
  this.key = ++$a;
  this.V = this.X = !1;
}

function bb(a) {
  a.V = !0;
  a.listener = null;
  a.proxy = null;
  a.src = null;
  a.aa = null;
}

function cb(a) {
  this.src = a;
  this.a = {};
  this.b = 0;
}

cb.prototype.add = function (a, b, c, d, e) {
  var f = a.toString();
  a = this.a[f];
  a || (a = this.a[f] = [], this.b++);
  var h = db(a, b, d, e);
  -1 < h ? (b = a[h], c || (b.X = !1)) : (b = new ab(b, this.src, f, !!d, e), b.X = c, a.push(b));
  return b;
};

function eb(a, b) {
  var c = b.type;

  if (c in a.a) {
    var d = a.a[c],
        e = na(d, b),
        f;
    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);
    f && (bb(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
  }
}

function db(a, b, c, d) {
  for (var e = 0; e < a.length; ++e) {
    var f = a[e];
    if (!f.V && f.listener == b && f.capture == !!c && f.aa == d) return e;
  }

  return -1;
}

var fb = "closure_lm_" + (1E6 * Math.random() | 0),
    gb = {};

function ib(a, b, c, d, e) {
  if (d && d.once) return jb(a, b, c, d, e);

  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) ib(a, b[f], c, d, e);

    return null;
  }

  c = kb(c);
  return a && a[A] ? a.ra(b, c, m(d) ? !!d.capture : !!d, e) : lb(a, b, c, !1, d, e);
}

function lb(a, b, c, d, e, f) {
  if (!b) throw Error("Invalid event type");
  var h = m(e) ? !!e.capture : !!e;
  if (h && !Wa) return null;
  var l = mb(a);
  l || (a[fb] = l = new cb(a));
  c = l.add(b, c, d, h, f);
  if (c.proxy) return c;
  d = nb();
  c.proxy = d;
  d.src = a;
  d.listener = c;
  if (a.addEventListener) Ya || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);else if (a.attachEvent) a.attachEvent(ob(b.toString()), d);else if (a.addListener && a.removeListener) a.addListener(d);else throw Error("addEventListener and attachEvent are unavailable.");
  return c;
}

function nb() {
  var a = pb,
      b = Wa ? function (c) {
    return a.call(b.src, b.listener, c);
  } : function (c) {
    c = a.call(b.src, b.listener, c);
    if (!c) return c;
  };
  return b;
}

function jb(a, b, c, d, e) {
  if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++) jb(a, b[f], c, d, e);

    return null;
  }

  c = kb(c);
  return a && a[A] ? a.sa(b, c, m(d) ? !!d.capture : !!d, e) : lb(a, b, c, !0, d, e);
}

function qb(a, b, c, d, e) {
  if (Array.isArray(b)) for (var f = 0; f < b.length; f++) qb(a, b[f], c, d, e);else (d = m(d) ? !!d.capture : !!d, c = kb(c), a && a[A]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = db(f, c, d, e), -1 < c && (bb(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = mb(a)) && (b = a.a[b.toString()], a = -1, b && (a = db(b, c, d, e)), (c = -1 < a ? b[a] : null) && rb(c));
}

function rb(a) {
  if ("number" !== typeof a && a && !a.V) {
    var b = a.src;
    if (b && b[A]) eb(b.c, a);else {
      var c = a.type,
          d = a.proxy;
      b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(ob(c), d) : b.addListener && b.removeListener && b.removeListener(d);
      (c = mb(b)) ? (eb(c, a), 0 == c.b && (c.src = null, b[fb] = null)) : bb(a);
    }
  }
}

function ob(a) {
  return a in gb ? gb[a] : gb[a] = "on" + a;
}

function sb(a, b) {
  var c = a.listener,
      d = a.aa || a.src;
  a.X && rb(a);
  return c.call(d, b);
}

function pb(a, b) {
  if (a.V) return !0;

  if (!Wa) {
    if (!b) a: {
      b = ["window", "event"];

      for (var c = k, d = 0; d < b.length; d++) if (c = c[b[d]], null == c) {
        b = null;
        break a;
      }

      b = c;
    }
    b = new y(b, this);
    return sb(a, b);
  }

  return sb(a, new y(b, this));
}

function mb(a) {
  a = a[fb];
  return a instanceof cb ? a : null;
}

var tb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);

function kb(a) {
  if ("function" == ba(a)) return a;
  a[tb] || (a[tb] = function (b) {
    return a.handleEvent(b);
  });
  return a[tb];
}

function B() {
  t.call(this);
  this.c = new cb(this);
  this.J = this;
  this.A = null;
}

r(B, t);
B.prototype[A] = !0;
g = B.prototype;

g.addEventListener = function (a, b, c, d) {
  ib(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  qb(this, a, b, c, d);
};

g.dispatchEvent = function (a) {
  var b,
      c = this.A;
  if (c) for (b = []; c; c = c.A) b.push(c);
  c = this.J;
  var d = a.type || a;
  if ("string" === typeof a) a = new x(a, c);else if (a instanceof x) a.target = a.target || c;else {
    var e = a;
    a = new x(d, c);
    Ea(a, e);
  }
  e = !0;
  if (b) for (var f = b.length - 1; 0 <= f; f--) {
    var h = a.a = b[f];
    e = ub(h, d, !0, a) && e;
  }
  h = a.a = c;
  e = ub(h, d, !0, a) && e;
  e = ub(h, d, !1, a) && e;
  if (b) for (f = 0; f < b.length; f++) h = a.a = b[f], e = ub(h, d, !1, a) && e;
  return e;
};

g.C = function () {
  B.M.C.call(this);

  if (this.c) {
    var a = this.c,
        c;

    for (c in a.a) {
      for (var d = a.a[c], e = 0; e < d.length; e++) bb(d[e]);

      delete a.a[c];
      a.b--;
    }
  }

  this.A = null;
};

g.ra = function (a, b, c, d) {
  return this.c.add(String(a), b, !1, c, d);
};

g.sa = function (a, b, c, d) {
  return this.c.add(String(a), b, !0, c, d);
};

function ub(a, b, c, d) {
  b = a.c.a[String(b)];
  if (!b) return !0;
  b = b.concat();

  for (var e = !0, f = 0; f < b.length; ++f) {
    var h = b[f];

    if (h && !h.V && h.capture == c) {
      var l = h.listener,
          p = h.aa || h.src;
      h.X && eb(a.c, h);
      e = !1 !== l.call(p, d) && e;
    }
  }

  return e && !d.defaultPrevented;
}

var vb = k.JSON.stringify;

function wb() {
  this.b = this.a = null;
}

var yb = new (
/** @class */
function () {
  function class_1(a, b, c) {
    this.f = c;
    this.c = a;
    this.g = b;
    this.b = 0;
    this.a = null;
  }

  class_1.prototype.get = function () {
    var a;
    0 < this.b ? (this.b--, a = this.a, this.a = a.next, a.next = null) : a = this.c();
    return a;
  };

  return class_1;
}())(function () {
  return new xb();
}, function (a) {
  a.reset();
}, 100);

wb.prototype.add = function (a, b) {
  var c = yb.get();
  c.set(a, b);
  this.b ? this.b.next = c : this.a = c;
  this.b = c;
};

function zb() {
  var a = Ab,
      b = null;
  a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null);
  return b;
}

function xb() {
  this.next = this.b = this.a = null;
}

xb.prototype.set = function (a, b) {
  this.a = a;
  this.b = b;
  this.next = null;
};

xb.prototype.reset = function () {
  this.next = this.b = this.a = null;
};

function Bb(a) {
  k.setTimeout(function () {
    throw a;
  }, 0);
}

function Cb(a, b) {
  Db || Eb();
  Fb || (Db(), Fb = !0);
  Ab.add(a, b);
}

var Db;

function Eb() {
  var a = k.Promise.resolve(void 0);

  Db = function () {
    a.then(Gb);
  };
}

var Fb = !1,
    Ab = new wb();

function Gb() {
  for (var a; a = zb();) {
    try {
      a.a.call(a.b);
    } catch (c) {
      Bb(c);
    }

    var b = yb;
    b.g(a);
    b.b < b.f && (b.b++, a.next = b.a, b.a = a);
  }

  Fb = !1;
}

function Hb(a, b) {
  B.call(this);
  this.b = a || 1;
  this.a = b || k;
  this.f = n(this.Ua, this);
  this.g = q();
}

r(Hb, B);
g = Hb.prototype;
g.Z = !1;
g.L = null;

g.Ua = function () {
  if (this.Z) {
    var a = q() - this.g;
    0 < a && a < .8 * this.b ? this.L = this.a.setTimeout(this.f, this.b - a) : (this.L && (this.a.clearTimeout(this.L), this.L = null), this.dispatchEvent("tick"), this.Z && (Ib(this), this.start()));
  }
};

g.start = function () {
  this.Z = !0;
  this.L || (this.L = this.a.setTimeout(this.f, this.b), this.g = q());
};

function Ib(a) {
  a.Z = !1;
  a.L && (a.a.clearTimeout(a.L), a.L = null);
}

g.C = function () {
  Hb.M.C.call(this);
  Ib(this);
  delete this.a;
};

function Jb(a, b, c) {
  if ("function" == ba(a)) c && (a = n(a, c));else if (a && "function" == typeof a.handleEvent) a = n(a.handleEvent, a);else throw Error("Invalid listener argument");
  return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0);
}

function Kb(a, b, c) {
  t.call(this);
  this.f = null != c ? n(a, c) : a;
  this.c = b;
  this.b = n(this.Pa, this);
  this.a = [];
}

r(Kb, t);
g = Kb.prototype;
g.ba = !1;
g.T = null;

g.Ia = function (a) {
  this.a = arguments;
  this.T ? this.ba = !0 : Lb(this);
};

g.C = function () {
  Kb.M.C.call(this);
  this.T && (k.clearTimeout(this.T), this.T = null, this.ba = !1, this.a = []);
};

g.Pa = function () {
  this.T = null;
  this.ba && (this.ba = !1, Lb(this));
};

function Lb(a) {
  a.T = Jb(a.b, a.c);
  a.f.apply(null, a.a);
}

function C(a) {
  t.call(this);
  this.b = a;
  this.a = {};
}

r(C, t);
var Mb = [];

function Nb(a, b, c, d) {
  Array.isArray(c) || (c && (Mb[0] = c.toString()), c = Mb);

  for (var e = 0; e < c.length; e++) {
    var f = ib(b, c[e], d || a.handleEvent, !1, a.b || a);
    if (!f) break;
    a.a[f.key] = f;
  }
}

function Ob(a) {
  Ba(a.a, function (b, c) {
    this.a.hasOwnProperty(c) && rb(b);
  }, a);
  a.a = {};
}

C.prototype.C = function () {
  C.M.C.call(this);
  Ob(this);
};

C.prototype.handleEvent = function () {
  throw Error("EventHandler.handleEvent not implemented");
};

function Pb() {}

var Qb = null;

function Rb() {
  return Qb = Qb || new B();
}

function Sb(a) {
  x.call(this, "serverreachability", a);
}

r(Sb, x);

function E(a) {
  var b = Rb();
  b.dispatchEvent(new Sb(b, a));
}

function Tb(a) {
  x.call(this, "statevent", a);
}

r(Tb, x);

function F(a) {
  var b = Rb();
  b.dispatchEvent(new Tb(b, a));
}

function Ub(a) {
  x.call(this, "timingevent", a);
}

r(Ub, x);

function Vb(a, b) {
  if ("function" != ba(a)) throw Error("Fn must not be null and must be a function");
  return k.setTimeout(function () {
    a();
  }, b);
}

var Wb = {
  NO_ERROR: 0,
  Va: 1,
  bb: 2,
  ab: 3,
  Ya: 4,
  $a: 5,
  cb: 6,
  za: 7,
  TIMEOUT: 8,
  gb: 9
};
var Xb = {
  Xa: "complete",
  kb: "success",
  Aa: "error",
  za: "abort",
  ib: "ready",
  jb: "readystatechange",
  TIMEOUT: "timeout",
  eb: "incrementaldata",
  hb: "progress",
  Za: "downloadprogress",
  lb: "uploadprogress"
};

function Yb() {}

Yb.prototype.a = null;

function Zb(a) {
  var b;
  (b = a.a) || (b = a.a = {});
  return b;
}

function $b() {}

var G = {
  OPEN: "a",
  Wa: "b",
  Aa: "c",
  fb: "d"
};

function ac() {
  x.call(this, "d");
}

r(ac, x);

function bc() {
  x.call(this, "c");
}

r(bc, x);
var cc;

function dc() {}

r(dc, Yb);
cc = new dc();

function H(a, b, c) {
  this.g = a;
  this.W = b;
  this.U = c || 1;
  this.G = new C(this);
  this.N = ec;
  a = Ka ? 125 : void 0;
  this.O = new Hb(a);
  this.m = null;
  this.b = !1;
  this.j = this.A = this.f = this.B = this.s = this.P = this.h = null;
  this.i = [];
  this.a = null;
  this.w = 0;
  this.c = this.v = null;
  this.H = -1;
  this.l = !1;
  this.J = 0;
  this.D = null;
  this.o = this.R = this.F = !1;
}

var ec = 45E3,
    fc = {},
    gc = {};
g = H.prototype;

g.setTimeout = function (a) {
  this.N = a;
};

function hc(a, b, c) {
  a.B = 1;
  a.f = ic(I(b));
  a.j = c;
  a.F = !0;
  jc(a, null);
}

function jc(a, b) {
  a.s = q();
  J(a);
  a.A = I(a.f);
  var c = a.A,
      d = a.U;
  Array.isArray(d) || (d = [String(d)]);
  kc(c.b, "t", d);
  a.w = 0;
  a.a = lc(a.g, a.g.w ? b : null);
  0 < a.J && (a.D = new Kb(n(a.ya, a, a.a), a.J));
  Nb(a.G, a.a, "readystatechange", a.Sa);
  b = a.m ? Ca(a.m) : {};
  a.j ? (a.v || (a.v = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.a.$(a.A, a.v, a.j, b)) : (a.v = "GET", a.a.$(a.A, a.v, null, b));
  E(1);
}

g.Sa = function (a) {
  a = a.target;
  var b = this.D;
  b && 3 == K(a) ? b.Ia() : this.ya(a);
};

g.ya = function (a) {
  try {
    if (a == this.a) a: {
      var b = K(this.a),
          c = this.a.qa(),
          d = this.a.S();

      if (!(3 > b || 3 == b && !Ka && !this.a.Y())) {
        this.l || 4 != b || 7 == c || (8 == c || 0 >= d ? E(3) : E(2));
        mc(this);
        var e = this.a.S();
        this.H = e;
        var f = this.a.Y();

        if (this.b = 200 == e) {
          if (this.R && !this.o) {
            b: {
              if (this.a) {
                var h,
                    l = this.a;

                if ((h = l.a ? l.a.getResponseHeader("X-HTTP-Initial-Response") : null) && !wa(h)) {
                  var p = h;
                  break b;
                }
              }

              p = null;
            }

            if (p) this.o = !0, nc(this, p);else {
              this.b = !1;
              this.c = 3;
              F(12);
              L(this);
              pc(this);
              break a;
            }
          }

          this.F ? (qc(this, b, f), Ka && this.b && 3 == b && (Nb(this.G, this.O, "tick", this.Ra), this.O.start())) : nc(this, f);
          4 == b && L(this);
          this.b && !this.l && (4 == b ? rc(this.g, this) : (this.b = !1, J(this)));
        } else 400 == e && 0 < f.indexOf("Unknown SID") ? (this.c = 3, F(12)) : (this.c = 0, F(13)), L(this), pc(this);
      }
    }
  } catch (D) {} finally {}
};

function qc(a, b, c) {
  for (var d = !0; !a.l && a.w < c.length;) {
    var e = tc(a, c);

    if (e == gc) {
      4 == b && (a.c = 4, F(14), d = !1);
      break;
    } else if (e == fc) {
      a.c = 4;
      F(15);
      d = !1;
      break;
    } else nc(a, e);
  }

  4 == b && 0 == c.length && (a.c = 1, F(16), d = !1);
  a.b = a.b && d;
  d || (L(a), pc(a));
}

g.Ra = function () {
  if (this.a) {
    var a = K(this.a),
        b = this.a.Y();
    this.w < b.length && (mc(this), qc(this, a, b), this.b && 4 != a && J(this));
  }
};

function tc(a, b) {
  var c = a.w,
      d = b.indexOf("\n", c);
  if (-1 == d) return gc;
  c = Number(b.substring(c, d));
  if (isNaN(c)) return fc;
  d += 1;
  if (d + c > b.length) return gc;
  b = b.substr(d, c);
  a.w = d + c;
  return b;
}

g.cancel = function () {
  this.l = !0;
  L(this);
};

function J(a) {
  a.P = q() + a.N;
  uc(a, a.N);
}

function uc(a, b) {
  if (null != a.h) throw Error("WatchDog timer not null");
  a.h = Vb(n(a.Qa, a), b);
}

function mc(a) {
  a.h && (k.clearTimeout(a.h), a.h = null);
}

g.Qa = function () {
  this.h = null;
  var a = q();
  0 <= a - this.P ? (2 != this.B && (E(3), F(17)), L(this), this.c = 2, pc(this)) : uc(this, this.P - a);
};

function pc(a) {
  0 == a.g.u || a.l || rc(a.g, a);
}

function L(a) {
  mc(a);
  var b = a.D;
  b && "function" == typeof b.da && b.da();
  a.D = null;
  Ib(a.O);
  Ob(a.G);
  a.a && (b = a.a, a.a = null, b.abort(), b.da());
}

function nc(a, b) {
  try {
    var c = a.g;
    if (0 != c.u && (c.a == a || vc(c.b, a))) if (c.A = a.H, !a.o && vc(c.b, a) && 3 == c.u) {
      try {
        var d = c.ja.a.parse(b);
      } catch (oc) {
        d = null;
      }

      if (Array.isArray(d) && 3 == d.length) {
        var e = d;
        if (0 == e[0]) a: {
          if (!c.i) {
            if (c.a) if (c.a.s + 3E3 < a.s) wc(c), c.a.cancel(), c.a = null;else break a;
            xc(c);
            F(18);
          }
        } else c.ia = e[1], 0 < c.ia - c.G && 37500 > e[2] && c.U && 0 == c.m && !c.l && (c.l = Vb(n(c.Na, c), 6E3));

        if (1 >= yc(c.b) && c.O) {
          try {
            c.O();
          } catch (oc) {}

          c.O = void 0;
        }
      } else M(c, 11);
    } else if ((a.o || c.a == a) && wc(c), !wa(b)) for (b = d = c.ja.a.parse(b), d = 0; d < b.length; d++) if (e = b[d], c.G = e[0], e = e[1], 2 == c.u) {
      if ("c" == e[0]) {
        c.B = e[1];
        c.R = e[2];
        var f = e[3];
        null != f && (c.oa = f);
        var h = e[5];
        null != h && "number" === typeof h && 0 < h && (c.D = 1.5 * h);
        var l = c,
            p = a.a;

        if (p) {
          var D = p.a ? p.a.getResponseHeader("X-Client-Wire-Protocol") : null;

          if (D) {
            var z = l.b;
            !z.a && (u(D, "spdy") || u(D, "quic") || u(D, "h2")) && (z.f = z.g, z.a = new Set(), z.b && (zc(z, z.b), z.b = null));
          }

          if (l.s) {
            var ta = p.a ? p.a.getResponseHeader("X-HTTP-Session-Id") : null;
            ta && (l.ha = ta, N(l.v, l.s, ta));
          }
        }

        c.u = 3;
        c.c && c.c.na();
        l = c;
        var ua = a;
        l.ea = Ac(l, l.w ? l.R : null, l.P);

        if (ua.o) {
          Bc(l.b, ua);
          var va = ua,
              sc = l.D;
          sc && va.setTimeout(sc);
          va.h && (mc(va), J(va));
          l.a = ua;
        } else Cc(l);

        0 < c.f.length && Dc(c);
      } else "stop" != e[0] && "close" != e[0] || M(c, 7);
    } else 3 == c.u && ("stop" == e[0] || "close" == e[0] ? "stop" == e[0] ? M(c, 7) : Ec(c) : "noop" != e[0] && c.c && c.c.ma(e), c.m = 0);
    E(4);
  } catch (oc) {}
}

function Fc(a) {
  if (a.I && "function" == typeof a.I) return a.I();
  if ("string" === typeof a) return a.split("");

  if (da(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++) b.push(a[d]);

    return b;
  }

  b = [];
  c = 0;

  for (d in a) b[c++] = a[d];

  return a = b;
}

function Gc(a, b) {
  if (a.forEach && "function" == typeof a.forEach) a.forEach(b, void 0);else if (da(a) || "string" === typeof a) oa(a, b, void 0);else {
    if (a.K && "function" == typeof a.K) var c = a.K();else if (a.I && "function" == typeof a.I) c = void 0;else if (da(a) || "string" === typeof a) {
      c = [];

      for (var d = a.length, e = 0; e < d; e++) c.push(e);
    } else for (e in c = [], d = 0, a) c[d++] = e;
    d = Fc(a);
    e = d.length;

    for (var f = 0; f < e; f++) b.call(void 0, d[f], c && c[f], a);
  }
}

function O(a, b) {
  this.b = {};
  this.a = [];
  this.c = 0;
  var c = arguments.length;

  if (1 < c) {
    if (c % 2) throw Error("Uneven number of arguments");

    for (var d = 0; d < c; d += 2) this.set(arguments[d], arguments[d + 1]);
  } else if (a) if (a instanceof O) for (c = a.K(), d = 0; d < c.length; d++) this.set(c[d], a.get(c[d]));else for (d in a) this.set(d, a[d]);
}

g = O.prototype;

g.I = function () {
  Hc(this);

  for (var a = [], b = 0; b < this.a.length; b++) a.push(this.b[this.a[b]]);

  return a;
};

g.K = function () {
  Hc(this);
  return this.a.concat();
};

function Hc(a) {
  if (a.c != a.a.length) {
    for (var b = 0, c = 0; b < a.a.length;) {
      var d = a.a[b];
      P(a.b, d) && (a.a[c++] = d);
      b++;
    }

    a.a.length = c;
  }

  if (a.c != a.a.length) {
    var e = {};

    for (c = b = 0; b < a.a.length;) d = a.a[b], P(e, d) || (a.a[c++] = d, e[d] = 1), b++;

    a.a.length = c;
  }
}

g.get = function (a, b) {
  return P(this.b, a) ? this.b[a] : b;
};

g.set = function (a, b) {
  P(this.b, a) || (this.c++, this.a.push(a));
  this.b[a] = b;
};

g.forEach = function (a, b) {
  for (var c = this.K(), d = 0; d < c.length; d++) {
    var e = c[d],
        f = this.get(e);
    a.call(b, f, e, this);
  }
};

function P(a, b) {
  return Object.prototype.hasOwnProperty.call(a, b);
}

var Ic = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

function Jc(a, b) {
  if (a) {
    a = a.split("&");

    for (var c = 0; c < a.length; c++) {
      var d = a[c].indexOf("="),
          e = null;

      if (0 <= d) {
        var f = a[c].substring(0, d);
        e = a[c].substring(d + 1);
      } else f = a[c];

      b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
    }
  }
}

function Q(a, b) {
  this.c = this.j = this.f = "";
  this.h = null;
  this.i = this.g = "";
  this.a = !1;

  if (a instanceof Q) {
    this.a = void 0 !== b ? b : a.a;
    Kc(this, a.f);
    this.j = a.j;
    Lc(this, a.c);
    Mc(this, a.h);
    this.g = a.g;
    b = a.b;
    var c = new R();
    c.c = b.c;
    b.a && (c.a = new O(b.a), c.b = b.b);
    Nc(this, c);
    this.i = a.i;
  } else a && (c = String(a).match(Ic)) ? (this.a = !!b, Kc(this, c[1] || "", !0), this.j = S(c[2] || ""), Lc(this, c[3] || "", !0), Mc(this, c[4]), this.g = S(c[5] || "", !0), Nc(this, c[6] || "", !0), this.i = S(c[7] || "")) : (this.a = !!b, this.b = new R(null, this.a));
}

Q.prototype.toString = function () {
  var a = [],
      b = this.f;
  b && a.push(T(b, Oc, !0), ":");
  var c = this.c;
  if (c || "file" == b) a.push("//"), (b = this.j) && a.push(T(b, Oc, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.h, null != c && a.push(":", String(c));
  if (c = this.g) this.c && "/" != c.charAt(0) && a.push("/"), a.push(T(c, "/" == c.charAt(0) ? Pc : Qc, !0));
  (c = this.b.toString()) && a.push("?", c);
  (c = this.i) && a.push("#", T(c, Rc));
  return a.join("");
};

function I(a) {
  return new Q(a);
}

function Kc(a, b, c) {
  a.f = c ? S(b, !0) : b;
  a.f && (a.f = a.f.replace(/:$/, ""));
}

function Lc(a, b, c) {
  a.c = c ? S(b, !0) : b;
}

function Mc(a, b) {
  if (b) {
    b = Number(b);
    if (isNaN(b) || 0 > b) throw Error("Bad port number " + b);
    a.h = b;
  } else a.h = null;
}

function Nc(a, b, c) {
  b instanceof R ? (a.b = b, Sc(a.b, a.a)) : (c || (b = T(b, Tc)), a.b = new R(b, a.a));
}

function N(a, b, c) {
  a.b.set(b, c);
}

function ic(a) {
  N(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36));
  return a;
}

function Uc(a) {
  return a instanceof Q ? I(a) : new Q(a, void 0);
}

function Vc(a, b, c, d) {
  var e = new Q(null, void 0);
  a && Kc(e, a);
  b && Lc(e, b);
  c && Mc(e, c);
  d && (e.g = d);
  return e;
}

function S(a, b) {
  return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : "";
}

function T(a, b, c) {
  return "string" === typeof a ? (a = encodeURI(a).replace(b, Wc), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null;
}

function Wc(a) {
  a = a.charCodeAt(0);
  return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16);
}

var Oc = /[#\/\?@]/g,
    Qc = /[#\?:]/g,
    Pc = /[#\?]/g,
    Tc = /[#\?@]/g,
    Rc = /#/g;

function R(a, b) {
  this.b = this.a = null;
  this.c = a || null;
  this.f = !!b;
}

function U(a) {
  a.a || (a.a = new O(), a.b = 0, a.c && Jc(a.c, function (b, c) {
    a.add(decodeURIComponent(b.replace(/\+/g, " ")), c);
  }));
}

g = R.prototype;

g.add = function (a, b) {
  U(this);
  this.c = null;
  a = V(this, a);
  var c = this.a.get(a);
  c || this.a.set(a, c = []);
  c.push(b);
  this.b += 1;
  return this;
};

function Xc(a, b) {
  U(a);
  b = V(a, b);
  P(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, P(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Hc(a)));
}

function Yc(a, b) {
  U(a);
  b = V(a, b);
  return P(a.a.b, b);
}

g.forEach = function (a, b) {
  U(this);
  this.a.forEach(function (c, d) {
    oa(c, function (e) {
      a.call(b, e, d, this);
    }, this);
  }, this);
};

g.K = function () {
  U(this);

  for (var a = this.a.I(), b = this.a.K(), c = [], d = 0; d < b.length; d++) for (var e = a[d], f = 0; f < e.length; f++) c.push(b[d]);

  return c;
};

g.I = function (a) {
  U(this);
  var b = [];
  if ("string" === typeof a) Yc(this, a) && (b = ra(b, this.a.get(V(this, a))));else {
    a = this.a.I();

    for (var c = 0; c < a.length; c++) b = ra(b, a[c]);
  }
  return b;
};

g.set = function (a, b) {
  U(this);
  this.c = null;
  a = V(this, a);
  Yc(this, a) && (this.b -= this.a.get(a).length);
  this.a.set(a, [b]);
  this.b += 1;
  return this;
};

g.get = function (a, b) {
  if (!a) return b;
  a = this.I(a);
  return 0 < a.length ? String(a[0]) : b;
};

function kc(a, b, c) {
  Xc(a, b);
  0 < c.length && (a.c = null, a.a.set(V(a, b), sa(c)), a.b += c.length);
}

g.toString = function () {
  if (this.c) return this.c;
  if (!this.a) return "";

  for (var a = [], b = this.a.K(), c = 0; c < b.length; c++) {
    var d = b[c],
        e = encodeURIComponent(String(d));
    d = this.I(d);

    for (var f = 0; f < d.length; f++) {
      var h = e;
      "" !== d[f] && (h += "=" + encodeURIComponent(String(d[f])));
      a.push(h);
    }
  }

  return this.c = a.join("&");
};

function V(a, b) {
  b = String(b);
  a.f && (b = b.toLowerCase());
  return b;
}

function Sc(a, b) {
  b && !a.f && (U(a), a.c = null, a.a.forEach(function (c, d) {
    var e = d.toLowerCase();
    d != e && (Xc(this, d), kc(this, e, c));
  }, a));
  a.f = b;
}

function Zc(a, b) {
  this.b = a;
  this.a = b;
}

function $c(a) {
  this.g = a || ad;
  k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(k.ca && k.ca.ua && k.ca.ua() && k.ca.ua().mb);
  this.f = a ? this.g : 1;
  this.a = null;
  1 < this.f && (this.a = new Set());
  this.b = null;
  this.c = [];
}

var ad = 10;

function bd(a) {
  return a.b ? !0 : a.a ? a.a.size >= a.f : !1;
}

function yc(a) {
  return a.b ? 1 : a.a ? a.a.size : 0;
}

function vc(a, b) {
  return a.b ? a.b == b : a.a ? a.a.has(b) : !1;
}

function zc(a, b) {
  a.a ? a.a.add(b) : a.b = b;
}

function Bc(a, b) {
  a.b && a.b == b ? a.b = null : a.a && a.a.has(b) && a.a.delete(b);
}

$c.prototype.cancel = function () {
  var e_1, _a;

  this.c = cd(this);
  if (this.b) this.b.cancel(), this.b = null;else if (this.a && 0 !== this.a.size) {
    try {
      for (var _b = __values(this.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var a = _c.value;
        a.cancel();
      }
    } catch (e_1_1) {
      e_1 = {
        error: e_1_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_1) throw e_1.error;
      }
    }

    this.a.clear();
  }
};

function cd(a) {
  var e_2, _a;

  if (null != a.b) return a.c.concat(a.b.i);

  if (null != a.a && 0 !== a.a.size) {
    var b = a.c;

    try {
      for (var _b = __values(a.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
        var c = _c.value;
        b = b.concat(c.i);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
      } finally {
        if (e_2) throw e_2.error;
      }
    }

    return b;
  }

  return sa(a.c);
}

function dd() {}

dd.prototype.stringify = function (a) {
  return k.JSON.stringify(a, void 0);
};

dd.prototype.parse = function (a) {
  return k.JSON.parse(a, void 0);
};

function ed() {
  this.a = new dd();
}

function fd(a, b, c) {
  var d = c || "";

  try {
    Gc(a, function (e, f) {
      var h = e;
      m(e) && (h = vb(e));
      b.push(d + f + "=" + encodeURIComponent(h));
    });
  } catch (e) {
    throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
  }
}

function gd(a, b) {
  var c = new Pb();

  if (k.Image) {
    var d = new Image();
    d.onload = ka(hd, c, d, "TestLoadImage: loaded", !0, b);
    d.onerror = ka(hd, c, d, "TestLoadImage: error", !1, b);
    d.onabort = ka(hd, c, d, "TestLoadImage: abort", !1, b);
    d.ontimeout = ka(hd, c, d, "TestLoadImage: timeout", !1, b);
    k.setTimeout(function () {
      if (d.ontimeout) d.ontimeout();
    }, 1E4);
    d.src = a;
  } else b(!1);
}

function hd(a, b, c, d, e) {
  try {
    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
  } catch (f) {}
}

var id = k.JSON.parse;

function W(a) {
  B.call(this);
  this.headers = new O();
  this.G = a || null;
  this.b = !1;
  this.s = this.a = null;
  this.D = "";
  this.h = 0;
  this.f = "";
  this.g = this.w = this.l = this.v = !1;
  this.o = 0;
  this.m = null;
  this.H = jd;
  this.B = this.F = !1;
}

r(W, B);
var jd = "",
    kd = /^https?$/i,
    ld = ["POST", "PUT"];
g = W.prototype;

g.$ = function (a, b, c, d) {
  if (this.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.D + "; newUri=" + a);
  b = b ? b.toUpperCase() : "GET";
  this.D = a;
  this.f = "";
  this.h = 0;
  this.v = !1;
  this.b = !0;
  this.a = new XMLHttpRequest();
  this.s = this.G ? Zb(this.G) : Zb(cc);
  this.a.onreadystatechange = n(this.va, this);

  try {
    this.w = !0, this.a.open(b, String(a), !0), this.w = !1;
  } catch (f) {
    md(this, f);
    return;
  }

  a = c || "";
  var e = new O(this.headers);
  d && Gc(d, function (f, h) {
    e.set(h, f);
  });
  d = pa(e.K());
  c = k.FormData && a instanceof k.FormData;
  !(0 <= na(ld, b)) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
  e.forEach(function (f, h) {
    this.a.setRequestHeader(h, f);
  }, this);
  this.H && (this.a.responseType = this.H);
  "withCredentials" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);

  try {
    nd(this), 0 < this.o && ((this.B = od(this.a)) ? (this.a.timeout = this.o, this.a.ontimeout = n(this.ta, this)) : this.m = Jb(this.ta, this.o, this)), this.l = !0, this.a.send(a), this.l = !1;
  } catch (f) {
    md(this, f);
  }
};

function od(a) {
  return w && Sa(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout;
}

function qa(a) {
  return "content-type" == a.toLowerCase();
}

g.ta = function () {
  "undefined" != typeof goog && this.a && (this.f = "Timed out after " + this.o + "ms, aborting", this.h = 8, this.dispatchEvent("timeout"), this.abort(8));
};

function md(a, b) {
  a.b = !1;
  a.a && (a.g = !0, a.a.abort(), a.g = !1);
  a.f = b;
  a.h = 5;
  pd(a);
  qd(a);
}

function pd(a) {
  a.v || (a.v = !0, a.dispatchEvent("complete"), a.dispatchEvent("error"));
}

g.abort = function (a) {
  this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, this.dispatchEvent("complete"), this.dispatchEvent("abort"), qd(this));
};

g.C = function () {
  this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), qd(this, !0));
  W.M.C.call(this);
};

g.va = function () {
  this.j || (this.w || this.l || this.g ? rd(this) : this.Oa());
};

g.Oa = function () {
  rd(this);
};

function rd(a) {
  if (a.b && "undefined" != typeof goog && (!a.s[1] || 4 != K(a) || 2 != a.S())) if (a.l && 4 == K(a)) Jb(a.va, 0, a);else if (a.dispatchEvent("readystatechange"), 4 == K(a)) {
    a.b = !1;

    try {
      var b = a.S();

      a: switch (b) {
        case 200:
        case 201:
        case 202:
        case 204:
        case 206:
        case 304:
        case 1223:
          var c = !0;
          break a;

        default:
          c = !1;
      }

      var d;

      if (!(d = c)) {
        var e;

        if (e = 0 === b) {
          var f = String(a.D).match(Ic)[1] || null;

          if (!f && k.self && k.self.location) {
            var h = k.self.location.protocol;
            f = h.substr(0, h.length - 1);
          }

          e = !kd.test(f ? f.toLowerCase() : "");
        }

        d = e;
      }

      if (d) a.dispatchEvent("complete"), a.dispatchEvent("success");else {
        a.h = 6;

        try {
          var l = 2 < K(a) ? a.a.statusText : "";
        } catch (p) {
          l = "";
        }

        a.f = l + " [" + a.S() + "]";
        pd(a);
      }
    } finally {
      qd(a);
    }
  }
}

function qd(a, b) {
  if (a.a) {
    nd(a);
    var c = a.a,
        d = a.s[0] ? aa : null;
    a.a = null;
    a.s = null;
    b || a.dispatchEvent("ready");

    try {
      c.onreadystatechange = d;
    } catch (e) {}
  }
}

function nd(a) {
  a.a && a.B && (a.a.ontimeout = null);
  a.m && (k.clearTimeout(a.m), a.m = null);
}

function K(a) {
  return a.a ? a.a.readyState : 0;
}

g.S = function () {
  try {
    return 2 < K(this) ? this.a.status : -1;
  } catch (a) {
    return -1;
  }
};

g.Y = function () {
  try {
    return this.a ? this.a.responseText : "";
  } catch (a) {
    return "";
  }
};

g.Ja = function (a) {
  if (this.a) {
    var b = this.a.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return id(b);
  }
};

g.qa = function () {
  return this.h;
};

g.Ma = function () {
  return "string" === typeof this.f ? this.f : String(this.f);
};

function sd(a) {
  var b = "";
  Ba(a, function (c, d) {
    b += d;
    b += ":";
    b += c;
    b += "\r\n";
  });
  return b;
}

function td(a, b, c) {
  a: {
    for (d in c) {
      var d = !1;
      break a;
    }

    d = !0;
  }

  d || (c = sd(c), "string" === typeof a ? null != c && encodeURIComponent(String(c)) : N(a, b, c));
}

function X(a, b, c) {
  return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b;
}

function ud(a) {
  this.f = [];
  this.R = this.ea = this.v = this.P = this.a = this.ha = this.s = this.N = this.h = this.F = this.j = null;
  this.Fa = this.H = 0;
  this.Ca = X("failFast", !1, a);
  this.U = this.l = this.i = this.g = this.c = null;
  this.W = !0;
  this.A = this.ia = this.G = -1;
  this.J = this.m = this.o = 0;
  this.Ba = X("baseRetryDelayMs", 5E3, a);
  this.Ga = X("retryDelaySeedMs", 1E4, a);
  this.Da = X("forwardChannelMaxRetries", 2, a);
  this.ga = X("forwardChannelRequestTimeoutMs", 2E4, a);
  this.Ea = a && a.nb || void 0;
  this.D = void 0;
  this.w = a && a.supportsCrossDomainXhr || !1;
  this.B = "";
  this.b = new $c(a && a.concurrentRequestLimit);
  this.ja = new ed();
  this.fa = a && a.fastHandshake || !1;
  a && a.forceLongPolling && (this.W = !1);
  this.O = void 0;
}

g = ud.prototype;
g.oa = 8;
g.u = 1;

function Ec(a) {
  vd(a);

  if (3 == a.u) {
    var b = a.H++,
        c = I(a.v);
    N(c, "SID", a.B);
    N(c, "RID", b);
    N(c, "TYPE", "terminate");
    wd(a, c);
    b = new H(a, b, void 0);
    b.B = 2;
    b.f = ic(I(c));
    c = !1;
    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.f.toString(), ""));
    !c && k.Image && (new Image().src = b.f, c = !0);
    c || (b.a = lc(b.g, null), b.a.$(b.f));
    b.s = q();
    J(b);
  }

  xd(a);
}

function vd(a) {
  a.a && (a.a.cancel(), a.a = null);
  a.i && (k.clearTimeout(a.i), a.i = null);
  wc(a);
  a.b.cancel();
  a.g && ("number" === typeof a.g && k.clearTimeout(a.g), a.g = null);
}

function yd(a, b) {
  a.f.push(new Zc(a.Fa++, b));
  3 == a.u && Dc(a);
}

function Dc(a) {
  bd(a.b) || a.g || (a.g = !0, Cb(a.xa, a), a.o = 0);
}

function zd(a, b) {
  if (yc(a.b) >= a.b.f - (a.g ? 1 : 0)) return !1;
  if (a.g) return a.f = b.i.concat(a.f), !0;
  if (1 == a.u || 2 == a.u || a.o >= (a.Ca ? 0 : a.Da)) return !1;
  a.g = Vb(n(a.xa, a, b), Ad(a, a.o));
  a.o++;
  return !0;
}

g.xa = function (a) {
  if (this.g) if (this.g = null, 1 == this.u) {
    if (!a) {
      this.H = Math.floor(1E5 * Math.random());
      a = this.H++;
      var b = new H(this, a, void 0),
          c = this.j;
      this.F && (c ? (c = Ca(c), Ea(c, this.F)) : c = this.F);
      null === this.h && (b.m = c);
      var d;
      if (this.fa) a: {
        for (var e = d = 0; e < this.f.length; e++) {
          b: {
            var f = this.f[e];

            if ("__data__" in f.a && (f = f.a.__data__, "string" === typeof f)) {
              f = f.length;
              break b;
            }

            f = void 0;
          }

          if (void 0 === f) break;
          d += f;

          if (4096 < d) {
            d = e;
            break a;
          }

          if (4096 === d || e === this.f.length - 1) {
            d = e + 1;
            break a;
          }
        }

        d = 1E3;
      } else d = 1E3;
      d = Bd(this, b, d);
      e = I(this.v);
      N(e, "RID", a);
      N(e, "CVER", 22);
      this.s && N(e, "X-HTTP-Session-Id", this.s);
      wd(this, e);
      this.h && c && td(e, this.h, c);
      zc(this.b, b);
      this.fa ? (N(e, "$req", d), N(e, "SID", "null"), b.R = !0, hc(b, e, null)) : hc(b, e, d);
      this.u = 2;
    }
  } else 3 == this.u && (a ? Cd(this, a) : 0 == this.f.length || bd(this.b) || Cd(this));
};

function Cd(a, b) {
  var c;
  b ? c = b.W : c = a.H++;
  var d = I(a.v);
  N(d, "SID", a.B);
  N(d, "RID", c);
  N(d, "AID", a.G);
  wd(a, d);
  a.h && a.j && td(d, a.h, a.j);
  c = new H(a, c, a.o + 1);
  null === a.h && (c.m = a.j);
  b && (a.f = b.i.concat(a.f));
  b = Bd(a, c, 1E3);
  c.setTimeout(Math.round(.5 * a.ga) + Math.round(.5 * a.ga * Math.random()));
  zc(a.b, c);
  hc(c, d, b);
}

function wd(a, b) {
  a.c && Gc({}, function (c, d) {
    N(b, d, c);
  });
}

function Bd(a, b, c) {
  c = Math.min(a.f.length, c);
  var d = a.c ? n(a.c.Ha, a.c, a) : null;

  a: for (var e = a.f, f = -1;;) {
    var h = ["count=" + c];
    -1 == f ? 0 < c ? (f = e[0].b, h.push("ofs=" + f)) : f = 0 : h.push("ofs=" + f);

    for (var l = !0, p = 0; p < c; p++) {
      var D = e[p].b,
          z = e[p].a;
      D -= f;
      if (0 > D) f = Math.max(0, e[p].b - 100), l = !1;else try {
        fd(z, h, "req" + D + "_");
      } catch (ta) {
        d && d(z);
      }
    }

    if (l) {
      d = h.join("&");
      break a;
    }
  }

  a = a.f.splice(0, c);
  b.i = a;
  return d;
}

function Cc(a) {
  a.a || a.i || (a.J = 1, Cb(a.wa, a), a.m = 0);
}

function xc(a) {
  if (a.a || a.i || 3 <= a.m) return !1;
  a.J++;
  a.i = Vb(n(a.wa, a), Ad(a, a.m));
  a.m++;
  return !0;
}

g.wa = function () {
  this.i = null;
  this.a = new H(this, "rpc", this.J);
  null === this.h && (this.a.m = this.j);
  this.a.J = 0;
  var a = I(this.ea);
  N(a, "RID", "rpc");
  N(a, "SID", this.B);
  N(a, "CI", this.U ? "0" : "1");
  N(a, "AID", this.G);
  wd(this, a);
  N(a, "TYPE", "xmlhttp");
  this.h && this.j && td(a, this.h, this.j);
  this.D && this.a.setTimeout(this.D);
  var b = this.a,
      c = this.R;
  b.B = 1;
  b.f = ic(I(a));
  b.j = null;
  b.F = !0;
  jc(b, c);
};

g.Na = function () {
  null != this.l && (this.l = null, this.a.cancel(), this.a = null, xc(this), F(19));
};

function wc(a) {
  null != a.l && (k.clearTimeout(a.l), a.l = null);
}

function rc(a, b) {
  var c = null;

  if (a.a == b) {
    wc(a);
    a.a = null;
    var d = 2;
  } else if (vc(a.b, b)) c = b.i, Bc(a.b, b), d = 1;else return;

  a.A = b.H;
  if (0 != a.u) if (b.b) {
    if (1 == d) {
      c = b.j ? b.j.length : 0;
      b = q() - b.s;
      var e = a.o;
      d = Rb();
      d.dispatchEvent(new Ub(d, c, b, e));
      Dc(a);
    } else Cc(a);
  } else if (e = b.c, 3 == e || 0 == e && 0 < a.A || !(1 == d && zd(a, b) || 2 == d && xc(a))) switch (c && 0 < c.length && (b = a.b, b.c = b.c.concat(c)), e) {
    case 1:
      M(a, 5);
      break;

    case 4:
      M(a, 10);
      break;

    case 3:
      M(a, 6);
      break;

    default:
      M(a, 2);
  }
}

function Ad(a, b) {
  var c = a.Ba + Math.floor(Math.random() * a.Ga);
  a.c || (c *= 2);
  return c * b;
}

function M(a, b) {
  if (2 == b) {
    var c = null;
    a.c && (c = null);
    var d = n(a.Ta, a);
    c || (c = new Q("//www.google.com/images/cleardot.gif"), k.location && "http" == k.location.protocol || Kc(c, "https"), ic(c));
    gd(c.toString(), d);
  } else F(2);

  a.u = 0;
  a.c && a.c.la(b);
  xd(a);
  vd(a);
}

g.Ta = function (a) {
  a ? F(2) : F(1);
};

function xd(a) {
  a.u = 0;
  a.A = -1;

  if (a.c) {
    if (0 != cd(a.b).length || 0 != a.f.length) a.b.c.length = 0, sa(a.f), a.f.length = 0;
    a.c.ka();
  }
}

function Ac(a, b, c) {
  var d = Uc(c);
  if ("" != d.c) b && Lc(d, b + "." + d.c), Mc(d, d.h);else {
    var e = k.location;
    d = Vc(e.protocol, b ? b + "." + e.hostname : e.hostname, +e.port, c);
  }
  a.N && Ba(a.N, function (f, h) {
    N(d, h, f);
  });
  b = a.s;
  c = a.ha;
  b && c && N(d, b, c);
  N(d, "VER", a.oa);
  wd(a, d);
  return d;
}

function lc(a, b) {
  if (b && !a.w) throw Error("Can't create secondary domain capable XhrIo object.");
  b = new W(a.Ea);
  b.F = a.w;
  return b;
}

function Dd() {}

g = Dd.prototype;

g.na = function () {};

g.ma = function () {};

g.la = function () {};

g.ka = function () {};

g.Ha = function () {};

function Ed() {
  if (w && !(10 <= Number(Va))) throw Error("Environmental error: no available transport.");
}

Ed.prototype.a = function (a, b) {
  return new Y(a, b);
};

function Y(a, b) {
  B.call(this);
  this.a = new ud(b);
  this.l = a;
  this.b = b && b.messageUrlParams || null;
  a = b && b.messageHeaders || null;
  b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = {
    "X-Client-Protocol": "webchannel"
  });
  this.a.j = a;
  a = b && b.initMessageHeaders || null;
  b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = {
    "X-WebChannel-Content-Type": b.messageContentType
  });
  b && b.pa && (a ? a["X-WebChannel-Client-Profile"] = b.pa : a = {
    "X-WebChannel-Client-Profile": b.pa
  });
  this.a.F = a;
  (a = b && b.httpHeadersOverwriteParam) && !wa(a) && (this.a.h = a);
  this.h = b && b.supportsCrossDomainXhr || !1;
  this.g = b && b.sendRawJson || !1;
  (b = b && b.httpSessionIdParam) && !wa(b) && (this.a.s = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));
  this.f = new Z(this);
}

r(Y, B);
g = Y.prototype;

g.addEventListener = function (a, b, c, d) {
  Y.M.addEventListener.call(this, a, b, c, d);
};

g.removeEventListener = function (a, b, c, d) {
  Y.M.removeEventListener.call(this, a, b, c, d);
};

g.Ka = function () {
  this.a.c = this.f;
  this.h && (this.a.w = !0);
  var a = this.a,
      b = this.l,
      c = this.b || void 0;
  F(0);
  a.P = b;
  a.N = c || {};
  a.U = a.W;
  a.v = Ac(a, null, a.P);
  Dc(a);
};

g.close = function () {
  Ec(this.a);
};

g.La = function (a) {
  if ("string" === typeof a) {
    var b = {};
    b.__data__ = a;
    yd(this.a, b);
  } else this.g ? (b = {}, b.__data__ = vb(a), yd(this.a, b)) : yd(this.a, a);
};

g.C = function () {
  this.a.c = null;
  delete this.f;
  Ec(this.a);
  delete this.a;
  Y.M.C.call(this);
};

function Fd(a) {
  ac.call(this);
  var b = a.__sm__;

  if (b) {
    a: {
      for (var c in b) {
        a = c;
        break a;
      }

      a = void 0;
    }

    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;
  } else this.data = a;
}

r(Fd, ac);

function Gd() {
  bc.call(this);
  this.status = 1;
}

r(Gd, bc);

function Z(a) {
  this.a = a;
}

r(Z, Dd);

Z.prototype.na = function () {
  this.a.dispatchEvent("a");
};

Z.prototype.ma = function (a) {
  this.a.dispatchEvent(new Fd(a));
};

Z.prototype.la = function (a) {
  this.a.dispatchEvent(new Gd(a));
};

Z.prototype.ka = function () {
  this.a.dispatchEvent("b");
};
/*
Copyright 2017 Google Inc.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


Ed.prototype.createWebChannel = Ed.prototype.a;
Y.prototype.send = Y.prototype.La;
Y.prototype.open = Y.prototype.Ka;
Y.prototype.close = Y.prototype.close;
Wb.NO_ERROR = 0;
Wb.TIMEOUT = 8;
Wb.HTTP_ERROR = 6;
Xb.COMPLETE = "complete";
$b.EventType = G;
G.OPEN = "a";
G.CLOSE = "b";
G.ERROR = "c";
G.MESSAGE = "d";
B.prototype.listen = B.prototype.ra;
W.prototype.listenOnce = W.prototype.sa;
W.prototype.getLastError = W.prototype.Ma;
W.prototype.getLastErrorCode = W.prototype.qa;
W.prototype.getStatus = W.prototype.S;
W.prototype.getResponseJson = W.prototype.Ja;
W.prototype.getResponseText = W.prototype.Y;
W.prototype.send = W.prototype.$;
var esm = {
  createWebChannelTransport: function () {
    return new Ed();
  },
  ErrorCode: Wb,
  EventType: Xb,
  WebChannel: $b,
  XhrIo: W
};
var esm_1 = esm.createWebChannelTransport;
exports.createWebChannelTransport = esm_1;
var esm_2 = esm.ErrorCode;
exports.ErrorCode = esm_2;
var esm_3 = esm.EventType;
exports.EventType = esm_3;
var esm_4 = esm.WebChannel;
exports.WebChannel = esm_4;
var esm_5 = esm.XhrIo;
exports.XhrIo = esm_5;
var _default = esm;
exports.default = _default;
},{}],"node_modules/@firebase/firestore/dist/index.cjs.js":[function(require,module,exports) {
"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: !0
});

var t,
    e = require("tslib"),
    n = (t = require("@firebase/app")) && "object" == _typeof(t) && "default" in t ? t.default : t,
    r = require("@firebase/logger"),
    i = require("@firebase/util"),
    o = require("@firebase/webchannel-wrapper"),
    s = require("@firebase/component"),
    u = n.SDK_VERSION,
    a = new r.Logger("@firebase/firestore"); // Helper methods are needed because variables can't be exported as read/write


function c() {
  return a.logLevel;
}

function h(t) {
  for (var n = [], i = 1; i < arguments.length; i++) {
    n[i - 1] = arguments[i];
  }

  if (a.logLevel <= r.LogLevel.DEBUG) {
    var o = n.map(l);
    a.debug.apply(a, e.__spreadArrays(["Firestore (" + u + "): " + t], o));
  }
}

function f(t) {
  for (var n = [], i = 1; i < arguments.length; i++) {
    n[i - 1] = arguments[i];
  }

  if (a.logLevel <= r.LogLevel.ERROR) {
    var o = n.map(l);
    a.error.apply(a, e.__spreadArrays(["Firestore (" + u + "): " + t], o));
  }
}
/**
 * Converts an additional log parameter to a string representation.
 */


function l(t) {
  if ("string" == typeof t) return t;

  try {
    return e = t, JSON.stringify(e);
  } catch (e) {
    // Converting to JSON failed, just log the object directly
    return t;
  }

  var e;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Unconditionally fails, throwing an Error with the given message.
 * Messages are stripped in production builds.
 *
 * Returns `never` and can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */


function p(t) {
  void 0 === t && (t = "Unexpected state"); // Log the failure in addition to throw an exception, just in case the
  // exception is swallowed.

  var e = "FIRESTORE (" + u + ") INTERNAL ASSERTION FAILED: " + t; // NOTE: We don't use FirestoreError here because these are internal failures
  // that cannot be handled by the user. (Also it would create a circular
  // dependency between the error and assert modules which doesn't work.)

  throw f(e), new Error(e)
  /**
  * Fails if the given assertion condition is false, throwing an Error with the
  * given message if it did.
  *
  * Messages are stripped in production builds.
  */
  ;
}

function d(t, e) {
  t || p();
}
/**
 * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an
 * instance of `T` before casting.
 */


function y(t, // eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
  return t;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Generates `nBytes` of random bytes.
 *
 * If `nBytes < 0` , an error will be thrown.
 */


function v(t) {
  // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
  var e = // eslint-disable-next-line @typescript-eslint/no-explicit-any
  "undefined" != typeof self && (self.crypto || self.msCrypto),
      n = new Uint8Array(t);
  if (e) e.getRandomValues(n);else // Falls back to Math.random
    for (var r = 0; r < t; r++) {
      n[r] = Math.floor(256 * Math.random());
    }
  return n;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var g =
/** @class */
function () {
  function t() {}

  return t.t = function () {
    for ( // Alphanumeric characters
    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", e = Math.floor(256 / t.length) * t.length, n = "" // The largest byte value that is a multiple of `char.length`.
    ; n.length < 20;) {
      for (var r = v(40), i = 0; i < r.length; ++i) {
        // Only accept values that are [0, maxMultiple), this ensures they can
        // be evenly mapped to indices of `chars` via a modulo operation.
        n.length < 20 && r[i] < e && (n += t.charAt(r[i] % t.length));
      }
    }

    return n;
  }, t;
}();

function m(t, e) {
  return t < e ? -1 : t > e ? 1 : 0;
}
/** Helper to compare arrays using isEqual(). */


function w(t, e, n) {
  return t.length === e.length && t.every(function (t, r) {
    return n(t, e[r]);
  });
}
/**
 * Returns the immediate lexicographically-following string. This is useful to
 * construct an inclusive range for indexeddb iterators.
 */


function _(t) {
  // Return the input string, with an additional NUL byte appended.
  return t + "\0";
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var b =
/**
     * Constructs a DatabaseInfo using the provided host, databaseId and
     * persistenceKey.
     *
     * @param databaseId The database to use.
     * @param persistenceKey A unique identifier for this Firestore's local
     * storage (used in conjunction with the databaseId).
     * @param host The Firestore backend host to connect to.
     * @param ssl Whether to use SSL when connecting.
     * @param forceLongPolling Whether to use the forceLongPolling option
     * when using WebChannel as the network transport.
     */
function b(t, e, n, r, i) {
  this.s = t, this.persistenceKey = e, this.host = n, this.ssl = r, this.forceLongPolling = i;
},
    I =
/** @class */
function () {
  function t(t, e) {
    this.projectId = t, this.database = e || "(default)";
  }

  return Object.defineProperty(t.prototype, "i", {
    get: function get() {
      return "(default)" === this.database;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    return e instanceof t && e.projectId === this.projectId && e.database === this.database;
  }, t.prototype.o = function (t) {
    return m(this.projectId, t.projectId) || m(this.database, t.database);
  }, t;
}();
/** The default database name for a project. */

/** Represents the database ID a Firestore client is associated with. */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function E(t) {
  var e = 0;

  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e++;
  }

  return e;
}

function T(t, e) {
  for (var n in t) {
    Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
  }
}

function N(t) {
  for (var e in t) {
    if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
  }

  return !0;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A map implementation that uses objects as keys. Objects must have an
 * associated equals function and must be immutable. Entries in the map are
 * stored together with the key being produced from the mapKeyFn. This map
 * automatically handles collisions of keys.
 */


var A =
/** @class */
function () {
  function t(t, e) {
    this.h = t, this.u = e,
    /**
         * The inner map for a key -> value pair. Due to the possibility of
         * collisions we keep a list of entries that we do a linear search through
         * to find an actual match. Note that collisions should be rare, so we still
         * expect near constant time lookups in practice.
         */
    this.l = {}
    /** Get a value for this key, or undefined if it does not exist. */
    ;
  }

  return t.prototype.get = function (t) {
    var e = this.h(t),
        n = this.l[e];
    if (void 0 !== n) for (var r = 0, i = n; r < i.length; r++) {
      var o = i[r],
          s = o[0],
          u = o[1];
      if (this.u(s, t)) return u;
    }
  }, t.prototype.has = function (t) {
    return void 0 !== this.get(t);
  },
  /** Put this key and value in the map. */
  t.prototype.set = function (t, e) {
    var n = this.h(t),
        r = this.l[n];

    if (void 0 !== r) {
      for (var i = 0; i < r.length; i++) {
        if (this.u(r[i][0], t)) return void (r[i] = [t, e]);
      }

      r.push([t, e]);
    } else this.l[n] = [[t, e]];
  },
  /**
   * Remove this key from the map. Returns a boolean if anything was deleted.
   */
  t.prototype.delete = function (t) {
    var e = this.h(t),
        n = this.l[e];
    if (void 0 === n) return !1;

    for (var r = 0; r < n.length; r++) {
      if (this.u(n[r][0], t)) return 1 === n.length ? delete this.l[e] : n.splice(r, 1), !0;
    }

    return !1;
  }, t.prototype.forEach = function (t) {
    T(this.l, function (e, n) {
      for (var r = 0, i = n; r < i.length; r++) {
        var o = i[r],
            s = o[0],
            u = o[1];
        t(s, u);
      }
    });
  }, t.prototype._ = function () {
    return N(this.l);
  }, t;
}(),
    x = {
  // Causes are copied from:
  // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h

  /** Not an error; returned on success. */
  OK: "ok",

  /** The operation was cancelled (typically by the caller). */
  CANCELLED: "cancelled",

  /** Unknown error or an error from a different error domain. */
  UNKNOWN: "unknown",

  /**
   * Client specified an invalid argument. Note that this differs from
   * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
   * problematic regardless of the state of the system (e.g., a malformed file
   * name).
   */
  INVALID_ARGUMENT: "invalid-argument",

  /**
   * Deadline expired before operation could complete. For operations that
   * change the state of the system, this error may be returned even if the
   * operation has completed successfully. For example, a successful response
   * from a server could have been delayed long enough for the deadline to
   * expire.
   */
  DEADLINE_EXCEEDED: "deadline-exceeded",

  /** Some requested entity (e.g., file or directory) was not found. */
  NOT_FOUND: "not-found",

  /**
   * Some entity that we attempted to create (e.g., file or directory) already
   * exists.
   */
  ALREADY_EXISTS: "already-exists",

  /**
   * The caller does not have permission to execute the specified operation.
   * PERMISSION_DENIED must not be used for rejections caused by exhausting
   * some resource (use RESOURCE_EXHAUSTED instead for those errors).
   * PERMISSION_DENIED must not be used if the caller can not be identified
   * (use UNAUTHENTICATED instead for those errors).
   */
  PERMISSION_DENIED: "permission-denied",

  /**
   * The request does not have valid authentication credentials for the
   * operation.
   */
  UNAUTHENTICATED: "unauthenticated",

  /**
   * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
   * entire file system is out of space.
   */
  RESOURCE_EXHAUSTED: "resource-exhausted",

  /**
   * Operation was rejected because the system is not in a state required for
   * the operation's execution. For example, directory to be deleted may be
   * non-empty, an rmdir operation is applied to a non-directory, etc.
   *
   * A litmus test that may help a service implementor in deciding
   * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
   *  (a) Use UNAVAILABLE if the client can retry just the failing call.
   *  (b) Use ABORTED if the client should retry at a higher-level
   *      (e.g., restarting a read-modify-write sequence).
   *  (c) Use FAILED_PRECONDITION if the client should not retry until
   *      the system state has been explicitly fixed. E.g., if an "rmdir"
   *      fails because the directory is non-empty, FAILED_PRECONDITION
   *      should be returned since the client should not retry unless
   *      they have first fixed up the directory by deleting files from it.
   *  (d) Use FAILED_PRECONDITION if the client performs conditional
   *      REST Get/Update/Delete on a resource and the resource on the
   *      server does not match the condition. E.g., conflicting
   *      read-modify-write on the same resource.
   */
  FAILED_PRECONDITION: "failed-precondition",

  /**
   * The operation was aborted, typically due to a concurrency issue like
   * sequencer check failures, transaction aborts, etc.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  ABORTED: "aborted",

  /**
   * Operation was attempted past the valid range. E.g., seeking or reading
   * past end of file.
   *
   * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
   * if the system state changes. For example, a 32-bit file system will
   * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
   * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
   * an offset past the current file size.
   *
   * There is a fair bit of overlap between FAILED_PRECONDITION and
   * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
   * when it applies so that callers who are iterating through a space can
   * easily look for an OUT_OF_RANGE error to detect when they are done.
   */
  OUT_OF_RANGE: "out-of-range",

  /** Operation is not implemented or not supported/enabled in this service. */
  UNIMPLEMENTED: "unimplemented",

  /**
   * Internal errors. Means some invariants expected by underlying System has
   * been broken. If you see one of these errors, Something is very broken.
   */
  INTERNAL: "internal",

  /**
   * The service is currently unavailable. This is a most likely a transient
   * condition and may be corrected by retrying with a backoff.
   *
   * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
   * and UNAVAILABLE.
   */
  UNAVAILABLE: "unavailable",

  /** Unrecoverable data loss or corruption. */
  DATA_LOSS: "data-loss"
},
    S =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this, n) || this).code = e, r.message = n, r.name = "FirebaseError", // HACK: We write a toString property directly because Error is not a real
    // class and so inheritance does not work correctly. We could alternatively
    // do the same "back-door inheritance" trick that FirebaseError does.
    r.toString = function () {
      return r.name + ": [code=" + r.code + "]: " + r.message;
    }, r;
  }

  return e.__extends(n, t), n;
}(Error),
    D =
/** @class */
function () {
  function t(t, e) {
    if (this.seconds = t, this.nanoseconds = e, e < 0) throw new S(x.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (e >= 1e9) throw new S(x.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
    if (t < -62135596800) throw new S(x.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t); // This will break in the year 10,000.

    if (t >= 253402300800) throw new S(x.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
  }

  return t.now = function () {
    return t.fromMillis(Date.now());
  }, t.fromDate = function (e) {
    return t.fromMillis(e.getTime());
  }, t.fromMillis = function (e) {
    var n = Math.floor(e / 1e3);
    return new t(n, 1e6 * (e - 1e3 * n));
  }, t.prototype.toDate = function () {
    return new Date(this.toMillis());
  }, t.prototype.toMillis = function () {
    return 1e3 * this.seconds + this.nanoseconds / 1e6;
  }, t.prototype.T = function (t) {
    return this.seconds === t.seconds ? m(this.nanoseconds, t.nanoseconds) : m(this.seconds, t.seconds);
  }, t.prototype.isEqual = function (t) {
    return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
  }, t.prototype.toString = function () {
    return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
  }, t.prototype.valueOf = function () {
    // This method returns a string of the form <seconds>.<nanoseconds> where <seconds> is
    // translated to have a non-negative value and both <seconds> and <nanoseconds> are left-padded
    // with zeroes to be a consistent length. Strings with this format then have a lexiographical
    // ordering that matches the expected ordering. The <seconds> translation is done to avoid
    // having a leading negative sign (i.e. a leading '-' character) in its string representation,
    // which would affect its lexiographical ordering.
    var t = this.seconds - -62135596800; // Note: Up to 12 decimal digits are required to represent all valid 'seconds' values.

    return String(t).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
  }, t;
}(),
    k =
/** @class */
function () {
  function t(t) {
    this.timestamp = t;
  }

  return t.I = function (e) {
    return new t(e);
  }, t.min = function () {
    return new t(new D(0, 0));
  }, t.prototype.o = function (t) {
    return this.timestamp.T(t.timestamp);
  }, t.prototype.isEqual = function (t) {
    return this.timestamp.isEqual(t.timestamp);
  },
  /** Returns a number representation of the version for use in spec tests. */
  t.prototype.A = function () {
    // Convert to microseconds.
    return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
  }, t.prototype.toString = function () {
    return "SnapshotVersion(" + this.timestamp.toString() + ")";
  }, t.prototype.R = function () {
    return this.timestamp;
  }, t;
}(),
    P =
/** @class */
function () {
  function t(t, e, n) {
    void 0 === e ? e = 0 : e > t.length && p(), void 0 === n ? n = t.length - e : n > t.length - e && p(), this.segments = t, this.offset = e, this.m = n;
  }

  return Object.defineProperty(t.prototype, "length", {
    get: function get() {
      return this.m;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    return 0 === t.P(this, e);
  }, t.prototype.child = function (e) {
    var n = this.segments.slice(this.offset, this.limit());
    return e instanceof t ? e.forEach(function (t) {
      n.push(t);
    }) : n.push(e), this.V(n);
  },
  /** The index of one past the last segment of the path. */
  t.prototype.limit = function () {
    return this.offset + this.length;
  }, t.prototype.g = function (t) {
    return t = void 0 === t ? 1 : t, this.V(this.segments, this.offset + t, this.length - t);
  }, t.prototype.p = function () {
    return this.V(this.segments, this.offset, this.length - 1);
  }, t.prototype.v = function () {
    return this.segments[this.offset];
  }, t.prototype.S = function () {
    return this.get(this.length - 1);
  }, t.prototype.get = function (t) {
    return this.segments[this.offset + t];
  }, t.prototype._ = function () {
    return 0 === this.length;
  }, t.prototype.D = function (t) {
    if (t.length < this.length) return !1;

    for (var e = 0; e < this.length; e++) {
      if (this.get(e) !== t.get(e)) return !1;
    }

    return !0;
  }, t.prototype.C = function (t) {
    if (this.length + 1 !== t.length) return !1;

    for (var e = 0; e < this.length; e++) {
      if (this.get(e) !== t.get(e)) return !1;
    }

    return !0;
  }, t.prototype.forEach = function (t) {
    for (var e = this.offset, n = this.limit(); e < n; e++) {
      t(this.segments[e]);
    }
  }, t.prototype.F = function () {
    return this.segments.slice(this.offset, this.limit());
  }, t.P = function (t, e) {
    for (var n = Math.min(t.length, e.length), r = 0; r < n; r++) {
      var i = t.get(r),
          o = e.get(r);
      if (i < o) return -1;
      if (i > o) return 1;
    }

    return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;
  }, t;
}(),
    R =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.prototype.V = function (t, e, r) {
    return new n(t, e, r);
  }, n.prototype.N = function () {
    // NOTE: The client is ignorant of any path segments containing escape
    // sequences (e.g. __id123__) and just passes them through raw (they exist
    // for legacy reasons and should not be used frequently).
    return this.F().join("/");
  }, n.prototype.toString = function () {
    return this.N();
  },
  /**
   * Creates a resource path from the given slash-delimited string.
   */
  n.$ = function (t) {
    // NOTE: The client is ignorant of any path segments containing escape
    // sequences (e.g. __id123__) and just passes them through raw (they exist
    // for legacy reasons and should not be used frequently).
    if (t.indexOf("//") >= 0) throw new S(x.INVALID_ARGUMENT, "Invalid path (" + t + "). Paths must not contain // in them."); // We may still have an empty segment at the beginning or end if they had a
    // leading or trailing slash (which we allow).

    return new n(t.split("/").filter(function (t) {
      return t.length > 0;
    }));
  }, n;
}(P);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


R.k = new R([]);

var O = /^[_a-zA-Z][_a-zA-Z0-9]*$/,
    U =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.prototype.V = function (t, e, r) {
    return new n(t, e, r);
  },
  /**
   * Returns true if the string could be used as a segment in a field path
   * without escaping.
   */
  n.M = function (t) {
    return O.test(t);
  }, n.prototype.N = function () {
    return this.F().map(function (t) {
      return t = t.replace("\\", "\\\\").replace("`", "\\`"), n.M(t) || (t = "`" + t + "`"), t;
    }).join(".");
  }, n.prototype.toString = function () {
    return this.N();
  },
  /**
   * Returns true if this field references the key of a document.
   */
  n.prototype.L = function () {
    return 1 === this.length && "__name__" === this.get(0);
  },
  /**
   * The field designating the key of a document.
   */
  n.O = function () {
    return new n(["__name__"]);
  },
  /**
   * Parses a field string from the given server-formatted string.
   *
   * - Splitting the empty string is not allowed (for now at least).
   * - Empty segments within the string (e.g. if there are two consecutive
   *   separators) are not allowed.
   *
   * TODO(b/37244157): we should make this more strict. Right now, it allows
   * non-identifier path components, even if they aren't escaped.
   */
  n.B = function (t) {
    for (var e = [], r = "", i = 0, o = function o() {
      if (0 === r.length) throw new S(x.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
      e.push(r), r = "";
    }, s = !1; i < t.length;) {
      var u = t[i];

      if ("\\" === u) {
        if (i + 1 === t.length) throw new S(x.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
        var a = t[i + 1];
        if ("\\" !== a && "." !== a && "`" !== a) throw new S(x.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
        r += a, i += 2;
      } else "`" === u ? (s = !s, i++) : "." !== u || s ? (r += u, i++) : (o(), i++);
    }

    if (o(), s) throw new S(x.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
    return new n(e);
  }, n;
}(P);
/** A dot-separated path for navigating sub-objects within a document. */


U.k = new U([]);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var L =
/** @class */
function () {
  function t(t) {
    this.path = t;
  }

  return t.q = function (e) {
    return new t(R.$(e).g(5));
  },
  /** Returns true if the document is in the specified collectionId. */
  t.prototype.U = function (t) {
    return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;
  }, t.prototype.isEqual = function (t) {
    return null !== t && 0 === R.P(this.path, t.path);
  }, t.prototype.toString = function () {
    return this.path.toString();
  }, t.P = function (t, e) {
    return R.P(t.path, e.path);
  }, t.W = function (t) {
    return t.length % 2 == 0;
  },
  /**
   * Creates and returns a new document key with the given segments.
   *
   * @param segments The segments of the path to the document
   * @return A new instance of DocumentKey
   */
  t.j = function (e) {
    return new t(new R(e.slice()));
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Returns whether a variable is either undefined or null.
 */


function V(t) {
  return null == t;
}
/** Returns whether the value represents -0. */


function C(t) {
  // Detect if the value is -0.0. Based on polyfill from
  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
  return -0 === t && 1 / t == -1 / 0;
}
/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value The value to test for being an integer and in the safe range
 */


function q(t) {
  return "number" == typeof t && Number.isInteger(t) && !C(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Converts a Base64 encoded string to a binary string. */


L.EMPTY = new L(new R([]));
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Immutable class that represents a "proto" byte string.
 *
 * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when
 * sent on the wire. This class abstracts away this differentiation by holding
 * the proto byte string in a common class that must be converted into a string
 * before being sent as a proto.
 */

var F =
/** @class */
function () {
  function t(t) {
    this.K = t;
  }

  return t.fromBase64String = function (e) {
    return new t(atob(e));
  }, t.fromUint8Array = function (e) {
    return new t(
    /**
    * Helper function to convert an Uint8array to a binary string.
    */
    function (t) {
      for (var e = "", n = 0; n < t.length; ++n) {
        e += String.fromCharCode(t[n]);
      }

      return e;
    }(e));
  }, t.prototype.toBase64 = function () {
    return t = this.K, btoa(t);
    /** Converts a binary string to a Base64 encoded string. */

    var t;
    /** True if and only if the Base64 conversion functions are available. */
  }, t.prototype.toUint8Array = function () {
    return function (t) {
      for (var e = new Uint8Array(t.length), n = 0; n < t.length; n++) {
        e[n] = t.charCodeAt(n);
      }

      return e;
    }(this.K);
  }, t.prototype.G = function () {
    return 2 * this.K.length;
  }, t.prototype.o = function (t) {
    return m(this.K, t.K);
  }, t.prototype.isEqual = function (t) {
    return this.K === t.K;
  }, t;
}();

F.H = new F("");

var M,
    j,
    B =
/** @class */
function () {
  function t(
  /** The target being listened to. */
  t,
  /**
   * The target ID to which the target corresponds; Assigned by the
   * LocalStore for user listens and by the SyncEngine for limbo watches.
   */
  e,
  /** The purpose of the target. */
  n,
  /**
   * The sequence number of the last transaction during which this target data
   * was modified.
   */
  r,
  /** The latest snapshot version seen for this target. */
  i
  /**
   * The maximum snapshot version at which the associated view
   * contained no limbo documents.
   */
  , o
  /**
   * An opaque, server-assigned token that allows watching a target to be
   * resumed after disconnecting without retransmitting all the data that
   * matches the target. The resume token essentially identifies a point in
   * time from which the server should resume sending results.
   */
  , s) {
    void 0 === i && (i = k.min()), void 0 === o && (o = k.min()), void 0 === s && (s = F.H), this.target = t, this.targetId = e, this.Y = n, this.sequenceNumber = r, this.J = i, this.lastLimboFreeSnapshotVersion = o, this.resumeToken = s;
  }
  /** Creates a new target data instance with an updated sequence number. */


  return t.prototype.X = function (e) {
    return new t(this.target, this.targetId, this.Y, e, this.J, this.lastLimboFreeSnapshotVersion, this.resumeToken);
  },
  /**
   * Creates a new target data instance with an updated resume token and
   * snapshot version.
   */
  t.prototype.Z = function (e, n) {
    return new t(this.target, this.targetId, this.Y, this.sequenceNumber, n, this.lastLimboFreeSnapshotVersion, e);
  },
  /**
   * Creates a new target data instance with an updated last limbo free
   * snapshot version number.
   */
  t.prototype.tt = function (e) {
    return new t(this.target, this.targetId, this.Y, this.sequenceNumber, this.J, e, this.resumeToken);
  }, t;
}(),
    Q = // TODO(b/33078163): just use simplest form of existence filter for now
function Q(t) {
  this.count = t;
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */


function G(t) {
  switch (t) {
    case x.OK:
      return p();

    case x.CANCELLED:
    case x.UNKNOWN:
    case x.DEADLINE_EXCEEDED:
    case x.RESOURCE_EXHAUSTED:
    case x.INTERNAL:
    case x.UNAVAILABLE: // Unauthenticated means something went wrong with our token and we need
    // to retry with new credentials which will happen automatically.

    case x.UNAUTHENTICATED:
      return !1;

    case x.INVALID_ARGUMENT:
    case x.NOT_FOUND:
    case x.ALREADY_EXISTS:
    case x.PERMISSION_DENIED:
    case x.FAILED_PRECONDITION: // Aborted might be retried in some scenarios, but that is dependant on
    // the context and should handled individually by the calling code.
    // See https://cloud.google.com/apis/design/errors.

    case x.ABORTED:
    case x.OUT_OF_RANGE:
    case x.UNIMPLEMENTED:
    case x.DATA_LOSS:
      return !0;

    default:
      return p();
  }
}
/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 */

/**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */


function z(t) {
  if (void 0 === t) // This shouldn't normally happen, but in certain error cases (like trying
    // to send invalid proto messages) we may get an error with no GRPC code.
    return f("GRPC error has no .code"), x.UNKNOWN;

  switch (t) {
    case M.OK:
      return x.OK;

    case M.CANCELLED:
      return x.CANCELLED;

    case M.UNKNOWN:
      return x.UNKNOWN;

    case M.DEADLINE_EXCEEDED:
      return x.DEADLINE_EXCEEDED;

    case M.RESOURCE_EXHAUSTED:
      return x.RESOURCE_EXHAUSTED;

    case M.INTERNAL:
      return x.INTERNAL;

    case M.UNAVAILABLE:
      return x.UNAVAILABLE;

    case M.UNAUTHENTICATED:
      return x.UNAUTHENTICATED;

    case M.INVALID_ARGUMENT:
      return x.INVALID_ARGUMENT;

    case M.NOT_FOUND:
      return x.NOT_FOUND;

    case M.ALREADY_EXISTS:
      return x.ALREADY_EXISTS;

    case M.PERMISSION_DENIED:
      return x.PERMISSION_DENIED;

    case M.FAILED_PRECONDITION:
      return x.FAILED_PRECONDITION;

    case M.ABORTED:
      return x.ABORTED;

    case M.OUT_OF_RANGE:
      return x.OUT_OF_RANGE;

    case M.UNIMPLEMENTED:
      return x.UNIMPLEMENTED;

    case M.DATA_LOSS:
      return x.DATA_LOSS;

    default:
      return p();
  }
}
/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */


(j = M || (M = {}))[j.OK = 0] = "OK", j[j.CANCELLED = 1] = "CANCELLED", j[j.UNKNOWN = 2] = "UNKNOWN", j[j.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", j[j.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", j[j.NOT_FOUND = 5] = "NOT_FOUND", j[j.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", j[j.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", j[j.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", j[j.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", j[j.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", j[j.ABORTED = 10] = "ABORTED", j[j.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", j[j.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", j[j.INTERNAL = 13] = "INTERNAL", j[j.UNAVAILABLE = 14] = "UNAVAILABLE", j[j.DATA_LOSS = 15] = "DATA_LOSS";
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.

var W =
/** @class */
function () {
  function t(t, e) {
    this.P = t, this.root = e || K.EMPTY;
  } // Returns a copy of the map, with the specified key/value added or replaced.


  return t.prototype.et = function (e, n) {
    return new t(this.P, this.root.et(e, n, this.P).st(null, null, K.nt, null, null));
  }, // Returns a copy of the map, with the specified key removed.
  t.prototype.remove = function (e) {
    return new t(this.P, this.root.remove(e, this.P).st(null, null, K.nt, null, null));
  }, // Returns the value of the node with the given key, or null.
  t.prototype.get = function (t) {
    for (var e = this.root; !e._();) {
      var n = this.P(t, e.key);
      if (0 === n) return e.value;
      n < 0 ? e = e.left : n > 0 && (e = e.right);
    }

    return null;
  }, // Returns the index of the element in this sorted map, or -1 if it doesn't
  // exist.
  t.prototype.indexOf = function (t) {
    for ( // Number of nodes that were pruned when descending right
    var e = 0, n = this.root; !n._();) {
      var r = this.P(t, n.key);
      if (0 === r) return e + n.left.size;
      r < 0 ? n = n.left : ( // Count all nodes left of the node plus the node itself
      e += n.left.size + 1, n = n.right);
    } // Node not found


    return -1;
  }, t.prototype._ = function () {
    return this.root._();
  }, Object.defineProperty(t.prototype, "size", {
    // Returns the total number of nodes in the map.
    get: function get() {
      return this.root.size;
    },
    enumerable: !0,
    configurable: !0
  }), // Returns the minimum key in the map.
  t.prototype.it = function () {
    return this.root.it();
  }, // Returns the maximum key in the map.
  t.prototype.rt = function () {
    return this.root.rt();
  }, // Traverses the map in key order and calls the specified action function
  // for each key/value pair. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ot = function (t) {
    return this.root.ot(t);
  }, t.prototype.forEach = function (t) {
    this.ot(function (e, n) {
      return t(e, n), !1;
    });
  }, t.prototype.toString = function () {
    var t = [];
    return this.ot(function (e, n) {
      return t.push(e + ":" + n), !1;
    }), "{" + t.join(", ") + "}";
  }, // Traverses the map in reverse key order and calls the specified action
  // function for each key/value pair. If action returns true, traversal is
  // aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ht = function (t) {
    return this.root.ht(t);
  }, // Returns an iterator over the SortedMap.
  t.prototype.at = function () {
    return new H(this.root, null, this.P, !1);
  }, t.prototype.ut = function (t) {
    return new H(this.root, t, this.P, !1);
  }, t.prototype.ct = function () {
    return new H(this.root, null, this.P, !0);
  }, t.prototype.lt = function (t) {
    return new H(this.root, t, this.P, !0);
  }, t;
}(),
    H =
/** @class */
function () {
  function t(t, e, n, r) {
    this._t = r, this.ft = [];

    for (var i = 1; !t._();) {
      if (i = e ? n(t.key, e) : 1, // flip the comparison if we're going in reverse
      r && (i *= -1), i < 0) // This node is less than our start key. ignore it
        t = this._t ? t.left : t.right;else {
        if (0 === i) {
          // This node is exactly equal to our start key. Push it on the stack,
          // but stop iterating;
          this.ft.push(t);
          break;
        } // This node is greater than our start key, add it to the stack and move
        // to the next one


        this.ft.push(t), t = this._t ? t.right : t.left;
      }
    }
  }

  return t.prototype.dt = function () {
    var t = this.ft.pop(),
        e = {
      key: t.key,
      value: t.value
    };
    if (this._t) for (t = t.left; !t._();) {
      this.ft.push(t), t = t.right;
    } else for (t = t.right; !t._();) {
      this.ft.push(t), t = t.left;
    }
    return e;
  }, t.prototype.wt = function () {
    return this.ft.length > 0;
  }, t.prototype.Tt = function () {
    if (0 === this.ft.length) return null;
    var t = this.ft[this.ft.length - 1];
    return {
      key: t.key,
      value: t.value
    };
  }, t;
}(),
    K =
/** @class */
function () {
  function t(e, n, r, i, o) {
    this.key = e, this.value = n, this.color = null != r ? r : t.RED, this.left = null != i ? i : t.EMPTY, this.right = null != o ? o : t.EMPTY, this.size = this.left.size + 1 + this.right.size;
  } // Returns a copy of the current node, optionally replacing pieces of it.


  return t.prototype.st = function (e, n, r, i, o) {
    return new t(null != e ? e : this.key, null != n ? n : this.value, null != r ? r : this.color, null != i ? i : this.left, null != o ? o : this.right);
  }, t.prototype._ = function () {
    return !1;
  }, // Traverses the tree in key order and calls the specified action function
  // for each node. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ot = function (t) {
    return this.left.ot(t) || t(this.key, this.value) || this.right.ot(t);
  }, // Traverses the tree in reverse key order and calls the specified action
  // function for each node. If action returns true, traversal is aborted.
  // Returns the first truthy value returned by action, or the last falsey
  // value returned by action.
  t.prototype.ht = function (t) {
    return this.right.ht(t) || t(this.key, this.value) || this.left.ht(t);
  }, // Returns the minimum node in the tree.
  t.prototype.min = function () {
    return this.left._() ? this : this.left.min();
  }, // Returns the maximum key in the tree.
  t.prototype.it = function () {
    return this.min().key;
  }, // Returns the maximum key in the tree.
  t.prototype.rt = function () {
    return this.right._() ? this.key : this.right.rt();
  }, // Returns new tree, with the key/value added.
  t.prototype.et = function (t, e, n) {
    var r = this,
        i = n(t, r.key);
    return (r = i < 0 ? r.st(null, null, null, r.left.et(t, e, n), null) : 0 === i ? r.st(null, e, null, null, null) : r.st(null, null, null, null, r.right.et(t, e, n))).Et();
  }, t.prototype.It = function () {
    if (this.left._()) return t.EMPTY;
    var e = this;
    return e.left.At() || e.left.left.At() || (e = e.Rt()), (e = e.st(null, null, null, e.left.It(), null)).Et();
  }, // Returns new tree, with the specified item removed.
  t.prototype.remove = function (e, n) {
    var r,
        i = this;
    if (n(e, i.key) < 0) i.left._() || i.left.At() || i.left.left.At() || (i = i.Rt()), i = i.st(null, null, null, i.left.remove(e, n), null);else {
      if (i.left.At() && (i = i.Pt()), i.right._() || i.right.At() || i.right.left.At() || (i = i.Vt()), 0 === n(e, i.key)) {
        if (i.right._()) return t.EMPTY;
        r = i.right.min(), i = i.st(r.key, r.value, null, null, i.right.It());
      }

      i = i.st(null, null, null, null, i.right.remove(e, n));
    }
    return i.Et();
  }, t.prototype.At = function () {
    return this.color;
  }, // Returns new tree after performing any needed rotations.
  t.prototype.Et = function () {
    var t = this;
    return t.right.At() && !t.left.At() && (t = t.gt()), t.left.At() && t.left.left.At() && (t = t.Pt()), t.left.At() && t.right.At() && (t = t.pt()), t;
  }, t.prototype.Rt = function () {
    var t = this.pt();
    return t.right.left.At() && (t = (t = (t = t.st(null, null, null, null, t.right.Pt())).gt()).pt()), t;
  }, t.prototype.Vt = function () {
    var t = this.pt();
    return t.left.left.At() && (t = (t = t.Pt()).pt()), t;
  }, t.prototype.gt = function () {
    var e = this.st(null, null, t.RED, null, this.right.left);
    return this.right.st(null, null, this.color, e, null);
  }, t.prototype.Pt = function () {
    var e = this.st(null, null, t.RED, this.left.right, null);
    return this.left.st(null, null, this.color, null, e);
  }, t.prototype.pt = function () {
    var t = this.left.st(null, null, !this.left.color, null, null),
        e = this.right.st(null, null, !this.right.color, null, null);
    return this.st(null, null, !this.color, t, e);
  }, // For testing.
  t.prototype.yt = function () {
    var t = this.bt();
    return Math.pow(2, t) <= this.size + 1;
  }, // In a balanced RB tree, the black-depth (number of black nodes) from root to
  // leaves is equal on both sides.  This function verifies that or asserts.
  t.prototype.bt = function () {
    if (this.At() && this.left.At()) throw p();
    if (this.right.At()) throw p();
    var t = this.left.bt();
    if (t !== this.right.bt()) throw p();
    return t + (this.At() ? 0 : 1);
  }, t;
}(); // end SortedMap
// An iterator over an LLRBNode.
// end LLRBNode
// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any


K.EMPTY = null, K.RED = !0, K.nt = !1, // end LLRBEmptyNode
K.EMPTY = new (
/** @class */
function () {
  function t() {
    this.size = 0;
  }

  return Object.defineProperty(t.prototype, "key", {
    get: function get() {
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "value", {
    get: function get() {
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "color", {
    get: function get() {
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "left", {
    get: function get() {
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "right", {
    get: function get() {
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), // Returns a copy of the current node.
  t.prototype.st = function (t, e, n, r, i) {
    return this;
  }, // Returns a copy of the tree, with the specified key/value added.
  t.prototype.et = function (t, e, n) {
    return new K(t, e);
  }, // Returns a copy of the tree, with the specified key removed.
  t.prototype.remove = function (t, e) {
    return this;
  }, t.prototype._ = function () {
    return !0;
  }, t.prototype.ot = function (t) {
    return !1;
  }, t.prototype.ht = function (t) {
    return !1;
  }, t.prototype.it = function () {
    return null;
  }, t.prototype.rt = function () {
    return null;
  }, t.prototype.At = function () {
    return !1;
  }, // For testing.
  t.prototype.yt = function () {
    return !0;
  }, t.prototype.bt = function () {
    return 0;
  }, t;
}())();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */

var Y =
/** @class */
function () {
  function t(t) {
    this.P = t, this.data = new W(this.P);
  }

  return t.prototype.has = function (t) {
    return null !== this.data.get(t);
  }, t.prototype.first = function () {
    return this.data.it();
  }, t.prototype.last = function () {
    return this.data.rt();
  }, Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.data.size;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.indexOf = function (t) {
    return this.data.indexOf(t);
  },
  /** Iterates elements in order defined by "comparator" */
  t.prototype.forEach = function (t) {
    this.data.ot(function (e, n) {
      return t(e), !1;
    });
  },
  /** Iterates over `elem`s such that: range[0] <= elem < range[1]. */
  t.prototype.vt = function (t, e) {
    for (var n = this.data.ut(t[0]); n.wt();) {
      var r = n.dt();
      if (this.P(r.key, t[1]) >= 0) return;
      e(r.key);
    }
  },
  /**
   * Iterates over `elem`s such that: start <= elem until false is returned.
   */
  t.prototype.St = function (t, e) {
    var n;

    for (n = void 0 !== e ? this.data.ut(e) : this.data.at(); n.wt();) {
      if (!t(n.dt().key)) return;
    }
  },
  /** Finds the least element greater than or equal to `elem`. */
  t.prototype.Dt = function (t) {
    var e = this.data.ut(t);
    return e.wt() ? e.dt().key : null;
  }, t.prototype.at = function () {
    return new X(this.data.at());
  }, t.prototype.ut = function (t) {
    return new X(this.data.ut(t));
  },
  /** Inserts or updates an element */
  t.prototype.add = function (t) {
    return this.st(this.data.remove(t).et(t, !0));
  },
  /** Deletes an element */
  t.prototype.delete = function (t) {
    return this.has(t) ? this.st(this.data.remove(t)) : this;
  }, t.prototype._ = function () {
    return this.data._();
  }, t.prototype.Ct = function (t) {
    var e = this; // Make sure `result` always refers to the larger one of the two sets.

    return e.size < t.size && (e = t, t = this), t.forEach(function (t) {
      e = e.add(t);
    }), e;
  }, t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) return !1;
    if (this.size !== e.size) return !1;

    for (var n = this.data.at(), r = e.data.at(); n.wt();) {
      var i = n.dt().key,
          o = r.dt().key;
      if (0 !== this.P(i, o)) return !1;
    }

    return !0;
  }, t.prototype.F = function () {
    var t = [];
    return this.forEach(function (e) {
      t.push(e);
    }), t;
  }, t.prototype.toString = function () {
    var t = [];
    return this.forEach(function (e) {
      return t.push(e);
    }), "SortedSet(" + t.toString() + ")";
  }, t.prototype.st = function (e) {
    var n = new t(this.P);
    return n.data = e, n;
  }, t;
}(),
    X =
/** @class */
function () {
  function t(t) {
    this.Ft = t;
  }

  return t.prototype.dt = function () {
    return this.Ft.dt().key;
  }, t.prototype.wt = function () {
    return this.Ft.wt();
  }, t;
}(),
    $ = new W(L.P);

function J() {
  return $;
}

function Z() {
  return J();
}

var tt = new W(L.P);

function et() {
  return tt;
}

var nt = new W(L.P),
    rt = new Y(L.P);

function it() {
  for (var t = [], e = 0; e < arguments.length; e++) {
    t[e] = arguments[e];
  }

  for (var n = rt, r = 0, i = t; r < i.length; r++) {
    var o = i[r];
    n = n.add(o);
  }

  return n;
}

var ot = new Y(m);

function st() {
  return ot;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */


var ut =
/** @class */
function () {
  /** The default ordering is by key if the comparator is omitted */
  function t(t) {
    // We are adding document key comparator to the end as it's the only
    // guaranteed unique property of a document.
    this.P = t ? function (e, n) {
      return t(e, n) || L.P(e.key, n.key);
    } : function (t, e) {
      return L.P(t.key, e.key);
    }, this.Nt = et(), this.$t = new W(this.P)
    /**
    * Returns an empty copy of the existing DocumentSet, using the same
    * comparator.
    */
    ;
  }

  return t.kt = function (e) {
    return new t(e.P);
  }, t.prototype.has = function (t) {
    return null != this.Nt.get(t);
  }, t.prototype.get = function (t) {
    return this.Nt.get(t);
  }, t.prototype.first = function () {
    return this.$t.it();
  }, t.prototype.last = function () {
    return this.$t.rt();
  }, t.prototype._ = function () {
    return this.$t._();
  },
  /**
   * Returns the index of the provided key in the document set, or -1 if the
   * document key is not present in the set;
   */
  t.prototype.indexOf = function (t) {
    var e = this.Nt.get(t);
    return e ? this.$t.indexOf(e) : -1;
  }, Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.$t.size;
    },
    enumerable: !0,
    configurable: !0
  }),
  /** Iterates documents in order defined by "comparator" */
  t.prototype.forEach = function (t) {
    this.$t.ot(function (e, n) {
      return t(e), !1;
    });
  },
  /** Inserts or updates a document with the same key */
  t.prototype.add = function (t) {
    // First remove the element if we have it.
    var e = this.delete(t.key);
    return e.st(e.Nt.et(t.key, t), e.$t.et(t, null));
  },
  /** Deletes a document with a given key */
  t.prototype.delete = function (t) {
    var e = this.get(t);
    return e ? this.st(this.Nt.remove(t), this.$t.remove(e)) : this;
  }, t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) return !1;
    if (this.size !== e.size) return !1;

    for (var n = this.$t.at(), r = e.$t.at(); n.wt();) {
      var i = n.dt().key,
          o = r.dt().key;
      if (!i.isEqual(o)) return !1;
    }

    return !0;
  }, t.prototype.toString = function () {
    var t = [];
    return this.forEach(function (e) {
      t.push(e.toString());
    }), 0 === t.length ? "DocumentSet ()" : "DocumentSet (\n  " + t.join("  \n") + "\n)";
  }, t.prototype.st = function (e, n) {
    var r = new t();
    return r.P = this.P, r.Nt = e, r.$t = n, r;
  }, t;
}(),
    at =
/** @class */
function () {
  function t() {
    this.xt = new W(L.P);
  }

  return t.prototype.track = function (t) {
    var e = t.doc.key,
        n = this.xt.get(e);
    n ? // Merge the new change with the existing change.
    0
    /* Added */
    !== t.type && 3
    /* Metadata */
    === n.type ? this.xt = this.xt.et(e, t) : 3
    /* Metadata */
    === t.type && 1
    /* Removed */
    !== n.type ? this.xt = this.xt.et(e, {
      type: n.type,
      doc: t.doc
    }) : 2
    /* Modified */
    === t.type && 2
    /* Modified */
    === n.type ? this.xt = this.xt.et(e, {
      type: 2
      /* Modified */
      ,
      doc: t.doc
    }) : 2
    /* Modified */
    === t.type && 0
    /* Added */
    === n.type ? this.xt = this.xt.et(e, {
      type: 0
      /* Added */
      ,
      doc: t.doc
    }) : 1
    /* Removed */
    === t.type && 0
    /* Added */
    === n.type ? this.xt = this.xt.remove(e) : 1
    /* Removed */
    === t.type && 2
    /* Modified */
    === n.type ? this.xt = this.xt.et(e, {
      type: 1
      /* Removed */
      ,
      doc: n.doc
    }) : 0
    /* Added */
    === t.type && 1
    /* Removed */
    === n.type ? this.xt = this.xt.et(e, {
      type: 2
      /* Modified */
      ,
      doc: t.doc
    }) : // This includes these cases, which don't make sense:
    // Added->Added
    // Removed->Removed
    // Modified->Added
    // Removed->Modified
    // Metadata->Added
    // Removed->Metadata
    p() : this.xt = this.xt.et(e, t);
  }, t.prototype.Mt = function () {
    var t = [];
    return this.xt.ot(function (e, n) {
      t.push(n);
    }), t;
  }, t;
}(),
    ct =
/** @class */
function () {
  function t(t, e, n, r, i, o, s, u) {
    this.query = t, this.docs = e, this.Lt = n, this.docChanges = r, this.Ot = i, this.fromCache = o, this.Bt = s, this.qt = u
    /** Returns a view snapshot as if all documents in the snapshot were added. */
    ;
  }

  return t.Ut = function (e, n, r, i) {
    var o = [];
    return n.forEach(function (t) {
      o.push({
        type: 0
        /* Added */
        ,
        doc: t
      });
    }), new t(e, n, ut.kt(n), o, r, i,
    /* syncStateChanged= */
    !0,
    /* excludesMetadataChanges= */
    !1);
  }, Object.defineProperty(t.prototype, "hasPendingWrites", {
    get: function get() {
      return !this.Ot._();
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.isEqual = function (t) {
    if (!(this.fromCache === t.fromCache && this.Bt === t.Bt && this.Ot.isEqual(t.Ot) && this.query.isEqual(t.query) && this.docs.isEqual(t.docs) && this.Lt.isEqual(t.Lt))) return !1;
    var e = this.docChanges,
        n = t.docChanges;
    if (e.length !== n.length) return !1;

    for (var r = 0; r < e.length; r++) {
      if (e[r].type !== n[r].type || !e[r].doc.isEqual(n[r].doc)) return !1;
    }

    return !0;
  }, t;
}(),
    ht =
/** @class */
function () {
  function t(
  /**
   * The snapshot version this event brings us up to, or MIN if not set.
   */
  t,
  /**
   * A map from target to changes to the target. See TargetChange.
   */
  e,
  /**
   * A set of targets that is known to be inconsistent. Listens for these
   * targets should be re-established without resume tokens.
   */
  n,
  /**
   * A set of which documents have changed or been deleted, along with the
   * doc's new values (if not deleted).
   */
  r,
  /**
   * A set of which document updates are due only to limbo resolution targets.
   */
  i) {
    this.J = t, this.Qt = e, this.Wt = n, this.jt = r, this.Kt = i;
  }
  /**
   * HACK: Views require RemoteEvents in order to determine whether the view is
   * CURRENT, but secondary tabs don't receive remote events. So this method is
   * used to create a synthesized RemoteEvent that can be used to apply a
   * CURRENT status change to a View, for queries executed in a different tab.
   */
  // PORTING NOTE: Multi-tab only


  return t.Gt = function (e, n) {
    var r = new Map();
    return r.set(e, ft.zt(e, n)), new t(k.min(), r, st(), J(), it());
  }, t;
}(),
    ft =
/** @class */
function () {
  function t(
  /**
   * An opaque, server-assigned token that allows watching a query to be resumed
   * after disconnecting without retransmitting all the data that matches the
   * query. The resume token essentially identifies a point in time from which
   * the server should resume sending results.
   */
  t,
  /**
   * The "current" (synced) status of this target. Note that "current"
   * has special meaning in the RPC protocol that implies that a target is
   * both up-to-date and consistent with the rest of the watch stream.
   */
  e,
  /**
   * The set of documents that were newly assigned to this target as part of
   * this remote event.
   */
  n,
  /**
   * The set of documents that were already assigned to this target but received
   * an update during this remote event.
   */
  r,
  /**
   * The set of documents that were removed from this target as part of this
   * remote event.
   */
  i) {
    this.resumeToken = t, this.Ht = e, this.Yt = n, this.Jt = r, this.Xt = i
    /**
    * This method is used to create a synthesized TargetChanges that can be used to
    * apply a CURRENT status change to a View (for queries executed in a different
    * tab) or for new queries (to raise snapshots with correct CURRENT status).
    */
    ;
  }

  return t.zt = function (e, n) {
    return new t(F.H, n, it(), it(), it());
  }, t;
}(),
    lt = function lt(
/** The new document applies to all of these targets. */
t,
/** The new document is removed from all of these targets. */
e,
/** The key of the document for this change. */
n,
/**
     * The new document or NoDocument if it was deleted. Is null if the
     * document went out of view without the server sending a new document.
     */
r) {
  this.Zt = t, this.removedTargetIds = e, this.key = n, this.te = r;
},
    pt = function pt(t, e) {
  this.targetId = t, this.ee = e;
},
    dt = function dt(
/** What kind of change occurred to the watch target. */
t,
/** The target IDs that were added/removed/set. */
e,
/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */
n
/** An RPC error indicating why the watch failed. */
, r) {
  void 0 === n && (n = F.H), void 0 === r && (r = null), this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = r;
},
    yt =
/** @class */
function () {
  function t() {
    /**
     * The number of pending responses (adds or removes) that we are waiting on.
     * We only consider targets active that have no pending responses.
     */
    this.se = 0,
    /**
         * Keeps track of the document changes since the last raised snapshot.
         *
         * These changes are continuously updated as we receive document updates and
         * always reflect the current set of changes against the last issued snapshot.
         */
    this.ne = mt(),
    /** See public getters for explanations of these fields. */
    this.ie = F.H, this.re = !1,
    /**
         * Whether this target state should be included in the next snapshot. We
         * initialize to true so that newly-added targets are included in the next
         * RemoteEvent.
         */
    this.oe = !0;
  }

  return Object.defineProperty(t.prototype, "Ht", {
    /**
     * Whether this target has been marked 'current'.
     *
     * 'Current' has special meaning in the RPC protocol: It implies that the
     * Watch backend has sent us all changes up to the point at which the target
     * was added and that the target is consistent with the rest of the watch
     * stream.
     */
    get: function get() {
      return this.re;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "resumeToken", {
    /** The last resume token sent to us for this target. */
    get: function get() {
      return this.ie;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "he", {
    /** Whether this target has pending target adds or target removes. */
    get: function get() {
      return 0 !== this.se;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "ae", {
    /** Whether we have modified any state that should trigger a snapshot. */
    get: function get() {
      return this.oe;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * Applies the resume token to the TargetChange, but only when it has a new
   * value. Empty resumeTokens are discarded.
   */
  t.prototype.ue = function (t) {
    t.G() > 0 && (this.oe = !0, this.ie = t);
  },
  /**
   * Creates a target change from the current set of changes.
   *
   * To reset the document changes after raising this snapshot, call
   * `clearPendingChanges()`.
   */
  t.prototype.ce = function () {
    var t = it(),
        e = it(),
        n = it();
    return this.ne.forEach(function (r, i) {
      switch (i) {
        case 0
        /* Added */
        :
          t = t.add(r);
          break;

        case 2
        /* Modified */
        :
          e = e.add(r);
          break;

        case 1
        /* Removed */
        :
          n = n.add(r);
          break;

        default:
          p();
      }
    }), new ft(this.ie, this.re, t, e, n);
  },
  /**
   * Resets the document changes and sets `hasPendingChanges` to false.
   */
  t.prototype.le = function () {
    this.oe = !1, this.ne = mt();
  }, t.prototype._e = function (t, e) {
    this.oe = !0, this.ne = this.ne.et(t, e);
  }, t.prototype.fe = function (t) {
    this.oe = !0, this.ne = this.ne.remove(t);
  }, t.prototype.de = function () {
    this.se += 1;
  }, t.prototype.we = function () {
    this.se -= 1;
  }, t.prototype.Te = function () {
    this.oe = !0, this.re = !0;
  }, t;
}(),
    vt =
/** @class */
function () {
  function t(t) {
    this.Ee = t,
    /** The internal state of all tracked targets. */
    this.Ie = new Map(),
    /** Keeps track of the documents to update since the last raised snapshot. */
    this.Ae = J(),
    /** A mapping of document keys to their set of target IDs. */
    this.Re = gt(),
    /**
         * A list of targets with existence filter mismatches. These targets are
         * known to be inconsistent and their listens needs to be re-established by
         * RemoteStore.
         */
    this.me = new Y(m)
    /**
    * Processes and adds the DocumentWatchChange to the current set of changes.
    */
    ;
  }

  return t.prototype.Pe = function (t) {
    for (var e = 0, n = t.Zt; e < n.length; e++) {
      var r = n[e];
      t.te instanceof Oe ? this.Ve(r, t.te) : t.te instanceof Ue && this.ge(r, t.key, t.te);
    }

    for (var i = 0, o = t.removedTargetIds; i < o.length; i++) {
      var s = o[i];
      this.ge(s, t.key, t.te);
    }
  },
  /** Processes and adds the WatchTargetChange to the current set of changes. */
  t.prototype.pe = function (t) {
    var e = this;
    this.ye(t, function (n) {
      var r = e.be(n);

      switch (t.state) {
        case 0
        /* NoChange */
        :
          e.ve(n) && r.ue(t.resumeToken);
          break;

        case 1
        /* Added */
        :
          // We need to decrement the number of pending acks needed from watch
          // for this targetId.
          r.we(), r.he || // We have a freshly added target, so we need to reset any state
          // that we had previously. This can happen e.g. when remove and add
          // back a target for existence filter mismatches.
          r.le(), r.ue(t.resumeToken);
          break;

        case 2
        /* Removed */
        :
          // We need to keep track of removed targets to we can post-filter and
          // remove any target changes.
          // We need to decrement the number of pending acks needed from watch
          // for this targetId.
          r.we(), r.he || e.removeTarget(n);
          break;

        case 3
        /* Current */
        :
          e.ve(n) && (r.Te(), r.ue(t.resumeToken));
          break;

        case 4
        /* Reset */
        :
          e.ve(n) && ( // Reset the target and synthesizes removes for all existing
          // documents. The backend will re-add any documents that still
          // match the target before it sends the next global snapshot.
          e.Se(n), r.ue(t.resumeToken));
          break;

        default:
          p();
      }
    });
  },
  /**
   * Iterates over all targetIds that the watch change applies to: either the
   * targetIds explicitly listed in the change or the targetIds of all currently
   * active targets.
   */
  t.prototype.ye = function (t, e) {
    var n = this;
    t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.Ie.forEach(function (t, r) {
      n.ve(r) && e(r);
    });
  },
  /**
   * Handles existence filters and synthesizes deletes for filter mismatches.
   * Targets that are invalidated by filter mismatches are added to
   * `pendingTargetResets`.
   */
  t.prototype.De = function (t) {
    var e = t.targetId,
        n = t.ee.count,
        r = this.Ce(e);

    if (r) {
      var i = r.target;
      if (Je(i)) {
        if (0 === n) {
          // The existence filter told us the document does not exist. We deduce
          // that this document does not exist and apply a deleted document to
          // our updates. Without applying this deleted document there might be
          // another query that will raise this document as part of a snapshot
          // until it is resolved, essentially exposing inconsistency between
          // queries.
          var o = new L(i.path);
          this.ge(e, o, new Ue(o, k.min()));
        } else d(1 === n);
      } else this.Fe(e) !== n && ( // Existence filter mismatch: We reset the mapping and raise a new
      // snapshot with `isFromCache:true`.
      this.Se(e), this.me = this.me.add(e));
    }
  },
  /**
   * Converts the currently accumulated state into a remote event at the
   * provided snapshot version. Resets the accumulated changes before returning.
   */
  t.prototype.Ne = function (t) {
    var e = this,
        n = new Map();
    this.Ie.forEach(function (r, i) {
      var o = e.Ce(i);

      if (o) {
        if (r.Ht && Je(o.target)) {
          // Document queries for document that don't exist can produce an empty
          // result set. To update our local cache, we synthesize a document
          // delete if we have not previously received the document. This
          // resolves the limbo state of the document, removing it from
          // limboDocumentRefs.
          // TODO(dimond): Ideally we would have an explicit lookup target
          // instead resulting in an explicit delete message and we could
          // remove this special logic.
          var s = new L(o.target.path);
          null !== e.Ae.get(s) || e.$e(i, s) || e.ge(i, s, new Ue(s, t));
        }

        r.ae && (n.set(i, r.ce()), r.le());
      }
    });
    var r = it(); // We extract the set of limbo-only document updates as the GC logic
    // special-cases documents that do not appear in the target cache.
    // TODO(gsoltis): Expand on this comment once GC is available in the JS
    // client.

    this.Re.forEach(function (t, n) {
      var i = !0;
      n.St(function (t) {
        var n = e.Ce(t);
        return !n || 2
        /* LimboResolution */
        === n.Y || (i = !1, !1);
      }), i && (r = r.add(t));
    });
    var i = new ht(t, n, this.me, this.Ae, r);
    return this.Ae = J(), this.Re = gt(), this.me = new Y(m), i;
  },
  /**
   * Adds the provided document to the internal list of document updates and
   * its document key to the given target's mapping.
   */
  // Visible for testing.
  t.prototype.Ve = function (t, e) {
    if (this.ve(t)) {
      var n = this.$e(t, e.key) ? 2
      /* Modified */
      : 0
      /* Added */
      ;
      this.be(t)._e(e.key, n), this.Ae = this.Ae.et(e.key, e), this.Re = this.Re.et(e.key, this.ke(e.key).add(t));
    }
  },
  /**
   * Removes the provided document from the target mapping. If the
   * document no longer matches the target, but the document's state is still
   * known (e.g. we know that the document was deleted or we received the change
   * that caused the filter mismatch), the new document can be provided
   * to update the remote document cache.
   */
  // Visible for testing.
  t.prototype.ge = function (t, e, n) {
    if (this.ve(t)) {
      var r = this.be(t);
      this.$e(t, e) ? r._e(e, 1
      /* Removed */
      ) : // The document may have entered and left the target before we raised a
      // snapshot, so we can just ignore the change.
      r.fe(e), this.Re = this.Re.et(e, this.ke(e).delete(t)), n && (this.Ae = this.Ae.et(e, n));
    }
  }, t.prototype.removeTarget = function (t) {
    this.Ie.delete(t);
  },
  /**
   * Returns the current count of documents in the target. This includes both
   * the number of documents that the LocalStore considers to be part of the
   * target as well as any accumulated changes.
   */
  t.prototype.Fe = function (t) {
    var e = this.be(t).ce();
    return this.Ee.xe(t).size + e.Yt.size - e.Xt.size;
  },
  /**
   * Increment the number of acks needed from watch before we can consider the
   * server to be 'in-sync' with the client's active targets.
   */
  t.prototype.de = function (t) {
    this.be(t).de();
  }, t.prototype.be = function (t) {
    var e = this.Ie.get(t);
    return e || (e = new yt(), this.Ie.set(t, e)), e;
  }, t.prototype.ke = function (t) {
    var e = this.Re.get(t);
    return e || (e = new Y(m), this.Re = this.Re.et(t, e)), e;
  },
  /**
   * Verifies that the user is still interested in this target (by calling
   * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
   * from watch.
   */
  t.prototype.ve = function (t) {
    var e = null !== this.Ce(t);
    return e || h("WatchChangeAggregator", "Detected inactive target", t), e;
  },
  /**
   * Returns the TargetData for an active target (i.e. a target that the user
   * is still interested in that has no outstanding target change requests).
   */
  t.prototype.Ce = function (t) {
    var e = this.Ie.get(t);
    return e && e.he ? null : this.Ee.Me(t);
  },
  /**
   * Resets the state of a Watch target to its initial state (e.g. sets
   * 'current' to false, clears the resume token and removes its target mapping
   * from all documents).
   */
  t.prototype.Se = function (t) {
    var e = this;
    this.Ie.set(t, new yt()), this.Ee.xe(t).forEach(function (n) {
      e.ge(t, n,
      /*updatedDocument=*/
      null);
    });
  },
  /**
   * Returns whether the LocalStore considers the document to be part of the
   * specified target.
   */
  t.prototype.$e = function (t, e) {
    return this.Ee.xe(t).has(e);
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */


function gt() {
  return new W(L.P);
}

function mt() {
  return new W(L.P);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Represents a locally-applied ServerTimestamp.
 *
 * Server Timestamps are backed by MapValues that contain an internal field
 * `__type__` with a value of `server_timestamp`. The previous value and local
 * write time are stored in its `__previous_value__` and `__local_write_time__`
 * fields respectively.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   TransformMutation (see TransformMutation.applyTo()). They can only exist in
 *   the local view of a document. Therefore they do not need to be parsed or
 *   serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */


function wt(t) {
  var e, n;
  return "server_timestamp" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);
}
/**
 * Creates a new ServerTimestamp proto value (using the internal format).
 */

/**
 * Returns the local time at which this timestamp was first set.
 */


function _t(t) {
  var e = St(t.mapValue.fields.__local_write_time__.timestampValue);
  return new D(e.seconds, e.nanos);
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// A RegExp matching ISO 8601 UTC timestamps with optional fraction.


var bt = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);
/** Extracts the backend's type order for the provided value. */

function It(t) {
  return "nullValue" in t ? 0
  /* NullValue */
  : "booleanValue" in t ? 1
  /* BooleanValue */
  : "integerValue" in t || "doubleValue" in t ? 2
  /* NumberValue */
  : "timestampValue" in t ? 3
  /* TimestampValue */
  : "stringValue" in t ? 5
  /* StringValue */
  : "bytesValue" in t ? 6
  /* BlobValue */
  : "referenceValue" in t ? 7
  /* RefValue */
  : "geoPointValue" in t ? 8
  /* GeoPointValue */
  : "arrayValue" in t ? 9
  /* ArrayValue */
  : "mapValue" in t ? wt(t) ? 4
  /* ServerTimestampValue */
  : 10
  /* ObjectValue */
  : p();
}
/** Tests `left` and `right` for equality based on the backend semantics. */


function Et(t, e) {
  var n = It(t);
  if (n !== It(e)) return !1;

  switch (n) {
    case 0
    /* NullValue */
    :
      return !0;

    case 1
    /* BooleanValue */
    :
      return t.booleanValue === e.booleanValue;

    case 4
    /* ServerTimestampValue */
    :
      return _t(t).isEqual(_t(e));

    case 3
    /* TimestampValue */
    :
      return function (t, e) {
        if ("string" == typeof t.timestampValue && "string" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) // Use string equality for ISO 8601 timestamps
          return t.timestampValue === e.timestampValue;
        var n = St(t.timestampValue),
            r = St(e.timestampValue);
        return n.seconds === r.seconds && n.nanos === r.nanos;
      }(t, e);

    case 5
    /* StringValue */
    :
      return t.stringValue === e.stringValue;

    case 6
    /* BlobValue */
    :
      return function (t, e) {
        return kt(t.bytesValue).isEqual(kt(e.bytesValue));
      }(t, e);

    case 7
    /* RefValue */
    :
      return t.referenceValue === e.referenceValue;

    case 8
    /* GeoPointValue */
    :
      return function (t, e) {
        return Dt(t.geoPointValue.latitude) === Dt(e.geoPointValue.latitude) && Dt(t.geoPointValue.longitude) === Dt(e.geoPointValue.longitude);
      }(t, e);

    case 2
    /* NumberValue */
    :
      return function (t, e) {
        if ("integerValue" in t && "integerValue" in e) return Dt(t.integerValue) === Dt(e.integerValue);

        if ("doubleValue" in t && "doubleValue" in e) {
          var n = Dt(t.doubleValue),
              r = Dt(e.doubleValue);
          return n === r ? C(n) === C(r) : isNaN(n) && isNaN(r);
        }

        return !1;
      }(t, e);

    case 9
    /* ArrayValue */
    :
      return w(t.arrayValue.values || [], e.arrayValue.values || [], Et);

    case 10
    /* ObjectValue */
    :
      return function (t, e) {
        var n = t.mapValue.fields || {},
            r = e.mapValue.fields || {};
        if (E(n) !== E(r)) return !1;

        for (var i in n) {
          if (n.hasOwnProperty(i) && (void 0 === r[i] || !Et(n[i], r[i]))) return !1;
        }

        return !0;
      }(t, e);

    default:
      return p();
  }
}

function Tt(t, e) {
  return void 0 !== (t.values || []).find(function (t) {
    return Et(t, e);
  });
}

function Nt(t, e) {
  var n = It(t),
      r = It(e);
  if (n !== r) return m(n, r);

  switch (n) {
    case 0
    /* NullValue */
    :
      return 0;

    case 1
    /* BooleanValue */
    :
      return m(t.booleanValue, e.booleanValue);

    case 2
    /* NumberValue */
    :
      return function (t, e) {
        var n = Dt(t.integerValue || t.doubleValue),
            r = Dt(e.integerValue || e.doubleValue);
        return n < r ? -1 : n > r ? 1 : n === r ? 0 : // one or both are NaN.
        isNaN(n) ? isNaN(r) ? 0 : -1 : 1;
      }(t, e);

    case 3
    /* TimestampValue */
    :
      return At(t.timestampValue, e.timestampValue);

    case 4
    /* ServerTimestampValue */
    :
      return At(_t(t), _t(e));

    case 5
    /* StringValue */
    :
      return m(t.stringValue, e.stringValue);

    case 6
    /* BlobValue */
    :
      return function (t, e) {
        var n = kt(t),
            r = kt(e);
        return n.o(r);
      }(t.bytesValue, e.bytesValue);

    case 7
    /* RefValue */
    :
      return function (t, e) {
        for (var n = t.split("/"), r = e.split("/"), i = 0; i < n.length && i < r.length; i++) {
          var o = m(n[i], r[i]);
          if (0 !== o) return o;
        }

        return m(n.length, r.length);
      }(t.referenceValue, e.referenceValue);

    case 8
    /* GeoPointValue */
    :
      return function (t, e) {
        var n = m(Dt(t.latitude), Dt(e.latitude));
        return 0 !== n ? n : m(Dt(t.longitude), Dt(e.longitude));
      }(t.geoPointValue, e.geoPointValue);

    case 9
    /* ArrayValue */
    :
      return function (t, e) {
        for (var n = t.values || [], r = e.values || [], i = 0; i < n.length && i < r.length; ++i) {
          var o = Nt(n[i], r[i]);
          if (o) return o;
        }

        return m(n.length, r.length);
      }(t.arrayValue, e.arrayValue);

    case 10
    /* ObjectValue */
    :
      return function (t, e) {
        var n = t.fields || {},
            r = Object.keys(n),
            i = e.fields || {},
            o = Object.keys(i); // Even though MapValues are likely sorted correctly based on their insertion
        // order (e.g. when received from the backend), local modifications can bring
        // elements out of order. We need to re-sort the elements to ensure that
        // canonical IDs are independent of insertion order.

        r.sort(), o.sort();

        for (var s = 0; s < r.length && s < o.length; ++s) {
          var u = m(r[s], o[s]);
          if (0 !== u) return u;
          var a = Nt(n[r[s]], i[o[s]]);
          if (0 !== a) return a;
        }

        return m(r.length, o.length);
      }(t.mapValue, e.mapValue);

    default:
      throw p();
  }
}

function At(t, e) {
  if ("string" == typeof t && "string" == typeof e && t.length === e.length) return m(t, e);
  var n = St(t),
      r = St(e),
      i = m(n.seconds, r.seconds);
  return 0 !== i ? i : m(n.nanos, r.nanos);
}

function xt(t) {
  return function t(e) {
    return "nullValue" in e ? "null" : "booleanValue" in e ? "" + e.booleanValue : "integerValue" in e ? "" + e.integerValue : "doubleValue" in e ? "" + e.doubleValue : "timestampValue" in e ? function (t) {
      var e = St(t);
      return "time(" + e.seconds + "," + e.nanos + ")";
    }(e.timestampValue) : "stringValue" in e ? e.stringValue : "bytesValue" in e ? kt(e.bytesValue).toBase64() : "referenceValue" in e ? (r = e.referenceValue, L.q(r).toString()) : "geoPointValue" in e ? "geo(" + (n = e.geoPointValue).latitude + "," + n.longitude + ")" : "arrayValue" in e ? function (e) {
      for (var n = "[", r = !0, i = 0, o = e.values || []; i < o.length; i++) {
        var s = o[i];
        r ? r = !1 : n += ",", n += t(s);
      }

      return n + "]";
    }(e.arrayValue) : "mapValue" in e ? function (e) {
      for ( // Iteration order in JavaScript is not guaranteed. To ensure that we generate
      // matching canonical IDs for identical maps, we need to sort the keys.
      var n = "{", r = !0, i = 0, o = Object.keys(e.fields || {}).sort(); i < o.length; i++) {
        var s = o[i];
        r ? r = !1 : n += ",", n += s + ":" + t(e.fields[s]);
      }

      return n + "}";
    }(e.mapValue) : p();
    var n, r;
  }(t);
}

function St(t) {
  // The json interface (for the browser) will return an iso timestamp string,
  // while the proto js library (for node) will return a
  // google.protobuf.Timestamp instance.
  if (d(!!t), "string" == typeof t) {
    // The date string can have higher precision (nanos) than the Date class
    // (millis), so we do some custom parsing here.
    // Parse the nanos right out of the string.
    var e = 0,
        n = bt.exec(t);

    if (d(!!n), n[1]) {
      // Pad the fraction out to 9 digits (nanos).
      var r = n[1];
      r = (r + "000000000").substr(0, 9), e = Number(r);
    } // Parse the date to get the seconds.


    var i = new Date(t);
    return {
      seconds: Math.floor(i.getTime() / 1e3),
      nanos: e
    };
  }

  return {
    seconds: Dt(t.seconds),
    nanos: Dt(t.nanos)
  };
}
/**
 * Converts the possible Proto types for numbers into a JavaScript number.
 * Returns 0 if the value is not numeric.
 */


function Dt(t) {
  // TODO(bjornick): Handle int64 greater than 53 bits.
  return "number" == typeof t ? t : "string" == typeof t ? Number(t) : 0;
}
/** Converts the possible Proto types for Blobs into a ByteString. */


function kt(t) {
  return "string" == typeof t ? F.fromBase64String(t) : F.fromUint8Array(t);
}
/** Returns a reference value for the provided database and key. */


function Pt(t, e) {
  return {
    referenceValue: "projects/" + t.projectId + "/databases/" + t.database + "/documents/" + e.path.N()
  };
}
/** Returns true if `value` is an IntegerValue . */


function Rt(t) {
  return !!t && "integerValue" in t;
}
/** Returns true if `value` is a DoubleValue. */

/** Returns true if `value` is an ArrayValue. */


function Ot(t) {
  return !!t && "arrayValue" in t;
}
/** Returns true if `value` is a NullValue. */


function Ut(t) {
  return !!t && "nullValue" in t;
}
/** Returns true if `value` is NaN. */


function Lt(t) {
  return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
}
/** Returns true if `value` is a MapValue. */


function Vt(t) {
  return !!t && "mapValue" in t;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Ct = {
  asc: "ASCENDING",
  desc: "DESCENDING"
},
    qt = {
  "<": "LESS_THAN",
  "<=": "LESS_THAN_OR_EQUAL",
  ">": "GREATER_THAN",
  ">=": "GREATER_THAN_OR_EQUAL",
  "==": "EQUAL",
  "array-contains": "ARRAY_CONTAINS",
  in: "IN",
  "array-contains-any": "ARRAY_CONTAINS_ANY"
},
    Ft = function Ft(t, e) {
  this.s = t, this.Le = e;
};
/**
 * This class generates JsonObject values for the Datastore API suitable for
 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
 *
 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
 * format.
 *
 * For a description of the Proto3 JSON format check
 * https://developers.google.com/protocol-buffers/docs/proto3#json
 *
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 */

/**
 * Returns an IntegerValue for `value`.
 */


function Mt(t) {
  return {
    integerValue: "" + t
  };
}
/**
 * Returns an DoubleValue for `value` that is encoded based the serializer's
 * `useProto3Json` setting.
 */


function jt(t, e) {
  if (t.Le) {
    if (isNaN(e)) return {
      doubleValue: "NaN"
    };
    if (e === 1 / 0) return {
      doubleValue: "Infinity"
    };
    if (e === -1 / 0) return {
      doubleValue: "-Infinity"
    };
  }

  return {
    doubleValue: C(e) ? "-0" : e
  };
}
/**
 * Returns a value for a number that's appropriate to put into a proto.
 * The return value is an IntegerValue if it can safely represent the value,
 * otherwise a DoubleValue is returned.
 */

/**
 * Returns a value for a Date that's appropriate to put into a proto.
 */


function Bt(t, e) {
  return t.Le ? new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "") + "." + ("000000000" + e.nanoseconds).slice(-9) + "Z" : {
    seconds: "" + e.seconds,
    nanos: e.nanoseconds
  };
}
/**
 * Returns a value for bytes that's appropriate to put in a proto.
 *
 * Visible for testing.
 */


function Qt(t, e) {
  return t.Le ? e.toBase64() : e.toUint8Array();
}
/**
 * Returns a ByteString based on the proto string value.
 */


function Gt(t, e) {
  return t.Le ? (d(void 0 === e || "string" == typeof e), F.fromBase64String(e || "")) : (d(void 0 === e || e instanceof Uint8Array), F.fromUint8Array(e || new Uint8Array()));
}

function zt(t, e) {
  return Bt(t, e.R());
}

function Wt(t) {
  return d(!!t), k.I(function (t) {
    var e = St(t);
    return new D(e.seconds, e.nanos);
  }(t));
}

function Ht(t, e) {
  return function (t) {
    return new R(["projects", t.projectId, "databases", t.database]);
  }(t).child("documents").child(e).N();
}

function Kt(t) {
  var e = R.$(t);
  return d(pe(e)), e;
}

function Yt(t, e) {
  return Ht(t.s, e.path);
}

function Xt(t, e) {
  var n = Kt(e);
  return d(n.get(1) === t.s.projectId), d(!n.get(3) && !t.s.database || n.get(3) === t.s.database), new L(te(n));
}

function $t(t, e) {
  return Ht(t.s, e);
}

function Jt(t) {
  var e = Kt(t); // In v1beta1 queries for collections at the root did not have a trailing
  // "/documents". In v1 all resource paths contain "/documents". Preserve the
  // ability to read the v1beta1 form for compatibility with queries persisted
  // in the local target cache.

  return 4 === e.length ? R.k : te(e);
}

function Zt(t) {
  return new R(["projects", t.s.projectId, "databases", t.s.database]).N();
}

function te(t) {
  return d(t.length > 4 && "documents" === t.get(4)), t.g(5)
  /** Creates an api.Document from key and fields (but no create/update time) */
  ;
}

function ee(t, e, n) {
  return {
    name: Yt(t, e),
    fields: n.proto.mapValue.fields
  };
}

function ne(t, e) {
  var n;
  if (e instanceof Te) n = {
    update: ee(t, e.key, e.value)
  };else if (e instanceof xe) n = {
    delete: Yt(t, e.key)
  };else if (e instanceof Ne) n = {
    update: ee(t, e.key, e.data),
    updateMask: le(e.Oe)
  };else if (e instanceof Ae) n = {
    transform: {
      document: Yt(t, e.key),
      fieldTransforms: e.fieldTransforms.map(function (t) {
        return function (t, e) {
          var n = e.transform;
          if (n instanceof de) return {
            fieldPath: e.field.N(),
            setToServerValue: "REQUEST_TIME"
          };
          if (n instanceof ye) return {
            fieldPath: e.field.N(),
            appendMissingElements: {
              values: n.elements
            }
          };
          if (n instanceof ve) return {
            fieldPath: e.field.N(),
            removeAllFromArray: {
              values: n.elements
            }
          };
          if (n instanceof ge) return {
            fieldPath: e.field.N(),
            increment: n.Be
          };
          throw p();
        }(0, t);
      })
    }
  };else {
    if (!(e instanceof Se)) return p();
    n = {
      verify: Yt(t, e.key)
    };
  }
  return e.Ue.qe || (n.currentDocument = function (t, e) {
    return void 0 !== e.updateTime ? {
      updateTime: zt(t, e.updateTime)
    } : void 0 !== e.exists ? {
      exists: e.exists
    } : p();
  }(t, e.Ue)), n;
}

function re(t, e) {
  var n = e.currentDocument ? function (t) {
    return void 0 !== t.updateTime ? Ie.updateTime(Wt(t.updateTime)) : void 0 !== t.exists ? Ie.exists(t.exists) : Ie.Qe();
  }(e.currentDocument) : Ie.Qe();

  if (e.update) {
    e.update.name;
    var r = Xt(t, e.update.name),
        i = new De({
      mapValue: {
        fields: e.update.fields
      }
    });

    if (e.updateMask) {
      var o = function (t) {
        var e = t.fieldPaths || [];
        return new we(e.map(function (t) {
          return U.B(t);
        }));
      }(e.updateMask);

      return new Ne(r, i, o, n);
    }

    return new Te(r, i, n);
  }

  if (e.delete) {
    var s = Xt(t, e.delete);
    return new xe(s, n);
  }

  if (e.transform) {
    var u = Xt(t, e.transform.document),
        a = e.transform.fieldTransforms.map(function (e) {
      return function (t, e) {
        var n = null;
        if ("setToServerValue" in e) d("REQUEST_TIME" === e.setToServerValue), n = de.instance;else if ("appendMissingElements" in e) {
          var r = e.appendMissingElements.values || [];
          n = new ye(r);
        } else if ("removeAllFromArray" in e) {
          var i = e.removeAllFromArray.values || [];
          n = new ve(i);
        } else "increment" in e ? n = new ge(t, e.increment) : p();
        var o = U.B(e.fieldPath);
        return new _e(o, n);
      }(t, e);
    });
    return d(!0 === n.exists), new Ae(u, a);
  }

  if (e.verify) {
    var c = Xt(t, e.verify);
    return new Se(c, n);
  }

  return p();
}

function ie(t, e) {
  return {
    documents: [$t(t, e.path)]
  };
}

function oe(t, e) {
  // Dissect the path into parent, collectionId, and optional key filter.
  var n = {
    structuredQuery: {}
  },
      r = e.path;
  null !== e.collectionGroup ? (n.parent = $t(t, r), n.structuredQuery.from = [{
    collectionId: e.collectionGroup,
    allDescendants: !0
  }]) : (n.parent = $t(t, r.p()), n.structuredQuery.from = [{
    collectionId: r.S()
  }]);

  var i = function (t) {
    if (0 !== t.length) {
      var e = t.map(function (t) {
        return t instanceof Ce ? // visible for testing
        function (t) {
          if ("=="
          /* EQUAL */
          === t.op) {
            if (Lt(t.value)) return {
              unaryFilter: {
                field: ae(t.field),
                op: "IS_NAN"
              }
            };
            if (Ut(t.value)) return {
              unaryFilter: {
                field: ae(t.field),
                op: "IS_NULL"
              }
            };
          }

          return {
            fieldFilter: {
              field: ae(t.field),
              op: (e = t.op, qt[e]),
              value: t.value
            }
          }; // visible for testing

          var e;
        }(t) : p();
      });
      return 1 === e.length ? e[0] : {
        compositeFilter: {
          op: "AND",
          filters: e
        }
      };
    }
  }(e.filters);

  i && (n.structuredQuery.where = i);

  var o = function (t) {
    if (0 !== t.length) return t.map(function (t) {
      return {
        field: ae((e = t).field),
        direction: (n = e.dir, Ct[n])
      }; // visible for testing

      var e, n;
    });
  }(e.orderBy);

  o && (n.structuredQuery.orderBy = o);

  var s = function (t, e) {
    return t.Le || V(e) ? e : {
      value: e
    };
  }(t, e.limit);

  return null !== s && (n.structuredQuery.limit = s), e.startAt && (n.structuredQuery.startAt = se(e.startAt)), e.endAt && (n.structuredQuery.endAt = se(e.endAt)), n;
}

function se(t) {
  return {
    before: t.before,
    values: t.position
  };
}

function ue(t) {
  var e = !!t.before,
      n = t.values || [];
  return new Qe(n, e);
} // visible for testing


function ae(t) {
  return {
    fieldPath: t.N()
  };
}

function ce(t) {
  return U.B(t.fieldPath);
}

function he(t) {
  return Ce.create(ce(t.fieldFilter.field), function (t) {
    switch (t) {
      case "EQUAL":
        return "=="
        /* EQUAL */
        ;

      case "GREATER_THAN":
        return ">"
        /* GREATER_THAN */
        ;

      case "GREATER_THAN_OR_EQUAL":
        return ">="
        /* GREATER_THAN_OR_EQUAL */
        ;

      case "LESS_THAN":
        return "<"
        /* LESS_THAN */
        ;

      case "LESS_THAN_OR_EQUAL":
        return "<="
        /* LESS_THAN_OR_EQUAL */
        ;

      case "ARRAY_CONTAINS":
        return "array-contains"
        /* ARRAY_CONTAINS */
        ;

      case "IN":
        return "in"
        /* IN */
        ;

      case "ARRAY_CONTAINS_ANY":
        return "array-contains-any"
        /* ARRAY_CONTAINS_ANY */
        ;

      case "OPERATOR_UNSPECIFIED":
      default:
        return p();
    }
  }(t.fieldFilter.op), t.fieldFilter.value);
}

function fe(t) {
  switch (t.unaryFilter.op) {
    case "IS_NAN":
      var e = ce(t.unaryFilter.field);
      return Ce.create(e, "=="
      /* EQUAL */
      , {
        doubleValue: NaN
      });

    case "IS_NULL":
      var n = ce(t.unaryFilter.field);
      return Ce.create(n, "=="
      /* EQUAL */
      , {
        nullValue: "NULL_VALUE"
      });

    case "OPERATOR_UNSPECIFIED":
    default:
      return p();
  }
}

function le(t) {
  var e = [];
  return t.fields.forEach(function (t) {
    return e.push(t.N());
  }), {
    fieldPaths: e
  };
}

function pe(t) {
  // Resource names have at least 4 components (project ID, database ID)
  return t.length >= 4 && "projects" === t.get(0) && "databases" === t.get(2);
}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Transforms a value into a server-generated timestamp. */


var de =
/** @class */
function () {
  function t() {}

  return t.prototype.je = function (t, e) {
    return function (t, e) {
      var n = {
        fields: {
          __type__: {
            stringValue: "server_timestamp"
          },
          __local_write_time__: {
            timestampValue: {
              seconds: t.seconds,
              nanos: t.nanoseconds
            }
          }
        }
      };
      return e && (n.fields.__previous_value__ = e), {
        mapValue: n
      };
    }(e, t);
  }, t.prototype.Ke = function (t, e) {
    return e;
  }, t.prototype.Ge = function (t) {
    return null; // Server timestamps are idempotent and don't require a base value.
  }, t.prototype.isEqual = function (e) {
    return e instanceof t;
  }, t;
}();

de.instance = new de();
/** Transforms an array value via a union operation. */

var ye =
/** @class */
function () {
  function t(t) {
    this.elements = t;
  }

  return t.prototype.je = function (t, e) {
    return this.apply(t);
  }, t.prototype.Ke = function (t, e) {
    // The server just sends null as the transform result for array operations,
    // so we have to calculate a result the same as we do for local
    // applications.
    return this.apply(t);
  }, t.prototype.apply = function (t) {
    for (var e = me(t), n = function n(t) {
      e.some(function (e) {
        return Et(e, t);
      }) || e.push(t);
    }, r = 0, i = this.elements; r < i.length; r++) {
      n(i[r]);
    }

    return {
      arrayValue: {
        values: e
      }
    };
  }, t.prototype.Ge = function (t) {
    return null; // Array transforms are idempotent and don't require a base value.
  }, t.prototype.isEqual = function (e) {
    return e instanceof t && w(this.elements, e.elements, Et);
  }, t;
}(),
    ve =
/** @class */
function () {
  function t(t) {
    this.elements = t;
  }

  return t.prototype.je = function (t, e) {
    return this.apply(t);
  }, t.prototype.Ke = function (t, e) {
    // The server just sends null as the transform result for array operations,
    // so we have to calculate a result the same as we do for local
    // applications.
    return this.apply(t);
  }, t.prototype.apply = function (t) {
    for (var e = me(t), n = function n(t) {
      e = e.filter(function (e) {
        return !Et(e, t);
      });
    }, r = 0, i = this.elements; r < i.length; r++) {
      n(i[r]);
    }

    return {
      arrayValue: {
        values: e
      }
    };
  }, t.prototype.Ge = function (t) {
    return null; // Array transforms are idempotent and don't require a base value.
  }, t.prototype.isEqual = function (e) {
    return e instanceof t && w(this.elements, e.elements, Et);
  }, t;
}(),
    ge =
/** @class */
function () {
  function t(t, e) {
    this.serializer = t, this.Be = e;
  }

  return t.prototype.je = function (t, e) {
    // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
    // precision and resolves overflows by reducing precision, we do not
    // manually cap overflows at 2^63.
    var n = this.Ge(t),
        r = this.asNumber(n) + this.asNumber(this.Be);
    return Rt(n) && Rt(this.Be) ? Mt(r) : jt(this.serializer, r);
  }, t.prototype.Ke = function (t, e) {
    return e;
  },
  /**
   * Inspects the provided value, returning the provided value if it is already
   * a NumberValue, otherwise returning a coerced value of 0.
   */
  t.prototype.Ge = function (t) {
    return Rt(e = t) || function (t) {
      return !!t && "doubleValue" in t;
    }(e) ? t : {
      integerValue: 0
    };
    var e;
  }, t.prototype.isEqual = function (e) {
    return e instanceof t && Et(this.Be, e.Be);
  }, t.prototype.asNumber = function (t) {
    return Dt(t.integerValue || t.doubleValue);
  }, t;
}();
/** Transforms an array value via a remove operation. */


function me(t) {
  return Ot(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Provides a set of fields that can be used to partially patch a document.
 * FieldMask is used in conjunction with ObjectValue.
 * Examples:
 *   foo - Overwrites foo entirely with the provided value. If foo is not
 *         present in the companion ObjectValue, the field is deleted.
 *   foo.bar - Overwrites only the field bar of the object foo.
 *             If foo is not an object, foo is replaced with an object
 *             containing foo
 */


var we =
/** @class */
function () {
  function t(t) {
    this.fields = t, // TODO(dimond): validation of FieldMask
    // Sort the field mask to support `FieldMask.isEqual()` and assert below.
    t.sort(U.P)
    /**
    * Verifies that `fieldPath` is included by at least one field in this field
    * mask.
    *
    * This is an O(n) operation, where `n` is the size of the field mask.
    */
    ;
  }

  return t.prototype.ze = function (t) {
    for (var e = 0, n = this.fields; e < n.length; e++) {
      if (n[e].D(t)) return !0;
    }

    return !1;
  }, t.prototype.isEqual = function (t) {
    return w(this.fields, t.fields, function (t, e) {
      return t.isEqual(e);
    });
  }, t;
}(),
    _e =
/** @class */
function () {
  function t(t, e) {
    this.field = t, this.transform = e;
  }

  return t.prototype.isEqual = function (t) {
    return this.field.isEqual(t.field) && this.transform.isEqual(t.transform);
  }, t;
}(),
    be = function be(
/**
     * The version at which the mutation was committed:
     *
     * - For most operations, this is the updateTime in the WriteResult.
     * - For deletes, the commitTime of the WriteResponse (because deletes are
     *   not stored and have no updateTime).
     *
     * Note that these versions can be different: No-op writes will not change
     * the updateTime even though the commitTime advances.
     */
t,
/**
     * The resulting fields returned from the backend after a
     * TransformMutation has been committed. Contains one FieldValue for each
     * FieldTransform that was in the mutation.
     *
     * Will be null if the mutation was not a TransformMutation.
     */
e) {
  this.version = t, this.transformResults = e;
},
    Ie =
/** @class */
function () {
  function t(t, e) {
    this.updateTime = t, this.exists = e
    /** Creates a new empty Precondition. */
    ;
  }

  return t.Qe = function () {
    return new t();
  },
  /** Creates a new Precondition with an exists flag. */
  t.exists = function (e) {
    return new t(void 0, e);
  },
  /** Creates a new Precondition based on a version a document exists at. */
  t.updateTime = function (e) {
    return new t(e);
  }, Object.defineProperty(t.prototype, "qe", {
    /** Returns whether this Precondition is empty. */
    get: function get() {
      return void 0 === this.updateTime && void 0 === this.exists;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * Returns true if the preconditions is valid for the given document
   * (or null if no document is available).
   */
  t.prototype.He = function (t) {
    return void 0 !== this.updateTime ? t instanceof Oe && t.version.isEqual(this.updateTime) : void 0 === this.exists || this.exists === t instanceof Oe;
  }, t.prototype.isEqual = function (t) {
    return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);
  }, t;
}(),
    Ee =
/** @class */
function () {
  function t() {}

  return t.prototype.Ye = function (t) {},
  /**
   * Returns the version from the given document for use as the result of a
   * mutation. Mutations are defined to return the version of the base document
   * only if it is an existing document. Deleted and unknown documents have a
   * post-mutation version of SnapshotVersion.min().
   */
  t.Je = function (t) {
    return t instanceof Oe ? t.version : k.min();
  }, t;
}(),
    Te =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this) || this).key = e, i.value = n, i.Ue = r, i.type = 0
    /* Set */
    , i;
  }

  return e.__extends(n, t), n.prototype.Ke = function (t, e) {
    this.Ye(t); // Unlike applyToLocalView, if we're applying a mutation to a remote
    // document the server has accepted the mutation so the precondition must
    // have held.

    var n = e.version;
    return new Oe(this.key, n, this.value, {
      hasCommittedMutations: !0
    });
  }, n.prototype.je = function (t, e, n) {
    if (this.Ye(t), !this.Ue.He(t)) return t;
    var r = Ee.Je(t);
    return new Oe(this.key, r, this.value, {
      Xe: !0
    });
  }, n.prototype.Ze = function (t) {
    return null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.value.isEqual(t.value) && this.Ue.isEqual(t.Ue);
  }, n;
}(Ee),
    Ne =
/** @class */
function (t) {
  function n(e, n, r, i) {
    var o = this;
    return (o = t.call(this) || this).key = e, o.data = n, o.Oe = r, o.Ue = i, o.type = 1
    /* Patch */
    , o;
  }

  return e.__extends(n, t), n.prototype.Ke = function (t, e) {
    if (this.Ye(t), !this.Ue.He(t)) // Since the mutation was not rejected, we know that the  precondition
      // matched on the backend. We therefore must not have the expected version
      // of the document in our cache and return an UnknownDocument with the
      // known updateTime.
      return new Le(this.key, e.version);
    var n = this.ts(t);
    return new Oe(this.key, e.version, n, {
      hasCommittedMutations: !0
    });
  }, n.prototype.je = function (t, e, n) {
    if (this.Ye(t), !this.Ue.He(t)) return t;
    var r = Ee.Je(t),
        i = this.ts(t);
    return new Oe(this.key, r, i, {
      Xe: !0
    });
  }, n.prototype.Ze = function (t) {
    return null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.Oe.isEqual(t.Oe) && this.Ue.isEqual(t.Ue);
  },
  /**
   * Patches the data of document if available or creates a new document. Note
   * that this does not check whether or not the precondition of this patch
   * holds.
   */
  n.prototype.ts = function (t) {
    var e;
    return e = t instanceof Oe ? t.data() : De.empty(), this.es(e);
  }, n.prototype.es = function (t) {
    var e = this,
        n = new ke(t);
    return this.Oe.fields.forEach(function (t) {
      if (!t._()) {
        var r = e.data.field(t);
        null !== r ? n.set(t, r) : n.delete(t);
      }
    }), n.ss();
  }, n;
}(Ee),
    Ae =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).key = e, r.fieldTransforms = n, r.type = 2
    /* Transform */
    , // NOTE: We set a precondition of exists: true as a safety-check, since we
    // always combine TransformMutations with a SetMutation or PatchMutation which
    // (if successful) should end up with an existing document.
    r.Ue = Ie.exists(!0), r;
  }

  return e.__extends(n, t), n.prototype.Ke = function (t, e) {
    if (this.Ye(t), d(null != e.transformResults), !this.Ue.He(t)) // Since the mutation was not rejected, we know that the  precondition
      // matched on the backend. We therefore must not have the expected version
      // of the document in our cache and return an UnknownDocument with the
      // known updateTime.
      return new Le(this.key, e.version);
    var n = this.ns(t),
        r = this.rs(t, e.transformResults),
        i = e.version,
        o = this.os(n.data(), r);
    return new Oe(this.key, i, o, {
      hasCommittedMutations: !0
    });
  }, n.prototype.je = function (t, e, n) {
    if (this.Ye(t), !this.Ue.He(t)) return t;
    var r = this.ns(t),
        i = this.hs(n, t, e),
        o = this.os(r.data(), i);
    return new Oe(this.key, r.version, o, {
      Xe: !0
    });
  }, n.prototype.Ze = function (t) {
    for (var e = null, n = 0, r = this.fieldTransforms; n < r.length; n++) {
      var i = r[n],
          o = t instanceof Oe ? t.field(i.field) : void 0,
          s = i.transform.Ge(o || null);
      null != s && (e = null == e ? new ke().set(i.field, s) : e.set(i.field, s));
    }

    return e ? e.ss() : null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && w(this.fieldTransforms, t.fieldTransforms, function (t, e) {
      return t.isEqual(e);
    }) && this.Ue.isEqual(t.Ue);
  },
  /**
   * Asserts that the given MaybeDocument is actually a Document and verifies
   * that it matches the key for this mutation. Since we only support
   * transformations with precondition exists this method is guaranteed to be
   * safe.
   */
  n.prototype.ns = function (t) {
    return t;
  },
  /**
   * Creates a list of "transform results" (a transform result is a field value
   * representing the result of applying a transform) for use after a
   * TransformMutation has been acknowledged by the server.
   *
   * @param baseDoc The document prior to applying this mutation batch.
   * @param serverTransformResults The transform results received by the server.
   * @return The transform results list.
   */
  n.prototype.rs = function (t, e) {
    var n = [];
    d(this.fieldTransforms.length === e.length);

    for (var r = 0; r < e.length; r++) {
      var i = this.fieldTransforms[r],
          o = i.transform,
          s = null;
      t instanceof Oe && (s = t.field(i.field)), n.push(o.Ke(s, e[r]));
    }

    return n;
  },
  /**
   * Creates a list of "transform results" (a transform result is a field value
   * representing the result of applying a transform) for use when applying a
   * TransformMutation locally.
   *
   * @param localWriteTime The local time of the transform mutation (used to
   *     generate ServerTimestampValues).
   * @param maybeDoc The current state of the document after applying all
   *     previous mutations.
   * @param baseDoc The document prior to applying this mutation batch.
   * @return The transform results list.
   */
  n.prototype.hs = function (t, e, n) {
    for (var r = [], i = 0, o = this.fieldTransforms; i < o.length; i++) {
      var s = o[i],
          u = s.transform,
          a = null;
      e instanceof Oe && (a = e.field(s.field)), null === a && n instanceof Oe && ( // If the current document does not contain a value for the mutated
      // field, use the value that existed before applying this mutation
      // batch. This solves an edge case where a PatchMutation clears the
      // values in a nested map before the TransformMutation is applied.
      a = n.field(s.field)), r.push(u.je(a, t));
    }

    return r;
  }, n.prototype.os = function (t, e) {
    for (var n = new ke(t), r = 0; r < this.fieldTransforms.length; r++) {
      var i = this.fieldTransforms[r].field;
      n.set(i, e[r]);
    }

    return n.ss();
  }, n;
}(Ee),
    xe =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).key = e, r.Ue = n, r.type = 3
    /* Delete */
    , r;
  }

  return e.__extends(n, t), n.prototype.Ke = function (t, e) {
    // Unlike applyToLocalView, if we're applying a mutation to a remote
    // document the server has accepted the mutation so the precondition must
    // have held.
    return this.Ye(t), new Ue(this.key, e.version, {
      hasCommittedMutations: !0
    });
  }, n.prototype.je = function (t, e, n) {
    return this.Ye(t), this.Ue.He(t) ? new Ue(this.key, k.min()) : t;
  }, n.prototype.Ze = function (t) {
    return null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.Ue.isEqual(t.Ue);
  }, n;
}(Ee),
    Se =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).key = e, r.Ue = n, r.type = 4
    /* Verify */
    , r;
  }

  return e.__extends(n, t), n.prototype.Ke = function (t, e) {
    p();
  }, n.prototype.je = function (t, e, n) {
    p();
  }, n.prototype.Ze = function (t) {
    p();
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.Ue.isEqual(t.Ue);
  }, n;
}(Ee),
    De =
/** @class */
function () {
  function t(t) {
    this.proto = t;
  }

  return t.empty = function () {
    return new t({
      mapValue: {}
    });
  },
  /**
   * Returns the value at the given path or null.
   *
   * @param path the path to search
   * @return The value at the path or if there it doesn't exist.
   */
  t.prototype.field = function (t) {
    if (t._()) return this.proto;

    for (var e = this.proto, n = 0; n < t.length - 1; ++n) {
      if (!e.mapValue.fields) return null;
      if (!Vt(e = e.mapValue.fields[t.get(n)])) return null;
    }

    return (e = (e.mapValue.fields || {})[t.S()]) || null;
  }, t.prototype.isEqual = function (t) {
    return Et(this.proto, t.proto);
  }, t;
}(),
    ke =
/** @class */
function () {
  /**
   * @param baseObject The object to mutate.
   */
  function t(t) {
    void 0 === t && (t = De.empty()), this.as = t,
    /** A map that contains the accumulated changes in this builder. */
    this.us = new Map();
  }
  /**
   * Sets the field to the provided value.
   *
   * @param path The field path to set.
   * @param value The value to set.
   * @return The current Builder instance.
   */


  return t.prototype.set = function (t, e) {
    return this.cs(t, e), this;
  },
  /**
   * Removes the field at the specified path. If there is no field at the
   * specified path, nothing is changed.
   *
   * @param path The field path to remove.
   * @return The current Builder instance.
   */
  t.prototype.delete = function (t) {
    return this.cs(t, null), this;
  },
  /**
   * Adds `value` to the overlay map at `path`. Creates nested map entries if
   * needed.
   */
  t.prototype.cs = function (t, e) {
    for (var n = this.us, r = 0; r < t.length - 1; ++r) {
      var i = t.get(r),
          o = n.get(i);
      o instanceof Map ? // Re-use a previously created map
      n = o : o && 10
      /* ObjectValue */
      === It(o) ? ( // Convert the existing Protobuf MapValue into a map
      o = new Map(Object.entries(o.mapValue.fields || {})), n.set(i, o), n = o) : ( // Create an empty map to represent the current nesting level
      o = new Map(), n.set(i, o), n = o);
    }

    n.set(t.S(), e);
  },
  /** Returns an ObjectValue with all mutations applied. */
  t.prototype.ss = function () {
    var t = this.ls(U.k, this.us);
    return null != t ? new De(t) : this.as;
  },
  /**
   * Applies any overlays from `currentOverlays` that exist at `currentPath`
   * and returns the merged data at `currentPath` (or null if there were no
   * changes).
   *
   * @param currentPath The path at the current nesting level. Can be set to
   * FieldValue.EMPTY_PATH to represent the root.
   * @param currentOverlays The overlays at the current nesting level in the
   * same format as `overlayMap`.
   * @return The merged data at `currentPath` or null if no modifications
   * were applied.
   */
  t.prototype.ls = function (t, e) {
    var n = this,
        r = !1,
        i = this.as.field(t),
        o = Vt(i) ? // If there is already data at the current path, base our
    Object.assign({}, i.mapValue.fields) : {};
    return e.forEach(function (e, i) {
      if (e instanceof Map) {
        var s = n.ls(t.child(i), e);
        null != s && (o[i] = s, r = !0);
      } else null !== e ? (o[i] = e, r = !0) : o.hasOwnProperty(i) && (delete o[i], r = !0);
    }), r ? {
      mapValue: {
        fields: o
      }
    } : null;
  }, t;
}();
/** A field path and the TransformOperation to perform upon it. */

/**
 * Returns a FieldMask built from all fields in a MapValue.
 */


function Pe(t) {
  var e = [];
  return T(t.fields || {}, function (t, n) {
    var r = new U([t]);

    if (Vt(n)) {
      var i = Pe(n.mapValue).fields;
      if (0 === i.length) // Preserve the empty map by adding it to the FieldMask.
        e.push(r);else // For nested and non-empty ObjectValues, add the FieldPath of the
        // leaf nodes.
        for (var o = 0, s = i; o < s.length; o++) {
          var u = s[o];
          e.push(r.child(u));
        }
    } else // For nested and non-empty ObjectValues, add the FieldPath of the leaf
      // nodes.
      e.push(r);
  }), new we(e)
  /**
  * @license
  * Copyright 2017 Google LLC
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */

  /**
  * The result of a lookup for a given path may be an existing document or a
  * marker that this document does not exist at a given version.
  */
  ;
}

var Re = function Re(t, e) {
  this.key = t, this.version = e;
},
    Oe =
/** @class */
function (t) {
  function n(e, n, r, i) {
    var o = this;
    return (o = t.call(this, e, n) || this)._s = r, o.Xe = !!i.Xe, o.hasCommittedMutations = !!i.hasCommittedMutations, o;
  }

  return e.__extends(n, t), n.prototype.field = function (t) {
    return this._s.field(t);
  }, n.prototype.data = function () {
    return this._s;
  }, n.prototype.fs = function () {
    return this._s.proto;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.Xe === t.Xe && this.hasCommittedMutations === t.hasCommittedMutations && this._s.isEqual(t._s);
  }, n.prototype.toString = function () {
    return "Document(" + this.key + ", " + this.version + ", " + this._s.toString() + ", {hasLocalMutations: " + this.Xe + "}), {hasCommittedMutations: " + this.hasCommittedMutations + "})";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return this.Xe || this.hasCommittedMutations;
    },
    enumerable: !0,
    configurable: !0
  }), n;
}(Re),
    Ue =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this, e, n) || this).hasCommittedMutations = !(!r || !r.hasCommittedMutations), i;
  }

  return e.__extends(n, t), n.prototype.toString = function () {
    return "NoDocument(" + this.key + ", " + this.version + ")";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return this.hasCommittedMutations;
    },
    enumerable: !0,
    configurable: !0
  }), n.prototype.isEqual = function (t) {
    return t instanceof n && t.hasCommittedMutations === this.hasCommittedMutations && t.version.isEqual(this.version) && t.key.isEqual(this.key);
  }, n;
}(Re),
    Le =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.prototype.toString = function () {
    return "UnknownDocument(" + this.key + ", " + this.version + ")";
  }, Object.defineProperty(n.prototype, "hasPendingWrites", {
    get: function get() {
      return !0;
    },
    enumerable: !0,
    configurable: !0
  }), n.prototype.isEqual = function (t) {
    return t instanceof n && t.version.isEqual(this.version) && t.key.isEqual(this.key);
  }, n;
}(Re),
    Ve =
/** @class */
function () {
  /**
   * Initializes a Query with a path and optional additional query constraints.
   * Path must currently be empty if this is a collection group query.
   */
  function t(t, e, n, r, i, o
  /* First */
  , s, u) {
    void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = "F"), void 0 === s && (s = null), void 0 === u && (u = null), this.path = t, this.collectionGroup = e, this.ds = n, this.filters = r, this.limit = i, this.ws = o, this.startAt = s, this.endAt = u, this.Ts = null, // The corresponding `Target` of this `Query` instance.
    this.Es = null, this.startAt && this.Is(this.startAt), this.endAt && this.Is(this.endAt);
  } // TODO(firestorelite): Refactor this class so that methods that are not used
  // in the Lite client become tree-shakeable.


  return t.As = function (e) {
    return new t(e);
  }, Object.defineProperty(t.prototype, "orderBy", {
    get: function get() {
      if (null === this.Ts) {
        this.Ts = [];
        var t = this.Rs(),
            e = this.ms();
        if (null !== t && null === e) // In order to implicitly add key ordering, we must also add the
          // inequality filter field for it to be a valid query.
          // Note that the default inequality field and key ordering is ascending.
          t.L() || this.Ts.push(new He(t)), this.Ts.push(new He(U.O(), "asc"
          /* ASCENDING */
          ));else {
          for (var n = !1, r = 0, i = this.ds; r < i.length; r++) {
            var o = i[r];
            this.Ts.push(o), o.field.L() && (n = !0);
          }

          if (!n) {
            // The order of the implicit key ordering always matches the last
            // explicit order by
            var s = this.ds.length > 0 ? this.ds[this.ds.length - 1].dir : "asc"
            /* ASCENDING */
            ;
            this.Ts.push(new He(U.O(), s));
          }
        }
      }

      return this.Ts;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.Ps = function (e) {
    var n = this.filters.concat([e]);
    return new t(this.path, this.collectionGroup, this.ds.slice(), n, this.limit, this.ws, this.startAt, this.endAt);
  }, t.prototype.Vs = function (e) {
    // TODO(dimond): validate that orderBy does not list the same key twice.
    var n = this.ds.concat([e]);
    return new t(this.path, this.collectionGroup, n, this.filters.slice(), this.limit, this.ws, this.startAt, this.endAt);
  }, t.prototype.gs = function (e) {
    return new t(this.path, this.collectionGroup, this.ds.slice(), this.filters.slice(), e, "F"
    /* First */
    , this.startAt, this.endAt);
  }, t.prototype.ps = function (e) {
    return new t(this.path, this.collectionGroup, this.ds.slice(), this.filters.slice(), e, "L"
    /* Last */
    , this.startAt, this.endAt);
  }, t.prototype.ys = function (e) {
    return new t(this.path, this.collectionGroup, this.ds.slice(), this.filters.slice(), this.limit, this.ws, e, this.endAt);
  }, t.prototype.bs = function (e) {
    return new t(this.path, this.collectionGroup, this.ds.slice(), this.filters.slice(), this.limit, this.ws, this.startAt, e);
  },
  /**
   * Helper to convert a collection group query into a collection query at a
   * specific path. This is used when executing collection group queries, since
   * we have to split the query into a set of collection queries at multiple
   * paths.
   */
  t.prototype.vs = function (e) {
    return new t(e,
    /*collectionGroup=*/
    null, this.ds.slice(), this.filters.slice(), this.limit, this.ws, this.startAt, this.endAt);
  },
  /**
   * Returns true if this query does not specify any query constraints that
   * could remove results.
   */
  t.prototype.Ss = function () {
    return 0 === this.filters.length && null === this.limit && null == this.startAt && null == this.endAt && (0 === this.ds.length || 1 === this.ds.length && this.ds[0].field.L());
  }, // TODO(b/29183165): This is used to get a unique string from a query to, for
  // example, use as a dictionary key, but the implementation is subject to
  // collisions. Make it collision-free.
  t.prototype.canonicalId = function () {
    return Xe(this.We()) + "|lt:" + this.ws;
  }, t.prototype.toString = function () {
    return "Query(target=" + function (t) {
      var e = t.path.N();
      return null !== t.collectionGroup && (e += " collectionGroup=" + t.collectionGroup), t.filters.length > 0 && (e += ", filters: [" + t.filters.join(", ") + "]"), V(t.limit) || (e += ", limit: " + t.limit), t.orderBy.length > 0 && (e += ", orderBy: [" + t.orderBy.join(", ") + "]"), t.startAt && (e += ", startAt: " + Ge(t.startAt)), t.endAt && (e += ", endAt: " + Ge(t.endAt)), "Target(" + e + ")";
    }(this.We()) + "; limitType=" + this.ws + ")";
  }, t.prototype.isEqual = function (t) {
    return $e(this.We(), t.We()) && this.ws === t.ws;
  }, t.prototype.Ds = function (t, e) {
    for (var n = !1, r = 0, i = this.orderBy; r < i.length; r++) {
      var o = i[r],
          s = o.compare(t, e);
      if (0 !== s) return s;
      n = n || o.field.L();
    }

    return 0;
  }, t.prototype.matches = function (t) {
    return this.Cs(t) && this.Fs(t) && this.Ns(t) && this.$s(t);
  }, t.prototype.ks = function () {
    return !V(this.limit) && "F"
    /* First */
    === this.ws;
  }, t.prototype.xs = function () {
    return !V(this.limit) && "L"
    /* Last */
    === this.ws;
  }, t.prototype.ms = function () {
    return this.ds.length > 0 ? this.ds[0].field : null;
  }, t.prototype.Rs = function () {
    for (var t = 0, e = this.filters; t < e.length; t++) {
      var n = e[t];
      if (n instanceof Ce && n.Ms()) return n.field;
    }

    return null;
  }, // Checks if any of the provided Operators are included in the query and
  // returns the first one that is, or null if none are.
  t.prototype.Ls = function (t) {
    for (var e = 0, n = this.filters; e < n.length; e++) {
      var r = n[e];
      if (r instanceof Ce && t.indexOf(r.op) >= 0) return r.op;
    }

    return null;
  }, t.prototype.Os = function () {
    return Je(this.We());
  }, t.prototype.Bs = function () {
    return null !== this.collectionGroup;
  },
  /**
   * Converts this `Query` instance to it's corresponding `Target`
   * representation.
   */
  t.prototype.We = function () {
    if (!this.Es) if ("F"
    /* First */
    === this.ws) this.Es = Ye(this.path, this.collectionGroup, this.orderBy, this.filters, this.limit, this.startAt, this.endAt);else {
      for ( // Flip the orderBy directions since we want the last results
      var t = [], e = 0, n = this.orderBy; e < n.length; e++) {
        var r = n[e],
            i = "desc"
        /* DESCENDING */
        === r.dir ? "asc"
        /* ASCENDING */
        : "desc"
        /* DESCENDING */
        ;
        t.push(new He(r.field, i));
      } // We need to swap the cursors to match the now-flipped query ordering.


      var o = this.endAt ? new Qe(this.endAt.position, !this.endAt.before) : null,
          s = this.startAt ? new Qe(this.startAt.position, !this.startAt.before) : null; // Now return as a LimitType.First query.

      this.Es = Ye(this.path, this.collectionGroup, t, this.filters, this.limit, o, s);
    }
    return this.Es;
  }, t.prototype.Cs = function (t) {
    var e = t.key.path;
    return null !== this.collectionGroup ? t.key.U(this.collectionGroup) && this.path.D(e) : L.W(this.path) ? this.path.isEqual(e) : this.path.C(e);
  },
  /**
   * A document must have a value for every ordering clause in order to show up
   * in the results.
   */
  t.prototype.Fs = function (t) {
    for (var e = 0, n = this.ds; e < n.length; e++) {
      var r = n[e]; // order by key always matches

      if (!r.field.L() && null === t.field(r.field)) return !1;
    }

    return !0;
  }, t.prototype.Ns = function (t) {
    for (var e = 0, n = this.filters; e < n.length; e++) {
      if (!n[e].matches(t)) return !1;
    }

    return !0;
  },
  /**
   * Makes sure a document is within the bounds, if provided.
   */
  t.prototype.$s = function (t) {
    return !(this.startAt && !ze(this.startAt, this.orderBy, t) || this.endAt && ze(this.endAt, this.orderBy, t));
  }, t.prototype.Is = function (t) {}, t;
}(),
    Ce =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this) || this).field = e, i.op = n, i.value = r, i;
  }
  /**
   * Creates a filter based on the provided arguments.
   */


  return e.__extends(n, t), n.create = function (t, e, r) {
    if (t.L()) return "in"
    /* IN */
    === e ? new Fe(t, r) : new qe(t, e, r);

    if (Ut(r)) {
      if ("=="
      /* EQUAL */
      !== e) throw new S(x.INVALID_ARGUMENT, "Invalid query. Null supports only equality comparisons.");
      return new n(t, e, r);
    }

    if (Lt(r)) {
      if ("=="
      /* EQUAL */
      !== e) throw new S(x.INVALID_ARGUMENT, "Invalid query. NaN supports only equality comparisons.");
      return new n(t, e, r);
    }

    return "array-contains"
    /* ARRAY_CONTAINS */
    === e ? new Me(t, r) : "in"
    /* IN */
    === e ? new je(t, r) : "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    === e ? new Be(t, r) : new n(t, e, r);
  }, n.prototype.matches = function (t) {
    var e = t.field(this.field); // Only compare types with matching backend order (such as double and int).

    return null !== e && It(this.value) === It(e) && this.qs(Nt(e, this.value));
  }, n.prototype.qs = function (t) {
    switch (this.op) {
      case "<"
      /* LESS_THAN */
      :
        return t < 0;

      case "<="
      /* LESS_THAN_OR_EQUAL */
      :
        return t <= 0;

      case "=="
      /* EQUAL */
      :
        return 0 === t;

      case ">"
      /* GREATER_THAN */
      :
        return t > 0;

      case ">="
      /* GREATER_THAN_OR_EQUAL */
      :
        return t >= 0;

      default:
        return p();
    }
  }, n.prototype.Ms = function () {
    return ["<"
    /* LESS_THAN */
    , "<="
    /* LESS_THAN_OR_EQUAL */
    , ">"
    /* GREATER_THAN */
    , ">="
    /* GREATER_THAN_OR_EQUAL */
    ].indexOf(this.op) >= 0;
  }, n.prototype.canonicalId = function () {
    // TODO(b/29183165): Technically, this won't be unique if two values have
    // the same description, such as the int 3 and the string "3". So we should
    // add the types in here somehow, too.
    return this.field.N() + this.op.toString() + xt(this.value);
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.op === t.op && this.field.isEqual(t.field) && Et(this.value, t.value);
  }, n.prototype.toString = function () {
    return this.field.N() + " " + this.op + " " + xt(this.value);
  }, n;
}(function () {}),
    qe =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this, e, n, r) || this).key = L.q(r.referenceValue), i;
  }

  return e.__extends(n, t), n.prototype.matches = function (t) {
    var e = L.P(t.key, this.key);
    return this.qs(e);
  }, n;
}(Ce),
    Fe =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this, e, "in"
    /* IN */
    , n) || this).keys = (n.arrayValue.values || []).map(function (t) {
      return L.q(t.referenceValue);
    }), r;
  }

  return e.__extends(n, t), n.prototype.matches = function (t) {
    return this.keys.some(function (e) {
      return e.isEqual(t.key);
    });
  }, n;
}(Ce),
    Me =
/** @class */
function (t) {
  function n(e, n) {
    return t.call(this, e, "array-contains"
    /* ARRAY_CONTAINS */
    , n) || this;
  }

  return e.__extends(n, t), n.prototype.matches = function (t) {
    var e = t.field(this.field);
    return Ot(e) && Tt(e.arrayValue, this.value);
  }, n;
}(Ce),
    je =
/** @class */
function (t) {
  function n(e, n) {
    return t.call(this, e, "in"
    /* IN */
    , n) || this;
  }

  return e.__extends(n, t), n.prototype.matches = function (t) {
    var e = t.field(this.field);
    return null !== e && Tt(this.value.arrayValue, e);
  }, n;
}(Ce),
    Be =
/** @class */
function (t) {
  function n(e, n) {
    return t.call(this, e, "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    , n) || this;
  }

  return e.__extends(n, t), n.prototype.matches = function (t) {
    var e = this,
        n = t.field(this.field);
    return !(!Ot(n) || !n.arrayValue.values) && n.arrayValue.values.some(function (t) {
      return Tt(e.value.arrayValue, t);
    });
  }, n;
}(Ce),
    Qe = function Qe(t, e) {
  this.position = t, this.before = e;
};
/**
 * Represents a document in Firestore with a key, version, data and whether the
 * data has local mutations applied to it.
 */


function Ge(t) {
  // TODO(b/29183165): Make this collision robust.
  return (t.before ? "b" : "a") + ":" + t.position.map(function (t) {
    return xt(t);
  }).join(",");
}
/**
 * Returns true if a document sorts before a bound using the provided sort
 * order.
 */


function ze(t, e, n) {
  for (var r = 0, i = 0; i < t.position.length; i++) {
    var o = e[i],
        s = t.position[i];
    if (r = o.field.L() ? L.P(L.q(s.referenceValue), n.key) : Nt(s, n.field(o.field)), "desc"
    /* DESCENDING */
    === o.dir && (r *= -1), 0 !== r) break;
  }

  return t.before ? r <= 0 : r < 0;
}

function We(t, e) {
  if (null === t) return null === e;
  if (null === e) return !1;
  if (t.before !== e.before || t.position.length !== e.position.length) return !1;

  for (var n = 0; n < t.position.length; n++) {
    if (!Et(t.position[n], e.position[n])) return !1;
  }

  return !0;
}
/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */


var He =
/** @class */
function () {
  function t(t, e) {
    this.field = t, void 0 === e && (e = "asc"
    /* ASCENDING */
    ), this.dir = e, this.Us = t.L();
  }

  return t.prototype.compare = function (t, e) {
    var n = this.Us ? L.P(t.key, e.key) : function (t, e, n) {
      var r = e.field(t),
          i = n.field(t);
      return null !== r && null !== i ? Nt(r, i) : p();
    }(this.field, t, e);

    switch (this.dir) {
      case "asc"
      /* ASCENDING */
      :
        return n;

      case "desc"
      /* DESCENDING */
      :
        return -1 * n;

      default:
        return p();
    }
  }, t.prototype.canonicalId = function () {
    // TODO(b/29183165): Make this collision robust.
    return this.field.N() + this.dir.toString();
  }, t.prototype.toString = function () {
    return this.field.N() + " (" + this.dir + ")";
  }, t.prototype.isEqual = function (t) {
    return this.dir === t.dir && this.field.isEqual(t.field);
  }, t;
}(),
    Ke =
/** @class */
function (t) {
  function n(e, n, r, i, o, s, u) {
    void 0 === n && (n = null), void 0 === r && (r = []), void 0 === i && (i = []), void 0 === o && (o = null), void 0 === s && (s = null), void 0 === u && (u = null);
    var a = this;
    return (a = t.call(this, e, n, r, i, o, s, u) || this).Qs = null, a;
  }

  return e.__extends(n, t), n;
}(function (t, e, n, r, i, o, s) {
  this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = i, this.startAt = o, this.endAt = s;
});
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A Target represents the WatchTarget representation of a Query, which is used
 * by the LocalStore and the RemoteStore to keep track of and to execute
 * backend queries. While a Query can represent multiple Targets, each Targets
 * maps to a single WatchTarget in RemoteStore and a single TargetData entry
 * in persistence.
 */

/**
 * Initializes a Target with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 *
 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
 * using this factory method, because `Query` provides an implicit `orderBy`
 * property.
 */


function Ye(t, e, n, r, i, o, s) {
  return void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = null), void 0 === s && (s = null), new Ke(t, e, n, r, i, o, s);
}

function Xe(t) {
  var e = y(t);

  if (null === e.Qs) {
    var n = e.path.N();
    null !== e.collectionGroup && (n += "|cg:" + e.collectionGroup), n += "|f:", n += e.filters.map(function (t) {
      return t.canonicalId();
    }).join(","), n += "|ob:", n += e.orderBy.map(function (t) {
      return t.canonicalId();
    }).join(","), V(e.limit) || (n += "|l:", n += e.limit), e.startAt && (n += "|lb:", n += Ge(e.startAt)), e.endAt && (n += "|ub:", n += Ge(e.endAt)), e.Qs = n;
  }

  return e.Qs;
}

function $e(t, e) {
  if (t.limit !== e.limit) return !1;
  if (t.orderBy.length !== e.orderBy.length) return !1;

  for (var n = 0; n < t.orderBy.length; n++) {
    if (!t.orderBy[n].isEqual(e.orderBy[n])) return !1;
  }

  if (t.filters.length !== e.filters.length) return !1;

  for (var r = 0; r < t.filters.length; r++) {
    if (!t.filters[r].isEqual(e.filters[r])) return !1;
  }

  return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!We(t.startAt, e.startAt) && We(t.endAt, e.endAt);
}

function Je(t) {
  return L.W(t.path) && null === t.collectionGroup && 0 === t.filters.length;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A batch of mutations that will be sent as one unit to the backend.
 */


var Ze =
/** @class */
function () {
  /**
   * @param batchId The unique ID of this mutation batch.
   * @param localWriteTime The original write time of this mutation.
   * @param baseMutations Mutations that are used to populate the base
   * values when this mutation is applied locally. This can be used to locally
   * overwrite values that are persisted in the remote document cache. Base
   * mutations are never sent to the backend.
   * @param mutations The user-provided mutations in this mutation batch.
   * User-provided mutations are applied both locally and remotely on the
   * backend.
   */
  function t(t, e, n, r) {
    this.batchId = t, this.Ws = e, this.baseMutations = n, this.mutations = r
    /**
    * Applies all the mutations in this MutationBatch to the specified document
    * to create a new remote document
    *
    * @param docKey The key of the document to apply mutations to.
    * @param maybeDoc The document to apply mutations to.
    * @param batchResult The result of applying the MutationBatch to the
    * backend.
    */
    ;
  }

  return t.prototype.Ke = function (t, e, n) {
    for (var r = n.js, i = 0; i < this.mutations.length; i++) {
      var o = this.mutations[i];

      if (o.key.isEqual(t)) {
        var s = r[i];
        e = o.Ke(e, s);
      }
    }

    return e;
  },
  /**
   * Computes the local view of a document given all the mutations in this
   * batch.
   *
   * @param docKey The key of the document to apply mutations to.
   * @param maybeDoc The document to apply mutations to.
   */
  t.prototype.je = function (t, e) {
    // First, apply the base state. This allows us to apply non-idempotent
    // transform against a consistent set of values.
    for (var n = 0, r = this.baseMutations; n < r.length; n++) {
      var i = r[n];
      i.key.isEqual(t) && (e = i.je(e, e, this.Ws));
    } // Second, apply all user-provided mutations.


    for (var o = e, s = 0, u = this.mutations; s < u.length; s++) {
      var a = u[s];
      a.key.isEqual(t) && (e = a.je(e, o, this.Ws));
    }

    return e;
  },
  /**
   * Computes the local view for all provided documents given the mutations in
   * this batch.
   */
  t.prototype.Ks = function (t) {
    var e = this,
        n = t; // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
    // directly (as done in `applyToLocalView()`), we can reduce the complexity
    // to O(n).

    return this.mutations.forEach(function (r) {
      var i = e.je(r.key, t.get(r.key));
      i && (n = n.et(r.key, i));
    }), n;
  }, t.prototype.keys = function () {
    return this.mutations.reduce(function (t, e) {
      return t.add(e.key);
    }, it());
  }, t.prototype.isEqual = function (t) {
    return this.batchId === t.batchId && w(this.mutations, t.mutations, function (t, e) {
      return t.isEqual(e);
    }) && w(this.baseMutations, t.baseMutations, function (t, e) {
      return t.isEqual(e);
    });
  }, t;
}(),
    tn =
/** @class */
function () {
  function t(t, e, n,
  /**
   * A pre-computed mapping from each mutated document to the resulting
   * version.
   */
  r) {
    this.batch = t, this.Gs = e, this.js = n, this.zs = r
    /**
    * Creates a new MutationBatchResult for the given batch and results. There
    * must be one result for each mutation in the batch. This static factory
    * caches a document=>version mapping (docVersions).
    */
    ;
  }

  return t.from = function (e, n, r) {
    d(e.mutations.length === r.length);

    for (var i = nt, o = e.mutations, s = 0; s < o.length; s++) {
      i = i.et(o[s].key, r[s].version);
    }

    return new t(e, n, r, i);
  }, t;
}(),
    en =
/** @class */
function () {
  function t(t) {
    var e = this; // NOTE: next/catchCallback will always point to our own wrapper functions,
    // not the user's raw next() or catch() callbacks.

    this.Hs = null, this.Ys = null, // When the operation resolves, we'll set result or error and mark isDone.
    this.result = void 0, this.error = void 0, this.Js = !1, // Set to true when .then() or .catch() are called and prevents additional
    // chaining.
    this.Xs = !1, t(function (t) {
      e.Js = !0, e.result = t, e.Hs && // value should be defined unless T is Void, but we can't express
      // that in the type system.
      e.Hs(t);
    }, function (t) {
      e.Js = !0, e.error = t, e.Ys && e.Ys(t);
    });
  }

  return t.prototype.catch = function (t) {
    return this.next(void 0, t);
  }, t.prototype.next = function (e, n) {
    var r = this;
    return this.Xs && p(), this.Xs = !0, this.Js ? this.error ? this.Zs(n, this.error) : this.tn(e, this.result) : new t(function (t, i) {
      r.Hs = function (n) {
        r.tn(e, n).next(t, i);
      }, r.Ys = function (e) {
        r.Zs(n, e).next(t, i);
      };
    });
  }, t.prototype.en = function () {
    var t = this;
    return new Promise(function (e, n) {
      t.next(e, n);
    });
  }, t.prototype.sn = function (e) {
    try {
      var n = e();
      return n instanceof t ? n : t.resolve(n);
    } catch (e) {
      return t.reject(e);
    }
  }, t.prototype.tn = function (e, n) {
    return e ? this.sn(function () {
      return e(n);
    }) : t.resolve(n);
  }, t.prototype.Zs = function (e, n) {
    return e ? this.sn(function () {
      return e(n);
    }) : t.reject(n);
  }, t.resolve = function (e) {
    return new t(function (t, n) {
      t(e);
    });
  }, t.reject = function (e) {
    return new t(function (t, n) {
      n(e);
    });
  }, t.nn = function ( // Accept all Promise types in waitFor().
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  e) {
    return new t(function (t, n) {
      var r = 0,
          i = 0,
          o = !1;
      e.forEach(function (e) {
        ++r, e.next(function () {
          ++i, o && i === r && t();
        }, function (t) {
          return n(t);
        });
      }), o = !0, i === r && t();
    });
  },
  /**
   * Given an array of predicate functions that asynchronously evaluate to a
   * boolean, implements a short-circuiting `or` between the results. Predicates
   * will be evaluated until one of them returns `true`, then stop. The final
   * result will be whether any of them returned `true`.
   */
  t.rn = function (e) {
    for (var n = t.resolve(!1), r = function r(e) {
      n = n.next(function (n) {
        return n ? t.resolve(n) : e();
      });
    }, i = 0, o = e; i < o.length; i++) {
      r(o[i]);
    }

    return n;
  }, t.forEach = function (t, e) {
    var n = this,
        r = [];
    return t.forEach(function (t, i) {
      r.push(e.call(n, t, i));
    }), this.nn(r);
  }, t;
}(),
    nn =
/** @class */
function () {
  function t() {
    // A mapping of document key to the new cache entry that should be written (or null if any
    // existing cache entry should be removed).
    this.on = new A(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    }), this.hn = !1;
  }

  return Object.defineProperty(t.prototype, "readTime", {
    get: function get() {
      return this.an;
    },
    set: function set(t) {
      this.an = t;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * Buffers a `RemoteDocumentCache.addEntry()` call.
   *
   * You can only modify documents that have already been retrieved via
   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
   */
  t.prototype.un = function (t, e) {
    this.cn(), this.readTime = e, this.on.set(t.key, t);
  },
  /**
   * Buffers a `RemoteDocumentCache.removeEntry()` call.
   *
   * You can only remove documents that have already been retrieved via
   * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
   */
  t.prototype.ln = function (t, e) {
    this.cn(), e && (this.readTime = e), this.on.set(t, null);
  },
  /**
   * Looks up an entry in the cache. The buffered changes will first be checked,
   * and if no buffered change applies, this will forward to
   * `RemoteDocumentCache.getEntry()`.
   *
   * @param transaction The transaction in which to perform any persistence
   *     operations.
   * @param documentKey The key of the entry to look up.
   * @return The cached Document or NoDocument entry, or null if we have nothing
   * cached.
   */
  t.prototype._n = function (t, e) {
    this.cn();
    var n = this.on.get(e);
    return void 0 !== n ? en.resolve(n) : this.fn(t, e);
  },
  /**
   * Looks up several entries in the cache, forwarding to
   * `RemoteDocumentCache.getEntry()`.
   *
   * @param transaction The transaction in which to perform any persistence
   *     operations.
   * @param documentKeys The keys of the entries to look up.
   * @return A map of cached `Document`s or `NoDocument`s, indexed by key. If an
   *     entry cannot be found, the corresponding key will be mapped to a null
   *     value.
   */
  t.prototype.getEntries = function (t, e) {
    return this.dn(t, e);
  },
  /**
   * Applies buffered changes to the underlying RemoteDocumentCache, using
   * the provided transaction.
   */
  t.prototype.apply = function (t) {
    return this.cn(), this.hn = !0, this.wn(t);
  },
  /** Helper to assert this.changes is not null  */
  t.prototype.cn = function () {}, t;
}(),
    rn = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",
    on =
/** @class */
function () {
  function t() {
    this.Tn = [];
  }

  return t.prototype.En = function (t) {
    this.Tn.push(t);
  }, t.prototype.In = function () {
    this.Tn.forEach(function (t) {
      return t();
    });
  }, t;
}(),
    sn =
/** @class */
function () {
  function t(t, e, n) {
    this.An = t, this.Rn = e, this.mn = n
    /**
    * Get the local view of the document identified by `key`.
    *
    * @return Local view of the document or null if we don't have any cached
    * state for it.
    */
    ;
  }

  return t.prototype.Pn = function (t, e) {
    var n = this;
    return this.Rn.Vn(t, e).next(function (r) {
      return n.gn(t, e, r);
    });
  },
  /** Internal version of `getDocument` that allows reusing batches. */
  t.prototype.gn = function (t, e, n) {
    return this.An._n(t, e).next(function (t) {
      for (var r = 0, i = n; r < i.length; r++) {
        t = i[r].je(e, t);
      }

      return t;
    });
  }, // Returns the view of the given `docs` as they would appear after applying
  // all mutations in the given `batches`.
  t.prototype.pn = function (t, e, n) {
    var r = Z();
    return e.forEach(function (t, e) {
      for (var i = 0, o = n; i < o.length; i++) {
        e = o[i].je(t, e);
      }

      r = r.et(t, e);
    }), r;
  },
  /**
   * Gets the local view of the documents identified by `keys`.
   *
   * If we don't have cached state for a document in `keys`, a NoDocument will
   * be stored for that key in the resulting set.
   */
  t.prototype.yn = function (t, e) {
    var n = this;
    return this.An.getEntries(t, e).next(function (e) {
      return n.bn(t, e);
    });
  },
  /**
   * Similar to `getDocuments`, but creates the local view from the given
   * `baseDocs` without retrieving documents from the local store.
   */
  t.prototype.bn = function (t, e) {
    var n = this;
    return this.Rn.vn(t, e).next(function (r) {
      var i = n.pn(t, e, r),
          o = J();
      return i.forEach(function (t, e) {
        // TODO(http://b/32275378): Don't conflate missing / deleted.
        e || (e = new Ue(t, k.min())), o = o.et(t, e);
      }), o;
    });
  },
  /**
   * Performs a query against the local view of all documents.
   *
   * @param transaction The persistence transaction.
   * @param query The query to match documents against.
   * @param sinceReadTime If not set to SnapshotVersion.min(), return only
   *     documents that have been read since this snapshot version (exclusive).
   */
  t.prototype.Sn = function (t, e, n) {
    return e.Os() ? this.Dn(t, e.path) : e.Bs() ? this.Cn(t, e, n) : this.Fn(t, e, n);
  }, t.prototype.Dn = function (t, e) {
    // Just do a simple document lookup.
    return this.Pn(t, new L(e)).next(function (t) {
      var e = et();
      return t instanceof Oe && (e = e.et(t.key, t)), e;
    });
  }, t.prototype.Cn = function (t, e, n) {
    var r = this,
        i = e.collectionGroup,
        o = et();
    return this.mn.Nn(t, i).next(function (s) {
      return en.forEach(s, function (s) {
        var u = e.vs(s.child(i));
        return r.Fn(t, u, n).next(function (t) {
          t.forEach(function (t, e) {
            o = o.et(t, e);
          });
        });
      }).next(function () {
        return o;
      });
    });
  }, t.prototype.Fn = function (t, e, n) {
    var r,
        i,
        o = this; // Query the remote documents and overlay mutations.

    return this.An.Sn(t, e, n).next(function (n) {
      return r = n, o.Rn.$n(t, e);
    }).next(function (e) {
      return i = e, o.kn(t, i, r).next(function (t) {
        r = t;

        for (var e = 0, n = i; e < n.length; e++) {
          for (var o = n[e], s = 0, u = o.mutations; s < u.length; s++) {
            var a = u[s],
                c = a.key,
                h = r.get(c),
                f = a.je(h, h, o.Ws);
            r = f instanceof Oe ? r.et(c, f) : r.remove(c);
          }
        }
      });
    }).next(function () {
      // Finally, filter out any documents that don't actually match
      // the query.
      return r.forEach(function (t, n) {
        e.matches(n) || (r = r.remove(t));
      }), r;
    });
  }, t.prototype.kn = function (t, e, n) {
    for (var r = it(), i = 0, o = e; i < o.length; i++) {
      for (var s = 0, u = o[i].mutations; s < u.length; s++) {
        var a = u[s];
        a instanceof Ne && null === n.get(a.key) && (r = r.add(a.key));
      }
    }

    var c = n;
    return this.An.getEntries(t, r).next(function (t) {
      return t.forEach(function (t, e) {
        null !== e && e instanceof Oe && (c = c.et(t, e));
      }), c;
    });
  }, t;
}(),
    un =
/** @class */
function () {
  function t(t, e, n, r) {
    this.targetId = t, this.fromCache = e, this.xn = n, this.Mn = r;
  }

  return t.Ln = function (e, n) {
    for (var r = it(), i = it(), o = 0, s = n.docChanges; o < s.length; o++) {
      var u = s[o];

      switch (u.type) {
        case 0
        /* Added */
        :
          r = r.add(u.doc.key);
          break;

        case 1
        /* Removed */
        :
          i = i.add(u.doc.key);
        // do nothing
      }
    }

    return new t(e, n.fromCache, r, i);
  }, t;
}(),
    an =
/** @class */
function () {
  function t(t, e) {
    var n = this;
    this.previousValue = t, e && (e.On = function (t) {
      return n.Bn(t);
    }, this.qn = function (t) {
      return e.Un(t);
    });
  }

  return t.prototype.Bn = function (t) {
    return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
  }, t.prototype.next = function () {
    var t = ++this.previousValue;
    return this.qn && this.qn(t), t;
  }, t;
}();
/** The result of applying a mutation batch to the backend. */


an.Qn = -1;
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var cn = function cn() {
  var t = this;
  this.promise = new Promise(function (e, n) {
    t.resolve = e, t.reject = n;
  });
},
    hn =
/** @class */
function () {
  function t(
  /**
   * The AsyncQueue to run backoff operations on.
   */
  t,
  /**
   * The ID to use when scheduling backoff operations on the AsyncQueue.
   */
  e,
  /**
   * The initial delay (used as the base delay on the first retry attempt).
   * Note that jitter will still be applied, so the actual delay could be as
   * little as 0.5*initialDelayMs.
   */
  n
  /**
   * The multiplier to use to determine the extended base delay after each
   * attempt.
   */
  , r
  /**
   * The maximum base delay after which no further backoff is performed.
   * Note that jitter will still be applied, so the actual delay could be as
   * much as 1.5*maxDelayMs.
   */
  , i) {
    void 0 === n && (n = 1e3), void 0 === r && (r = 1.5), void 0 === i && (i = 6e4), this.Wn = t, this.jn = e, this.Kn = n, this.Gn = r, this.zn = i, this.Hn = 0, this.Yn = null,
    /** The last backoff attempt, as epoch milliseconds. */
    this.Jn = Date.now(), this.reset();
  }
  /**
   * Resets the backoff delay.
   *
   * The very next backoffAndWait() will have no delay. If it is called again
   * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
   * subsequent ones will increase according to the backoffFactor.
   */


  return t.prototype.reset = function () {
    this.Hn = 0;
  },
  /**
   * Resets the backoff delay to the maximum delay (e.g. for use after a
   * RESOURCE_EXHAUSTED error).
   */
  t.prototype.Xn = function () {
    this.Hn = this.zn;
  },
  /**
   * Returns a promise that resolves after currentDelayMs, and increases the
   * delay for any subsequent attempts. If there was a pending backoff operation
   * already, it will be canceled.
   */
  t.prototype.Zn = function (t) {
    var e = this; // Cancel any pending backoff operation.

    this.cancel(); // First schedule using the current base (which may be 0 and should be
    // honored as such).

    var n = Math.floor(this.Hn + this.ti()),
        r = Math.max(0, Date.now() - this.Jn),
        i = Math.max(0, n - r); // Guard against lastAttemptTime being in the future due to a clock change.

    i > 0 && h("ExponentialBackoff", "Backing off for " + i + " ms (base delay: " + this.Hn + " ms, delay with jitter: " + n + " ms, last attempt: " + r + " ms ago)"), this.Yn = this.Wn.ei(this.jn, i, function () {
      return e.Jn = Date.now(), t();
    }), // Apply backoff factor to determine next delay and ensure it is within
    // bounds.
    this.Hn *= this.Gn, this.Hn < this.Kn && (this.Hn = this.Kn), this.Hn > this.zn && (this.Hn = this.zn);
  }, t.prototype.si = function () {
    null !== this.Yn && (this.Yn.ni(), this.Yn = null);
  }, t.prototype.cancel = function () {
    null !== this.Yn && (this.Yn.cancel(), this.Yn = null);
  },
  /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */
  t.prototype.ti = function () {
    return (Math.random() - .5) * this.Hn;
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */


function fn(t) {
  for (var e = "", n = 0; n < t.length; n++) {
    e.length > 0 && (e = pn(e)), e = ln(t.get(n), e);
  }

  return pn(e);
}
/** Encodes a single segment of a resource path into the given result */


function ln(t, e) {
  for (var n = e, r = t.length, i = 0; i < r; i++) {
    var o = t.charAt(i);

    switch (o) {
      case "\0":
        n += "";
        break;

      case "":
        n += "";
        break;

      default:
        n += o;
    }
  }

  return n;
}
/** Encodes a path separator into the given result */


function pn(t) {
  return t + "";
}
/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */


function dn(t) {
  // Event the empty path must encode as a path of at least length 2. A path
  // with exactly 2 must be the empty path.
  var e = t.length;
  if (d(e >= 2), 2 === e) return d("" === t.charAt(0) && "" === t.charAt(1)), R.k; // Escape characters cannot exist past the second-to-last position in the
  // source value.

  for (var n = e - 2, r = [], i = "", o = 0; o < e;) {
    // The last two characters of a valid encoded path must be a separator, so
    // there must be an end to this segment.
    var s = t.indexOf("", o);

    switch ((s < 0 || s > n) && p(), t.charAt(s + 1)) {
      case "":
        var u = t.substring(o, s),
            a = void 0;
        0 === i.length ? // Avoid copying for the common case of a segment that excludes \0
        // and \001
        a = u : (a = i += u, i = ""), r.push(a);
        break;

      case "":
        i += t.substring(o, s), i += "\0";
        break;

      case "":
        // The escape character can be used in the output to encode itself.
        i += t.substring(o, s + 1);
        break;

      default:
        p();
    }

    o = s + 2;
  }

  return new R(r);
}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * An in-memory implementation of IndexManager.
 */


var yn =
/** @class */
function () {
  function t() {
    this.ii = new vn();
  }

  return t.prototype.ri = function (t, e) {
    return this.ii.add(e), en.resolve();
  }, t.prototype.Nn = function (t, e) {
    return en.resolve(this.ii.getEntries(e));
  }, t;
}(),
    vn =
/** @class */
function () {
  function t() {
    this.index = {};
  } // Returns false if the entry already existed.


  return t.prototype.add = function (t) {
    var e = t.S(),
        n = t.p(),
        r = this.index[e] || new Y(R.P),
        i = !r.has(n);
    return this.index[e] = r.add(n), i;
  }, t.prototype.has = function (t) {
    var e = t.S(),
        n = t.p(),
        r = this.index[e];
    return r && r.has(n);
  }, t.prototype.getEntries = function (t) {
    return (this.index[t] || new Y(R.P)).F();
  }, t;
}(),
    gn =
/** @class */
function () {
  function t() {
    /**
     * An in-memory copy of the index entries we've already written since the SDK
     * launched. Used to avoid re-writing the same entry repeatedly.
     *
     * This is *NOT* a complete cache of what's in persistence and so can never be used to
     * satisfy reads.
     */
    this.oi = new vn();
  }
  /**
   * Adds a new entry to the collection parent index.
   *
   * Repeated calls for the same collectionPath should be avoided within a
   * transaction as IndexedDbIndexManager only caches writes once a transaction
   * has been committed.
   */


  return t.prototype.ri = function (t, e) {
    var n = this;

    if (!this.oi.has(e)) {
      var r = e.S(),
          i = e.p();
      t.En(function () {
        // Add the collection to the in memory cache only if the transaction was
        // successfully committed.
        n.oi.add(e);
      });
      var o = {
        collectionId: r,
        parent: fn(i)
      };
      return mn(t).put(o);
    }

    return en.resolve();
  }, t.prototype.Nn = function (t, e) {
    var n = [],
        r = IDBKeyRange.bound([e, ""], [_(e), ""],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0);
    return mn(t).hi(r).next(function (t) {
      for (var r = 0, i = t; r < i.length; r++) {
        var o = i[r]; // This collectionId guard shouldn't be necessary (and isn't as long
        // as we're running in a real browser), but there's a bug in
        // indexeddbshim that breaks our range in our tests running in node:
        // https://github.com/axemclion/IndexedDBShim/issues/334

        if (o.collectionId !== e) break;
        n.push(dn(o.parent));
      }

      return n;
    });
  }, t;
}();
/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 */

/**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */


function mn(t) {
  return jn.ai(t, lr.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Serializer for values stored in the LocalStore. */


var wn = function wn(t) {
  this.ui = t;
};
/** Decodes a remote document from storage locally to a Document. */


function _n(t, e) {
  if (e.document) return function (t, e, n) {
    var r = Xt(t, e.name),
        i = Wt(e.updateTime),
        o = new De({
      mapValue: {
        fields: e.fields
      }
    });
    return new Oe(r, i, o, {
      hasCommittedMutations: !!n
    });
  }(t.ui, e.document, !!e.hasCommittedMutations);

  if (e.noDocument) {
    var n = L.j(e.noDocument.path),
        r = Nn(e.noDocument.readTime);
    return new Ue(n, r, {
      hasCommittedMutations: !!e.hasCommittedMutations
    });
  }

  if (e.unknownDocument) {
    var i = L.j(e.unknownDocument.path),
        o = Nn(e.unknownDocument.version);
    return new Le(i, o);
  }

  return p();
}
/** Encodes a document for storage locally. */


function bn(t, e, n) {
  var r = In(n),
      i = e.key.path.p().F();

  if (e instanceof Oe) {
    var o = function (t, e) {
      return {
        name: Yt(t, e.key),
        fields: e.fs().mapValue.fields,
        updateTime: Bt(t, e.version.R())
      };
    }(t.ui, e),
        s = e.hasCommittedMutations;

    return new ur(
    /* unknownDocument= */
    null,
    /* noDocument= */
    null, o, s, r, i);
  }

  if (e instanceof Ue) {
    var u = e.key.path.F(),
        a = Tn(e.version),
        c = e.hasCommittedMutations;
    return new ur(
    /* unknownDocument= */
    null, new or(u, a),
    /* document= */
    null, c, r, i);
  }

  if (e instanceof Le) {
    var h = e.key.path.F(),
        f = Tn(e.version);
    return new ur(new sr(h, f),
    /* noDocument= */
    null,
    /* document= */
    null,
    /* hasCommittedMutations= */
    !0, r, i);
  }

  return p();
}

function In(t) {
  var e = t.R();
  return [e.seconds, e.nanoseconds];
}

function En(t) {
  var e = new D(t[0], t[1]);
  return k.I(e);
}

function Tn(t) {
  var e = t.R();
  return new tr(e.seconds, e.nanoseconds);
}

function Nn(t) {
  var e = new D(t.seconds, t.nanoseconds);
  return k.I(e);
}
/** Encodes a batch of mutations into a DbMutationBatch for local storage. */

/** Decodes a DbMutationBatch into a MutationBatch */


function An(t, e) {
  var n = (e.baseMutations || []).map(function (e) {
    return re(t.ui, e);
  }),
      r = e.mutations.map(function (e) {
    return re(t.ui, e);
  }),
      i = D.fromMillis(e.localWriteTimeMs);
  return new Ze(e.batchId, i, n, r);
}
/** Decodes a DbTarget into TargetData */


function xn(t) {
  var e,
      n = Nn(t.readTime),
      r = void 0 !== t.lastLimboFreeSnapshotVersion ? Nn(t.lastLimboFreeSnapshotVersion) : k.min();
  return e = void 0 !== t.query.documents ? function (t) {
    d(1 === t.documents.length);
    var e = t.documents[0];
    return Ve.As(Jt(e)).We();
  }(t.query) : function (t) {
    var e = Jt(t.parent),
        n = t.structuredQuery,
        r = n.from ? n.from.length : 0,
        i = null;

    if (r > 0) {
      d(1 === r);
      var o = n.from[0];
      o.allDescendants ? i = o.collectionId : e = e.child(o.collectionId);
    }

    var s = [];
    n.where && (s = function t(e) {
      return e ? void 0 !== e.unaryFilter ? [fe(e)] : void 0 !== e.fieldFilter ? [he(e)] : void 0 !== e.compositeFilter ? e.compositeFilter.filters.map(function (e) {
        return t(e);
      }).reduce(function (t, e) {
        return t.concat(e);
      }) : p() : [];
    }(n.where));
    var u = [];
    n.orderBy && (u = n.orderBy.map(function (t) {
      return new He(ce((e = t).field), // visible for testing
      function (t) {
        switch (t) {
          case "ASCENDING":
            return "asc"
            /* ASCENDING */
            ;

          case "DESCENDING":
            return "desc"
            /* DESCENDING */
            ;

          default:
            return;
        }
      }(e.direction));
      var e;
    }));
    var a = null;
    n.limit && (a = function (t) {
      var e;
      return V(e = "object" == _typeof(t) ? t.value : t) ? null : e;
    }(n.limit));
    var c = null;
    n.startAt && (c = ue(n.startAt));
    var h = null;
    return n.endAt && (h = ue(n.endAt)), new Ve(e, i, u, s, a, "F"
    /* First */
    , c, h).We();
  }(t.query), new B(e, t.targetId, 0
  /* Listen */
  , t.lastListenSequenceNumber, n, r, F.fromBase64String(t.resumeToken))
  /** Encodes TargetData into a DbTarget for storage locally. */
  ;
}

function Sn(t, e) {
  var n,
      r = Tn(e.J),
      i = Tn(e.lastLimboFreeSnapshotVersion);
  n = Je(e.target) ? ie(t.ui, e.target) : oe(t.ui, e.target); // We can't store the resumeToken as a ByteString in IndexedDb, so we
  // convert it to a base64 string for storage.

  var o = e.resumeToken.toBase64(); // lastListenSequenceNumber is always 0 until we do real GC.

  return new cr(e.targetId, Xe(e.target), r, o, e.sequenceNumber, i, n);
}
/**
 * A helper function for figuring out what kind of query has been stored.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Dn =
/** @class */
function () {
  /**
   * @param {LocalSerializer} serializer The document serializer.
   * @param {IndexManager} indexManager The query indexes that need to be maintained.
   */
  function t(t, e) {
    this.serializer = t, this.mn = e
    /**
    * Adds the supplied entries to the cache.
    *
    * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
    * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
    */
    ;
  }

  return t.prototype.un = function (t, e, n) {
    return Pn(t).put(Rn(e), n);
  },
  /**
   * Removes a document from the cache.
   *
   * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
   * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
   */
  t.prototype.ln = function (t, e) {
    var n = Pn(t),
        r = Rn(e);
    return n.delete(r);
  },
  /**
   * Updates the current cache size.
   *
   * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
   * cache's metadata.
   */
  t.prototype.updateMetadata = function (t, e) {
    var n = this;
    return this.getMetadata(t).next(function (r) {
      return r.byteSize += e, n.ci(t, r);
    });
  }, t.prototype._n = function (t, e) {
    var n = this;
    return Pn(t).get(Rn(e)).next(function (t) {
      return n.li(t);
    });
  },
  /**
   * Looks up an entry in the cache.
   *
   * @param documentKey The key of the entry to look up.
   * @return The cached MaybeDocument entry and its size, or null if we have nothing cached.
   */
  t.prototype._i = function (t, e) {
    var n = this;
    return Pn(t).get(Rn(e)).next(function (t) {
      var e = n.li(t);
      return e ? {
        fi: e,
        size: On(t)
      } : null;
    });
  }, t.prototype.getEntries = function (t, e) {
    var n = this,
        r = Z();
    return this.di(t, e, function (t, e) {
      var i = n.li(e);
      r = r.et(t, i);
    }).next(function () {
      return r;
    });
  },
  /**
   * Looks up several entries in the cache.
   *
   * @param documentKeys The set of keys entries to look up.
   * @return A map of MaybeDocuments indexed by key (if a document cannot be
   *     found, the key will be mapped to null) and a map of sizes indexed by
   *     key (zero if the key cannot be found).
   */
  t.prototype.wi = function (t, e) {
    var n = this,
        r = Z(),
        i = new W(L.P);
    return this.di(t, e, function (t, e) {
      var o = n.li(e);
      o ? (r = r.et(t, o), i = i.et(t, On(e))) : (r = r.et(t, null), i = i.et(t, 0));
    }).next(function () {
      return {
        Ti: r,
        Ei: i
      };
    });
  }, t.prototype.di = function (t, e, n) {
    if (e._()) return en.resolve();
    var r = IDBKeyRange.bound(e.first().path.F(), e.last().path.F()),
        i = e.at(),
        o = i.dt();
    return Pn(t).Ii({
      range: r
    }, function (t, e, r) {
      // Go through keys not found in cache.
      for (var s = L.j(t); o && L.P(o, s) < 0;) {
        n(o, null), o = i.dt();
      }

      o && o.isEqual(s) && ( // Key found in cache.
      n(o, e), o = i.wt() ? i.dt() : null), // Skip to the next key (if there is one).
      o ? r.Ai(o.path.F()) : r.done();
    }).next(function () {
      // The rest of the keys are not in the cache. One case where `iterate`
      // above won't go through them is when the cache is empty.
      for (; o;) {
        n(o, null), o = i.wt() ? i.dt() : null;
      }
    });
  }, t.prototype.Sn = function (t, e, n) {
    var r = this,
        i = et(),
        o = e.path.length + 1,
        s = {};

    if (n.isEqual(k.min())) {
      // Documents are ordered by key, so we can use a prefix scan to narrow
      // down the documents we need to match the query against.
      var u = e.path.F();
      s.range = IDBKeyRange.lowerBound(u);
    } else {
      // Execute an index-free query and filter by read time. This is safe
      // since all document changes to queries that have a
      // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
      var a = e.path.F(),
          c = In(n);
      s.range = IDBKeyRange.lowerBound([a, c],
      /* open= */
      !0), s.index = ur.collectionReadTimeIndex;
    }

    return Pn(t).Ii(s, function (t, n, s) {
      // The query is actually returning any path that starts with the query
      // path prefix which may include documents in subcollections. For
      // example, a query on 'rooms' will return rooms/abc/messages/xyx but we
      // shouldn't match it. Fix this by discarding rows with document keys
      // more than one segment longer than the query path.
      if (t.length === o) {
        var u = _n(r.serializer, n);

        e.path.D(u.key.path) ? u instanceof Oe && e.matches(u) && (i = i.et(u.key, u)) : s.done();
      }
    }).next(function () {
      return i;
    });
  },
  /**
   * Returns the set of documents that have changed since the specified read
   * time.
   */
  // PORTING NOTE: This is only used for multi-tab synchronization.
  t.prototype.Ri = function (t, e) {
    var n = this,
        r = J(),
        i = In(e),
        o = Pn(t),
        s = IDBKeyRange.lowerBound(i, !0);
    return o.Ii({
      index: ur.readTimeIndex,
      range: s
    }, function (t, e) {
      // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
      // the documents directly since we want to keep sentinel deletes.
      var o = _n(n.serializer, e);

      r = r.et(o.key, o), i = e.readTime;
    }).next(function () {
      return {
        mi: r,
        readTime: En(i)
      };
    });
  },
  /**
   * Returns the read time of the most recently read document in the cache, or
   * SnapshotVersion.min() if not available.
   */
  // PORTING NOTE: This is only used for multi-tab synchronization.
  t.prototype.Pi = function (t) {
    var e = Pn(t),
        n = k.min(); // If there are no existing entries, we return SnapshotVersion.min().

    return e.Ii({
      index: ur.readTimeIndex,
      reverse: !0
    }, function (t, e, r) {
      e.readTime && (n = En(e.readTime)), r.done();
    }).next(function () {
      return n;
    });
  }, t.prototype.Vi = function (e) {
    return new t.gi(this, !!e && e.pi);
  }, t.prototype.yi = function (t) {
    return this.getMetadata(t).next(function (t) {
      return t.byteSize;
    });
  }, t.prototype.getMetadata = function (t) {
    return kn(t).get(ar.key).next(function (t) {
      return d(!!t), t;
    });
  }, t.prototype.ci = function (t, e) {
    return kn(t).put(ar.key, e);
  },
  /**
   * Decodes `remoteDoc` and returns the document (or null, if the document
   * corresponds to the format used for sentinel deletes).
   */
  t.prototype.li = function (t) {
    if (t) {
      var e = _n(this.serializer, t);

      return e instanceof Ue && e.version.isEqual(k.min()) ? null : e;
    }

    return null;
  }, t;
}();
/**
 * Handles the details of adding and updating documents in the IndexedDbRemoteDocumentCache.
 *
 * Unlike the MemoryRemoteDocumentChangeBuffer, the IndexedDb implementation computes the size
 * delta for all submitted changes. This avoids having to re-read all documents from IndexedDb
 * when we apply the changes.
 */


function kn(t) {
  return jn.ai(t, ar.store);
}
/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */


function Pn(t) {
  return jn.ai(t, ur.store);
}

function Rn(t) {
  return t.path.F();
}
/**
 * Retrusn an approximate size for the given document.
 */


function On(t) {
  var e;
  if (t.document) e = t.document;else if (t.unknownDocument) e = t.unknownDocument;else {
    if (!t.noDocument) throw p();
    e = t.noDocument;
  }
  return JSON.stringify(e).length;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Offset to ensure non-overlapping target ids. */


Dn.gi =
/** @class */
function (t) {
  /**
   * @param documentCache The IndexedDbRemoteDocumentCache to apply the changes to.
   * @param trackRemovals Whether to create sentinel deletes that can be tracked by
   * `getNewDocumentChanges()`.
   */
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).bi = e, r.pi = n, // A map of document sizes prior to applying the changes in this buffer.
    r.vi = new A(function (t) {
      return t.toString();
    }, function (t, e) {
      return t.isEqual(e);
    }), r;
  }

  return e.__extends(n, t), n.prototype.wn = function (t) {
    var e = this,
        n = [],
        r = 0,
        i = new Y(function (t, e) {
      return m(t.N(), e.N());
    });
    return this.on.forEach(function (o, s) {
      var u = e.vi.get(o);

      if (s) {
        var a = bn(e.bi.serializer, s, e.readTime);
        i = i.add(o.path.p());
        var c = On(a);
        r += c - u, n.push(e.bi.un(t, o, a));
      } else if (r -= u, e.pi) {
        // In order to track removals, we store a "sentinel delete" in the
        // RemoteDocumentCache. This entry is represented by a NoDocument
        // with a version of 0 and ignored by `maybeDecodeDocument()` but
        // preserved in `getNewDocumentChanges()`.
        var h = bn(e.bi.serializer, new Ue(o, k.min()), e.readTime);
        n.push(e.bi.un(t, o, h));
      } else n.push(e.bi.ln(t, o));
    }), i.forEach(function (r) {
      n.push(e.bi.mn.ri(t, r));
    }), n.push(this.bi.updateMetadata(t, r)), en.nn(n);
  }, n.prototype.fn = function (t, e) {
    var n = this; // Record the size of everything we load from the cache so we can compute a delta later.

    return this.bi._i(t, e).next(function (t) {
      return null === t ? (n.vi.set(e, 0), null) : (n.vi.set(e, t.size), t.fi);
    });
  }, n.prototype.dn = function (t, e) {
    var n = this; // Record the size of everything we load from the cache so we can compute
    // a delta later.

    return this.bi.wi(t, e).next(function (t) {
      var e = t.Ti; // Note: `getAllFromCache` returns two maps instead of a single map from
      // keys to `DocumentSizeEntry`s. This is to allow returning the
      // `NullableMaybeDocumentMap` directly, without a conversion.

      return t.Ei.forEach(function (t, e) {
        n.vi.set(t, e);
      }), e;
    });
  }, n;
}(nn);
/**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the target cache, and one for
 * for the sync engine (to generate limbo documents targets). These
 * generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */


var Un =
/** @class */
function () {
  function t(t) {
    this.Si = t;
  }

  return t.prototype.next = function () {
    return this.Si += 2, this.Si;
  }, t.Di = function () {
    // The target cache generator must return '2' in its first call to `next()`
    // as there is no differentiation in the protocol layer between an unset
    // number and the number '0'. If we were to sent a target with target ID
    // '0', the backend would consider it unset and replace it with its own ID.
    return new t(0);
  }, t.Ci = function () {
    // Sync engine assigns target IDs for limbo document detection.
    return new t(-1);
  }, t;
}(),
    Ln =
/** @class */
function () {
  function t(t, e) {
    this.Fi = t, this.serializer = e;
  } // PORTING NOTE: We don't cache global metadata for the target cache, since
  // some of it (in particular `highestTargetId`) can be modified by secondary
  // tabs. We could perhaps be more granular (and e.g. still cache
  // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
  // to IndexedDb whenever we need to read metadata. We can revisit if it turns
  // out to have a meaningful performance impact.


  return t.prototype.Ni = function (t) {
    var e = this;
    return this.$i(t).next(function (n) {
      var r = new Un(n.highestTargetId);
      return n.highestTargetId = r.next(), e.ki(t, n).next(function () {
        return n.highestTargetId;
      });
    });
  }, t.prototype.xi = function (t) {
    return this.$i(t).next(function (t) {
      return k.I(new D(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
    });
  }, t.prototype.Mi = function (t) {
    return this.$i(t).next(function (t) {
      return t.highestListenSequenceNumber;
    });
  }, t.prototype.Li = function (t, e, n) {
    var r = this;
    return this.$i(t).next(function (i) {
      return i.highestListenSequenceNumber = e, n && (i.lastRemoteSnapshotVersion = n.R()), e > i.highestListenSequenceNumber && (i.highestListenSequenceNumber = e), r.ki(t, i);
    });
  }, t.prototype.Oi = function (t, e) {
    var n = this;
    return this.Bi(t, e).next(function () {
      return n.$i(t).next(function (r) {
        return r.targetCount += 1, n.qi(e, r), n.ki(t, r);
      });
    });
  }, t.prototype.Ui = function (t, e) {
    return this.Bi(t, e);
  }, t.prototype.Qi = function (t, e) {
    var n = this;
    return this.Wi(t, e.targetId).next(function () {
      return Vn(t).delete(e.targetId);
    }).next(function () {
      return n.$i(t);
    }).next(function (e) {
      return d(e.targetCount > 0), e.targetCount -= 1, n.ki(t, e);
    });
  },
  /**
   * Drops any targets with sequence number less than or equal to the upper bound, excepting those
   * present in `activeTargetIds`. Document associations for the removed targets are also removed.
   * Returns the number of targets removed.
   */
  t.prototype.ji = function (t, e, n) {
    var r = this,
        i = 0,
        o = [];
    return Vn(t).Ii(function (s, u) {
      var a = xn(u);
      a.sequenceNumber <= e && null === n.get(a.targetId) && (i++, o.push(r.Qi(t, a)));
    }).next(function () {
      return en.nn(o);
    }).next(function () {
      return i;
    });
  },
  /**
   * Call provided function with each `TargetData` that we have cached.
   */
  t.prototype.ye = function (t, e) {
    return Vn(t).Ii(function (t, n) {
      var r = xn(n);
      e(r);
    });
  }, t.prototype.$i = function (t) {
    return Cn(t).get(fr.key).next(function (t) {
      return d(null !== t), t;
    });
  }, t.prototype.ki = function (t, e) {
    return Cn(t).put(fr.key, e);
  }, t.prototype.Bi = function (t, e) {
    return Vn(t).put(Sn(this.serializer, e));
  },
  /**
   * In-place updates the provided metadata to account for values in the given
   * TargetData. Saving is done separately. Returns true if there were any
   * changes to the metadata.
   */
  t.prototype.qi = function (t, e) {
    var n = !1;
    return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, n = !0), n;
  }, t.prototype.Ki = function (t) {
    return this.$i(t).next(function (t) {
      return t.targetCount;
    });
  }, t.prototype.Gi = function (t, e) {
    // Iterating by the canonicalId may yield more than one result because
    // canonicalId values are not required to be unique per target. This query
    // depends on the queryTargets index to be efficient.
    var n = Xe(e),
        r = IDBKeyRange.bound([n, Number.NEGATIVE_INFINITY], [n, Number.POSITIVE_INFINITY]),
        i = null;
    return Vn(t).Ii({
      range: r,
      index: cr.queryTargetsIndexName
    }, function (t, n, r) {
      var o = xn(n); // After finding a potential match, check that the target is
      // actually equal to the requested target.

      $e(e, o.target) && (i = o, r.done());
    }).next(function () {
      return i;
    });
  }, t.prototype.zi = function (t, e, n) {
    var r = this,
        i = [],
        o = qn(t); // PORTING NOTE: The reverse index (documentsTargets) is maintained by
    // IndexedDb.

    return e.forEach(function (e) {
      var s = fn(e.path);
      i.push(o.put(new hr(n, s))), i.push(r.Fi.Hi(t, n, e));
    }), en.nn(i);
  }, t.prototype.Yi = function (t, e, n) {
    var r = this,
        i = qn(t); // PORTING NOTE: The reverse index (documentsTargets) is maintained by
    // IndexedDb.

    return en.forEach(e, function (e) {
      var o = fn(e.path);
      return en.nn([i.delete([n, o]), r.Fi.Ji(t, n, e)]);
    });
  }, t.prototype.Wi = function (t, e) {
    var n = qn(t),
        r = IDBKeyRange.bound([e], [e + 1],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0);
    return n.delete(r);
  }, t.prototype.Xi = function (t, e) {
    var n = IDBKeyRange.bound([e], [e + 1],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0),
        r = qn(t),
        i = it();
    return r.Ii({
      range: n,
      Zi: !0
    }, function (t, e, n) {
      var r = dn(t[1]),
          o = new L(r);
      i = i.add(o);
    }).next(function () {
      return i;
    });
  }, t.prototype.tr = function (t, e) {
    var n = fn(e.path),
        r = IDBKeyRange.bound([n], [_(n)],
    /*lowerOpen=*/
    !1,
    /*upperOpen=*/
    !0),
        i = 0;
    return qn(t).Ii({
      index: hr.documentTargetsIndex,
      Zi: !0,
      range: r
    }, function (t, e, n) {
      var r = t[0]; // Having a sentinel row for a document does not count as containing that document;
      // For the target cache, containing the document means the document is part of some
      // target.

      t[1];
      0 !== r && (i++, n.done());
    }).next(function () {
      return i > 0;
    });
  },
  /**
   * Looks up a TargetData entry by target ID.
   *
   * @param targetId The target ID of the TargetData entry to look up.
   * @return The cached TargetData entry, or null if the cache has no entry for
   * the target.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.Me = function (t, e) {
    return Vn(t).get(e).next(function (t) {
      return t ? xn(t) : null;
    });
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */


function Vn(t) {
  return jn.ai(t, cr.store);
}
/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */


function Cn(t) {
  return jn.ai(t, fr.store);
}
/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */


function qn(t) {
  return jn.ai(t, hr.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var Fn = "Failed to obtain exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.",
    Mn =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).er = e, r.sr = n, r;
  }

  return e.__extends(n, t), n;
}(on),
    jn =
/** @class */
function () {
  function t(
  /**
   * Whether to synchronize the in-memory state of multiple tabs and share
   * access to local persistence.
   */
  e, n, r, i, o, s, u, a, c,
  /**
   * If set to true, forcefully obtains database access. Existing tabs will
   * no longer be able to access IndexedDB.
   */
  h) {
    if (this.allowTabSynchronization = e, this.persistenceKey = n, this.clientId = r, this.Wn = o, this.window = s, this.document = u, this.nr = c, this.ir = h, this.rr = null, this.or = !1, this.isPrimary = !1, this.networkEnabled = !0,
    /** Our window.unload handler, if registered. */
    this.hr = null, this.inForeground = !1,
    /** Our 'visibilitychange' listener if registered. */
    this.ar = null,
    /** The client metadata refresh task. */
    this.ur = null,
    /** The last time we garbage collected the client metadata object store. */
    this.cr = Number.NEGATIVE_INFINITY,
    /** A listener to notify on primary state changes. */
    this.lr = function (t) {
      return Promise.resolve();
    }, !t._r()) throw new S(x.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
    this.Fi = new Gn(this, i), this.dr = n + t.wr, this.serializer = new wn(a), this.Tr = new Ln(this.Fi, this.serializer), this.mn = new gn(), this.An = new Dn(this.serializer, this.mn), this.window && this.window.localStorage ? this.Er = this.window.localStorage : (this.Er = null, !1 === h && f("IndexedDbPersistence", "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."));
  }

  return t.ai = function (t, e) {
    if (t instanceof Mn) return vr.ai(t.er, e);
    throw p();
  },
  /**
   * Attempt to start IndexedDb persistence.
   *
   * @return {Promise<void>} Whether persistence was enabled.
   */
  t.prototype.start = function () {
    var t = this;
    return vr.Ir(this.dr, Jn, new Zn(this.serializer)).then(function (e) {
      return t.Ar = e, t.Rr();
    }).then(function () {
      if (!t.isPrimary && !t.allowTabSynchronization) // Fail `start()` if `synchronizeTabs` is disabled and we cannot
        // obtain the primary lease.
        throw new S(x.FAILED_PRECONDITION, Fn);
      return t.mr(), t.Pr(), t.Vr(), t.runTransaction("getHighestListenSequenceNumber", "readonly", function (e) {
        return t.Tr.Mi(e);
      });
    }).then(function (e) {
      t.rr = new an(e, t.nr);
    }).then(function () {
      t.or = !0;
    }).catch(function (e) {
      return t.Ar && t.Ar.close(), Promise.reject(e);
    });
  },
  /**
   * Registers a listener that gets called when the primary state of the
   * instance changes. Upon registering, this listener is invoked immediately
   * with the current primary state.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  t.prototype.gr = function (t) {
    var n = this;
    return this.lr = function (r) {
      return e.__awaiter(n, void 0, void 0, function () {
        return e.__generator(this, function (e) {
          return this.pr ? [2
          /*return*/
          , t(r)] : [2
          /*return*/
          ];
        });
      });
    }, t(this.isPrimary);
  },
  /**
   * Registers a listener that gets called when the database receives a
   * version change event indicating that it has deleted.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  t.prototype.yr = function (t) {
    var n = this;
    this.Ar.br(function (r) {
      return e.__awaiter(n, void 0, void 0, function () {
        return e.__generator(this, function (e) {
          switch (e.label) {
            case 0:
              return null === r.newVersion ? [4
              /*yield*/
              , t()] : [3
              /*break*/
              , 2];

            case 1:
              e.sent(), e.label = 2;

            case 2:
              return [2
              /*return*/
              ];
          }
        });
      });
    });
  },
  /**
   * Adjusts the current network state in the client's metadata, potentially
   * affecting the primary lease.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  t.prototype.vr = function (t) {
    var n = this;
    this.networkEnabled !== t && (this.networkEnabled = t, // Schedule a primary lease refresh for immediate execution. The eventual
    // lease update will be propagated via `primaryStateListener`.
    this.Wn.Sr(function () {
      return e.__awaiter(n, void 0, void 0, function () {
        return e.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              return this.pr ? [4
              /*yield*/
              , this.Rr()] : [3
              /*break*/
              , 2];

            case 1:
              t.sent(), t.label = 2;

            case 2:
              return [2
              /*return*/
              ];
          }
        });
      });
    }));
  },
  /**
   * Updates the client metadata in IndexedDb and attempts to either obtain or
   * extend the primary lease for the local client. Asynchronously notifies the
   * primary state listener if the client either newly obtained or released its
   * primary lease.
   */
  t.prototype.Rr = function () {
    var t = this;
    return this.runTransaction("updateClientMetadataAndTryBecomePrimary", "readwrite", function (e) {
      return Qn(e).put(new dr(t.clientId, Date.now(), t.networkEnabled, t.inForeground)).next(function () {
        if (t.isPrimary) return t.Dr(e).next(function (e) {
          e || (t.isPrimary = !1, t.Wn.Cr(function () {
            return t.lr(!1);
          }));
        });
      }).next(function () {
        return t.Fr(e);
      }).next(function (n) {
        return t.isPrimary && !n ? t.Nr(e).next(function () {
          return !1;
        }) : !!n && t.$r(e).next(function () {
          return !0;
        });
      });
    }).catch(function (e) {
      if (wr(e)) // Proceed with the existing state. Any subsequent access to
        // IndexedDB will verify the lease.
        return h("IndexedDbPersistence", "Failed to extend owner lease: ", e), t.isPrimary;
      if (!t.allowTabSynchronization) throw e;
      return h("IndexedDbPersistence", "Releasing owner lease after error during lease refresh", e),
      /* isPrimary= */
      !1;
    }).then(function (e) {
      t.isPrimary !== e && t.Wn.Cr(function () {
        return t.lr(e);
      }), t.isPrimary = e;
    });
  }, t.prototype.Dr = function (t) {
    var e = this;
    return Bn(t).get(er.key).next(function (t) {
      return en.resolve(e.kr(t));
    });
  }, t.prototype.xr = function (t) {
    return Qn(t).delete(this.clientId);
  },
  /**
   * If the garbage collection threshold has passed, prunes the
   * RemoteDocumentChanges and the ClientMetadata store based on the last update
   * time of all clients.
   */
  t.prototype.Mr = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i,
          o,
          s = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return !this.isPrimary || this.Lr(this.cr, 18e5) ? [3
            /*break*/
            , 2] : (this.cr = Date.now(), [4
            /*yield*/
            , this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", function (e) {
              var n = t.ai(e, dr.store);
              return n.hi().next(function (t) {
                var e = s.Or(t, 18e5),
                    r = t.filter(function (t) {
                  return -1 === e.indexOf(t);
                }); // Delete metadata for clients that are no longer considered active.

                return en.forEach(r, function (t) {
                  return n.delete(t.clientId);
                }).next(function () {
                  return r;
                });
              });
            }).catch(function () {
              return [];
            })]);

          case 1:
            // Delete potential leftover entries that may continue to mark the
            // inactive clients as zombied in LocalStorage.
            // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
            // the client atomically, but we can't. So we opt to delete the IndexedDb
            // entries first to avoid potentially reviving a zombied client.
            if (n = e.sent(), this.Er) for (r = 0, i = n; r < i.length; r++) {
              o = i[r], this.Er.removeItem(this.Br(o.clientId));
            }
            e.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Schedules a recurring timer to update the client metadata and to either
   * extend or acquire the primary lease if the client is eligible.
   */
  t.prototype.Vr = function () {
    var t = this;
    this.ur = this.Wn.ei("client_metadata_refresh"
    /* ClientMetadataRefresh */
    , 4e3, function () {
      return t.Rr().then(function () {
        return t.Mr();
      }).then(function () {
        return t.Vr();
      });
    });
  },
  /** Checks whether `client` is the local client. */
  t.prototype.kr = function (t) {
    return !!t && t.ownerId === this.clientId;
  },
  /**
   * Evaluate the state of all active clients and determine whether the local
   * client is or can act as the holder of the primary lease. Returns whether
   * the client is eligible for the lease, but does not actually acquire it.
   * May return 'false' even if there is no active leaseholder and another
   * (foreground) client should become leaseholder instead.
   */
  t.prototype.Fr = function (t) {
    var e = this;
    return this.ir ? en.resolve(!0) : Bn(t).get(er.key).next(function (n) {
      // A client is eligible for the primary lease if:
      // - its network is enabled and the client's tab is in the foreground.
      // - its network is enabled and no other client's tab is in the
      //   foreground.
      // - every clients network is disabled and the client's tab is in the
      //   foreground.
      // - every clients network is disabled and no other client's tab is in
      //   the foreground.
      // - the `forceOwningTab` setting was passed in.
      if (null !== n && e.Lr(n.leaseTimestampMs, 5e3) && !e.qr(n.ownerId)) {
        if (e.kr(n) && e.networkEnabled) return !0;

        if (!e.kr(n)) {
          if (!n.allowTabSynchronization) // Fail the `canActAsPrimary` check if the current leaseholder has
            // not opted into multi-tab synchronization. If this happens at
            // client startup, we reject the Promise returned by
            // `enablePersistence()` and the user can continue to use Firestore
            // with in-memory persistence.
            // If this fails during a lease refresh, we will instead block the
            // AsyncQueue from executing further operations. Note that this is
            // acceptable since mixing & matching different `synchronizeTabs`
            // settings is not supported.
            // TODO(b/114226234): Remove this check when `synchronizeTabs` can
            // no longer be turned off.
            throw new S(x.FAILED_PRECONDITION, Fn);
          return !1;
        }
      }

      return !(!e.networkEnabled || !e.inForeground) || Qn(t).hi().next(function (t) {
        return void 0 === e.Or(t, 5e3).find(function (t) {
          if (e.clientId !== t.clientId) {
            var n = !e.networkEnabled && t.networkEnabled,
                r = !e.inForeground && t.inForeground,
                i = e.networkEnabled === t.networkEnabled;
            if (n || r && i) return !0;
          }

          return !1;
        });
      });
    }).next(function (t) {
      return e.isPrimary !== t && h("IndexedDbPersistence", "Client " + (t ? "is" : "is not") + " eligible for a primary lease."), t;
    });
  }, t.prototype.Ur = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            // The shutdown() operations are idempotent and can be called even when
            // start() aborted (e.g. because it couldn't acquire the persistence lease).
            return this.or = !1, this.Qr(), this.ur && (this.ur.cancel(), this.ur = null), this.Wr(), this.jr(), [4
            /*yield*/
            , this.runTransaction("shutdown", "readwrite", function (e) {
              return t.Nr(e).next(function () {
                return t.xr(e);
              });
            }).catch(function (t) {
              h("IndexedDbPersistence", "Proceeding with shutdown despite failure: ", t);
            })];

          case 1:
            // The shutdown() operations are idempotent and can be called even when
            // start() aborted (e.g. because it couldn't acquire the persistence lease).
            return e.sent(), this.Ar.close(), // Remove the entry marking the client as zombied from LocalStorage since
            // we successfully deleted its metadata from IndexedDb.
            this.Kr(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Returns clients that are not zombied and have an updateTime within the
   * provided threshold.
   */
  t.prototype.Or = function (t, e) {
    var n = this;
    return t.filter(function (t) {
      return n.Lr(t.updateTimeMs, e) && !n.qr(t.clientId);
    });
  },
  /**
   * Returns the IDs of the clients that are currently active. If multi-tab
   * is not supported, returns an array that only contains the local client's
   * ID.
   *
   * PORTING NOTE: This is only used for Web multi-tab.
   */
  t.prototype.Gr = function () {
    var t = this;
    return this.runTransaction("getActiveClients", "readonly", function (e) {
      return Qn(e).hi().next(function (e) {
        return t.Or(e, 18e5).map(function (t) {
          return t.clientId;
        });
      });
    });
  }, t.clearPersistence = function (n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t._r() ? (r = n + t.wr, [4
            /*yield*/
            , vr.delete(r)]) : [2
            /*return*/
            , Promise.resolve()];

          case 1:
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, Object.defineProperty(t.prototype, "pr", {
    get: function get() {
      return this.or;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.zr = function (t) {
    return Wn.Hr(t, this.serializer, this.mn, this.Fi);
  }, t.prototype.Yr = function () {
    return this.Tr;
  }, t.prototype.Jr = function () {
    return this.An;
  }, t.prototype.Xr = function () {
    return this.mn;
  }, t.prototype.runTransaction = function (t, e, n) {
    var r = this;
    h("IndexedDbPersistence", "Starting transaction:", t);
    var i,
        o = "readonly" === e ? "readonly" : "readwrite"; // Do all transactions as readwrite against all object stores, since we
    // are the only reader/writer.

    return this.Ar.runTransaction(o, yr, function (o) {
      return i = new Mn(o, r.rr ? r.rr.next() : an.Qn), "readwrite-primary" === e ? r.Dr(i).next(function (t) {
        return !!t || r.Fr(i);
      }).next(function (e) {
        if (!e) throw f("Failed to obtain primary lease for action '" + t + "'."), r.isPrimary = !1, r.Wn.Cr(function () {
          return r.lr(!1);
        }), new S(x.FAILED_PRECONDITION, rn);
        return n(i);
      }).next(function (t) {
        return r.$r(i).next(function () {
          return t;
        });
      }) : r.Zr(i).next(function () {
        return n(i);
      });
    }).then(function (t) {
      return i.In(), t;
    });
  },
  /**
   * Verifies that the current tab is the primary leaseholder or alternatively
   * that the leaseholder has opted into multi-tab synchronization.
   */
  // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
  // be turned off.
  t.prototype.Zr = function (t) {
    var e = this;
    return Bn(t).get(er.key).next(function (t) {
      if (null !== t && e.Lr(t.leaseTimestampMs, 5e3) && !e.qr(t.ownerId) && !e.kr(t) && !(e.ir || e.allowTabSynchronization && t.allowTabSynchronization)) throw new S(x.FAILED_PRECONDITION, Fn);
    });
  },
  /**
   * Obtains or extends the new primary lease for the local client. This
   * method does not verify that the client is eligible for this lease.
   */
  t.prototype.$r = function (t) {
    var e = new er(this.clientId, this.allowTabSynchronization, Date.now());
    return Bn(t).put(er.key, e);
  }, t._r = function () {
    return vr._r();
  },
  /**
   * Generates a string used as a prefix when storing data in IndexedDB and
   * LocalStorage.
   */
  t.to = function (t) {
    // Use two different prefix formats:
    //   * firestore / persistenceKey / projectID . databaseID / ...
    //   * firestore / persistenceKey / projectID / ...
    // projectIDs are DNS-compatible names and cannot contain dots
    // so there's no danger of collisions.
    var e = t.s.projectId;
    return t.s.i || (e += "." + t.s.database), "firestore/" + t.persistenceKey + "/" + e + "/";
  },
  /** Checks the primary lease and removes it if we are the current primary. */
  t.prototype.Nr = function (t) {
    var e = this,
        n = Bn(t);
    return n.get(er.key).next(function (t) {
      return e.kr(t) ? (h("IndexedDbPersistence", "Releasing primary lease."), n.delete(er.key)) : en.resolve();
    });
  },
  /** Verifies that `updateTimeMs` is within `maxAgeMs`. */
  t.prototype.Lr = function (t, e) {
    var n = Date.now();
    return !(t < n - e || t > n && (f("Detected an update time that is in the future: " + t + " > " + n), 1));
  }, t.prototype.mr = function () {
    var t = this;
    null !== this.document && "function" == typeof this.document.addEventListener && (this.ar = function () {
      t.Wn.Sr(function () {
        return t.inForeground = "visible" === t.document.visibilityState, t.Rr();
      });
    }, this.document.addEventListener("visibilitychange", this.ar), this.inForeground = "visible" === this.document.visibilityState);
  }, t.prototype.Wr = function () {
    this.ar && (this.document.removeEventListener("visibilitychange", this.ar), this.ar = null);
  },
  /**
   * Attaches a window.unload handler that will synchronously write our
   * clientId to a "zombie client id" location in LocalStorage. This can be used
   * by tabs trying to acquire the primary lease to determine that the lease
   * is no longer valid even if the timestamp is recent. This is particularly
   * important for the refresh case (so the tab correctly re-acquires the
   * primary lease). LocalStorage is used for this rather than IndexedDb because
   * it is a synchronous API and so can be used reliably from  an unload
   * handler.
   */
  t.prototype.Pr = function () {
    var t,
        e = this;
    "function" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.hr = function () {
      // Note: In theory, this should be scheduled on the AsyncQueue since it
      // accesses internal state. We execute this code directly during shutdown
      // to make sure it gets a chance to run.
      e.Qr(), e.Wn.Sr(function () {
        return e.Ur();
      });
    }, this.window.addEventListener("unload", this.hr));
  }, t.prototype.jr = function () {
    this.hr && (this.window.removeEventListener("unload", this.hr), this.hr = null);
  },
  /**
   * Returns whether a client is "zombied" based on its LocalStorage entry.
   * Clients become zombied when their tab closes without running all of the
   * cleanup logic in `shutdown()`.
   */
  t.prototype.qr = function (t) {
    var e;

    try {
      var n = null !== (null === (e = this.Er) || void 0 === e ? void 0 : e.getItem(this.Br(t)));
      return h("IndexedDbPersistence", "Client '" + t + "' " + (n ? "is" : "is not") + " zombied in LocalStorage"), n;
    } catch (t) {
      // Gracefully handle if LocalStorage isn't working.
      return f("IndexedDbPersistence", "Failed to get zombied client id.", t), !1;
    }
  },
  /**
   * Record client as zombied (a client that had its tab closed). Zombied
   * clients are ignored during primary tab selection.
   */
  t.prototype.Qr = function () {
    if (this.Er) try {
      this.Er.setItem(this.Br(this.clientId), String(Date.now()));
    } catch (t) {
      // Gracefully handle if LocalStorage isn't available / working.
      f("Failed to set zombie client id.", t);
    }
  },
  /** Removes the zombied client entry if it exists. */
  t.prototype.Kr = function () {
    if (this.Er) try {
      this.Er.removeItem(this.Br(this.clientId));
    } catch (t) {// Ignore
    }
  }, t.prototype.Br = function (t) {
    return "firestore_zombie_" + this.persistenceKey + "_" + t;
  }, t;
}();
/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 */

/**
 * The name of the main (and currently only) IndexedDB database. this name is
 * appended to the prefix provided to the IndexedDbPersistence constructor.
 */

/**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */


function Bn(t) {
  return jn.ai(t, er.store);
}
/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */


function Qn(t) {
  return jn.ai(t, dr.store);
}
/** Provides LRU functionality for IndexedDB persistence. */


jn.wr = "main";

var Gn =
/** @class */
function () {
  function t(t, e) {
    this.db = t, this.eo = new Ur(this, e);
  }

  return t.prototype.so = function (t) {
    var e = this.no(t);
    return this.db.Yr().Ki(t).next(function (t) {
      return e.next(function (e) {
        return t + e;
      });
    });
  }, t.prototype.no = function (t) {
    var e = 0;
    return this.io(t, function (t) {
      e++;
    }).next(function () {
      return e;
    });
  }, t.prototype.ye = function (t, e) {
    return this.db.Yr().ye(t, e);
  }, t.prototype.io = function (t, e) {
    return this.ro(t, function (t, n) {
      return e(n);
    });
  }, t.prototype.Hi = function (t, e, n) {
    return zn(t, n);
  }, t.prototype.Ji = function (t, e, n) {
    return zn(t, n);
  }, t.prototype.ji = function (t, e, n) {
    return this.db.Yr().ji(t, e, n);
  }, t.prototype.oo = function (t, e) {
    return zn(t, e);
  },
  /**
   * Returns true if anything would prevent this document from being garbage
   * collected, given that the document in question is not present in any
   * targets and has a sequence number less than or equal to the upper bound for
   * the collection run.
   */
  t.prototype.ho = function (t, e) {
    /** Returns true if any mutation queue contains the given document. */
    return function (t, e) {
      var n = !1;
      return $n(t).ao(function (r) {
        return Hn(t, r, e).next(function (t) {
          return t && (n = !0), en.resolve(!t);
        });
      }).next(function () {
        return n;
      });
    }(t, e);
  }, t.prototype.uo = function (t, e) {
    var n = this,
        r = this.db.Jr().Vi(),
        i = [],
        o = 0;
    return this.ro(t, function (s, u) {
      if (u <= e) {
        var a = n.ho(t, s).next(function (e) {
          if (!e) // Our size accounting requires us to read all documents before
            // removing them.
            return o++, r._n(t, s).next(function () {
              return r.ln(s), qn(t).delete([0, fn(s.path)]);
            });
        });
        i.push(a);
      }
    }).next(function () {
      return en.nn(i);
    }).next(function () {
      return r.apply(t);
    }).next(function () {
      return o;
    });
  }, t.prototype.removeTarget = function (t, e) {
    var n = e.X(t.sr);
    return this.db.Yr().Ui(t, n);
  }, t.prototype.co = function (t, e) {
    return zn(t, e);
  },
  /**
   * Call provided function for each document in the cache that is 'orphaned'. Orphaned
   * means not a part of any target, so the only entry in the target-document index for
   * that document will be the sentinel row (targetId 0), which will also have the sequence
   * number for the last time the document was accessed.
   */
  t.prototype.ro = function (t, e) {
    var n,
        r = qn(t),
        i = an.Qn;
    return r.Ii({
      index: hr.documentTargetsIndex
    }, function (t, r) {
      var o = t[0],
          s = (t[1], r.path),
          u = r.sequenceNumber;
      0 === o ? ( // if nextToReport is valid, report it, this is a new key so the
      // last one must not be a member of any targets.
      i !== an.Qn && e(new L(dn(n)), i), // set nextToReport to be this sequence number. It's the next one we
      // might report, if we don't find any targets for this document.
      // Note that the sequence number must be defined when the targetId
      // is 0.
      i = u, n = s) : // set nextToReport to be invalid, we know we don't need to report
      // this one since we found a target for it.
      i = an.Qn;
    }).next(function () {
      // Since we report sequence numbers after getting to the next key, we
      // need to check if the last key we iterated over was an orphaned
      // document and report it.
      i !== an.Qn && e(new L(dn(n)), i);
    });
  }, t.prototype.lo = function (t) {
    return this.db.Jr().yi(t);
  }, t;
}();

function zn(t, e) {
  return qn(t).put(
  /**
  * @return A value suitable for writing a sentinel row in the target-document
  * store.
  */
  function (t, e) {
    return new hr(0, fn(t.path), e);
  }(e, t.sr));
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** A mutation queue for a specific user, backed by IndexedDB. */


var Wn =
/** @class */
function () {
  function t(
  /**
   * The normalized userId (e.g. null UID => "" userId) used to store /
   * retrieve mutations.
   */
  t, e, n, r) {
    this.userId = t, this.serializer = e, this.mn = n, this.Fi = r,
    /**
         * Caches the document keys for pending mutation batches. If the mutation
         * has been removed from IndexedDb, the cached value may continue to
         * be used to retrieve the batch's document keys. To remove a cached value
         * locally, `removeCachedMutationKeys()` should be invoked either directly
         * or through `removeMutationBatches()`.
         *
         * With multi-tab, when the primary client acknowledges or rejects a mutation,
         * this cache is used by secondary clients to invalidate the local
         * view of the documents that were previously affected by the mutation.
         */
    // PORTING NOTE: Multi-tab only.
    this._o = {}
    /**
    * Creates a new mutation queue for the given user.
    * @param user The user for which to create a mutation queue.
    * @param serializer The serializer to use when persisting to IndexedDb.
    */
    ;
  }

  return t.Hr = function (e, n, r, i) {
    // TODO(mcg): Figure out what constraints there are on userIDs
    // In particular, are there any reserved characters? are empty ids allowed?
    // For the moment store these together in the same mutations table assuming
    // that empty userIDs aren't allowed.
    return d("" !== e.uid), new t(e.fo() ? e.uid : "", n, r, i);
  }, t.prototype.do = function (t) {
    var e = !0,
        n = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
    return Yn(t).Ii({
      index: rr.userMutationsIndex,
      range: n
    }, function (t, n, r) {
      e = !1, r.done();
    }).next(function () {
      return e;
    });
  }, t.prototype.wo = function (t, e, n, r) {
    var i = this,
        o = Xn(t),
        s = Yn(t); // The IndexedDb implementation in Chrome (and Firefox) does not handle
    // compound indices that include auto-generated keys correctly. To ensure
    // that the index entry is added correctly in all browsers, we perform two
    // writes: The first write is used to retrieve the next auto-generated Batch
    // ID, and the second write populates the index and stores the actual
    // mutation batch.
    // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
    // We write an empty object to obtain key
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

    return s.add({}).next(function (u) {
      d("number" == typeof u);

      for (var a = new Ze(u, e, n, r), c = function (t, e, n) {
        var r = n.baseMutations.map(function (e) {
          return ne(t.ui, e);
        }),
            i = n.mutations.map(function (e) {
          return ne(t.ui, e);
        });
        return new rr(e, n.batchId, n.Ws.toMillis(), r, i);
      }(i.serializer, i.userId, a), h = [], f = new Y(function (t, e) {
        return m(t.N(), e.N());
      }), l = 0, p = r; l < p.length; l++) {
        var y = p[l],
            v = ir.key(i.userId, y.key.path, u);
        f = f.add(y.key.path.p()), h.push(s.put(c)), h.push(o.put(v, ir.PLACEHOLDER));
      }

      return f.forEach(function (e) {
        h.push(i.mn.ri(t, e));
      }), t.En(function () {
        i._o[u] = a.keys();
      }), en.nn(h).next(function () {
        return a;
      });
    });
  }, t.prototype.To = function (t, e) {
    var n = this;
    return Yn(t).get(e).next(function (t) {
      return t ? (d(t.userId === n.userId), An(n.serializer, t)) : null;
    });
  },
  /**
   * Returns the document keys for the mutation batch with the given batchId.
   * For primary clients, this method returns `null` after
   * `removeMutationBatches()` has been called. Secondary clients return a
   * cached result until `removeCachedMutationKeys()` is invoked.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.Eo = function (t, e) {
    var n = this;
    return this._o[e] ? en.resolve(this._o[e]) : this.To(t, e).next(function (t) {
      if (t) {
        var r = t.keys();
        return n._o[e] = r, r;
      }

      return null;
    });
  }, t.prototype.Io = function (t, e) {
    var n = this,
        r = e + 1,
        i = IDBKeyRange.lowerBound([this.userId, r]),
        o = null;
    return Yn(t).Ii({
      index: rr.userMutationsIndex,
      range: i
    }, function (t, e, i) {
      e.userId === n.userId && (d(e.batchId >= r), o = An(n.serializer, e)), i.done();
    }).next(function () {
      return o;
    });
  }, t.prototype.Ao = function (t) {
    var e = IDBKeyRange.upperBound([this.userId, Number.POSITIVE_INFINITY]),
        n = -1;
    return Yn(t).Ii({
      index: rr.userMutationsIndex,
      range: e,
      reverse: !0
    }, function (t, e, r) {
      n = e.batchId, r.done();
    }).next(function () {
      return n;
    });
  }, t.prototype.Ro = function (t) {
    var e = this,
        n = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
    return Yn(t).hi(rr.userMutationsIndex, n).next(function (t) {
      return t.map(function (t) {
        return An(e.serializer, t);
      });
    });
  }, t.prototype.Vn = function (t, e) {
    var n = this,
        r = ir.prefixForPath(this.userId, e.path),
        i = IDBKeyRange.lowerBound(r),
        o = []; // Scan the document-mutation index starting with a prefix starting with
    // the given documentKey.

    return Xn(t).Ii({
      range: i
    }, function (r, i, s) {
      var u = r[0],
          a = r[1],
          c = r[2],
          h = dn(a); // Only consider rows matching exactly the specific key of
      // interest. Note that because we order by path first, and we
      // order terminators before path separators, we'll encounter all
      // the index rows for documentKey contiguously. In particular, all
      // the rows for documentKey will occur before any rows for
      // documents nested in a subcollection beneath documentKey so we
      // can stop as soon as we hit any such row.

      if (u === n.userId && e.path.isEqual(h)) // Look up the mutation batch in the store.
        return Yn(t).get(c).next(function (t) {
          if (!t) throw p();
          d(t.userId === n.userId), o.push(An(n.serializer, t));
        });
      s.done();
    }).next(function () {
      return o;
    });
  }, t.prototype.vn = function (t, e) {
    var n = this,
        r = new Y(m),
        i = [];
    return e.forEach(function (e) {
      var o = ir.prefixForPath(n.userId, e.path),
          s = IDBKeyRange.lowerBound(o),
          u = Xn(t).Ii({
        range: s
      }, function (t, i, o) {
        var s = t[0],
            u = t[1],
            a = t[2],
            c = dn(u); // Only consider rows matching exactly the specific key of
        // interest. Note that because we order by path first, and we
        // order terminators before path separators, we'll encounter all
        // the index rows for documentKey contiguously. In particular, all
        // the rows for documentKey will occur before any rows for
        // documents nested in a subcollection beneath documentKey so we
        // can stop as soon as we hit any such row.

        s === n.userId && e.path.isEqual(c) ? r = r.add(a) : o.done();
      });
      i.push(u);
    }), en.nn(i).next(function () {
      return n.mo(t, r);
    });
  }, t.prototype.$n = function (t, e) {
    var n = this,
        r = e.path,
        i = r.length + 1,
        o = ir.prefixForPath(this.userId, r),
        s = IDBKeyRange.lowerBound(o),
        u = new Y(m);
    return Xn(t).Ii({
      range: s
    }, function (t, e, o) {
      var s = t[0],
          a = t[1],
          c = t[2],
          h = dn(a);
      s === n.userId && r.D(h) ? // Rows with document keys more than one segment longer than the
      // query path can't be matches. For example, a query on 'rooms'
      // can't match the document /rooms/abc/messages/xyx.
      // TODO(mcg): we'll need a different scanner when we implement
      // ancestor queries.
      h.length === i && (u = u.add(c)) : o.done();
    }).next(function () {
      return n.mo(t, u);
    });
  }, t.prototype.mo = function (t, e) {
    var n = this,
        r = [],
        i = []; // TODO(rockwood): Implement this using iterate.

    return e.forEach(function (e) {
      i.push(Yn(t).get(e).next(function (t) {
        if (null === t) throw p();
        d(t.userId === n.userId), r.push(An(n.serializer, t));
      }));
    }), en.nn(i).next(function () {
      return r;
    });
  }, t.prototype.Po = function (t, e) {
    var n = this;
    return Kn(t.er, this.userId, e).next(function (r) {
      return t.En(function () {
        n.Vo(e.batchId);
      }), en.forEach(r, function (e) {
        return n.Fi.oo(t, e);
      });
    });
  },
  /**
   * Clears the cached keys for a mutation batch. This method should be
   * called by secondary clients after they process mutation updates.
   *
   * Note that this method does not have to be called from primary clients as
   * the corresponding cache entries are cleared when an acknowledged or
   * rejected batch is removed from the mutation queue.
   */
  // PORTING NOTE: Multi-tab only
  t.prototype.Vo = function (t) {
    delete this._o[t];
  }, t.prototype.po = function (t) {
    var e = this;
    return this.do(t).next(function (n) {
      if (!n) return en.resolve(); // Verify that there are no entries in the documentMutations index if
      // the queue is empty.

      var r = IDBKeyRange.lowerBound(ir.prefixForUser(e.userId)),
          i = [];
      return Xn(t).Ii({
        range: r
      }, function (t, n, r) {
        if (t[0] === e.userId) {
          var o = dn(t[1]);
          i.push(o);
        } else r.done();
      }).next(function () {
        d(0 === i.length);
      });
    });
  }, t.prototype.tr = function (t, e) {
    return Hn(t, this.userId, e);
  }, // PORTING NOTE: Multi-tab only (state is held in memory in other clients).

  /** Returns the mutation queue's metadata from IndexedDb. */
  t.prototype.yo = function (t) {
    var e = this;
    return $n(t).get(this.userId).next(function (t) {
      return t || new nr(e.userId, -1,
      /*lastStreamToken=*/
      "");
    });
  }, t;
}();
/**
 * @return true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */


function Hn(t, e, n) {
  var r = ir.prefixForPath(e, n.path),
      i = r[1],
      o = IDBKeyRange.lowerBound(r),
      s = !1;
  return Xn(t).Ii({
    range: o,
    Zi: !0
  }, function (t, n, r) {
    var o = t[0],
        u = t[1];
    t[2];
    o === e && u === i && (s = !0), r.done();
  }).next(function () {
    return s;
  });
}

function Kn(t, e, n) {
  var r = t.store(rr.store),
      i = t.store(ir.store),
      o = [],
      s = IDBKeyRange.only(n.batchId),
      u = 0,
      a = r.Ii({
    range: s
  }, function (t, e, n) {
    return u++, n.delete();
  });
  o.push(a.next(function () {
    d(1 === u);
  }));

  for (var c = [], h = 0, f = n.mutations; h < f.length; h++) {
    var l = f[h],
        p = ir.key(e, l.key.path, n.batchId);
    o.push(i.delete(p)), c.push(l.key);
  }

  return en.nn(o).next(function () {
    return c;
  });
}
/**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */


function Yn(t) {
  return jn.ai(t, rr.store);
}
/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */


function Xn(t) {
  return jn.ai(t, ir.store);
}
/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */


function $n(t) {
  return jn.ai(t, nr.store);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Schema Version for the Web client:
 * 1.  Initial version including Mutation Queue, Query Cache, and Remote
 *     Document Cache
 * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No
 *     longer required because migration 3 unconditionally clears it.
 * 3.  Dropped and re-created Query Cache to deal with cache corruption related
 *     to limbo resolution. Addresses
 *     https://github.com/firebase/firebase-ios-sdk/issues/1548
 * 4.  Multi-Tab Support.
 * 5.  Removal of held write acks.
 * 6.  Create document global for tracking document cache size.
 * 7.  Ensure every cached document has a sentinel row with a sequence number.
 * 8.  Add collection-parent index for Collection Group queries.
 * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than
 *     an auto-incrementing ID. This is required for Index-Free queries.
 * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.
 */


var Jn = 10,
    Zn =
/** @class */
function () {
  function t(t) {
    this.serializer = t;
  }
  /**
   * Performs database creation and schema upgrades.
   *
   * Note that in production, this method is only ever used to upgrade the schema
   * to SCHEMA_VERSION. Different values of toVersion are only used for testing
   * and local feature development.
   */


  return t.prototype.createOrUpgrade = function (t, e, n, r) {
    var i = this;
    d(n < r && n >= 0 && r <= Jn);
    var o = new _r(e);
    n < 1 && r >= 1 && (function (t) {
      t.createObjectStore(er.store);
    }(t), function (t) {
      t.createObjectStore(nr.store, {
        keyPath: nr.keyPath
      }), t.createObjectStore(rr.store, {
        keyPath: rr.keyPath,
        autoIncrement: !0
      }).createIndex(rr.userMutationsIndex, rr.userMutationsKeyPath, {
        unique: !0
      }), t.createObjectStore(ir.store);
    }(t), pr(t), function (t) {
      t.createObjectStore(ur.store);
    }(t)); // Migration 2 to populate the targetGlobal object no longer needed since
    // migration 3 unconditionally clears it.

    var s = en.resolve();
    return n < 3 && r >= 3 && ( // Brand new clients don't need to drop and recreate--only clients that
    // potentially have corrupt data.
    0 !== n && (function (t) {
      t.deleteObjectStore(hr.store), t.deleteObjectStore(cr.store), t.deleteObjectStore(fr.store);
    }(t), pr(t)), s = s.next(function () {
      /**
      * Creates the target global singleton row.
      *
      * @param {IDBTransaction} txn The version upgrade transaction for indexeddb
      */
      return function (t) {
        var e = t.store(fr.store),
            n = new fr(
        /*highestTargetId=*/
        0,
        /*lastListenSequenceNumber=*/
        0, k.min().R(),
        /*targetCount=*/
        0);
        return e.put(fr.key, n);
      }(o);
    })), n < 4 && r >= 4 && (0 !== n && ( // Schema version 3 uses auto-generated keys to generate globally unique
    // mutation batch IDs (this was previously ensured internally by the
    // client). To migrate to the new schema, we have to read all mutations
    // and write them back out. We preserve the existing batch IDs to guarantee
    // consistency with other object stores. Any further mutation batch IDs will
    // be auto-generated.
    s = s.next(function () {
      return function (t, e) {
        return e.store(rr.store).hi().next(function (n) {
          t.deleteObjectStore(rr.store), t.createObjectStore(rr.store, {
            keyPath: rr.keyPath,
            autoIncrement: !0
          }).createIndex(rr.userMutationsIndex, rr.userMutationsKeyPath, {
            unique: !0
          });
          var r = e.store(rr.store),
              i = n.map(function (t) {
            return r.put(t);
          });
          return en.nn(i);
        });
      }(t, o);
    })), s = s.next(function () {
      !function (t) {
        t.createObjectStore(dr.store, {
          keyPath: dr.keyPath
        });
      }(t);
    })), n < 5 && r >= 5 && (s = s.next(function () {
      return i.removeAcknowledgedMutations(o);
    })), n < 6 && r >= 6 && (s = s.next(function () {
      return function (t) {
        t.createObjectStore(ar.store);
      }(t), i.addDocumentGlobal(o);
    })), n < 7 && r >= 7 && (s = s.next(function () {
      return i.ensureSequenceNumbers(o);
    })), n < 8 && r >= 8 && (s = s.next(function () {
      return i.createCollectionParentIndex(t, o);
    })), n < 9 && r >= 9 && (s = s.next(function () {
      // Multi-Tab used to manage its own changelog, but this has been moved
      // to the DbRemoteDocument object store itself. Since the previous change
      // log only contained transient data, we can drop its object store.
      !function (t) {
        t.objectStoreNames.contains("remoteDocumentChanges") && t.deleteObjectStore("remoteDocumentChanges");
      }(t), function (t) {
        var e = t.objectStore(ur.store);
        e.createIndex(ur.readTimeIndex, ur.readTimeIndexPath, {
          unique: !1
        }), e.createIndex(ur.collectionReadTimeIndex, ur.collectionReadTimeIndexPath, {
          unique: !1
        });
      }(e);
    })), n < 10 && r >= 10 && (s = s.next(function () {
      return i.rewriteCanonicalIds(o);
    })), s;
  }, t.prototype.addDocumentGlobal = function (t) {
    var e = 0;
    return t.store(ur.store).Ii(function (t, n) {
      e += On(n);
    }).next(function () {
      var n = new ar(e);
      return t.store(ar.store).put(ar.key, n);
    });
  }, t.prototype.removeAcknowledgedMutations = function (t) {
    var e = this,
        n = t.store(nr.store),
        r = t.store(rr.store);
    return n.hi().next(function (n) {
      return en.forEach(n, function (n) {
        var i = IDBKeyRange.bound([n.userId, -1], [n.userId, n.lastAcknowledgedBatchId]);
        return r.hi(rr.userMutationsIndex, i).next(function (r) {
          return en.forEach(r, function (r) {
            d(r.userId === n.userId);
            var i = An(e.serializer, r);
            return Kn(t, n.userId, i).next(function () {});
          });
        });
      });
    });
  },
  /**
   * Ensures that every document in the remote document cache has a corresponding sentinel row
   * with a sequence number. Missing rows are given the most recently used sequence number.
   */
  t.prototype.ensureSequenceNumbers = function (t) {
    var e = t.store(hr.store),
        n = t.store(ur.store);
    return t.store(fr.store).get(fr.key).next(function (t) {
      var r = [];
      return n.Ii(function (n, i) {
        var o = new R(n),
            s = function (t) {
          return [0, fn(t)];
        }(o);

        r.push(e.get(s).next(function (n) {
          return n ? en.resolve() : function (n) {
            return e.put(new hr(0, fn(n), t.highestListenSequenceNumber));
          }(o);
        }));
      }).next(function () {
        return en.nn(r);
      });
    });
  }, t.prototype.createCollectionParentIndex = function (t, e) {
    // Create the index.
    t.createObjectStore(lr.store, {
      keyPath: lr.keyPath
    });

    var n = e.store(lr.store),
        r = new vn(),
        i = function i(t) {
      if (r.add(t)) {
        var e = t.S(),
            i = t.p();
        return n.put({
          collectionId: e,
          parent: fn(i)
        });
      }
    }; // Helper to add an index entry iff we haven't already written it.
    // Index existing remote documents.


    return e.store(ur.store).Ii({
      Zi: !0
    }, function (t, e) {
      var n = new R(t);
      return i(n.p());
    }).next(function () {
      return e.store(ir.store).Ii({
        Zi: !0
      }, function (t, e) {
        t[0];
        var n = t[1],
            r = (t[2], dn(n));
        return i(r.p());
      });
    });
  }, t.prototype.rewriteCanonicalIds = function (t) {
    var e = this,
        n = t.store(cr.store);
    return n.Ii(function (t, r) {
      var i = xn(r),
          o = Sn(e.serializer, i);
      return n.put(o);
    });
  }, t;
}(),
    tr = function tr(t, e) {
  this.seconds = t, this.nanoseconds = e;
},
    er = function er(t,
/** Whether to allow shared access from multiple tabs. */
e, n) {
  this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;
};
/** Performs database creation and schema upgrades. */

/**
 * Name of the IndexedDb object store.
 *
 * Note that the name 'owner' is chosen to ensure backwards compatibility with
 * older clients that only supported single locked access to the persistence
 * layer.
 */


er.store = "owner",
/**
     * The key string used for the single object that exists in the
     * DbPrimaryClient store.
     */
er.key = "owner";

var nr = function nr(
/**
     * The normalized user ID to which this queue belongs.
     */
t,
/**
     * An identifier for the highest numbered batch that has been acknowledged
     * by the server. All MutationBatches in this queue with batchIds less
     * than or equal to this value are considered to have been acknowledged by
     * the server.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
e,
/**
     * A stream token that was previously sent by the server.
     *
     * See StreamingWriteRequest in datastore.proto for more details about
     * usage.
     *
     * After sending this token, earlier tokens may not be used anymore so
     * only a single stream token is retained.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
n) {
  this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;
};
/** Name of the IndexedDb object store.  */


nr.store = "mutationQueues",
/** Keys are automatically assigned via the userId property. */
nr.keyPath = "userId";
/**
 * An object to be stored in the 'mutations' store in IndexedDb.
 *
 * Represents a batch of user-level mutations intended to be sent to the server
 * in a single write. Each user-level batch gets a separate DbMutationBatch
 * with a new batchId.
 */

var rr = function rr(
/**
     * The normalized user ID to which this batch belongs.
     */
t,
/**
     * An identifier for this batch, allocated using an auto-generated key.
     */
e,
/**
     * The local write time of the batch, stored as milliseconds since the
     * epoch.
     */
n,
/**
     * A list of "mutations" that represent a partial base state from when this
     * write batch was initially created. During local application of the write
     * batch, these baseMutations are applied prior to the real writes in order
     * to override certain document fields from the remote document cache. This
     * is necessary in the case of non-idempotent writes (e.g. `increment()`
     * transforms) to make sure that the local view of the modified documents
     * doesn't flicker if the remote document cache receives the result of the
     * non-idempotent write before the write is removed from the queue.
     *
     * These mutations are never sent to the backend.
     */
r,
/**
     * A list of mutations to apply. All mutations will be applied atomically.
     *
     * Mutations are serialized via toMutation().
     */
i) {
  this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = r, this.mutations = i;
};
/** Name of the IndexedDb object store.  */


rr.store = "mutations",
/** Keys are automatically assigned via the userId, batchId properties. */
rr.keyPath = "batchId",
/** The index name for lookup of mutations by user. */
rr.userMutationsIndex = "userMutationsIndex",
/** The user mutations index is keyed by [userId, batchId] pairs. */
rr.userMutationsKeyPath = ["userId", "batchId"];

var ir =
/** @class */
function () {
  function t() {}
  /**
   * Creates a [userId] key for use in the DbDocumentMutations index to iterate
   * over all of a user's document mutations.
   */


  return t.prefixForUser = function (t) {
    return [t];
  },
  /**
   * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
   * index to iterate over all at document mutations for a given path or lower.
   */
  t.prefixForPath = function (t, e) {
    return [t, fn(e)];
  },
  /**
   * Creates a full index key of [userId, encodedPath, batchId] for inserting
   * and deleting into the DbDocumentMutations index.
   */
  t.key = function (t, e, n) {
    return [t, fn(e), n];
  }, t;
}();

ir.store = "documentMutations",
/**
     * Because we store all the useful information for this store in the key,
     * there is no useful information to store as the value. The raw (unencoded)
     * path cannot be stored because IndexedDb doesn't store prototype
     * information.
     */
ir.PLACEHOLDER = new ir();

var or = function or(t, e) {
  this.path = t, this.readTime = e;
},
    sr = function sr(t, e) {
  this.path = t, this.version = e;
},
    ur = // TODO: We are currently storing full document keys almost three times
// (once as part of the primary key, once - partly - as `parentPath` and once
// inside the encoded documents). During our next migration, we should
// rewrite the primary key as parentPath + document ID which would allow us
// to drop one value.
function ur(
/**
     * Set to an instance of DbUnknownDocument if the data for a document is
     * not known, but it is known that a document exists at the specified
     * version (e.g. it had a successful update applied to it)
     */
t,
/**
     * Set to an instance of a DbNoDocument if it is known that no document
     * exists.
     */
e,
/**
     * Set to an instance of a Document if there's a cached version of the
     * document.
     */
n,
/**
     * Documents that were written to the remote document store based on
     * a write acknowledgment are marked with `hasCommittedMutations`. These
     * documents are potentially inconsistent with the backend's copy and use
     * the write's commit version as their document version.
     */
r,
/**
     * When the document was read from the backend. Undefined for data written
     * prior to schema version 9.
     */
i,
/**
     * The path of the collection this document is part of. Undefined for data
     * written prior to schema version 9.
     */
o) {
  this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = r, this.readTime = i, this.parentPath = o;
};
/**
 * Represents a document that is known to exist but whose data is unknown.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */


ur.store = "remoteDocuments",
/**
     * An index that provides access to all entries sorted by read time (which
     * corresponds to the last modification time of each row).
     *
     * This index is used to provide a changelog for Multi-Tab.
     */
ur.readTimeIndex = "readTimeIndex", ur.readTimeIndexPath = "readTime",
/**
     * An index that provides access to documents in a collection sorted by read
     * time.
     *
     * This index is used to allow the RemoteDocumentCache to fetch newly changed
     * documents in a collection.
     */
ur.collectionReadTimeIndex = "collectionReadTimeIndex", ur.collectionReadTimeIndexPath = ["parentPath", "readTime"];
/**
 * Contains a single entry that has metadata about the remote document cache.
 */

var ar =
/**
     * @param byteSize Approximately the total size in bytes of all the documents in the document
     * cache.
     */
function ar(t) {
  this.byteSize = t;
};

ar.store = "remoteDocumentGlobal", ar.key = "remoteDocumentGlobalKey";

var cr = function cr(
/**
     * An auto-generated sequential numeric identifier for the query.
     *
     * Queries are stored using their canonicalId as the key, but these
     * canonicalIds can be quite long so we additionally assign a unique
     * queryId which can be used by referenced data structures (e.g.
     * indexes) to minimize the on-disk cost.
     */
t,
/**
     * The canonical string representing this query. This is not unique.
     */
e,
/**
     * The last readTime received from the Watch Service for this query.
     *
     * This is the same value as TargetChange.read_time in the protos.
     */
n,
/**
     * An opaque, server-assigned token that allows watching a query to be
     * resumed after disconnecting without retransmitting all the data
     * that matches the query. The resume token essentially identifies a
     * point in time from which the server should resume sending results.
     *
     * This is related to the snapshotVersion in that the resumeToken
     * effectively also encodes that value, but the resumeToken is opaque
     * and sometimes encodes additional information.
     *
     * A consequence of this is that the resumeToken should be used when
     * asking the server to reason about where this client is in the watch
     * stream, but the client should use the snapshotVersion for its own
     * purposes.
     *
     * This is the same value as TargetChange.resume_token in the protos.
     */
r,
/**
     * A sequence number representing the last time this query was
     * listened to, used for garbage collection purposes.
     *
     * Conventionally this would be a timestamp value, but device-local
     * clocks are unreliable and they must be able to create new listens
     * even while disconnected. Instead this should be a monotonically
     * increasing number that's incremented on each listen call.
     *
     * This is different from the queryId since the queryId is an
     * immutable identifier assigned to the Query on first use while
     * lastListenSequenceNumber is updated every time the query is
     * listened to.
     */
i,
/**
     * Denotes the maximum snapshot version at which the associated query view
     * contained no limbo documents.  Undefined for data written prior to
     * schema version 9.
     */
o,
/**
     * The query for this target.
     *
     * Because canonical ids are not unique we must store the actual query. We
     * use the proto to have an object we can persist without having to
     * duplicate translation logic to and from a `Query` object.
     */
s) {
  this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = r, this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = o, this.query = s;
};

cr.store = "targets",
/** Keys are automatically assigned via the targetId property. */
cr.keyPath = "targetId",
/** The name of the queryTargets index. */
cr.queryTargetsIndexName = "queryTargetsIndex",
/**
     * The index of all canonicalIds to the targets that they match. This is not
     * a unique mapping because canonicalId does not promise a unique name for all
     * possible queries, so we append the targetId to make the mapping unique.
     */
cr.queryTargetsKeyPath = ["canonicalId", "targetId"];
/**
 * An object representing an association between a target and a document, or a
 * sentinel row marking the last sequence number at which a document was used.
 * Each document cached must have a corresponding sentinel row before lru
 * garbage collection is enabled.
 *
 * The target associations and sentinel rows are co-located so that orphaned
 * documents and their sequence numbers can be identified efficiently via a scan
 * of this store.
 */

var hr = function hr(
/**
     * The targetId identifying a target or 0 for a sentinel row.
     */
t,
/**
     * The path to the document, as encoded in the key.
     */
e,
/**
     * If this is a sentinel row, this should be the sequence number of the last
     * time the document specified by `path` was used. Otherwise, it should be
     * `undefined`.
     */
n) {
  this.targetId = t, this.path = e, this.sequenceNumber = n;
};
/** Name of the IndexedDb object store.  */


hr.store = "targetDocuments",
/** Keys are automatically assigned via the targetId, path properties. */
hr.keyPath = ["targetId", "path"],
/** The index name for the reverse index. */
hr.documentTargetsIndex = "documentTargetsIndex",
/** We also need to create the reverse index for these properties. */
hr.documentTargetsKeyPath = ["path", "targetId"];
/**
 * A record of global state tracked across all Targets, tracked separately
 * to avoid the need for extra indexes.
 *
 * This should be kept in-sync with the proto used in the iOS client.
 */

var fr = function fr(
/**
     * The highest numbered target id across all targets.
     *
     * See DbTarget.targetId.
     */
t,
/**
     * The highest numbered lastListenSequenceNumber across all targets.
     *
     * See DbTarget.lastListenSequenceNumber.
     */
e,
/**
     * A global snapshot version representing the last consistent snapshot we
     * received from the backend. This is monotonically increasing and any
     * snapshots received from the backend prior to this version (e.g. for
     * targets resumed with a resumeToken) should be suppressed (buffered)
     * until the backend has caught up to this snapshot version again. This
     * prevents our cache from ever going backwards in time.
     */
n,
/**
     * The number of targets persisted.
     */
r) {
  this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, this.targetCount = r;
};
/**
 * The key string used for the single object that exists in the
 * DbTargetGlobal store.
 */


fr.key = "targetGlobalKey", fr.store = "targetGlobal";
/**
 * An object representing an association between a Collection id (e.g. 'messages')
 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
 * This is used to efficiently find all collections to query when performing
 * a Collection Group query.
 */

var lr = function lr(
/**
     * The collectionId (e.g. 'messages')
     */
t,
/**
     * The path to the parent (either a document location or an empty path for
     * a root-level collection).
     */
e) {
  this.collectionId = t, this.parent = e;
};
/** Name of the IndexedDb object store. */


function pr(t) {
  t.createObjectStore(hr.store, {
    keyPath: hr.keyPath
  }).createIndex(hr.documentTargetsIndex, hr.documentTargetsKeyPath, {
    unique: !0
  }), // NOTE: This is unique only because the TargetId is the suffix.
  t.createObjectStore(cr.store, {
    keyPath: cr.keyPath
  }).createIndex(cr.queryTargetsIndexName, cr.queryTargetsKeyPath, {
    unique: !0
  }), t.createObjectStore(fr.store);
}

lr.store = "collectionParents",
/** Keys are automatically assigned via the collectionId, parent properties. */
lr.keyPath = ["collectionId", "parent"];

var dr = function dr( // Note: Previous schema versions included a field
// "lastProcessedDocumentChangeId". Don't use anymore.

/** The auto-generated client id assigned at client startup. */
t,
/** The last time this state was updated. */
e,
/** Whether the client's network connection is enabled. */
n,
/** Whether this client is running in a foreground tab. */
r) {
  this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = r;
};
/** Name of the IndexedDb object store. */


dr.store = "clientMetadata",
/** Keys are automatically assigned via the clientId properties. */
dr.keyPath = "clientId";

var yr = e.__spreadArrays(e.__spreadArrays(e.__spreadArrays([nr.store, rr.store, ir.store, ur.store, cr.store, er.store, fr.store, hr.store], [dr.store]), [ar.store]), [lr.store]),
    vr =
/** @class */
function () {
  function t(e) {
    this.db = e, // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
    // bug we're checking for should exist in iOS >= 12.2 and < 13, but for
    // whatever reason it's much harder to hit after 12.2 so we only proactively
    // log on 12.2.
    12.2 === t.bo(i.getUA()) && f("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.")
    /**
    * Opens the specified database, creating or upgrading it if necessary.
    *
    * Note that `version` must not be a downgrade. IndexedDB does not support downgrading the schema
    * version. We currently do not support any way to do versioning outside of IndexedDB's versioning
    * mechanism, as only version-upgrade transactions are allowed to do things like create
    * objectstores.
    */
    ;
  }

  return t.Ir = function (e, n, r) {
    return h("SimpleDb", "Opening database:", e), new en(function (i, o) {
      // TODO(mikelehen): Investigate browser compatibility.
      // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
      // suggests IE9 and older WebKit browsers handle upgrade
      // differently. They expect setVersion, as described here:
      // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
      var s = indexedDB.open(e, n);
      s.onsuccess = function (e) {
        var n = e.target.result;
        i(new t(n));
      }, s.onblocked = function () {
        o(new S(x.FAILED_PRECONDITION, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
      }, s.onerror = function (t) {
        var e = t.target.error;
        "VersionError" === e.name ? o(new S(x.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : o(e);
      }, s.onupgradeneeded = function (t) {
        h("SimpleDb", 'Database "' + e + '" requires upgrade from version:', t.oldVersion);
        var n = t.target.result;
        r.createOrUpgrade(n, s.transaction, t.oldVersion, Jn).next(function () {
          h("SimpleDb", "Database upgrade to version " + Jn + " complete");
        });
      };
    }).en();
  },
  /** Deletes the specified database. */
  t.delete = function (t) {
    return h("SimpleDb", "Removing database:", t), Ir(window.indexedDB.deleteDatabase(t)).en();
  },
  /** Returns true if IndexedDB is available in the current environment. */
  t._r = function () {
    if ("undefined" == typeof indexedDB) return !1;
    if (t.vo()) return !0; // We extensively use indexed array values and compound keys,
    // which IE and Edge do not support. However, they still have indexedDB
    // defined on the window, so we need to check for them here and make sure
    // to return that persistence is not enabled for those browsers.
    // For tracking support of this feature, see here:
    // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
    // Check the UA string to find out the browser.

    var e = i.getUA(),
        n = t.bo(e),
        r = 0 < n && n < 10,
        o = t.So(e),
        s = 0 < o && o < 4.5; // IE 10
    // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
    // IE 11
    // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
    // Edge
    // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
    // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
    // iOS Safari: Disable for users running iOS version < 10.

    return !(e.indexOf("MSIE ") > 0 || e.indexOf("Trident/") > 0 || e.indexOf("Edge/") > 0 || r || s);
  },
  /**
   * Returns true if the backing IndexedDB store is the Node IndexedDBShim
   * (see https://github.com/axemclion/IndexedDBShim).
   */
  t.vo = function () {
    var t;
    return "undefined" != typeof __PRIVATE_process && "YES" === (null === (t = __PRIVATE_process.__PRIVATE_env) || void 0 === t ? void 0 : t.Do);
  },
  /** Helper to get a typed SimpleDbStore from a transaction. */
  t.ai = function (t, e) {
    return t.store(e);
  }, // visible for testing

  /** Parse User Agent to determine iOS version. Returns -1 if not found. */
  t.bo = function (t) {
    var e = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
        n = e ? e[1].split("_").slice(0, 2).join(".") : "-1";
    return Number(n);
  }, // visible for testing

  /** Parse User Agent to determine Android version. Returns -1 if not found. */
  t.So = function (t) {
    var e = t.match(/Android ([\d.]+)/i),
        n = e ? e[1].split(".").slice(0, 2).join(".") : "-1";
    return Number(n);
  }, t.prototype.br = function (t) {
    this.db.onversionchange = function (e) {
      return t(e);
    };
  }, t.prototype.runTransaction = function (t, n, r) {
    return e.__awaiter(this, void 0, void 0, function () {
      var i, o, s, u, a;
      return e.__generator(this, function (c) {
        switch (c.label) {
          case 0:
            i = "readonly" === t, o = 0, s = function s() {
              var t, s, a, c, f;
              return e.__generator(this, function (e) {
                switch (e.label) {
                  case 0:
                    ++o, t = _r.open(u.db, i ? "readonly" : "readwrite", n), e.label = 1;

                  case 1:
                    // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                    // fire), but still return the original transactionFnResult back to the
                    // caller.
                    return e.trys.push([1, 3,, 4]), s = r(t).catch(function (e) {
                      // Abort the transaction if there was an error.
                      return t.abort(e), en.reject(e);
                    }).en(), a = {}, s.catch(function () {}), [4
                    /*yield*/
                    , t.Co];

                  case 2:
                    return [2
                    /*return*/
                    , (a.value = ( // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                    // fire), but still return the original transactionFnResult back to the
                    // caller.
                    e.sent(), s), a)];

                  case 3:
                    return c = e.sent(), f = "FirebaseError" !== c.name && o < 3, h("SimpleDb", "Transaction failed with error: %s. Retrying: %s.", c.message, f), f ? [3
                    /*break*/
                    , 4] : [2
                    /*return*/
                    , {
                      value: Promise.reject(c)
                    }];

                  case 4:
                    return [2
                    /*return*/
                    ];
                }
              });
            }, u = this, c.label = 1;

          case 1:
            return [5
            /*yield**/
            , s()];

          case 2:
            if ("object" == _typeof(a = c.sent())) return [2
            /*return*/
            , a.value];
            c.label = 3;

          case 3:
            return [3
            /*break*/
            , 1];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.close = function () {
    this.db.close();
  }, t;
}(),
    gr =
/** @class */
function () {
  function t(t) {
    this.Fo = t, this.No = !1, this.$o = null;
  }

  return Object.defineProperty(t.prototype, "Js", {
    get: function get() {
      return this.No;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "ko", {
    get: function get() {
      return this.$o;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "cursor", {
    set: function set(t) {
      this.Fo = t;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * This function can be called to stop iteration at any point.
   */
  t.prototype.done = function () {
    this.No = !0;
  },
  /**
   * This function can be called to skip to that next key, which could be
   * an index or a primary key.
   */
  t.prototype.Ai = function (t) {
    this.$o = t;
  },
  /**
   * Delete the current cursor value from the object store.
   *
   * NOTE: You CANNOT do this with a keysOnly query.
   */
  t.prototype.delete = function () {
    return Ir(this.Fo.delete());
  }, t;
}(),
    mr =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this, x.UNAVAILABLE, "IndexedDB transaction failed: " + e) || this).name = "IndexedDbTransactionError", n;
  }

  return e.__extends(n, t), n;
}(S); // V2 is no longer usable (see comment at top of file)
// Visible for testing

/**
 * Provides a wrapper around IndexedDb with a simplified interface that uses
 * Promise-like return values to chain operations. Real promises cannot be used
 * since .then() continuations are executed asynchronously (e.g. via
 * .setImmediate), which would cause IndexedDB to end the transaction.
 * See PersistencePromise for more details.
 */

/** Verifies whether `e` is an IndexedDbTransactionError. */


function wr(t) {
  // Use name equality, as instanceof checks on errors don't work with errors
  // that wrap other errors.
  return "IndexedDbTransactionError" === t.name;
}
/**
 * Wraps an IDBTransaction and exposes a store() method to get a handle to a
 * specific object store.
 */


var _r =
/** @class */
function () {
  function t(t) {
    var e = this;
    this.transaction = t, this.aborted = !1,
    /**
         * A promise that resolves with the result of the IndexedDb transaction.
         */
    this.xo = new cn(), this.transaction.oncomplete = function () {
      e.xo.resolve();
    }, this.transaction.onabort = function () {
      t.error ? e.xo.reject(new mr(t.error)) : e.xo.resolve();
    }, this.transaction.onerror = function (t) {
      var n = Tr(t.target.error);
      e.xo.reject(new mr(n));
    };
  }

  return t.open = function (e, n, r) {
    return new t(e.transaction(r, n));
  }, Object.defineProperty(t.prototype, "Co", {
    get: function get() {
      return this.xo.promise;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.abort = function (t) {
    t && this.xo.reject(t), this.aborted || (h("SimpleDb", "Aborting transaction:", t ? t.message : "Client-initiated abort"), this.aborted = !0, this.transaction.abort());
  },
  /**
   * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
   * operations performed on the SimpleDbStore happen within the context of this
   * transaction and it cannot be used anymore once the transaction is
   * completed.
   *
   * Note that we can't actually enforce that the KeyType and ValueType are
   * correct, but they allow type safety through the rest of the consuming code.
   */
  t.prototype.store = function (t) {
    var e = this.transaction.objectStore(t);
    return new br(e);
  }, t;
}(),
    br =
/** @class */
function () {
  function t(t) {
    this.store = t;
  }

  return t.prototype.put = function (t, e) {
    var n;
    return void 0 !== e ? (h("SimpleDb", "PUT", this.store.name, t, e), n = this.store.put(e, t)) : (h("SimpleDb", "PUT", this.store.name, "<auto-key>", t), n = this.store.put(t)), Ir(n);
  },
  /**
   * Adds a new value into an Object Store and returns the new key. Similar to
   * IndexedDb's `add()`, this method will fail on primary key collisions.
   *
   * @param value The object to write.
   * @return The key of the value to add.
   */
  t.prototype.add = function (t) {
    return h("SimpleDb", "ADD", this.store.name, t, t), Ir(this.store.add(t));
  },
  /**
   * Gets the object with the specified key from the specified store, or null
   * if no object exists with the specified key.
   *
   * @key The key of the object to get.
   * @return The object with the specified key or null if no object exists.
   */
  t.prototype.get = function (t) {
    var e = this; // We're doing an unsafe cast to ValueType.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any

    return Ir(this.store.get(t)).next(function (n) {
      // Normalize nonexistence to null.
      return void 0 === n && (n = null), h("SimpleDb", "GET", e.store.name, t, n), n;
    });
  }, t.prototype.delete = function (t) {
    return h("SimpleDb", "DELETE", this.store.name, t), Ir(this.store.delete(t));
  },
  /**
   * If we ever need more of the count variants, we can add overloads. For now,
   * all we need is to count everything in a store.
   *
   * Returns the number of rows in the store.
   */
  t.prototype.count = function () {
    return h("SimpleDb", "COUNT", this.store.name), Ir(this.store.count());
  }, t.prototype.hi = function (t, e) {
    var n = this.cursor(this.options(t, e)),
        r = [];
    return this.Mo(n, function (t, e) {
      r.push(e);
    }).next(function () {
      return r;
    });
  }, t.prototype.Lo = function (t, e) {
    h("SimpleDb", "DELETE ALL", this.store.name);
    var n = this.options(t, e);
    n.Zi = !1;
    var r = this.cursor(n);
    return this.Mo(r, function (t, e, n) {
      return n.delete();
    });
  }, t.prototype.Ii = function (t, e) {
    var n;
    e ? n = t : (n = {}, e = t);
    var r = this.cursor(n);
    return this.Mo(r, e);
  },
  /**
   * Iterates over a store, but waits for the given callback to complete for
   * each entry before iterating the next entry. This allows the callback to do
   * asynchronous work to determine if this iteration should continue.
   *
   * The provided callback should return `true` to continue iteration, and
   * `false` otherwise.
   */
  t.prototype.ao = function (t) {
    var e = this.cursor({});
    return new en(function (n, r) {
      e.onerror = function (t) {
        var e = Tr(t.target.error);
        r(e);
      }, e.onsuccess = function (e) {
        var r = e.target.result;
        r ? t(r.primaryKey, r.value).next(function (t) {
          t ? r.continue() : n();
        }) : n();
      };
    });
  }, t.prototype.Mo = function (t, e) {
    var n = [];
    return new en(function (r, i) {
      t.onerror = function (t) {
        i(t.target.error);
      }, t.onsuccess = function (t) {
        var i = t.target.result;

        if (i) {
          var o = new gr(i),
              s = e(i.primaryKey, i.value, o);

          if (s instanceof en) {
            var u = s.catch(function (t) {
              return o.done(), en.reject(t);
            });
            n.push(u);
          }

          o.Js ? r() : null === o.ko ? i.continue() : i.continue(o.ko);
        } else r();
      };
    }).next(function () {
      return en.nn(n);
    });
  }, t.prototype.options = function (t, e) {
    var n = void 0;
    return void 0 !== t && ("string" == typeof t ? n = t : e = t), {
      index: n,
      range: e
    };
  }, t.prototype.cursor = function (t) {
    var e = "next";

    if (t.reverse && (e = "prev"), t.index) {
      var n = this.store.index(t.index);
      return t.Zi ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);
    }

    return this.store.openCursor(t.range, e);
  }, t;
}();
/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */

/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */


function Ir(t) {
  return new en(function (e, n) {
    t.onsuccess = function (t) {
      var n = t.target.result;
      e(n);
    }, t.onerror = function (t) {
      var e = Tr(t.target.error);
      n(e);
    };
  });
} // Guard so we only report the error once.


var Er = !1;

function Tr(t) {
  var e = vr.bo(i.getUA());

  if (e >= 12.2 && e < 13) {
    var n = "An internal error was encountered in the Indexed Database server";

    if (t.message.indexOf(n) >= 0) {
      // Wrap error in a more descriptive one.
      var r = new S("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '" + n + "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
      return Er || (Er = !0, // Throw a global exception outside of this promise chain, for the user to
      // potentially catch.
      setTimeout(function () {
        throw r;
      }, 0)), r;
    }
  }

  return t;
}
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** The Platform's 'window' implementation or null if not available. */


function Nr() {
  // `window` is not always available, e.g. in ReactNative and WebWorkers.
  // eslint-disable-next-line no-restricted-globals
  return "undefined" != typeof window ? window : null;
}
/** The Platform's 'document' implementation or null if not available. */

/**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 *
 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
 * in newer versions of TypeScript defines `finally`, which is not available in
 * IE.
 */


var Ar =
/** @class */
function () {
  function t(t, e, n, r, i) {
    this.Oo = t, this.jn = e, this.Bo = n, this.op = r, this.qo = i, this.Uo = new cn(), this.then = this.Uo.promise.then.bind(this.Uo.promise), // It's normal for the deferred promise to be canceled (due to cancellation)
    // and so we attach a dummy catch callback to avoid
    // 'UnhandledPromiseRejectionWarning' log spam.
    this.Uo.promise.catch(function (t) {})
    /**
    * Creates and returns a DelayedOperation that has been scheduled to be
    * executed on the provided asyncQueue after the provided delayMs.
    *
    * @param asyncQueue The queue to schedule the operation on.
    * @param id A Timer ID identifying the type of operation this is.
    * @param delayMs The delay (ms) before the operation should be scheduled.
    * @param op The operation to run.
    * @param removalCallback A callback to be called synchronously once the
    *   operation is executed or canceled, notifying the AsyncQueue to remove it
    *   from its delayedOperations list.
    *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
    *   the DelayedOperation class public.
    */
    ;
  }

  return t.Qo = function (e, n, r, i, o) {
    var s = new t(e, n, Date.now() + r, i, o);
    return s.start(r), s;
  },
  /**
   * Starts the timer. This is called immediately after construction by
   * createAndSchedule().
   */
  t.prototype.start = function (t) {
    var e = this;
    this.Wo = setTimeout(function () {
      return e.jo();
    }, t);
  },
  /**
   * Queues the operation to run immediately (if it hasn't already been run or
   * canceled).
   */
  t.prototype.ni = function () {
    return this.jo();
  },
  /**
   * Cancels the operation if it hasn't already been executed or canceled. The
   * promise will be rejected.
   *
   * As long as the operation has not yet been run, calling cancel() provides a
   * guarantee that the operation will not be run.
   */
  t.prototype.cancel = function (t) {
    null !== this.Wo && (this.clearTimeout(), this.Uo.reject(new S(x.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
  }, t.prototype.jo = function () {
    var t = this;
    this.Oo.Sr(function () {
      return null !== t.Wo ? (t.clearTimeout(), t.op().then(function (e) {
        return t.Uo.resolve(e);
      })) : Promise.resolve();
    });
  }, t.prototype.clearTimeout = function () {
    null !== this.Wo && (this.qo(this), clearTimeout(this.Wo), this.Wo = null);
  }, t;
}(),
    xr =
/** @class */
function () {
  function t() {
    var t = this; // The last promise in the queue.

    this.Ko = Promise.resolve(), // The last retryable operation. Retryable operation are run in order and
    // retried with backoff.
    this.Go = Promise.resolve(), // Is this AsyncQueue being shut down? Once it is set to true, it will not
    // be changed again.
    this.zo = !1, // Operations scheduled to be queued in the future. Operations are
    // automatically removed after they are run or canceled.
    this.Ho = [], // visible for testing
    this.Yo = null, // Flag set while there's an outstanding AsyncQueue operation, used for
    // assertion sanity-checks.
    this.Jo = !1, // List of TimerIds to fast-forward delays for.
    this.Xo = [], // Backoff timer used to schedule retries for retryable operations
    this.Zo = new hn(this, "async_queue_retry"
    /* AsyncQueueRetry */
    ), // Visibility handler that triggers an immediate retry of all retryable
    // operations. Meant to speed up recovery when we regain file system access
    // after page comes into foreground.
    this.th = function () {
      return t.Zo.si();
    };
    var e = Nr();
    e && "function" == typeof e.addEventListener && e.addEventListener("visibilitychange", this.th);
  }

  return Object.defineProperty(t.prototype, "eh", {
    // Is this AsyncQueue being shut down? If true, this instance will not enqueue
    // any new operations, Promises from enqueue requests will not resolve.
    get: function get() {
      return this.zo;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * Adds a new operation to the queue without waiting for it to complete (i.e.
   * we ignore the Promise result).
   */
  t.prototype.Sr = function (t) {
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.enqueue(t);
  },
  /**
   * Regardless if the queue has initialized shutdown, adds a new operation to the
   * queue without waiting for it to complete (i.e. we ignore the Promise result).
   */
  t.prototype.sh = function (t) {
    this.nh(), // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.ih(t);
  },
  /**
   * Regardless if the queue has initialized shutdown, adds a new operation to the
   * queue.
   */
  t.prototype.rh = function (t) {
    return this.nh(), this.ih(t);
  },
  /**
   * Adds a new operation to the queue and initialize the shut down of this queue.
   * Returns a promise that will be resolved when the promise returned by the new
   * operation is (with its value).
   * Once this method is called, the only possible way to request running an operation
   * is through `enqueueAndForgetEvenAfterShutdown`.
   */
  t.prototype.oh = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.nh(), this.zo ? [3
            /*break*/
            , 2] : (this.zo = !0, (n = Nr()) && n.removeEventListener("visibilitychange", this.th), [4
            /*yield*/
            , this.rh(t)]);

          case 1:
            e.sent(), e.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Adds a new operation to the queue. Returns a promise that will be resolved
   * when the promise returned by the new operation is (with its value).
   */
  t.prototype.enqueue = function (t) {
    return this.nh(), this.zo ? new Promise(function (t) {}) : this.ih(t);
  },
  /**
   * Enqueue a retryable operation.
   *
   * A retryable operation is rescheduled with backoff if it fails with a
   * IndexedDbTransactionError (the error type used by SimpleDb). All
   * retryable operations are executed in order and only run if all prior
   * operations were retried successfully.
   */
  t.prototype.Cr = function (t) {
    var n = this;
    this.nh(), this.zo || (this.Go = this.Go.then(function () {
      var r = new cn(),
          i = function i() {
        return e.__awaiter(n, void 0, void 0, function () {
          var n;
          return e.__generator(this, function (e) {
            switch (e.label) {
              case 0:
                return e.trys.push([0, 2,, 3]), [4
                /*yield*/
                , t()];

              case 1:
                return e.sent(), r.resolve(), this.Zo.reset(), [3
                /*break*/
                , 3];

              case 2:
                if (!wr(n = e.sent())) throw r.resolve(), n; // Failure will be handled by AsyncQueue

                return h("AsyncQueue", "Operation failed with retryable error: " + n), this.Zo.Zn(i), [3
                /*break*/
                , 3];

              case 3:
                return [2
                /*return*/
                ];
            }
          });
        });
      };

      return n.Sr(i), r.promise;
    }));
  }, t.prototype.ih = function (t) {
    var e = this,
        n = this.Ko.then(function () {
      return e.Jo = !0, t().catch(function (t) {
        // Re-throw the error so that this.tail becomes a rejected Promise and
        // all further attempts to chain (via .then) will just short-circuit
        // and return the rejected Promise.
        throw e.Yo = t, e.Jo = !1, f("INTERNAL UNHANDLED ERROR: ",
        /**
        * Chrome includes Error.message in Error.stack. Other browsers do not.
        * This returns expected output of message + stack when available.
        * @param error Error or FirestoreError
        */
        function (t) {
          var e = t.message || "";
          return t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + "\n" + t.stack), e;
        }(t)), t;
      }).then(function (t) {
        return e.Jo = !1, t;
      });
    });
    return this.Ko = n, n;
  },
  /**
   * Schedules an operation to be queued on the AsyncQueue once the specified
   * `delayMs` has elapsed. The returned DelayedOperation can be used to cancel
   * or fast-forward the operation prior to its running.
   */
  t.prototype.ei = function (t, e, n) {
    var r = this;
    this.nh(), // Fast-forward delays for timerIds that have been overriden.
    this.Xo.indexOf(t) > -1 && (e = 0);
    var i = Ar.Qo(this, t, e, n, function (t) {
      return r.hh(t);
    });
    return this.Ho.push(i), i;
  }, t.prototype.nh = function () {
    this.Yo && p();
  },
  /**
   * Verifies there's an operation currently in-progress on the AsyncQueue.
   * Unfortunately we can't verify that the running code is in the promise chain
   * of that operation, so this isn't a foolproof check, but it should be enough
   * to catch some bugs.
   */
  t.prototype.ah = function () {},
  /**
   * Waits until all currently queued tasks are finished executing. Delayed
   * operations are not run.
   */
  t.prototype.uh = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return [4
            /*yield*/
            , t = this.Ko];

          case 1:
            e.sent(), e.label = 2;

          case 2:
            if (t !== this.Ko) return [3
            /*break*/
            , 0];
            e.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * For Tests: Determine if a delayed operation with a particular TimerId
   * exists.
   */
  t.prototype.lh = function (t) {
    for (var e = 0, n = this.Ho; e < n.length; e++) {
      if (n[e].jn === t) return !0;
    }

    return !1;
  },
  /**
   * For Tests: Runs some or all delayed operations early.
   *
   * @param lastTimerId Delayed operations up to and including this TimerId will
   *  be drained. Pass TimerId.All to run all delayed operations.
   * @returns a Promise that resolves once all operations have been run.
   */
  t.prototype._h = function (t) {
    var e = this; // Note that draining may generate more delayed ops, so we do that first.

    return this.uh().then(function () {
      // Run ops in the same order they'd run if they ran naturally.
      e.Ho.sort(function (t, e) {
        return t.Bo - e.Bo;
      });

      for (var n = 0, r = e.Ho; n < r.length; n++) {
        var i = r[n];
        if (i.ni(), "all"
        /* All */
        !== t && i.jn === t) break;
      }

      return e.uh();
    });
  },
  /**
   * For Tests: Skip all subsequent delays for a timer id.
   */
  t.prototype.fh = function (t) {
    this.Xo.push(t);
  },
  /** Called once a DelayedOperation is run or canceled. */
  t.prototype.hh = function (t) {
    // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
    var e = this.Ho.indexOf(t);
    this.Ho.splice(e, 1);
  }, t;
}();
/**
 * Returns a FirestoreError that can be surfaced to the user if the provided
 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
 */


function Sr(t, e) {
  if (f("AsyncQueue", e + ": " + t), wr(t)) return new S(x.UNAVAILABLE, e + ": " + t);
  throw t;
}

function Dr(t, e) {
  var n = t[0],
      r = t[1],
      i = e[0],
      o = e[1],
      s = m(n, i);
  return 0 === s ? m(r, o) : s;
}
/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */


var kr =
/** @class */
function () {
  function t(t) {
    this.dh = t, this.buffer = new Y(Dr), this.wh = 0;
  }

  return t.prototype.Th = function () {
    return ++this.wh;
  }, t.prototype.Eh = function (t) {
    var e = [t, this.Th()];
    if (this.buffer.size < this.dh) this.buffer = this.buffer.add(e);else {
      var n = this.buffer.last();
      Dr(e, n) < 0 && (this.buffer = this.buffer.delete(n).add(e));
    }
  }, Object.defineProperty(t.prototype, "maxValue", {
    get: function get() {
      // Guaranteed to be non-empty. If we decide we are not collecting any
      // sequence numbers, nthSequenceNumber below short-circuits. If we have
      // decided that we are collecting n sequence numbers, it's because n is some
      // percentage of the existing sequence numbers. That means we should never
      // be in a situation where we are collecting sequence numbers but don't
      // actually have any.
      return this.buffer.last()[0];
    },
    enumerable: !0,
    configurable: !0
  }), t;
}(),
    Pr = {
  Ih: !1,
  Ah: 0,
  Rh: 0,
  mh: 0
},
    Rr =
/** @class */
function () {
  function t( // When we attempt to collect, we will only do so if the cache size is greater than this
  // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
  t, // The percentage of sequence numbers that we will attempt to collect
  e, // A cap on the total number of sequence numbers that will be collected. This prevents
  // us from collecting a huge number of sequence numbers if the cache has grown very large.
  n) {
    this.Ph = t, this.Vh = e, this.gh = n;
  }

  return t.ph = function (e) {
    return new t(e, t.yh, t.bh);
  }, t;
}();

Rr.vh = -1, Rr.Sh = 1048576, Rr.Dh = 41943040, Rr.yh = 10, Rr.bh = 1e3, Rr.Ch = new Rr(Rr.Dh, Rr.yh, Rr.bh), Rr.DISABLED = new Rr(Rr.vh, 0, 0);
/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */

var Or =
/** @class */
function () {
  function t(t, e) {
    this.eo = t, this.Oo = e, this.Fh = !1, this.Nh = null;
  }

  return t.prototype.start = function (t) {
    this.eo.$h.Ph !== Rr.vh && this.kh(t);
  }, t.prototype.stop = function () {
    this.Nh && (this.Nh.cancel(), this.Nh = null);
  }, Object.defineProperty(t.prototype, "pr", {
    get: function get() {
      return null !== this.Nh;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.kh = function (t) {
    var n = this,
        r = this.Fh ? 3e5 : 6e4;
    h("LruGarbageCollector", "Garbage collection scheduled in " + r + "ms"), this.Nh = this.Oo.ei("lru_garbage_collection"
    /* LruGarbageCollection */
    , r, function () {
      return e.__awaiter(n, void 0, void 0, function () {
        var n;
        return e.__generator(this, function (e) {
          switch (e.label) {
            case 0:
              this.Nh = null, this.Fh = !0, e.label = 1;

            case 1:
              return e.trys.push([1, 3,, 7]), [4
              /*yield*/
              , t.xh(this.eo)];

            case 2:
              return e.sent(), [3
              /*break*/
              , 7];

            case 3:
              return wr(n = e.sent()) ? (h("LruGarbageCollector", "Ignoring IndexedDB error during garbage collection: ", n), [3
              /*break*/
              , 6]) : [3
              /*break*/
              , 4];

            case 4:
              return [4
              /*yield*/
              , Cr(n)];

            case 5:
              e.sent(), e.label = 6;

            case 6:
              return [3
              /*break*/
              , 7];

            case 7:
              return [4
              /*yield*/
              , this.kh(t)];

            case 8:
              return e.sent(), [2
              /*return*/
              ];
          }
        });
      });
    });
  }, t;
}(),
    Ur =
/** @class */
function () {
  function t(t, e) {
    this.Mh = t, this.$h = e
    /** Given a percentile of target to collect, returns the number of targets to collect. */
    ;
  }

  return t.prototype.Lh = function (t, e) {
    return this.Mh.so(t).next(function (t) {
      return Math.floor(e / 100 * t);
    });
  },
  /** Returns the nth sequence number, counting in order from the smallest. */
  t.prototype.Oh = function (t, e) {
    var n = this;
    if (0 === e) return en.resolve(an.Qn);
    var r = new kr(e);
    return this.Mh.ye(t, function (t) {
      return r.Eh(t.sequenceNumber);
    }).next(function () {
      return n.Mh.io(t, function (t) {
        return r.Eh(t);
      });
    }).next(function () {
      return r.maxValue;
    });
  },
  /**
   * Removes targets with a sequence number equal to or less than the given upper bound, and removes
   * document associations with those targets.
   */
  t.prototype.ji = function (t, e, n) {
    return this.Mh.ji(t, e, n);
  },
  /**
   * Removes documents that have a sequence number equal to or less than the upper bound and are not
   * otherwise pinned.
   */
  t.prototype.uo = function (t, e) {
    return this.Mh.uo(t, e);
  }, t.prototype.Bh = function (t, e) {
    var n = this;
    return this.$h.Ph === Rr.vh ? (h("LruGarbageCollector", "Garbage collection skipped; disabled"), en.resolve(Pr)) : this.lo(t).next(function (r) {
      return r < n.$h.Ph ? (h("LruGarbageCollector", "Garbage collection skipped; Cache size " + r + " is lower than threshold " + n.$h.Ph), Pr) : n.qh(t, e);
    });
  }, t.prototype.lo = function (t) {
    return this.Mh.lo(t);
  }, t.prototype.qh = function (t, e) {
    var n,
        i,
        o,
        s,
        u,
        a,
        f,
        l = this,
        p = Date.now();
    return this.Lh(t, this.$h.Vh).next(function (e) {
      // Cap at the configured max
      return e > l.$h.gh ? (h("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of " + l.$h.gh + " from " + e), i = l.$h.gh) : i = e, s = Date.now(), l.Oh(t, i);
    }).next(function (r) {
      return n = r, u = Date.now(), l.ji(t, n, e);
    }).next(function (e) {
      return o = e, a = Date.now(), l.uo(t, n);
    }).next(function (t) {
      return f = Date.now(), c() <= r.LogLevel.DEBUG && h("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in " + (s - p) + "ms\n\tDetermined least recently used " + i + " in " + (u - s) + "ms\n\tRemoved " + o + " targets in " + (a - u) + "ms\n\tRemoved " + t + " documents in " + (f - a) + "ms\nTotal Duration: " + (f - p) + "ms"), en.resolve({
        Ih: !0,
        Ah: i,
        Rh: o,
        mh: t
      });
    });
  }, t;
}(),
    Lr =
/** @class */
function () {
  function t(
  /** Manages our in-memory or durable persistence. */
  t, e, n) {
    this.persistence = t, this.Uh = e,
    /**
         * Maps a targetID to data about its target.
         *
         * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
         * of `applyRemoteEvent()` idempotent.
         */
    this.Qh = new W(m),
    /** Maps a target to its targetID. */
    // TODO(wuandy): Evaluate if TargetId can be part of Target.
    this.Wh = new A(function (t) {
      return Xe(t);
    }, $e),
    /**
         * The read time of the last entry processed by `getNewDocumentChanges()`.
         *
         * PORTING NOTE: This is only used for multi-tab synchronization.
         */
    this.jh = k.min(), this.Rn = t.zr(n), this.Kh = t.Jr(), this.Tr = t.Yr(), this.Gh = new sn(this.Kh, this.Rn, this.persistence.Xr()), this.Uh.zh(this.Gh)
    /** Starts the LocalStore. */
    ;
  }

  return t.prototype.start = function () {
    return Promise.resolve();
  },
  /**
   * Tells the LocalStore that the currently authenticated user has changed.
   *
   * In response the local store switches the mutation queue to the new user and
   * returns any resulting document changes.
   */
  // PORTING NOTE: Android and iOS only return the documents affected by the
  // change.
  t.prototype.Hh = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i,
          o = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return n = this.Rn, r = this.Gh, [4
            /*yield*/
            , this.persistence.runTransaction("Handle user change", "readonly", function (e) {
              // Swap out the mutation queue, grabbing the pending mutation batches
              // before and after.
              var i;
              return o.Rn.Ro(e).next(function (s) {
                return i = s, n = o.persistence.zr(t), // Recreate our LocalDocumentsView using the new
                // MutationQueue.
                r = new sn(o.Kh, n, o.persistence.Xr()), n.Ro(e);
              }).next(function (t) {
                for (var n = [], o = [], s = it(), u = 0, a = i // Union the old/new changed keys.
                ; u < a.length; u++) {
                  var c = a[u];
                  n.push(c.batchId);

                  for (var h = 0, f = c.mutations; h < f.length; h++) {
                    var l = f[h];
                    s = s.add(l.key);
                  }
                }

                for (var p = 0, d = t; p < d.length; p++) {
                  var y = d[p];
                  o.push(y.batchId);

                  for (var v = 0, g = y.mutations; v < g.length; v++) {
                    var m = g[v];
                    s = s.add(m.key);
                  }
                } // Return the set of all (potentially) changed documents and the list
                // of mutation batch IDs that were affected by change.


                return r.yn(e, s).next(function (t) {
                  return {
                    Yh: t,
                    Jh: n,
                    Xh: o
                  };
                });
              });
            })];

          case 1:
            return i = e.sent(), [2
            /*return*/
            , (this.Rn = n, this.Gh = r, this.Uh.zh(this.Gh), i)];
        }
      });
    });
  },
  /* Accept locally generated Mutations and commit them to storage. */
  t.prototype.Zh = function (t) {
    var e,
        n = this,
        r = D.now(),
        i = t.reduce(function (t, e) {
      return t.add(e.key);
    }, it());
    return this.persistence.runTransaction("Locally write mutations", "readwrite", function (o) {
      return n.Gh.yn(o, i).next(function (i) {
        e = i;

        for ( // For non-idempotent mutations (such as `FieldValue.increment()`),
        // we record the base state in a separate patch mutation. This is
        // later used to guarantee consistent values and prevents flicker
        // even if the backend sends us an update that already includes our
        // transform.
        var s = [], u = 0, a = t; u < a.length; u++) {
          var c = a[u],
              h = c.Ze(e.get(c.key));
          null != h && // NOTE: The base state should only be applied if there's some
          // existing document to override, so use a Precondition of
          // exists=true
          s.push(new Ne(c.key, h, Pe(h.proto.mapValue), Ie.exists(!0)));
        }

        return n.Rn.wo(o, r, s, t);
      });
    }).then(function (t) {
      var n = t.Ks(e);
      return {
        batchId: t.batchId,
        on: n
      };
    });
  },
  /**
   * Acknowledge the given batch.
   *
   * On the happy path when a batch is acknowledged, the local store will
   *
   *  + remove the batch from the mutation queue;
   *  + apply the changes to the remote document cache;
   *  + recalculate the latency compensated view implied by those changes (there
   *    may be mutations in the queue that affect the documents but haven't been
   *    acknowledged yet); and
   *  + give the changed documents back the sync engine
   *
   * @returns The resulting (modified) documents.
   */
  t.prototype.ta = function (t) {
    var e = this;
    return this.persistence.runTransaction("Acknowledge batch", "readwrite-primary", function (n) {
      var r = t.batch.keys(),
          i = e.Kh.Vi({
        pi: !0
      });
      return e.ea(n, t, i).next(function () {
        return i.apply(n);
      }).next(function () {
        return e.Rn.po(n);
      }).next(function () {
        return e.Gh.yn(n, r);
      });
    });
  },
  /**
   * Remove mutations from the MutationQueue for the specified batch;
   * LocalDocuments will be recalculated.
   *
   * @returns The resulting modified documents.
   */
  t.prototype.sa = function (t) {
    var e = this;
    return this.persistence.runTransaction("Reject batch", "readwrite-primary", function (n) {
      var r;
      return e.Rn.To(n, t).next(function (t) {
        return d(null !== t), r = t.keys(), e.Rn.Po(n, t);
      }).next(function () {
        return e.Rn.po(n);
      }).next(function () {
        return e.Gh.yn(n, r);
      });
    });
  },
  /**
   * Returns the largest (latest) batch id in mutation queue that is pending server response.
   * Returns `BATCHID_UNKNOWN` if the queue is empty.
   */
  t.prototype.Ao = function () {
    var t = this;
    return this.persistence.runTransaction("Get highest unacknowledged batch id", "readonly", function (e) {
      return t.Rn.Ao(e);
    });
  },
  /**
   * Returns the last consistent snapshot processed (used by the RemoteStore to
   * determine whether to buffer incoming snapshots from the backend).
   */
  t.prototype.xi = function () {
    var t = this;
    return this.persistence.runTransaction("Get last remote snapshot version", "readonly", function (e) {
      return t.Tr.xi(e);
    });
  },
  /**
   * Update the "ground-state" (remote) documents. We assume that the remote
   * event reflects any write batches that have been acknowledged or rejected
   * (i.e. we do not re-apply local mutations to updates from this event).
   *
   * LocalDocuments are re-calculated if there are remaining mutations in the
   * queue.
   */
  t.prototype.na = function (e) {
    var n = this,
        r = e.J,
        i = this.Qh;
    return this.persistence.runTransaction("Apply remote event", "readwrite-primary", function (o) {
      var s = n.Kh.Vi({
        pi: !0
      }); // Reset newTargetDataByTargetMap in case this transaction gets re-run.

      i = n.Qh;
      var u = [];
      e.Qt.forEach(function (e, s) {
        var a = i.get(s);

        if (a) {
          // Only update the remote keys if the target is still active. This
          // ensures that we can persist the updated target data along with
          // the updated assignment.
          u.push(n.Tr.Yi(o, e.Xt, s).next(function () {
            return n.Tr.zi(o, e.Yt, s);
          }));
          var c = e.resumeToken; // Update the resume token if the change includes one.

          if (c.G() > 0) {
            var h = a.Z(c, r).X(o.sr);
            i = i.et(s, h), // Update the target data if there are target changes (or if
            // sufficient time has passed since the last update).
            t.ia(a, h, e) && u.push(n.Tr.Ui(o, h));
          }
        }
      });
      var a = J(),
          c = it(); // HACK: The only reason we allow a null snapshot version is so that we
      // can synthesize remote events when we get permission denied errors while
      // trying to resolve the state of a locally cached document that is in
      // limbo.

      if (e.jt.forEach(function (t, e) {
        c = c.add(t);
      }), // Each loop iteration only affects its "own" doc, so it's safe to get all the remote
      // documents in advance in a single call.
      u.push(s.getEntries(o, c).next(function (t) {
        e.jt.forEach(function (i, c) {
          var f = t.get(i); // Note: The order of the steps below is important, since we want
          // to ensure that rejected limbo resolutions (which fabricate
          // NoDocuments with SnapshotVersion.min()) never add documents to
          // cache.

          c instanceof Ue && c.version.isEqual(k.min()) ? ( // NoDocuments with SnapshotVersion.min() are used in manufactured
          // events. We remove these documents from cache since we lost
          // access.
          s.ln(i, r), a = a.et(i, c)) : null == f || c.version.o(f.version) > 0 || 0 === c.version.o(f.version) && f.hasPendingWrites ? (s.un(c, r), a = a.et(i, c)) : h("LocalStore", "Ignoring outdated watch update for ", i, ". Current version:", f.version, " Watch version:", c.version), e.Kt.has(i) && u.push(n.persistence.Fi.co(o, i));
        });
      })), !r.isEqual(k.min())) {
        var f = n.Tr.xi(o).next(function (t) {
          return n.Tr.Li(o, o.sr, r);
        });
        u.push(f);
      }

      return en.nn(u).next(function () {
        return s.apply(o);
      }).next(function () {
        return n.Gh.bn(o, a);
      });
    }).then(function (t) {
      return n.Qh = i, t;
    });
  },
  /**
   * Returns true if the newTargetData should be persisted during an update of
   * an active target. TargetData should always be persisted when a target is
   * being released and should not call this function.
   *
   * While the target is active, TargetData updates can be omitted when nothing
   * about the target has changed except metadata like the resume token or
   * snapshot version. Occasionally it's worth the extra write to prevent these
   * values from getting too stale after a crash, but this doesn't have to be
   * too frequent.
   */
  t.ia = function (t, e, n) {
    // Always persist target data if we don't already have a resume token.
    return d(e.resumeToken.G() > 0), 0 === t.resumeToken.G() || e.J.A() - t.J.A() >= this.ra || n.Yt.size + n.Jt.size + n.Xt.size > 0; // Don't allow resume token changes to be buffered indefinitely. This
    // allows us to be reasonably up-to-date after a crash and avoids needing
    // to loop over all active queries on shutdown. Especially in the browser
    // we may not get time to do anything interesting while the current tab is
    // closing.
  },
  /**
   * Notify local store of the changed views to locally pin documents.
   */
  t.prototype.oa = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i,
          o,
          s,
          u,
          a,
          c,
          f = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return e.trys.push([0, 2,, 3]), [4
            /*yield*/
            , this.persistence.runTransaction("notifyLocalViewChanges", "readwrite", function (e) {
              return en.forEach(t, function (t) {
                return en.forEach(t.xn, function (n) {
                  return f.persistence.Fi.Hi(e, t.targetId, n);
                }).next(function () {
                  return en.forEach(t.Mn, function (n) {
                    return f.persistence.Fi.Ji(e, t.targetId, n);
                  });
                });
              });
            })];

          case 1:
            return e.sent(), [3
            /*break*/
            , 3];

          case 2:
            if (!wr(n = e.sent())) throw n; // If `notifyLocalViewChanges` fails, we did not advance the sequence
            // number for the documents that were included in this transaction.
            // This might trigger them to be deleted earlier than they otherwise
            // would have, but it should not invalidate the integrity of the data.

            return h("LocalStore", "Failed to update sequence numbers: " + n), [3
            /*break*/
            , 3];

          case 3:
            for (r = 0, i = t; r < i.length; r++) {
              o = i[r], s = o.targetId, o.fromCache || (u = this.Qh.get(s), a = u.J, c = u.tt(a), // Advance the last limbo free snapshot version
              this.Qh = this.Qh.et(s, c));
            }

            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Gets the mutation batch after the passed in batchId in the mutation queue
   * or null if empty.
   * @param afterBatchId If provided, the batch to search after.
   * @returns The next mutation or null if there wasn't one.
   */
  t.prototype.ha = function (t) {
    var e = this;
    return this.persistence.runTransaction("Get next mutation batch", "readonly", function (n) {
      return void 0 === t && (t = -1), e.Rn.Io(n, t);
    });
  },
  /**
   * Read the current value of a Document with a given key or null if not
   * found - used for testing.
   */
  t.prototype.aa = function (t) {
    var e = this;
    return this.persistence.runTransaction("read document", "readonly", function (n) {
      return e.Gh.Pn(n, t);
    });
  },
  /**
   * Assigns the given target an internal ID so that its results can be pinned so
   * they don't get GC'd. A target must be allocated in the local store before
   * the store can be used to manage its view.
   *
   * Allocating an already allocated `Target` will return the existing `TargetData`
   * for that `Target`.
   */
  t.prototype.ua = function (t) {
    var e = this;
    return this.persistence.runTransaction("Allocate target", "readwrite", function (n) {
      var r;
      return e.Tr.Gi(n, t).next(function (i) {
        return i ? ( // This target has been listened to previously, so reuse the
        // previous targetID.
        // TODO(mcg): freshen last accessed date?
        r = i, en.resolve(r)) : e.Tr.Ni(n).next(function (i) {
          return r = new B(t, i, 0
          /* Listen */
          , n.sr), e.Tr.Oi(n, r).next(function () {
            return r;
          });
        });
      });
    }).then(function (n) {
      // If Multi-Tab is enabled, the existing target data may be newer than
      // the in-memory data
      var r = e.Qh.get(n.targetId);
      return (null === r || n.J.o(r.J) > 0) && (e.Qh = e.Qh.et(n.targetId, n), e.Wh.set(t, n.targetId)), n;
    });
  },
  /**
   * Returns the TargetData as seen by the LocalStore, including updates that may
   * have not yet been persisted to the TargetCache.
   */
  // Visible for testing.
  t.prototype.Gi = function (t, e) {
    var n = this.Wh.get(e);
    return void 0 !== n ? en.resolve(this.Qh.get(n)) : this.Tr.Gi(t, e);
  },
  /**
   * Unpin all the documents associated with the given target. If
   * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
   * directly removes the associated target data from the target cache.
   *
   * Releasing a non-existing `Target` is a no-op.
   */
  // PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
  t.prototype.ca = function (t, e) {
    var n = this,
        r = this.Qh.get(t),
        i = e ? "readwrite" : "readwrite-primary";
    return this.persistence.runTransaction("Release target", i, function (t) {
      return e ? en.resolve() : n.persistence.Fi.removeTarget(t, r);
    }).then(function () {
      n.Qh = n.Qh.remove(t), n.Wh.delete(r.target);
    });
  },
  /**
   * Runs the specified query against the local store and returns the results,
   * potentially taking advantage of query data from previous executions (such
   * as the set of remote keys).
   *
   * @param usePreviousResults Whether results from previous executions can
   * be used to optimize this query execution.
   */
  t.prototype.la = function (t, e) {
    var n = this,
        r = k.min(),
        i = it();
    return this.persistence.runTransaction("Execute query", "readonly", function (o) {
      return n.Gi(o, t.We()).next(function (t) {
        if (t) return r = t.lastLimboFreeSnapshotVersion, n.Tr.Xi(o, t.targetId).next(function (t) {
          i = t;
        });
      }).next(function () {
        return n.Uh.Sn(o, t, e ? r : k.min(), e ? i : it());
      }).next(function (t) {
        return {
          documents: t,
          _a: i
        };
      });
    });
  }, t.prototype.ea = function (t, e, n) {
    var r = this,
        i = e.batch,
        o = i.keys(),
        s = en.resolve();
    return o.forEach(function (r) {
      s = s.next(function () {
        return n._n(t, r);
      }).next(function (t) {
        var o = t,
            s = e.zs.get(r);
        d(null !== s), (!o || o.version.o(s) < 0) && (o = i.Ke(r, o, e)) && // We use the commitVersion as the readTime rather than the
        // document's updateTime since the updateTime is not advanced
        // for updates that do not modify the underlying document.
        n.un(o, e.Gs);
      });
    }), s.next(function () {
      return r.Rn.Po(t, i);
    });
  }, t.prototype.xh = function (t) {
    var e = this;
    return this.persistence.runTransaction("Collect garbage", "readwrite-primary", function (n) {
      return t.Bh(n, e.Qh);
    });
  }, t;
}();
/** Implements the steps for LRU garbage collection. */

/**
 * The maximum time to leave a resume token buffered without writing it out.
 * This value is arbitrary: it's long enough to avoid several writes
 * (possibly indefinitely if updates come more frequently than this) but
 * short enough that restarting after crashing will still have a pretty
 * recent resume token.
 */


Lr.ra = 3e8;
/**
 * An implementation of LocalStore that provides additional functionality
 * for MultiTabSyncEngine.
 */
// PORTING NOTE: Web only.

var Vr =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this, e, n, r) || this).persistence = e, i.Rn = e.zr(r), i.Kh = e.Jr(), i.Tr = e.Yr(), i;
  }
  /** Starts the LocalStore. */


  return e.__extends(n, t), n.prototype.start = function () {
    return this.fa();
  },
  /** Returns the local view of the documents affected by a mutation batch. */
  n.prototype.da = function (t) {
    var e = this;
    return this.persistence.runTransaction("Lookup mutation documents", "readonly", function (n) {
      return e.Rn.Eo(n, t).next(function (t) {
        return t ? e.Gh.yn(n, t) : en.resolve(null);
      });
    });
  }, n.prototype.wa = function (t) {
    this.Rn.Vo(t);
  }, n.prototype.vr = function (t) {
    this.persistence.vr(t);
  }, n.prototype.Gr = function () {
    return this.persistence.Gr();
  }, n.prototype.Ta = function (t) {
    var e = this,
        n = this.Qh.get(t);
    return n ? Promise.resolve(n.target) : this.persistence.runTransaction("Get target data", "readonly", function (n) {
      return e.Tr.Me(n, t).next(function (t) {
        return t ? t.target : null;
      });
    });
  },
  /**
   * Returns the set of documents that have been updated since the last call.
   * If this is the first call, returns the set of changes since client
   * initialization. Further invocations will return document changes since
   * the point of rejection.
   */
  n.prototype.Ri = function () {
    var t = this;
    return this.persistence.runTransaction("Get new document changes", "readonly", function (e) {
      return t.Kh.Ri(e, t.jh);
    }).then(function (e) {
      var n = e.mi,
          r = e.readTime;
      return t.jh = r, n;
    });
  },
  /**
   * Reads the newest document change from persistence and forwards the internal
   * synchronization marker so that calls to `getNewDocumentChanges()`
   * only return changes that happened after client initialization.
   */
  n.prototype.fa = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t,
          n = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t = this, [4
            /*yield*/
            , this.persistence.runTransaction("Synchronize last document change read time", "readonly", function (t) {
              return n.Kh.Pi(t);
            })];

          case 1:
            return t.jh = e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, n;
}(Lr);
/**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err An error returned by a LocalStore operation.
 * @return A Promise that resolves after we recovered, or the original error.
 */


function Cr(t) {
  return e.__awaiter(this, void 0, void 0, function () {
    return e.__generator(this, function (e) {
      if (t.code !== x.FAILED_PRECONDITION || t.message !== rn) throw t;
      return h("LocalStore", "Unexpectedly lost primary lease"), [2
      /*return*/
      ];
    });
  });
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 */


var qr =
/** @class */
function () {
  function t() {
    // A set of outstanding references to a document sorted by key.
    this.Ea = new Y(Fr.Ia), // A set of outstanding references to a document sorted by target id.
    this.Aa = new Y(Fr.Ra)
    /** Returns true if the reference set contains no references. */
    ;
  }

  return t.prototype._ = function () {
    return this.Ea._();
  },
  /** Adds a reference to the given document key for the given ID. */
  t.prototype.Hi = function (t, e) {
    var n = new Fr(t, e);
    this.Ea = this.Ea.add(n), this.Aa = this.Aa.add(n);
  },
  /** Add references to the given document keys for the given ID. */
  t.prototype.ma = function (t, e) {
    var n = this;
    t.forEach(function (t) {
      return n.Hi(t, e);
    });
  },
  /**
   * Removes a reference to the given document key for the given
   * ID.
   */
  t.prototype.Ji = function (t, e) {
    this.Pa(new Fr(t, e));
  }, t.prototype.Va = function (t, e) {
    var n = this;
    t.forEach(function (t) {
      return n.Ji(t, e);
    });
  },
  /**
   * Clears all references with a given ID. Calls removeRef() for each key
   * removed.
   */
  t.prototype.ga = function (t) {
    var e = this,
        n = L.EMPTY,
        r = new Fr(n, t),
        i = new Fr(n, t + 1),
        o = [];
    return this.Aa.vt([r, i], function (t) {
      e.Pa(t), o.push(t.key);
    }), o;
  }, t.prototype.pa = function () {
    var t = this;
    this.Ea.forEach(function (e) {
      return t.Pa(e);
    });
  }, t.prototype.Pa = function (t) {
    this.Ea = this.Ea.delete(t), this.Aa = this.Aa.delete(t);
  }, t.prototype.ya = function (t) {
    var e = L.EMPTY,
        n = new Fr(e, t),
        r = new Fr(e, t + 1),
        i = it();
    return this.Aa.vt([n, r], function (t) {
      i = i.add(t.key);
    }), i;
  }, t.prototype.tr = function (t) {
    var e = new Fr(t, 0),
        n = this.Ea.Dt(e);
    return null !== n && t.isEqual(n.key);
  }, t;
}(),
    Fr =
/** @class */
function () {
  function t(t, e) {
    this.key = t, this.ba = e
    /** Compare by key then by ID */
    ;
  }

  return t.Ia = function (t, e) {
    return L.P(t.key, e.key) || m(t.ba, e.ba);
  },
  /** Compare by ID then by key */
  t.Ra = function (t, e) {
    return m(t.ba, e.ba) || L.P(t.key, e.key);
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Validates that no arguments were passed in the invocation of functionName.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateNoArgs('myFunction', arguments);
 */


function Mr(t, e) {
  if (0 !== e.length) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() does not support arguments, but was called with " + ii(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has the exact number of arguments.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateExactNumberOfArgs('myFunction', arguments, 2);
 */


function jr(t, e, n) {
  if (e.length !== n) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires " + ii(n, "argument") + ", but was called with " + ii(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has at least the provided number of
 * arguments (but can have many more).
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateAtLeastNumberOfArgs('myFunction', arguments, 2);
 */


function Br(t, e, n) {
  if (e.length < n) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires at least " + ii(n, "argument") + ", but was called with " + ii(e.length, "argument") + ".");
}
/**
 * Validates the invocation of functionName has number of arguments between
 * the values provided.
 *
 * Forward the magic "arguments" variable as second parameter on which the
 * parameter validation is performed:
 * validateBetweenNumberOfArgs('myFunction', arguments, 2, 3);
 */


function Qr(t, e, n, r) {
  if (e.length < n || e.length > r) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires between " + n + " and " + r + " arguments, but was called with " + ii(e.length, "argument") + ".");
}
/**
 * Validates the provided argument is an array and has as least the expected
 * number of elements.
 */

/**
 * Validates the provided positional argument has the native JavaScript type
 * using typeof checks.
 */


function Gr(t, e, n, r) {
  Xr(t, e, ri(n) + " argument", r);
}
/**
 * Validates the provided argument has the native JavaScript type using
 * typeof checks or is undefined.
 */


function zr(t, e, n, r) {
  void 0 !== r && Gr(t, e, n, r);
}
/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks.
 */


function Wr(t, e, n, r) {
  Xr(t, e, n + " option", r);
}
/**
 * Validates the provided named option has the native JavaScript type using
 * typeof checks or is undefined.
 */


function Hr(t, e, n, r) {
  void 0 !== r && Wr(t, e, n, r);
}
/**
 * Validates that the provided named option equals one of the expected values.
 */

/**
 * Validates that the provided named option equals one of the expected values or
 * is undefined.
 */


function Kr(t, e, n, r, i) {
  void 0 !== r && function (t, e, n, r, i) {
    for (var o = [], s = 0, u = i; s < u.length; s++) {
      var a = u[s];
      if (a === r) return;
      o.push(Jr(a));
    }

    var c = Jr(r);
    throw new S(x.INVALID_ARGUMENT, "Invalid value " + c + " provided to function " + t + '() for option "' + n + '". Acceptable values: ' + o.join(", "));
  }(t, 0, n, r, i);
}
/**
 * Validates that the provided argument is a valid enum.
 *
 * @param functionName Function making the validation call.
 * @param enums Array containing all possible values for the enum.
 * @param position Position of the argument in `functionName`.
 * @param argument Argument to validate.
 * @return The value as T if the argument can be converted.
 */


function Yr(t, e, n, r) {
  if (!e.some(function (t) {
    return t === r;
  })) throw new S(x.INVALID_ARGUMENT, "Invalid value " + Jr(r) + " provided to function " + t + "() for its " + ri(n) + " argument. Acceptable values: " + e.join(", "));
  return r;
}
/** Helper to validate the type of a provided input. */


function Xr(t, e, n, r) {
  if (!("object" === e ? $r(r) : "non-empty string" === e ? "string" == typeof r && "" !== r : _typeof(r) === e)) {
    var i = Jr(r);
    throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires its " + n + " to be of type " + e + ", but it was: " + i);
  }
}
/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 */


function $r(t) {
  return "object" == _typeof(t) && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
}
/** Returns a string describing the type / value of the provided input. */


function Jr(t) {
  if (void 0 === t) return "undefined";
  if (null === t) return "null";
  if ("string" == typeof t) return t.length > 20 && (t = t.substring(0, 20) + "..."), JSON.stringify(t);
  if ("number" == typeof t || "boolean" == typeof t) return "" + t;

  if ("object" == _typeof(t)) {
    if (t instanceof Array) return "an array";

    var e =
    /** Hacky method to try to get the constructor name for an object. */
    function (t) {
      if (t.constructor) {
        var e = /function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());
        if (e && e.length > 1) return e[1];
      }

      return null;
    }(t);

    return e ? "a custom " + e + " object" : "an object";
  }

  return "function" == typeof t ? "a function" : p();
}

function Zr(t, e, n) {
  if (void 0 === n) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires a valid " + ri(e) + " argument, but it was undefined.");
}
/**
 * Validates the provided positional argument is an object, and its keys and
 * values match the expected keys and types provided in optionTypes.
 */


function ti(t, e, n) {
  T(e, function (e, r) {
    if (n.indexOf(e) < 0) throw new S(x.INVALID_ARGUMENT, "Unknown option '" + e + "' passed to function " + t + "(). Available options: " + n.join(", "));
  });
}
/**
 * Helper method to throw an error that the provided argument did not pass
 * an instanceof check.
 */


function ei(t, e, n, r) {
  var i = Jr(r);
  return new S(x.INVALID_ARGUMENT, "Function " + t + "() requires its " + ri(n) + " argument to be a " + e + ", but it was: " + i);
}

function ni(t, e, n) {
  if (n <= 0) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires its " + ri(e) + " argument to be a positive number, but it was: " + n + ".");
}
/** Converts a number to its english word representation */


function ri(t) {
  switch (t) {
    case 1:
      return "first";

    case 2:
      return "second";

    case 3:
      return "third";

    default:
      return t + "th";
  }
}
/**
 * Formats the given word as plural conditionally given the preceding number.
 */


function ii(t, e) {
  return t + " " + e + (1 === t ? "" : "s");
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** Helper function to assert Uint8Array is available at runtime. */


function oi() {
  if ("undefined" == typeof Uint8Array) throw new S(x.UNIMPLEMENTED, "Uint8Arrays are not available in this environment.");
}
/** Helper function to assert Base64 functions are available at runtime. */


function si() {
  if ("undefined" == typeof atob) throw new S(x.UNIMPLEMENTED, "Blobs are unavailable in Firestore in this environment.");
}
/**
 * Immutable class holding a blob (binary data).
 * This class is directly exposed in the public API.
 *
 * Note that while you can't hide the constructor in JavaScript code, we are
 * using the hack above to make sure no-one outside this module can call it.
 */


var ui =
/** @class */
function () {
  function t(t) {
    si(), this.va = t;
  }

  return t.fromBase64String = function (e) {
    jr("Blob.fromBase64String", arguments, 1), Gr("Blob.fromBase64String", "string", 1, e), si();

    try {
      return new t(F.fromBase64String(e));
    } catch (e) {
      throw new S(x.INVALID_ARGUMENT, "Failed to construct Blob from Base64 string: " + e);
    }
  }, t.fromUint8Array = function (e) {
    if (jr("Blob.fromUint8Array", arguments, 1), oi(), !(e instanceof Uint8Array)) throw ei("Blob.fromUint8Array", "Uint8Array", 1, e);
    return new t(F.fromUint8Array(e));
  }, t.prototype.toBase64 = function () {
    return jr("Blob.toBase64", arguments, 0), si(), this.va.toBase64();
  }, t.prototype.toUint8Array = function () {
    return jr("Blob.toUint8Array", arguments, 0), oi(), this.va.toUint8Array();
  }, t.prototype.toString = function () {
    return "Blob(base64: " + this.toBase64() + ")";
  }, t.prototype.isEqual = function (t) {
    return this.va.isEqual(t.va);
  }, t;
}(),
    ai = function ai(t) {
  !function (t, e, n, r) {
    if (!(e instanceof Array) || e.length < 1) throw new S(x.INVALID_ARGUMENT, "Function FieldPath() requires its fieldNames argument to be an array with at least " + ii(1, "element") + ".");
  }(0, t);

  for (var e = 0; e < t.length; ++e) {
    if (Gr("FieldPath", "string", e, t[e]), 0 === t[e].length) throw new S(x.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");
  }

  this.Sa = new U(t);
},
    ci =
/** @class */
function (t) {
  /**
   * Creates a FieldPath from the provided field names. If more than one field
   * name is provided, the path will point to a nested field in a document.
   *
   * @param fieldNames A list of field names.
   */
  function n() {
    for (var e = [], n = 0; n < arguments.length; n++) {
      e[n] = arguments[n];
    }

    return t.call(this, e) || this;
  }

  return e.__extends(n, t), n.documentId = function () {
    return n.Da;
  }, n.prototype.isEqual = function (t) {
    if (!(t instanceof n)) throw ei("isEqual", "FieldPath", 1, t);
    return this.Sa.isEqual(t.Sa);
  }, n;
}(ai);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// The objects that are a part of this API are exposed to third-parties as
// compiled javascript so we want to flag our private members with a leading
// underscore to discourage their use.

/**
 * A field class base class that is shared by the lite, full and legacy SDK,
 * which supports shared code that deals with FieldPaths.
 */

/**
 * Internal Note: The backend doesn't technically support querying by
 * document ID. Instead it queries by the entire document name (full path
 * included), but in the cases we currently support documentId(), the net
 * effect is the same.
 */


ci.Da = new ci(U.O().N());
/**
 * Matches any characters in a field path string that are reserved.
 */

var hi = new RegExp("[~\\*/\\[\\]]"),
    fi = function fi() {
  /** A pointer to the implementing class. */
  this.Ca = this;
},
    li =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this) || this).Fa = e, n;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    if (2
    /* MergeSet */
    !== t.$a) throw 1
    /* Update */
    === t.$a ? t.ka(this.Fa + "() can only appear at the top level of your update data") : t.ka(this.Fa + "() cannot be used with set() unless you pass {merge:true}"); // No transform to add for a delete, but we need to add it to our
    // fieldMask so it gets deleted.

    return t.Oe.push(t.path), null;
  }, n.prototype.isEqual = function (t) {
    return t instanceof n;
  }, n;
}(fi),
    pi =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this) || this).Fa = e, n;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    return new _e(t.path, de.instance);
  }, n.prototype.isEqual = function (t) {
    return t instanceof n;
  }, n;
}(fi),
    di =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).Fa = e, r.xa = n, r;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    // Although array transforms are used with writes, the actual elements
    // being uniomed or removed are not considered writes since they cannot
    // contain any FieldValue sentinels, etc.
    var e = new Ai({
      $a: 3
      /* Argument */
      ,
      methodName: this.Fa,
      Ma: !0
    }, t.s, t.serializer, t.ignoreUndefinedProperties),
        n = this.xa.map(function (t) {
      return Si(t, e);
    }),
        r = new ye(n);
    return new _e(t.path, r);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(fi),
    yi =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).Fa = e, r.xa = n, r;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    // Although array transforms are used with writes, the actual elements
    // being unioned or removed are not considered writes since they cannot
    // contain any FieldValue sentinels, etc.
    var e = new Ai({
      $a: 3
      /* Argument */
      ,
      methodName: this.Fa,
      Ma: !0
    }, t.s, t.serializer, t.ignoreUndefinedProperties),
        n = this.xa.map(function (t) {
      return Si(t, e);
    }),
        r = new ve(n);
    return new _e(t.path, r);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(fi),
    vi =
/** @class */
function (t) {
  function n(e, n) {
    var r = this;
    return (r = t.call(this) || this).Fa = e, r.La = n, r;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    var e = new Ai({
      $a: 3
      /* Argument */
      ,
      methodName: this.Fa
    }, t.s, t.serializer, t.ignoreUndefinedProperties),
        n = Si(this.La, e),
        r = new ge(t.serializer, n);
    return new _e(t.path, r);
  }, n.prototype.isEqual = function (t) {
    // TODO(mrschmidt): Implement isEquals
    return this === t;
  }, n;
}(fi),
    gi =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.delete = function () {
    return Mr("FieldValue.delete", arguments), new mi(new li("FieldValue.delete"));
  }, n.serverTimestamp = function () {
    return Mr("FieldValue.serverTimestamp", arguments), new mi(new pi("FieldValue.serverTimestamp"));
  }, n.arrayUnion = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    } // NOTE: We don't actually parse the data until it's used in set() or
    // update() since we'd need the Firestore instance to do this.


    return Br("FieldValue.arrayUnion", arguments, 1), new mi(new di("FieldValue.arrayUnion", t));
  }, n.arrayRemove = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    } // NOTE: We don't actually parse the data until it's used in set() or
    // update() since we'd need the Firestore instance to do this.


    return Br("FieldValue.arrayRemove", arguments, 1), new mi(new yi("FieldValue.arrayRemove", t));
  }, n.increment = function (t) {
    return Gr("FieldValue.increment", "number", 1, t), jr("FieldValue.increment", arguments, 1), new mi(new vi("FieldValue.increment", t));
  }, n;
}(fi),
    mi =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this) || this).Ca = e, n.Fa = e.Fa, n;
  }

  return e.__extends(n, t), n.prototype.Na = function (t) {
    return this.Ca.Na(t);
  }, n.prototype.isEqual = function (t) {
    return t instanceof n && this.Ca.isEqual(t.Ca);
  }, n;
}(gi),
    wi =
/** @class */
function () {
  function t(t, e) {
    if (jr("GeoPoint", arguments, 2), Gr("GeoPoint", "number", 1, t), Gr("GeoPoint", "number", 2, e), !isFinite(t) || t < -90 || t > 90) throw new S(x.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
    if (!isFinite(e) || e < -180 || e > 180) throw new S(x.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + e);
    this.Oa = t, this.Ba = e;
  }

  return Object.defineProperty(t.prototype, "latitude", {
    /**
     * Returns the latitude of this geo point, a number between -90 and 90.
     */
    get: function get() {
      return this.Oa;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "longitude", {
    /**
     * Returns the longitude of this geo point, a number between -180 and 180.
     */
    get: function get() {
      return this.Ba;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.isEqual = function (t) {
    return this.Oa === t.Oa && this.Ba === t.Ba;
  },
  /**
   * Actually private to JS consumers of our API, so this function is prefixed
   * with an underscore.
   */
  t.prototype.T = function (t) {
    return m(this.Oa, t.Oa) || m(this.Ba, t.Ba);
  }, t;
}();
/**
 * Parses a field path string into a FieldPath, treating dots as separators.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * An opaque base class for FieldValue sentinel objects in our public API that
 * is shared between the full, lite and legacy SDK.
 */

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function _i(t) {
  return new Ft(t,
  /* useProto3Json= */
  !0);
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var bi = /^__.*__$/,
    Ii = function Ii(t, e, n) {
  this.qa = t, this.Ua = e, this.Qa = n;
},
    Ei =
/** @class */
function () {
  function t(t, e, n) {
    this.data = t, this.Oe = e, this.fieldTransforms = n;
  }

  return t.prototype.Wa = function (t, e) {
    var n = [];
    return null !== this.Oe ? n.push(new Ne(t, this.data, this.Oe, e)) : n.push(new Te(t, this.data, e)), this.fieldTransforms.length > 0 && n.push(new Ae(t, this.fieldTransforms)), n;
  }, t;
}(),
    Ti =
/** @class */
function () {
  function t(t, e, n) {
    this.data = t, this.Oe = e, this.fieldTransforms = n;
  }

  return t.prototype.Wa = function (t, e) {
    var n = [new Ne(t, this.data, this.Oe, e)];
    return this.fieldTransforms.length > 0 && n.push(new Ae(t, this.fieldTransforms)), n;
  }, t;
}();
/**
 * A reference to a document in a Firebase project.
 *
 * This class serves as a common base class for the public DocumentReferences
 * exposed in the lite, full and legacy SDK.
 */


function Ni(t) {
  switch (t) {
    case 0
    /* Set */
    : // fall through

    case 2
    /* MergeSet */
    : // fall through

    case 1
    /* Update */
    :
      return !0;

    case 3
    /* Argument */
    :
    case 4
    /* ArrayArgument */
    :
      return !1;

    default:
      throw p();
  }
}
/** A "context" object passed around while parsing user data. */


var Ai =
/** @class */
function () {
  /**
   * Initializes a ParseContext with the given source and path.
   *
   * @param settings The settings for the parser.
   * @param databaseId The database ID of the Firestore instance.
   * @param serializer The serializer to use to generate the Value proto.
   * @param ignoreUndefinedProperties Whether to ignore undefined properties
   * rather than throw.
   * @param fieldTransforms A mutable list of field transforms encountered while
   *     parsing the data.
   * @param fieldMask A mutable list of field paths encountered while parsing
   *     the data.
   *
   * TODO(b/34871131): We don't support array paths right now, so path can be
   * null to indicate the context represents any location within an array (in
   * which case certain features will not work and errors will be somewhat
   * compromised).
   */
  function t(t, e, n, r, i, o) {
    this.settings = t, this.s = e, this.serializer = n, this.ignoreUndefinedProperties = r, // Minor hack: If fieldTransforms is undefined, we assume this is an
    // external call and we need to validate the entire path.
    void 0 === i && this.ja(), this.fieldTransforms = i || [], this.Oe = o || [];
  }

  return Object.defineProperty(t.prototype, "path", {
    get: function get() {
      return this.settings.path;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "$a", {
    get: function get() {
      return this.settings.$a;
    },
    enumerable: !0,
    configurable: !0
  }),
  /** Returns a new context with the specified settings overwritten. */
  t.prototype.Ka = function (e) {
    return new t(Object.assign(Object.assign({}, this.settings), e), this.s, this.serializer, this.ignoreUndefinedProperties, this.fieldTransforms, this.Oe);
  }, t.prototype.Ga = function (t) {
    var e,
        n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        r = this.Ka({
      path: n,
      Ma: !1
    });
    return r.za(t), r;
  }, t.prototype.Ha = function (t) {
    var e,
        n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t),
        r = this.Ka({
      path: n,
      Ma: !1
    });
    return r.ja(), r;
  }, t.prototype.Ya = function (t) {
    // TODO(b/34871131): We don't support array paths right now; so make path
    // undefined.
    return this.Ka({
      path: void 0,
      Ma: !0
    });
  }, t.prototype.ka = function (t) {
    var e = !this.path || this.path._() ? "" : " (found in field " + this.path.toString() + ")";
    return new S(x.INVALID_ARGUMENT, "Function " + this.settings.methodName + "() called with invalid data. " + t + e);
  },
  /** Returns 'true' if 'fieldPath' was traversed when creating this context. */
  t.prototype.contains = function (t) {
    return void 0 !== this.Oe.find(function (e) {
      return t.D(e);
    }) || void 0 !== this.fieldTransforms.find(function (e) {
      return t.D(e.field);
    });
  }, t.prototype.ja = function () {
    // TODO(b/34871131): Remove null check once we have proper paths for fields
    // within arrays.
    if (this.path) for (var t = 0; t < this.path.length; t++) {
      this.za(this.path.get(t));
    }
  }, t.prototype.za = function (t) {
    if (0 === t.length) throw this.ka("Document fields must not be empty");
    if (Ni(this.$a) && bi.test(t)) throw this.ka('Document fields cannot begin and end with "__"');
  }, t;
}(),
    xi =
/** @class */
function () {
  function t(t, e, n) {
    this.s = t, this.ignoreUndefinedProperties = e, this.serializer = n || _i(t)
    /** Parse document data from a set() call. */
    ;
  }

  return t.prototype.Ja = function (t, e, n) {
    void 0 === n && (n = {});
    var r = this.Xa(n.merge || n.mergeFields ? 2
    /* MergeSet */
    : 0
    /* Set */
    , t);
    Pi("Data must be an object, but it was:", r, e);
    var i,
        o,
        s = Di(e, r);
    if (n.merge) i = new we(r.Oe), o = r.fieldTransforms;else if (n.mergeFields) {
      for (var u = [], a = 0, c = n.mergeFields; a < c.length; a++) {
        var h = c[a],
            f = void 0;
        if (h instanceof ai) f = h.Sa;else {
          if ("string" != typeof h) throw p();
          f = Oi(t, h);
        }
        if (!r.contains(f)) throw new S(x.INVALID_ARGUMENT, "Field '" + f + "' is specified in your field mask but missing from your input data.");
        Ui(u, f) || u.push(f);
      }

      i = new we(u), o = r.fieldTransforms.filter(function (t) {
        return i.ze(t.field);
      });
    } else i = null, o = r.fieldTransforms;
    return new Ei(new De(s), i, o);
  },
  /** Parse update data from an update() call. */
  t.prototype.Za = function (t, e) {
    var n = this.Xa(1
    /* Update */
    , t);
    Pi("Data must be an object, but it was:", n, e);
    var r = [],
        i = new ke();
    T(e, function (e, o) {
      var s = Oi(t, e),
          u = n.Ha(s);
      if (o instanceof fi && o.Ca instanceof li) // Add it to the field mask, but don't add anything to updateData.
        r.push(s);else {
        var a = Si(o, u);
        null != a && (r.push(s), i.set(s, a));
      }
    });
    var o = new we(r);
    return new Ti(i.ss(), o, n.fieldTransforms);
  },
  /** Parse update data from a list of field/value arguments. */
  t.prototype.tu = function (t, e, n, r) {
    var i = this.Xa(1
    /* Update */
    , t),
        o = [Ri(t, e)],
        s = [n];
    if (r.length % 2 != 0) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() needs to be called with an even number of arguments that alternate between field names and values.");

    for (var u = 0; u < r.length; u += 2) {
      o.push(Ri(t, r[u])), s.push(r[u + 1]);
    } // We iterate in reverse order to pick the last value for a field if the
    // user specified the field multiple times.


    for (var a = [], c = new ke(), h = o.length - 1; h >= 0; --h) {
      if (!Ui(a, o[h])) {
        var f = o[h],
            l = s[h],
            p = i.Ha(f);
        if (l instanceof fi && l.Ca instanceof li) // Add it to the field mask, but don't add anything to updateData.
          a.push(f);else {
          var d = Si(l, p);
          null != d && (a.push(f), c.set(f, d));
        }
      }
    }

    var y = new we(a);
    return new Ti(c.ss(), y, i.fieldTransforms);
  },
  /** Creates a new top-level parse context. */
  t.prototype.Xa = function (t, e) {
    return new Ai({
      $a: t,
      methodName: e,
      path: U.k,
      Ma: !1
    }, this.s, this.serializer, this.ignoreUndefinedProperties);
  },
  /**
   * Parse a "query value" (e.g. value in a where filter or a value in a cursor
   * bound).
   *
   * @param allowArrays Whether the query value is an array that may directly
   * contain additional arrays (e.g. the operand of an `in` query).
   */
  t.prototype.eu = function (t, e, n) {
    return void 0 === n && (n = !1), Si(e, this.Xa(n ? 4
    /* ArrayArgument */
    : 3
    /* Argument */
    , t));
  }, t;
}();
/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */

/**
 * Parses user data to Protobuf Values.
 *
 * @param input Data to be parsed.
 * @param context A context object representing the current path being parsed,
 * the source of the data being parsed, etc.
 * @return The parsed value, or null if the value was a FieldValue sentinel
 * that should not be included in the resulting parsed data.
 */


function Si(t, e) {
  if (ki(t)) return Pi("Unsupported field value:", e, t), Di(t, e);
  if (t instanceof fi) // FieldValues usually parse into transforms (except FieldValue.delete())
    // in which case we do not want to include this field in our parsed data
    // (as doing so will overwrite the field directly prior to the transform
    // trying to transform it). So we don't add this location to
    // context.fieldMask and we return null as our parsing result.

    /**
     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
     * context.fieldTransforms.
     */
    return function (t, e) {
      // Sentinels are only supported with writes, and not within arrays.
      if (!Ni(e.$a)) throw e.ka(t.Fa + "() can only be used with update() and set()");
      if (!e.path) throw e.ka(t.Fa + "() is not currently supported inside arrays");
      var n = t.Na(e);
      n && e.fieldTransforms.push(n);
    }(t, e), null;

  if ( // If context.path is null we are inside an array and we don't support
  // field mask paths more granular than the top-level array.
  e.path && e.Oe.push(e.path), t instanceof Array) {
    // TODO(b/34871131): Include the path containing the array in the error
    // message.
    // In the case of IN queries, the parsed data is an array (representing
    // the set of values to be included for the IN query) that may directly
    // contain additional arrays (each representing an individual field
    // value), so we disable this validation.
    if (e.settings.Ma && 4
    /* ArrayArgument */
    !== e.$a) throw e.ka("Nested arrays are not supported");
    return function (t, e) {
      for (var n = [], r = 0, i = 0, o = t; i < o.length; i++) {
        var s = Si(o[i], e.Ya(r));
        null == s && ( // Just include nulls in the array for fields being replaced with a
        // sentinel.
        s = {
          nullValue: "NULL_VALUE"
        }), n.push(s), r++;
      }

      return {
        arrayValue: {
          values: n
        }
      };
    }(t, e);
  }

  return function (t, e) {
    if (null === t) return {
      nullValue: "NULL_VALUE"
    };
    if ("number" == typeof t) return function (t, e) {
      return q(e) ? Mt(e) : jt(t, e);
    }(e.serializer, t);
    if ("boolean" == typeof t) return {
      booleanValue: t
    };
    if ("string" == typeof t) return {
      stringValue: t
    };

    if (t instanceof Date) {
      var n = D.fromDate(t);
      return {
        timestampValue: Bt(e.serializer, n)
      };
    }

    if (t instanceof D) {
      // Firestore backend truncates precision down to microseconds. To ensure
      // offline mode works the same with regards to truncation, perform the
      // truncation immediately without waiting for the backend to do that.
      var r = new D(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
      return {
        timestampValue: Bt(e.serializer, r)
      };
    }

    if (t instanceof wi) return {
      geoPointValue: {
        latitude: t.latitude,
        longitude: t.longitude
      }
    };
    if (t instanceof ui) return {
      bytesValue: Qt(e.serializer, t)
    };

    if (t instanceof Ii) {
      var i = e.s,
          o = t.qa;
      if (!o.isEqual(i)) throw e.ka("Document reference is for database " + o.projectId + "/" + o.database + " but should be for database " + i.projectId + "/" + i.database);
      return {
        referenceValue: Ht(t.qa || e.s, t.Ua.path)
      };
    }

    if (void 0 === t && e.ignoreUndefinedProperties) return null;
    throw e.ka("Unsupported field value: " + Jr(t));
  }(t, e);
}

function Di(t, e) {
  var n = {};
  return N(t) ? // If we encounter an empty object, we explicitly add it to the update
  // mask to ensure that the server creates a map entry.
  e.path && e.path.length > 0 && e.Oe.push(e.path) : T(t, function (t, r) {
    var i = Si(r, e.Ga(t));
    null != i && (n[t] = i);
  }), {
    mapValue: {
      fields: n
    }
  };
}

function ki(t) {
  return !("object" != _typeof(t) || null === t || t instanceof Array || t instanceof Date || t instanceof D || t instanceof wi || t instanceof ui || t instanceof Ii || t instanceof fi);
}

function Pi(t, e, n) {
  if (!ki(n) || !$r(n)) {
    var r = Jr(n);
    throw "an object" === r ? e.ka(t + " a custom object") : e.ka(t + " " + r);
  }
}
/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */


function Ri(t, e) {
  if (e instanceof ai) return e.Sa;
  if ("string" == typeof e) return Oi(t, e);
  throw new S(x.INVALID_ARGUMENT, "Function " + t + "() called with invalid data. Field path arguments must be of type string or FieldPath.");
}
/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName The publicly visible method name
 * @param path The dot-separated string form of a field path which will be split
 * on dots.
 */


function Oi(t, n) {
  try {
    return function (t) {
      if (t.search(hi) >= 0) throw new S(x.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not contain '~', '*', '/', '[', or ']'");

      try {
        return new (ci.bind.apply(ci, e.__spreadArrays([void 0], t.split("."))))();
      } catch (e) {
        throw new S(x.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
      }
    }(n).Sa;
  } catch (n) {
    var r = (i = n) instanceof Error ? i.message : i.toString();
    throw new S(x.INVALID_ARGUMENT, "Function " + t + "() called with invalid data. " + r);
  }
  /**
  * Extracts the message from a caught exception, which should be an Error object
  * though JS doesn't guarantee that.
  */


  var i;
  /** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */
}

function Ui(t, e) {
  return t.some(function (t) {
    return t.isEqual(e);
  });
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Simple wrapper around a nullable UID. Mostly exists to make code more
 * readable.
 */


var Li =
/** @class */
function () {
  function t(t) {
    this.uid = t;
  }

  return t.prototype.fo = function () {
    return null != this.uid;
  },
  /**
   * Returns a key representing this user, suitable for inclusion in a
   * dictionary.
   */
  t.prototype.su = function () {
    return this.fo() ? "uid:" + this.uid : "anonymous-user";
  }, t.prototype.isEqual = function (t) {
    return t.uid === this.uid;
  }, t;
}();
/** A user with a null UID. */


Li.UNAUTHENTICATED = new Li(null), // TODO(mikelehen): Look into getting a proper uid-equivalent for
// non-FirebaseAuth providers.
Li.nu = new Li("google-credentials-uid"), Li.iu = new Li("first-party-uid");
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var Vi = function Vi(t, e) {
  this.user = e, this.type = "OAuth", this.ru = {}, // Set the headers using Object Literal notation to avoid minification
  this.ru.Authorization = "Bearer " + t;
},
    Ci =
/** @class */
function () {
  function t() {
    /**
     * Stores the listener registered with setChangeListener()
     * This isn't actually necessary since the UID never changes, but we use this
     * to verify the listen contract is adhered to in tests.
     */
    this.ou = null;
  }

  return t.prototype.getToken = function () {
    return Promise.resolve(null);
  }, t.prototype.hu = function () {}, t.prototype.au = function (t) {
    this.ou = t, // Fire with initial user.
    t(Li.UNAUTHENTICATED);
  }, t.prototype.uu = function () {
    this.ou = null;
  }, t;
}(),
    qi =
/** @class */
function () {
  function t(t) {
    var e = this;
    /**
     * The auth token listener registered with FirebaseApp, retained here so we
     * can unregister it.
     */

    this.cu = null,
    /** Tracks the current User. */
    this.currentUser = Li.UNAUTHENTICATED, this.lu = !1,
    /**
         * Counter used to detect if the token changed while a getToken request was
         * outstanding.
         */
    this._u = 0,
    /** The listener registered with setChangeListener(). */
    this.ou = null, this.forceRefresh = !1, this.cu = function () {
      e._u++, e.currentUser = e.fu(), e.lu = !0, e.ou && e.ou(e.currentUser);
    }, this._u = 0, this.auth = t.getImmediate({
      optional: !0
    }), this.auth ? this.auth.addAuthTokenListener(this.cu) : ( // if auth is not available, invoke tokenListener once with null token
    this.cu(null), t.get().then(function (t) {
      e.auth = t, e.cu && // tokenListener can be removed by removeChangeListener()
      e.auth.addAuthTokenListener(e.cu);
    }, function () {}));
  }

  return t.prototype.getToken = function () {
    var t = this,
        e = this._u,
        n = this.forceRefresh; // Take note of the current value of the tokenCounter so that this method
    // can fail (with an ABORTED error) if there is a token change while the
    // request is outstanding.

    return this.forceRefresh = !1, this.auth ? this.auth.getToken(n).then(function (n) {
      // Cancel the request since the token changed while the request was
      // outstanding so the response is potentially for a previous user (which
      // user, we can't be sure).
      return t._u !== e ? (h("FirebaseCredentialsProvider", "getToken aborted due to token change."), t.getToken()) : n ? (d("string" == typeof n.accessToken), new Vi(n.accessToken, t.currentUser)) : null;
    }) : Promise.resolve(null);
  }, t.prototype.hu = function () {
    this.forceRefresh = !0;
  }, t.prototype.au = function (t) {
    this.ou = t, // Fire the initial event
    this.lu && t(this.currentUser);
  }, t.prototype.uu = function () {
    this.auth && this.auth.removeAuthTokenListener(this.cu), this.cu = null, this.ou = null;
  }, // Auth.getUid() can return null even with a user logged in. It is because
  // getUid() is synchronous, but the auth code populating Uid is asynchronous.
  // This method should only be called in the AuthTokenListener callback
  // to guarantee to get the actual user.
  t.prototype.fu = function () {
    var t = this.auth && this.auth.getUid();
    return d(null === t || "string" == typeof t), new Li(t);
  }, t;
}(),
    Fi =
/** @class */
function () {
  function t(t, e) {
    this.du = t, this.wu = e, this.type = "FirstParty", this.user = Li.iu;
  }

  return Object.defineProperty(t.prototype, "ru", {
    get: function get() {
      var t = {
        "X-Goog-AuthUser": this.wu
      },
          e = this.du.auth.Tu([]);
      return e && (t.Authorization = e), t;
    },
    enumerable: !0,
    configurable: !0
  }), t;
}(),
    Mi =
/** @class */
function () {
  function t(t, e) {
    this.du = t, this.wu = e;
  }

  return t.prototype.getToken = function () {
    return Promise.resolve(new Fi(this.du, this.wu));
  }, t.prototype.au = function (t) {
    // Fire with initial uid.
    t(Li.iu);
  }, t.prototype.uu = function () {}, t.prototype.hu = function () {}, t;
}(),
    ji =
/** @class */
function () {
  function t(t, e, n, r, i, o) {
    this.Wn = t, this.Eu = n, this.Iu = r, this.Au = i, this.listener = o, this.state = 0
    /* Initial */
    ,
    /**
         * A close count that's incremented every time the stream is closed; used by
         * getCloseGuardedDispatcher() to invalidate callbacks that happen after
         * close.
         */
    this.Ru = 0, this.mu = null, this.stream = null, this.Zo = new hn(t, e)
    /**
    * Returns true if start() has been called and no error has occurred. True
    * indicates the stream is open or in the process of opening (which
    * encompasses respecting backoff, getting auth tokens, and starting the
    * actual RPC). Use isOpen() to determine if the stream is open and ready for
    * outbound requests.
    */
    ;
  }

  return t.prototype.Pu = function () {
    return 1
    /* Starting */
    === this.state || 2
    /* Open */
    === this.state || 4
    /* Backoff */
    === this.state;
  },
  /**
   * Returns true if the underlying RPC is open (the onOpen() listener has been
   * called) and the stream is ready for outbound requests.
   */
  t.prototype.Vu = function () {
    return 2
    /* Open */
    === this.state;
  },
  /**
   * Starts the RPC. Only allowed if isStarted() returns false. The stream is
   * not immediately ready for use: onOpen() will be invoked when the RPC is
   * ready for outbound requests, at which point isOpen() will return true.
   *
   * When start returns, isStarted() will return true.
   */
  t.prototype.start = function () {
    3
    /* Error */
    !== this.state ? this.auth() : this.gu();
  },
  /**
   * Stops the RPC. This call is idempotent and allowed regardless of the
   * current isStarted() state.
   *
   * When stop returns, isStarted() and isOpen() will both return false.
   */
  t.prototype.stop = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.Pu() ? [4
            /*yield*/
            , this.close(0
            /* Initial */
            )] : [3
            /*break*/
            , 2];

          case 1:
            t.sent(), t.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * After an error the stream will usually back off on the next attempt to
   * start it. If the error warrants an immediate restart of the stream, the
   * sender can use this to indicate that the receiver should not back off.
   *
   * Each error will call the onClose() listener. That function can decide to
   * inhibit backoff if required.
   */
  t.prototype.pu = function () {
    this.state = 0
    /* Initial */
    , this.Zo.reset();
  },
  /**
   * Marks this stream as idle. If no further actions are performed on the
   * stream for one minute, the stream will automatically close itself and
   * notify the stream's onClose() handler with Status.OK. The stream will then
   * be in a !isStarted() state, requiring the caller to start the stream again
   * before further use.
   *
   * Only streams that are in state 'Open' can be marked idle, as all other
   * states imply pending network operations.
   */
  t.prototype.yu = function () {
    var t = this; // Starts the idle time if we are in state 'Open' and are not yet already
    // running a timer (in which case the previous idle timeout still applies).

    this.Vu() && null === this.mu && (this.mu = this.Wn.ei(this.Eu, 6e4, function () {
      return t.bu();
    }));
  },
  /** Sends a message to the underlying stream. */
  t.prototype.vu = function (t) {
    this.Su(), this.stream.send(t);
  },
  /** Called by the idle timer when the stream should close due to inactivity. */
  t.prototype.bu = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        return this.Vu() ? [2
        /*return*/
        , this.close(0
        /* Initial */
        )] : [2
        /*return*/
        ];
      });
    });
  },
  /** Marks the stream as active again. */
  t.prototype.Su = function () {
    this.mu && (this.mu.cancel(), this.mu = null);
  },
  /**
   * Closes the stream and cleans up as necessary:
   *
   * * closes the underlying GRPC stream;
   * * calls the onClose handler with the given 'error';
   * * sets internal stream state to 'finalState';
   * * adjusts the backoff timer based on the error
   *
   * A new stream can be opened by calling start().
   *
   * @param finalState the intended state of the stream after closing.
   * @param error the error the connection was closed with.
   */
  t.prototype.close = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            // Notify the listener that the stream closed.
            // Cancel any outstanding timers (they're guaranteed not to execute).
            return this.Su(), this.Zo.cancel(), // Invalidates any stream-related callbacks (e.g. from auth or the
            // underlying stream), guaranteeing they won't execute.
            this.Ru++, 3
            /* Error */
            !== t ? // If this is an intentional close ensure we don't delay our next connection attempt.
            this.Zo.reset() : n && n.code === x.RESOURCE_EXHAUSTED ? ( // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
            f(n.toString()), f("Using maximum backoff delay to prevent overloading the backend."), this.Zo.Xn()) : n && n.code === x.UNAUTHENTICATED && // "unauthenticated" error means the token was rejected. Try force refreshing it in case it
            // just expired.
            this.Au.hu(), // Clean up the underlying stream because we are no longer interested in events.
            null !== this.stream && (this.Du(), this.stream.close(), this.stream = null), // This state must be assigned before calling onClose() to allow the callback to
            // inhibit backoff or otherwise manipulate the state in its non-started state.
            this.state = t, [4
            /*yield*/
            , this.listener.Cu(n)];

          case 1:
            // Cancel any outstanding timers (they're guaranteed not to execute).
            // Notify the listener that the stream closed.
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Can be overridden to perform additional cleanup before the stream is closed.
   * Calling super.tearDown() is not required.
   */
  t.prototype.Du = function () {}, t.prototype.auth = function () {
    var t = this;
    this.state = 1
    /* Starting */
    ;
    var e = this.Fu(this.Ru),
        n = this.Ru; // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.

    this.Au.getToken().then(function (e) {
      // Stream can be stopped while waiting for authentication.
      // TODO(mikelehen): We really should just use dispatchIfNotClosed
      // and let this dispatch onto the queue, but that opened a spec test can
      // of worms that I don't want to deal with in this PR.
      t.Ru === n && // Normally we'd have to schedule the callback on the AsyncQueue.
      // However, the following calls are safe to be called outside the
      // AsyncQueue since they don't chain asynchronous calls
      t.Nu(e);
    }, function (n) {
      e(function () {
        var e = new S(x.UNKNOWN, "Fetching auth token failed: " + n.message);
        return t.$u(e);
      });
    });
  }, t.prototype.Nu = function (t) {
    var e = this,
        n = this.Fu(this.Ru);
    this.stream = this.ku(t), this.stream.xu(function () {
      n(function () {
        return e.state = 2
        /* Open */
        , e.listener.xu();
      });
    }), this.stream.Cu(function (t) {
      n(function () {
        return e.$u(t);
      });
    }), this.stream.onMessage(function (t) {
      n(function () {
        return e.onMessage(t);
      });
    });
  }, t.prototype.gu = function () {
    var t = this;
    this.state = 4
    /* Backoff */
    , this.Zo.Zn(function () {
      return e.__awaiter(t, void 0, void 0, function () {
        return e.__generator(this, function (t) {
          return this.state = 0
          /* Initial */
          , this.start(), [2
          /*return*/
          ];
        });
      });
    });
  }, // Visible for tests
  t.prototype.$u = function (t) {
    // In theory the stream could close cleanly, however, in our current model
    // we never expect this to happen because if we stop a stream ourselves,
    // this callback will never be called. To prevent cases where we retry
    // without a backoff accidentally, we set the stream to error in all cases.
    return h("PersistentStream", "close with error: " + t), this.stream = null, this.close(3
    /* Error */
    , t);
  },
  /**
   * Returns a "dispatcher" function that dispatches operations onto the
   * AsyncQueue but only runs them if closeCount remains unchanged. This allows
   * us to turn auth / stream callbacks into no-ops if the stream is closed /
   * re-opened, etc.
   */
  t.prototype.Fu = function (t) {
    var e = this;
    return function (n) {
      e.Wn.Sr(function () {
        return e.Ru === t ? n() : (h("PersistentStream", "stream callback skipped by getCloseGuardedDispatcher."), Promise.resolve());
      });
    };
  }, t;
}(),
    Bi =
/** @class */
function (t) {
  function n(e, n, r, i, o) {
    var s = this;
    return (s = t.call(this, e, "listen_stream_connection_backoff"
    /* ListenStreamConnectionBackoff */
    , "listen_stream_idle"
    /* ListenStreamIdle */
    , n, r, o) || this).serializer = i, s;
  }

  return e.__extends(n, t), n.prototype.ku = function (t) {
    return this.Iu.Mu("Listen", t);
  }, n.prototype.onMessage = function (t) {
    // A successful response means the stream is healthy
    this.Zo.reset();

    var e = function (t, e) {
      var n;

      if ("targetChange" in e) {
        e.targetChange; // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
        // if unset

        var r = function (t) {
          return "NO_CHANGE" === t ? 0
          /* NoChange */
          : "ADD" === t ? 1
          /* Added */
          : "REMOVE" === t ? 2
          /* Removed */
          : "CURRENT" === t ? 3
          /* Current */
          : "RESET" === t ? 4
          /* Reset */
          : p();
        }(e.targetChange.targetChangeType || "NO_CHANGE"),
            i = e.targetChange.targetIds || [],
            o = Gt(t, e.targetChange.resumeToken),
            s = e.targetChange.cause,
            u = s && function (t) {
          var e = void 0 === t.code ? x.UNKNOWN : z(t.code);
          return new S(e, t.message || "");
        }(s);

        n = new dt(r, i, o, u || null);
      } else if ("documentChange" in e) {
        e.documentChange;
        var a = e.documentChange;
        a.document, a.document.name, a.document.updateTime;
        var c = Xt(t, a.document.name),
            h = Wt(a.document.updateTime),
            f = new De({
          mapValue: {
            fields: a.document.fields
          }
        }),
            l = new Oe(c, h, f, {}),
            d = a.targetIds || [],
            y = a.removedTargetIds || [];
        n = new lt(d, y, l.key, l);
      } else if ("documentDelete" in e) {
        e.documentDelete;
        var v = e.documentDelete;
        v.document;

        var g = Xt(t, v.document),
            m = v.readTime ? Wt(v.readTime) : k.min(),
            w = new Ue(g, m),
            _ = v.removedTargetIds || [];

        n = new lt([], _, w.key, w);
      } else if ("documentRemove" in e) {
        e.documentRemove;
        var b = e.documentRemove;
        b.document;
        var I = Xt(t, b.document),
            E = b.removedTargetIds || [];
        n = new lt([], E, I, null);
      } else {
        if (!("filter" in e)) return p();
        e.filter;
        var T = e.filter;
        T.targetId;
        var N = T.count || 0,
            A = new Q(N),
            D = T.targetId;
        n = new pt(D, A);
      }

      return n;
    }(this.serializer, t),
        n = function (t) {
      // We have only reached a consistent snapshot for the entire stream if there
      // is a read_time set and it applies to all targets (i.e. the list of
      // targets is empty). The backend is guaranteed to send such responses.
      if (!("targetChange" in t)) return k.min();
      var e = t.targetChange;
      return e.targetIds && e.targetIds.length ? k.min() : e.readTime ? Wt(e.readTime) : k.min();
    }(t);

    return this.listener.Lu(e, n);
  },
  /**
   * Registers interest in the results of the given target. If the target
   * includes a resumeToken it will be included in the request. Results that
   * affect the target will be streamed back as WatchChange messages that
   * reference the targetId.
   */
  n.prototype.Ou = function (t) {
    var e = {};
    e.database = Zt(this.serializer), e.addTarget = function (t, e) {
      var n,
          r = e.target;
      return (n = Je(r) ? {
        documents: ie(t, r)
      } : {
        query: oe(t, r)
      }).targetId = e.targetId, e.resumeToken.G() > 0 && (n.resumeToken = Qt(t, e.resumeToken)), n;
    }(this.serializer, t);

    var n = function (t, e) {
      var n = function (t, e) {
        switch (e) {
          case 0
          /* Listen */
          :
            return null;

          case 1
          /* ExistenceFilterMismatch */
          :
            return "existence-filter-mismatch";

          case 2
          /* LimboResolution */
          :
            return "limbo-document";

          default:
            return p();
        }
      }(0, e.Y);

      return null == n ? null : {
        "goog-listen-tags": n
      };
    }(this.serializer, t);

    n && (e.labels = n), this.vu(e);
  },
  /**
   * Unregisters interest in the results of the target associated with the
   * given targetId.
   */
  n.prototype.Bu = function (t) {
    var e = {};
    e.database = Zt(this.serializer), e.removeTarget = t, this.vu(e);
  }, n;
}(ji),
    Qi =
/** @class */
function (t) {
  function n(e, n, r, i, o) {
    var s = this;
    return (s = t.call(this, e, "write_stream_connection_backoff"
    /* WriteStreamConnectionBackoff */
    , "write_stream_idle"
    /* WriteStreamIdle */
    , n, r, o) || this).serializer = i, s.qu = !1,
    /**
         * The last received stream token from the server, used to acknowledge which
         * responses the client has processed. Stream tokens are opaque checkpoint
         * markers whose only real value is their inclusion in the next request.
         *
         * PersistentWriteStream manages propagating this value from responses to the
         * next request.
         */
    s.lastStreamToken = F.H, s;
  }

  return e.__extends(n, t), Object.defineProperty(n.prototype, "Uu", {
    /**
     * Tracks whether or not a handshake has been successfully exchanged and
     * the stream is ready to accept mutations.
     */
    get: function get() {
      return this.qu;
    },
    enumerable: !0,
    configurable: !0
  }), // Override of PersistentStream.start
  n.prototype.start = function () {
    this.qu = !1, this.lastStreamToken = F.H, t.prototype.start.call(this);
  }, n.prototype.Du = function () {
    this.qu && this.Qu([]);
  }, n.prototype.ku = function (t) {
    return this.Iu.Mu("Write", t);
  }, n.prototype.onMessage = function (t) {
    if ( // Always capture the last stream token.
    d(!!t.streamToken), this.lastStreamToken = Gt(this.serializer, t.streamToken), this.qu) {
      // A successful first write response means the stream is healthy,
      // Note, that we could consider a successful handshake healthy, however,
      // the write itself might be causing an error we want to back off from.
      this.Zo.reset();

      var e = function (t, e) {
        return t && t.length > 0 ? (d(void 0 !== e), t.map(function (t) {
          return function (t, e) {
            // NOTE: Deletes don't have an updateTime.
            var n = t.updateTime ? Wt(t.updateTime) : Wt(e);
            n.isEqual(k.min()) && ( // The Firestore Emulator currently returns an update time of 0 for
            // deletes of non-existing documents (rather than null). This breaks the
            // test "get deleted doc while offline with source=cache" as NoDocuments
            // with version 0 are filtered by IndexedDb's RemoteDocumentCache.
            // TODO(#2149): Remove this when Emulator is fixed
            n = Wt(e));
            var r = null;
            return t.transformResults && t.transformResults.length > 0 && (r = t.transformResults), new be(n, r);
          }(t, e);
        })) : [];
      }(t.writeResults, t.commitTime),
          n = Wt(t.commitTime);

      return this.listener.Wu(n, e);
    } // The first response is always the handshake response


    return d(!t.writeResults || 0 === t.writeResults.length), this.qu = !0, this.listener.ju();
  },
  /**
   * Sends an initial streamToken to the server, performing the handshake
   * required to make the StreamingWrite RPC work. Subsequent
   * calls should wait until onHandshakeComplete was called.
   */
  n.prototype.Ku = function () {
    // TODO(dimond): Support stream resumption. We intentionally do not set the
    // stream token on the handshake, ignoring any stream token we might have.
    var t = {};
    t.database = Zt(this.serializer), this.vu(t);
  },
  /** Sends a group of mutations to the Firestore backend to apply. */
  n.prototype.Qu = function (t) {
    var e = this,
        n = {
      streamToken: Qt(this.serializer, this.lastStreamToken),
      writes: t.map(function (t) {
        return ne(e.serializer, t);
      })
    };
    this.vu(n);
  }, n;
}(ji),
    Gi =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this) || this).Iu = e, i.credentials = n, i.serializer = r, i.zu = !1, i;
  }

  return e.__extends(n, t), n.prototype.Hu = function () {
    if (this.zu) throw new S(x.FAILED_PRECONDITION, "The client has already been terminated.");
  },
  /** Gets an auth token and invokes the provided RPC. */
  n.prototype.Yu = function (t, e) {
    var n = this;
    return this.Hu(), this.credentials.getToken().then(function (r) {
      return n.Iu.Yu(t, e, r);
    }).catch(function (t) {
      throw t.code === x.UNAUTHENTICATED && n.credentials.hu(), t;
    });
  },
  /** Gets an auth token and invokes the provided RPC with streamed results. */
  n.prototype.Ju = function (t, e) {
    var n = this;
    return this.Hu(), this.credentials.getToken().then(function (r) {
      return n.Iu.Ju(t, e, r);
    }).catch(function (t) {
      throw t.code === x.UNAUTHENTICATED && n.credentials.hu(), t;
    });
  }, n;
}(function () {
  // Make sure that the structural type of `Datastore` is unique.
  // See https://github.com/microsoft/TypeScript/issues/5451
  this.Gu = void 0;
}),
    zi =
/** @class */
function () {
  function t(t) {
    this.Xu = t, // The version of each document that was read during this transaction.
    this.Zu = new Map(), this.mutations = [], this.tc = !1,
    /**
         * A deferred usage error that occurred previously in this transaction that
         * will cause the transaction to fail once it actually commits.
         */
    this.ec = null,
    /**
         * Set of documents that have been written in the transaction.
         *
         * When there's more than one write to the same key in a transaction, any
         * writes after the first are handled differently.
         */
    this.sc = new Set();
  }

  return t.prototype.nc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return e.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            if (this.ic(), this.mutations.length > 0) throw new S(x.INVALID_ARGUMENT, "Firestore transactions require all reads to be executed before all writes.");
            return [4
            /*yield*/
            , function (t, n) {
              return e.__awaiter(this, void 0, void 0, function () {
                var r, i, o, s, u;
                return e.__generator(this, function (e) {
                  switch (e.label) {
                    case 0:
                      return r = y(t), i = {
                        database: Zt(r.serializer),
                        documents: n.map(function (t) {
                          return Yt(r.serializer, t);
                        })
                      }, [4
                      /*yield*/
                      , r.Ju("BatchGetDocuments", i)];

                    case 1:
                      return o = e.sent(), s = new Map(), o.forEach(function (t) {
                        var e = function (t, e) {
                          return "found" in e ? function (t, e) {
                            d(!!e.found), e.found.name, e.found.updateTime;
                            var n = Xt(t, e.found.name),
                                r = Wt(e.found.updateTime),
                                i = new De({
                              mapValue: {
                                fields: e.found.fields
                              }
                            });
                            return new Oe(n, r, i, {});
                          }(t, e) : "missing" in e ? function (t, e) {
                            d(!!e.missing), d(!!e.readTime);
                            var n = Xt(t, e.missing),
                                r = Wt(e.readTime);
                            return new Ue(n, r);
                          }(t, e) : p();
                        }(r.serializer, t);

                        s.set(e.key.toString(), e);
                      }), u = [], [2
                      /*return*/
                      , (n.forEach(function (t) {
                        var e = s.get(t.toString());
                        d(!!e), u.push(e);
                      }), u)];
                  }
                });
              });
            }(this.Xu, t)];

          case 1:
            return [2
            /*return*/
            , ((n = i.sent()).forEach(function (t) {
              t instanceof Ue || t instanceof Oe ? r.rc(t) : p();
            }), n)];
        }
      });
    });
  }, t.prototype.set = function (t, e) {
    this.write(e.Wa(t, this.Ue(t))), this.sc.add(t);
  }, t.prototype.update = function (t, e) {
    try {
      this.write(e.Wa(t, this.oc(t)));
    } catch (t) {
      this.ec = t;
    }

    this.sc.add(t);
  }, t.prototype.delete = function (t) {
    this.write([new xe(t, this.Ue(t))]), this.sc.add(t);
  }, t.prototype.commit = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t,
          n = this;
      return e.__generator(this, function (r) {
        switch (r.label) {
          case 0:
            if (this.ic(), this.ec) throw this.ec;
            return t = this.Zu, // For each mutation, note that the doc was written.
            this.mutations.forEach(function (e) {
              t.delete(e.key.toString());
            }), // For each document that was read but not written to, we want to perform
            // a `verify` operation.
            t.forEach(function (t, e) {
              var r = new L(R.$(e));
              n.mutations.push(new Se(r, n.Ue(r)));
            }), [4
            /*yield*/
            , function (t, n) {
              return e.__awaiter(this, void 0, void 0, function () {
                var r, i;
                return e.__generator(this, function (e) {
                  switch (e.label) {
                    case 0:
                      return r = y(t), i = {
                        database: Zt(r.serializer),
                        writes: n.map(function (t) {
                          return ne(r.serializer, t);
                        })
                      }, [4
                      /*yield*/
                      , r.Yu("Commit", i)];

                    case 1:
                      return e.sent(), [2
                      /*return*/
                      ];
                  }
                });
              });
            }(this.Xu, this.mutations)];

          case 1:
            // For each mutation, note that the doc was written.
            return r.sent(), this.tc = !0, [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.rc = function (t) {
    var e;
    if (t instanceof Oe) e = t.version;else {
      if (!(t instanceof Ue)) throw p(); // For deleted docs, we must use baseVersion 0 when we overwrite them.

      e = k.min();
    }
    var n = this.Zu.get(t.key.toString());

    if (n) {
      if (!e.isEqual(n)) // This transaction will fail no matter what.
        throw new S(x.ABORTED, "Document version changed between two reads.");
    } else this.Zu.set(t.key.toString(), e);
  },
  /**
   * Returns the version of this document when it was read in this transaction,
   * as a precondition, or no precondition if it was not read.
   */
  t.prototype.Ue = function (t) {
    var e = this.Zu.get(t.toString());
    return !this.sc.has(t) && e ? Ie.updateTime(e) : Ie.Qe();
  },
  /**
   * Returns the precondition for a document if the operation is an update.
   */
  t.prototype.oc = function (t) {
    var e = this.Zu.get(t.toString()); // The first time a document is written, we want to take into account the
    // read time and existence

    if (!this.sc.has(t) && e) {
      if (e.isEqual(k.min())) // The document doesn't exist, so fail the transaction.
        // This has to be validated locally because you can't send a
        // precondition that a document does not exist without changing the
        // semantics of the backend write to be an insert. This is the reverse
        // of what we want, since we want to assert that the document doesn't
        // exist but then send the update and have it fail. Since we can't
        // express that to the backend, we have to validate locally.
        // Note: this can change once we can send separate verify writes in the
        // transaction.
        throw new S(x.INVALID_ARGUMENT, "Can't update a document that doesn't exist."); // Document exists, base precondition on document update time.

      return Ie.updateTime(e);
    } // Document was not read, so we just use the preconditions for a blind
    // update.


    return Ie.exists(!0);
  }, t.prototype.write = function (t) {
    this.ic(), this.mutations = this.mutations.concat(t);
  }, t.prototype.ic = function () {}, t;
}(),
    Wi =
/** @class */
function () {
  function t(t, e) {
    this.Oo = t, this.hc = e,
    /** The current OnlineState. */
    this.state = "Unknown"
    /* Unknown */
    ,
    /**
         * A count of consecutive failures to open the stream. If it reaches the
         * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
         * Offline.
         */
    this.ac = 0,
    /**
         * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
         * transition from OnlineState.Unknown to OnlineState.Offline without waiting
         * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
         */
    this.uc = null,
    /**
         * Whether the client should log a warning message if it fails to connect to
         * the backend (initially true, cleared after a successful stream, or if we've
         * logged the message already).
         */
    this.cc = !0
    /**
    * Called by RemoteStore when a watch stream is started (including on each
    * backoff attempt).
    *
    * If this is the first attempt, it sets the OnlineState to Unknown and starts
    * the onlineStateTimer.
    */
    ;
  }

  return t.prototype.lc = function () {
    var t = this;
    0 === this.ac && (this._c("Unknown"
    /* Unknown */
    ), this.uc = this.Oo.ei("online_state_timeout"
    /* OnlineStateTimeout */
    , 1e4, function () {
      return t.uc = null, t.fc("Backend didn't respond within 10 seconds."), t._c("Offline"
      /* Offline */
      ), Promise.resolve();
    }));
  },
  /**
   * Updates our OnlineState as appropriate after the watch stream reports a
   * failure. The first failure moves us to the 'Unknown' state. We then may
   * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
   * actually transition to the 'Offline' state.
   */
  t.prototype.dc = function (t) {
    "Online"
    /* Online */
    === this.state ? this._c("Unknown"
    /* Unknown */
    ) : (this.ac++, this.ac >= 1 && (this.wc(), this.fc("Connection failed 1 times. Most recent error: " + t.toString()), this._c("Offline"
    /* Offline */
    )));
  },
  /**
   * Explicitly sets the OnlineState to the specified state.
   *
   * Note that this resets our timers / failure counters, etc. used by our
   * Offline heuristics, so must not be used in place of
   * handleWatchStreamStart() and handleWatchStreamFailure().
   */
  t.prototype.set = function (t) {
    this.wc(), this.ac = 0, "Online"
    /* Online */
    === t && ( // We've connected to watch at least once. Don't warn the developer
    // about being offline going forward.
    this.cc = !1), this._c(t);
  }, t.prototype._c = function (t) {
    t !== this.state && (this.state = t, this.hc(t));
  }, t.prototype.fc = function (t) {
    var e = "Could not reach Cloud Firestore backend. " + t + "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";
    this.cc ? (f(e), this.cc = !1) : h("OnlineStateTracker", e);
  }, t.prototype.wc = function () {
    null !== this.uc && (this.uc.cancel(), this.uc = null);
  }, t;
}(),
    Hi =
/** @class */
function () {
  function t(
  /**
   * The local store, used to fill the write pipeline with outbound mutations.
   */
  t,
  /** The client-side proxy for interacting with the backend. */
  n, r, i, o) {
    var s = this;
    this.Tc = t, this.Xu = n, this.Oo = r,
    /**
         * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
         * LocalStore via fillWritePipeline() and have or will send to the write
         * stream.
         *
         * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
         * restart the write stream. When the stream is established the writes in the
         * pipeline will be sent in order.
         *
         * Writes remain in writePipeline until they are acknowledged by the backend
         * and thus will automatically be re-sent if the stream is interrupted /
         * restarted before they're acknowledged.
         *
         * Write responses from the backend are linked to their originating request
         * purely based on order, and so we can just shift() writes from the front of
         * the writePipeline as we receive responses.
         */
    this.Ec = [],
    /**
         * A mapping of watched targets that the client cares about tracking and the
         * user has explicitly called a 'listen' for this target.
         *
         * These targets may or may not have been sent to or acknowledged by the
         * server. On re-establishing the listen stream, these targets should be sent
         * to the server. The targets removed with unlistens are removed eagerly
         * without waiting for confirmation from the listen stream.
         */
    this.Ic = new Map(), this.Ac = null,
    /**
         * A set of reasons for why the RemoteStore may be offline. If empty, the
         * RemoteStore may start its network connections.
         */
    this.Rc = new Set(), this.mc = o, this.mc.Pc(function (t) {
      r.Sr(function () {
        return e.__awaiter(s, void 0, void 0, function () {
          return e.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                return this.Vc() ? (h("RemoteStore", "Restarting streams for network reachability change."), [4
                /*yield*/
                , this.gc()]) : [3
                /*break*/
                , 2];

              case 1:
                t.sent(), t.label = 2;

              case 2:
                return [2
                /*return*/
                ];
            }
          });
        });
      });
    }), this.pc = new Wi(r, i), // Create streams (but note they're not started yet).
    this.yc = function (t, e, n) {
      var r = y(t);
      return new Bi(e, r.Iu, r.credentials, r.serializer, n);
    }(this.Xu, r, {
      xu: this.bc.bind(this),
      Cu: this.vc.bind(this),
      Lu: this.Sc.bind(this)
    }), this.Dc = function (t, e, n) {
      var r = y(t);
      return new Qi(e, r.Iu, r.credentials, r.serializer, n);
    }(this.Xu, r, {
      xu: this.Cc.bind(this),
      Cu: this.Fc.bind(this),
      ju: this.Nc.bind(this),
      Wu: this.Wu.bind(this)
    });
  }
  /**
   * Starts up the remote store, creating streams, restoring state from
   * LocalStore, etc.
   */


  return t.prototype.start = function () {
    return this.enableNetwork();
  },
  /** Re-enables the network. Idempotent. */
  t.prototype.enableNetwork = function () {
    return this.Rc.delete(0
    /* UserDisabled */
    ), this.$c();
  }, t.prototype.$c = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.Vc() ? (this.kc() ? this.xc() : this.pc.set("Unknown"
            /* Unknown */
            ), [4
            /*yield*/
            , this.Mc()]) : [3
            /*break*/
            , 2];

          case 1:
            // This will start the write stream if necessary.
            t.sent(), t.label = 2;

          case 2:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Temporarily disables the network. The network can be re-enabled using
   * enableNetwork().
   */
  t.prototype.disableNetwork = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.Rc.add(0
            /* UserDisabled */
            ), [4
            /*yield*/
            , this.Lc()];

          case 1:
            return t.sent(), // Set the OnlineState to Offline so get()s return from cache, etc.
            this.pc.set("Offline"
            /* Offline */
            ), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.Lc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return [4
            /*yield*/
            , this.Dc.stop()];

          case 1:
            return t.sent(), [4
            /*yield*/
            , this.yc.stop()];

          case 2:
            return t.sent(), this.Ec.length > 0 && (h("RemoteStore", "Stopping write stream with " + this.Ec.length + " pending writes"), this.Ec = []), this.Oc(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.Ur = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return h("RemoteStore", "RemoteStore shutting down."), this.Rc.add(5
            /* Shutdown */
            ), [4
            /*yield*/
            , this.Lc()];

          case 1:
            return t.sent(), this.mc.Ur(), // Set the OnlineState to Unknown (rather than Offline) to avoid potentially
            // triggering spurious listener events with cached data, etc.
            this.pc.set("Unknown"
            /* Unknown */
            ), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Starts new listen for the given target. Uses resume token if provided. It
   * is a no-op if the target of given `TargetData` is already being listened to.
   */
  t.prototype.listen = function (t) {
    this.Ic.has(t.targetId) || ( // Mark this as something the client is currently listening for.
    this.Ic.set(t.targetId, t), this.kc() ? // The listen will be sent in onWatchStreamOpen
    this.xc() : this.yc.Vu() && this.Bc(t));
  },
  /**
   * Removes the listen from server. It is a no-op if the given target id is
   * not being listened to.
   */
  t.prototype.qc = function (t) {
    this.Ic.delete(t), this.yc.Vu() && this.Uc(t), 0 === this.Ic.size && (this.yc.Vu() ? this.yc.yu() : this.Vc() && // Revert to OnlineState.Unknown if the watch stream is not open and we
    // have no listeners, since without any listens to send we cannot
    // confirm if the stream is healthy and upgrade to OnlineState.Online.
    this.pc.set("Unknown"
    /* Unknown */
    ));
  },
  /** {@link TargetMetadataProvider.getTargetDataForTarget} */
  t.prototype.Me = function (t) {
    return this.Ic.get(t) || null;
  },
  /** {@link TargetMetadataProvider.getRemoteKeysForTarget} */
  t.prototype.xe = function (t) {
    return this.Qc.xe(t);
  },
  /**
   * We need to increment the the expected number of pending responses we're due
   * from watch so we wait for the ack to process any messages from this target.
   */
  t.prototype.Bc = function (t) {
    this.Ac.de(t.targetId), this.yc.Ou(t);
  },
  /**
   * We need to increment the expected number of pending responses we're due
   * from watch so we wait for the removal on the server before we process any
   * messages from this target.
   */
  t.prototype.Uc = function (t) {
    this.Ac.de(t), this.yc.Bu(t);
  }, t.prototype.xc = function () {
    this.Ac = new vt(this), this.yc.start(), this.pc.lc();
  },
  /**
   * Returns whether the watch stream should be started because it's necessary
   * and has not yet been started.
   */
  t.prototype.kc = function () {
    return this.Vc() && !this.yc.Pu() && this.Ic.size > 0;
  }, t.prototype.Vc = function () {
    return 0 === this.Rc.size;
  }, t.prototype.Oc = function () {
    this.Ac = null;
  }, t.prototype.bc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t = this;
      return e.__generator(this, function (e) {
        return this.Ic.forEach(function (e, n) {
          t.Bc(e);
        }), [2
        /*return*/
        ];
      });
    });
  }, t.prototype.vc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (e) {
        return this.Oc(), // If we still need the watch stream, retry the connection.
        this.kc() ? (this.pc.dc(t), this.xc()) : // No need to restart watch stream because there are no active targets.
        // The online state is set to unknown because there is no active attempt
        // at establishing a connection
        this.pc.set("Unknown"
        /* Unknown */
        ), [2
        /*return*/
        ];
      });
    });
  }, t.prototype.Sc = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r, i, o;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            if (this.pc.set("Online"
            /* Online */
            ), !(t instanceof dt && 2
            /* Removed */
            === t.state && t.cause)) // Mark the client as online since we got a message from the server
              return [3
              /*break*/
              , 6];
            e.label = 1;

          case 1:
            return e.trys.push([1, 3,, 5]), [4
            /*yield*/
            , this.Wc(t)];

          case 2:
            return e.sent(), [3
            /*break*/
            , 5];

          case 3:
            return r = e.sent(), h("RemoteStore", "Failed to remove targets %s: %s ", t.targetIds.join(","), r), [4
            /*yield*/
            , this.jc(r)];

          case 4:
            return e.sent(), [3
            /*break*/
            , 5];

          case 5:
            return [3
            /*break*/
            , 13];

          case 6:
            if (t instanceof lt ? this.Ac.Pe(t) : t instanceof pt ? this.Ac.De(t) : this.Ac.pe(t), n.isEqual(k.min())) return [3
            /*break*/
            , 13];
            e.label = 7;

          case 7:
            return e.trys.push([7, 11,, 13]), [4
            /*yield*/
            , this.Tc.xi()];

          case 8:
            return i = e.sent(), n.o(i) >= 0 ? [4
            /*yield*/
            , this.Kc(n)] : [3
            /*break*/
            , 10];
          // We have received a target change with a global snapshot if the snapshot
          // version is not equal to SnapshotVersion.min().

          case 9:
            // We have received a target change with a global snapshot if the snapshot
            // version is not equal to SnapshotVersion.min().
            e.sent(), e.label = 10;

          case 10:
            return [3
            /*break*/
            , 13];

          case 11:
            return h("RemoteStore", "Failed to raise snapshot:", o = e.sent()), [4
            /*yield*/
            , this.jc(o)];

          case 12:
            return e.sent(), [3
            /*break*/
            , 13];

          case 13:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Recovery logic for IndexedDB errors that takes the network offline until
   * `op` succeeds. Retries are scheduled with backoff using
   * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
   * validated via a generic operation.
   *
   * The returned Promise is resolved once the network is disabled and before
   * any retry attempt.
   */
  t.prototype.jc = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r = this;
      return e.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            if (!wr(t)) throw t; // Disable network and raise offline snapshots

            return this.Rc.add(1
            /* IndexedDbFailed */
            ), [4
            /*yield*/
            , this.Lc()];

          case 1:
            // Disable network and raise offline snapshots
            return i.sent(), this.pc.set("Offline"
            /* Offline */
            ), n || ( // Use a simple read operation to determine if IndexedDB recovered.
            // Ideally, we would expose a health check directly on SimpleDb, but
            // RemoteStore only has access to persistence through LocalStore.
            n = function n() {
              return r.Tc.xi();
            }), // Probe IndexedDB periodically and re-enable network
            this.Oo.Cr(function () {
              return e.__awaiter(r, void 0, void 0, function () {
                return e.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return h("RemoteStore", "Retrying IndexedDB access"), [4
                      /*yield*/
                      , n()];

                    case 1:
                      return t.sent(), this.Rc.delete(1
                      /* IndexedDbFailed */
                      ), [4
                      /*yield*/
                      , this.$c()];

                    case 2:
                      return t.sent(), [2
                      /*return*/
                      ];
                  }
                });
              });
            }), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Executes `op`. If `op` fails, takes the network offline until `op`
   * succeeds. Returns after the first attempt.
   */
  t.prototype.Gc = function (t) {
    var e = this;
    return t().catch(function (n) {
      return e.jc(n, t);
    });
  },
  /**
   * Takes a batch of changes from the Datastore, repackages them as a
   * RemoteEvent, and passes that on to the listener, which is typically the
   * SyncEngine.
   */
  t.prototype.Kc = function (t) {
    var e = this,
        n = this.Ac.Ne(t); // Update in-memory resume tokens. LocalStore will update the
    // persistent view of these when applying the completed RemoteEvent.
    // Finally raise remote event

    return n.Qt.forEach(function (n, r) {
      if (n.resumeToken.G() > 0) {
        var i = e.Ic.get(r); // A watched target might have been removed already.

        i && e.Ic.set(r, i.Z(n.resumeToken, t));
      }
    }), // Re-establish listens for the targets that have been invalidated by
    // existence filter mismatches.
    n.Wt.forEach(function (t) {
      var n = e.Ic.get(t);

      if (n) {
        // Clear the resume token for the target, since we're in a known mismatch
        // state.
        e.Ic.set(t, n.Z(F.H, n.J)), // Cause a hard reset by unwatching and rewatching immediately, but
        // deliberately don't send a resume token so that we get a full update.
        e.Uc(t); // Mark the target we send as being on behalf of an existence filter
        // mismatch, but don't actually retain that in listenTargets. This ensures
        // that we flag the first re-listen this way without impacting future
        // listens of this target (that might happen e.g. on reconnect).

        var r = new B(n.target, t, 1
        /* ExistenceFilterMismatch */
        , n.sequenceNumber);
        e.Bc(r);
      }
    }), this.Qc.na(n);
  },
  /** Handles an error on a target */
  t.prototype.Wc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            n = t.cause, r = 0, i = t.targetIds, e.label = 1;

          case 1:
            return r < i.length ? (o = i[r], this.Ic.has(o) ? [4
            /*yield*/
            , this.Qc.zc(o, n)] : [3
            /*break*/
            , 3]) : [3
            /*break*/
            , 5];

          case 2:
            e.sent(), this.Ic.delete(o), this.Ac.removeTarget(o), e.label = 3;

          case 3:
            e.label = 4;

          case 4:
            return r++, [3
            /*break*/
            , 1];

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Attempts to fill our write pipeline with writes from the LocalStore.
   *
   * Called internally to bootstrap or refill the write pipeline and by
   * SyncEngine whenever there are new mutations to process.
   *
   * Starts the write stream if necessary.
   */
  t.prototype.Mc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t, n, r;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            t = this.Ec.length > 0 ? this.Ec[this.Ec.length - 1].batchId : -1, e.label = 1;

          case 1:
            if (!this.Hc()) return [3
            /*break*/
            , 7];
            e.label = 2;

          case 2:
            return e.trys.push([2, 4,, 6]), [4
            /*yield*/
            , this.Tc.ha(t)];

          case 3:
            return null === (n = e.sent()) ? (0 === this.Ec.length && this.Dc.yu(), [3
            /*break*/
            , 7]) : (t = n.batchId, this.Yc(n), [3
            /*break*/
            , 6]);

          case 4:
            return r = e.sent(), [4
            /*yield*/
            , this.jc(r)];

          case 5:
            return e.sent(), [3
            /*break*/
            , 6];

          case 6:
            return [3
            /*break*/
            , 1];

          case 7:
            return this.Jc() && this.Xc(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Returns true if we can add to the write pipeline (i.e. the network is
   * enabled and the write pipeline is not full).
   */
  t.prototype.Hc = function () {
    return this.Vc() && this.Ec.length < 10;
  }, // For testing
  t.prototype.Zc = function () {
    return this.Ec.length;
  },
  /**
   * Queues additional writes to be sent to the write stream, sending them
   * immediately if the write stream is established.
   */
  t.prototype.Yc = function (t) {
    this.Ec.push(t), this.Dc.Vu() && this.Dc.Uu && this.Dc.Qu(t.mutations);
  }, t.prototype.Jc = function () {
    return this.Vc() && !this.Dc.Pu() && this.Ec.length > 0;
  }, t.prototype.Xc = function () {
    this.Dc.start();
  }, t.prototype.Cc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        return this.Dc.Ku(), [2
        /*return*/
        ];
      });
    });
  }, t.prototype.Nc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t, n, r;
      return e.__generator(this, function (e) {
        // Send the write pipeline now that the stream is established.
        for (t = 0, n = this.Ec; t < n.length; t++) {
          r = n[t], this.Dc.Qu(r.mutations);
        }

        return [2
        /*return*/
        ];
      });
    });
  }, t.prototype.Wu = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r,
          i,
          o = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return r = this.Ec.shift(), i = tn.from(r, t, n), [4
            /*yield*/
            , this.Gc(function () {
              return o.Qc.tl(i);
            })];

          case 1:
            // It's possible that with the completion of this mutation another
            // slot has freed up.
            return e.sent(), [4
            /*yield*/
            , this.Mc()];

          case 2:
            // It's possible that with the completion of this mutation another
            // slot has freed up.
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.Fc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t && this.Dc.Uu ? [4
            /*yield*/
            , this.el(t)] : [3
            /*break*/
            , 2];
          // This error affects the actual write.

          case 1:
            // This error affects the actual write.
            e.sent(), e.label = 2;

          case 2:
            // If the write stream closed after the write handshake completes, a write
            // operation failed and we fail the pending operation.
            // The write stream might have been started by refilling the write
            // pipeline for failed writes
            return this.Jc() && this.Xc(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.el = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return G(r = t.code) && r !== x.ABORTED ? (n = this.Ec.shift(), // In this case it's also unlikely that the server itself is melting
            // down -- this was just a bad request so inhibit backoff on the next
            // restart.
            this.Dc.pu(), [4
            /*yield*/
            , this.Gc(function () {
              return i.Qc.sl(n.batchId, t);
            })]) : [3
            /*break*/
            , 3];

          case 1:
            // It's possible that with the completion of this mutation
            // another slot has freed up.
            return e.sent(), [4
            /*yield*/
            , this.Mc()];

          case 2:
            // In this case it's also unlikely that the server itself is melting
            // down -- this was just a bad request so inhibit backoff on the next
            // restart.
            // It's possible that with the completion of this mutation
            // another slot has freed up.
            e.sent(), e.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.nl = function () {
    return new zi(this.Xu);
  }, t.prototype.gc = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (t) {
        switch (t.label) {
          case 0:
            return this.Rc.add(4
            /* ConnectivityChange */
            ), [4
            /*yield*/
            , this.Lc()];

          case 1:
            return t.sent(), this.pc.set("Unknown"
            /* Unknown */
            ), this.Rc.delete(4
            /* ConnectivityChange */
            ), [4
            /*yield*/
            , this.$c()];

          case 2:
            return t.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.il = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.Oo.ah(), // Tear down and re-create our network streams. This will ensure we get a
            // fresh auth token for the new user and re-fill the write pipeline with
            // new mutations from the LocalStore (since mutations are per-user).
            h("RemoteStore", "RemoteStore received new credentials"), this.Rc.add(3
            /* CredentialChange */
            ), [4
            /*yield*/
            , this.Lc()];

          case 1:
            return e.sent(), this.pc.set("Unknown"
            /* Unknown */
            ), [4
            /*yield*/
            , this.Qc.il(t)];

          case 2:
            return e.sent(), this.Rc.delete(3
            /* CredentialChange */
            ), [4
            /*yield*/
            , this.$c()];

          case 3:
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Toggles the network state when the client gains or loses its primary lease.
   */
  t.prototype.rl = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return t ? (this.Rc.delete(2
            /* IsSecondary */
            ), [4
            /*yield*/
            , this.$c()]) : [3
            /*break*/
            , 2];

          case 1:
            return e.sent(), [3
            /*break*/
            , 5];

          case 2:
            return (n = t) ? [3
            /*break*/
            , 4] : (this.Rc.add(2
            /* IsSecondary */
            ), [4
            /*yield*/
            , this.Lc()]);

          case 3:
            e.sent(), n = this.pc.set("Unknown"
            /* Unknown */
            ), e.label = 4;

          case 4:
            n, e.label = 5;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t;
}();
/** A CredentialsProvider that always yields an empty token. */

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// The format of the LocalStorage key that stores the client state is:
//     firestore_clients_<persistence_prefix>_<instance_key>

/** Assembles the key for a client state in WebStorage */


function Ki(t, e) {
  return "firestore_clients_" + t + "_" + e;
} // The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.

/** Assembles the key for a mutation batch in WebStorage */


function Yi(t, e, n) {
  var r = "firestore_mutations_" + t + "_" + n;
  return e.fo() && (r += "_" + e.uid), r;
} // The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>

/** Assembles the key for a query state in WebStorage */


function Xi(t, e) {
  return "firestore_targets_" + t + "_" + e;
} // The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>

/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */
// Visible for testing


var $i =
/** @class */
function () {
  function t(t, e, n, r) {
    this.user = t, this.batchId = e, this.state = n, this.error = r
    /**
    * Parses a MutationMetadata from its JSON representation in WebStorage.
    * Logs a warning and returns null if the format of the data is not valid.
    */
    ;
  }

  return t.ol = function (e, n, r) {
    var i = JSON.parse(r),
        o = "object" == _typeof(i) && -1 !== ["pending", "acknowledged", "rejected"].indexOf(i.state) && (void 0 === i.error || "object" == _typeof(i.error)),
        s = void 0;

    return o && i.error && (o = "string" == typeof i.error.message && "string" == typeof i.error.code) && (s = new S(i.error.code, i.error.message)), o ? new t(e, n, i.state, s) : (f("SharedClientState", "Failed to parse mutation state for ID '" + n + "': " + r), null);
  }, t.prototype.hl = function () {
    var t = {
      state: this.state,
      updateTimeMs: Date.now()
    };
    return this.error && (t.error = {
      code: this.error.code,
      message: this.error.message
    }), JSON.stringify(t);
  }, t;
}(),
    Ji =
/** @class */
function () {
  function t(t, e, n) {
    this.targetId = t, this.state = e, this.error = n
    /**
    * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
    * Logs a warning and returns null if the format of the data is not valid.
    */
    ;
  }

  return t.ol = function (e, n) {
    var r = JSON.parse(n),
        i = "object" == _typeof(r) && -1 !== ["not-current", "current", "rejected"].indexOf(r.state) && (void 0 === r.error || "object" == _typeof(r.error)),
        o = void 0;

    return i && r.error && (i = "string" == typeof r.error.message && "string" == typeof r.error.code) && (o = new S(r.error.code, r.error.message)), i ? new t(e, r.state, o) : (f("SharedClientState", "Failed to parse target state for ID '" + e + "': " + n), null);
  }, t.prototype.hl = function () {
    var t = {
      state: this.state,
      updateTimeMs: Date.now()
    };
    return this.error && (t.error = {
      code: this.error.code,
      message: this.error.message
    }), JSON.stringify(t);
  }, t;
}(),
    Zi =
/** @class */
function () {
  function t(t, e) {
    this.clientId = t, this.activeTargetIds = e
    /**
    * Parses a RemoteClientState from the JSON representation in WebStorage.
    * Logs a warning and returns null if the format of the data is not valid.
    */
    ;
  }

  return t.ol = function (e, n) {
    for (var r = JSON.parse(n), i = "object" == _typeof(r) && r.activeTargetIds instanceof Array, o = st(), s = 0; i && s < r.activeTargetIds.length; ++s) {
      i = q(r.activeTargetIds[s]), o = o.add(r.activeTargetIds[s]);
    }

    return i ? new t(e, o) : (f("SharedClientState", "Failed to parse client data for instance '" + e + "': " + n), null);
  }, t;
}(),
    to =
/** @class */
function () {
  function t(t, e) {
    this.clientId = t, this.onlineState = e
    /**
    * Parses a SharedOnlineState from its JSON representation in WebStorage.
    * Logs a warning and returns null if the format of the data is not valid.
    */
    ;
  }

  return t.ol = function (e) {
    var n = JSON.parse(e);
    return "object" == _typeof(n) && -1 !== ["Unknown", "Online", "Offline"].indexOf(n.onlineState) && "string" == typeof n.clientId ? new t(n.clientId, n.onlineState) : (f("SharedClientState", "Failed to parse online state: " + e), null);
  }, t;
}(),
    eo =
/** @class */
function () {
  function t() {
    this.activeTargetIds = st();
  }

  return t.prototype.al = function (t) {
    this.activeTargetIds = this.activeTargetIds.add(t);
  }, t.prototype.ul = function (t) {
    this.activeTargetIds = this.activeTargetIds.delete(t);
  },
  /**
   * Converts this entry into a JSON-encoded format we can use for WebStorage.
   * Does not encode `clientId` as it is part of the key in WebStorage.
   */
  t.prototype.hl = function () {
    var t = {
      activeTargetIds: this.activeTargetIds.F(),
      updateTimeMs: Date.now()
    };
    return JSON.stringify(t);
  }, t;
}(),
    no =
/** @class */
function () {
  function t(t, e, n, r, i) {
    this.window = t, this.Wn = e, this.persistenceKey = n, this.cl = r, this.Qc = null, this.hc = null, this.On = null, this.ll = this._l.bind(this), this.fl = new W(m), this.pr = !1,
    /**
         * Captures WebStorage events that occur before `start()` is called. These
         * events are replayed once `WebStorageSharedClientState` is started.
         */
    this.dl = []; // Escape the special characters mentioned here:
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions

    var o = n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
    this.storage = this.window.localStorage, this.currentUser = i, this.wl = Ki(this.persistenceKey, this.cl), this.Tl =
    /** Assembles the key for the current sequence number. */
    function (t) {
      return "firestore_sequence_number_" + t;
    }(this.persistenceKey), this.fl = this.fl.et(this.cl, new eo()), this.El = new RegExp("^firestore_clients_" + o + "_([^_]*)$"), this.Il = new RegExp("^firestore_mutations_" + o + "_(\\d+)(?:_(.*))?$"), this.Al = new RegExp("^firestore_targets_" + o + "_(\\d+)$"), this.Rl =
    /** Assembles the key for the online state of the primary tab. */
    function (t) {
      return "firestore_online_state_" + t;
    }(this.persistenceKey), // Rather than adding the storage observer during start(), we add the
    // storage observer during initialization. This ensures that we collect
    // events before other components populate their initial state (during their
    // respective start() calls). Otherwise, we might for example miss a
    // mutation that is added after LocalStore's start() processed the existing
    // mutations but before we observe WebStorage events.
    this.window.addEventListener("storage", this.ll);
  }
  /** Returns 'true' if WebStorage is available in the current environment. */


  return t._r = function (t) {
    return !(!t || !t.localStorage);
  }, t.prototype.start = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t,
          n,
          r,
          i,
          o,
          s,
          u,
          a,
          c,
          h,
          f,
          l = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return [4
            /*yield*/
            , this.Qc.Gr()];

          case 1:
            for (t = e.sent(), n = 0, r = t; n < r.length; n++) {
              (i = r[n]) !== this.cl && (o = this.getItem(Ki(this.persistenceKey, i))) && (s = Zi.ol(i, o)) && (this.fl = this.fl.et(s.clientId, s));
            }

            for (this.ml(), (u = this.storage.getItem(this.Rl)) && (a = this.Pl(u)) && this.Vl(a), c = 0, h = this.dl; c < h.length; c++) {
              f = h[c], this._l(f);
            }

            return this.dl = [], // Register a window unload hook to remove the client metadata entry from
            // WebStorage even if `shutdown()` was not called.
            this.window.addEventListener("unload", function () {
              return l.Ur();
            }), this.pr = !0, [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.Un = function (t) {
    this.setItem(this.Tl, JSON.stringify(t));
  }, t.prototype.gl = function () {
    return this.pl(this.fl);
  }, t.prototype.yl = function (t) {
    var e = !1;
    return this.fl.forEach(function (n, r) {
      r.activeTargetIds.has(t) && (e = !0);
    }), e;
  }, t.prototype.bl = function (t) {
    this.vl(t, "pending");
  }, t.prototype.Sl = function (t, e, n) {
    this.vl(t, e, n), // Once a final mutation result is observed by other clients, they no longer
    // access the mutation's metadata entry. Since WebStorage replays events
    // in order, it is safe to delete the entry right after updating it.
    this.Dl(t);
  }, t.prototype.Cl = function (t) {
    var e = "not-current"; // Lookup an existing query state if the target ID was already registered
    // by another tab

    if (this.yl(t)) {
      var n = this.storage.getItem(Xi(this.persistenceKey, t));

      if (n) {
        var r = Ji.ol(t, n);
        r && (e = r.state);
      }
    }

    return this.Fl.al(t), this.ml(), e;
  }, t.prototype.Nl = function (t) {
    this.Fl.ul(t), this.ml();
  }, t.prototype.$l = function (t) {
    return this.Fl.activeTargetIds.has(t);
  }, t.prototype.kl = function (t) {
    this.removeItem(Xi(this.persistenceKey, t));
  }, t.prototype.xl = function (t, e, n) {
    this.Ml(t, e, n);
  }, t.prototype.Hh = function (t, e, n) {
    var r = this;
    e.forEach(function (t) {
      r.Dl(t);
    }), this.currentUser = t, n.forEach(function (t) {
      r.bl(t);
    });
  }, t.prototype.Ll = function (t) {
    this.Ol(t);
  }, t.prototype.Ur = function () {
    this.pr && (this.window.removeEventListener("storage", this.ll), this.removeItem(this.wl), this.pr = !1);
  }, t.prototype.getItem = function (t) {
    var e = this.storage.getItem(t);
    return h("SharedClientState", "READ", t, e), e;
  }, t.prototype.setItem = function (t, e) {
    h("SharedClientState", "SET", t, e), this.storage.setItem(t, e);
  }, t.prototype.removeItem = function (t) {
    h("SharedClientState", "REMOVE", t), this.storage.removeItem(t);
  }, t.prototype._l = function (t) {
    var n = this,
        r = t; // Note: The function is typed to take Event to be interface-compatible with
    // `Window.addEventListener`.

    if (r.storageArea === this.storage) {
      if (h("SharedClientState", "EVENT", r.key, r.newValue), r.key === this.wl) return void f("Received WebStorage notification for local change. Another client might have garbage-collected our state");
      this.Wn.Cr(function () {
        return e.__awaiter(n, void 0, void 0, function () {
          var t, n, i, o, s, u;
          return e.__generator(this, function (e) {
            if (this.pr) {
              if (null !== r.key) if (this.El.test(r.key)) {
                if (null == r.newValue) return t = this.Bl(r.key), [2
                /*return*/
                , this.ql(t, null)];
                if (n = this.Ul(r.key, r.newValue)) return [2
                /*return*/
                , this.ql(n.clientId, n)];
              } else if (this.Il.test(r.key)) {
                if (null !== r.newValue && (i = this.Ql(r.key, r.newValue))) return [2
                /*return*/
                , this.Wl(i)];
              } else if (this.Al.test(r.key)) {
                if (null !== r.newValue && (o = this.jl(r.key, r.newValue))) return [2
                /*return*/
                , this.Kl(o)];
              } else if (r.key === this.Rl) {
                if (null !== r.newValue && (s = this.Pl(r.newValue))) return [2
                /*return*/
                , this.Vl(s)];
              } else r.key === this.Tl && (u = function (t) {
                var e = an.Qn;
                if (null != t) try {
                  var n = JSON.parse(t);
                  d("number" == typeof n), e = n;
                } catch (t) {
                  f("SharedClientState", "Failed to read sequence number from WebStorage", t);
                }
                return e;
              }(r.newValue)) !== an.Qn && this.On(u);
            } else this.dl.push(r);

            return [2
            /*return*/
            ];
          });
        });
      });
    }
  }, Object.defineProperty(t.prototype, "Fl", {
    get: function get() {
      return this.fl.get(this.cl);
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.ml = function () {
    this.setItem(this.wl, this.Fl.hl());
  }, t.prototype.vl = function (t, e, n) {
    var r = new $i(this.currentUser, t, e, n),
        i = Yi(this.persistenceKey, this.currentUser, t);
    this.setItem(i, r.hl());
  }, t.prototype.Dl = function (t) {
    var e = Yi(this.persistenceKey, this.currentUser, t);
    this.removeItem(e);
  }, t.prototype.Ol = function (t) {
    var e = {
      clientId: this.cl,
      onlineState: t
    };
    this.storage.setItem(this.Rl, JSON.stringify(e));
  }, t.prototype.Ml = function (t, e, n) {
    var r = Xi(this.persistenceKey, t),
        i = new Ji(t, e, n);
    this.setItem(r, i.hl());
  },
  /**
   * Parses a client state key in WebStorage. Returns null if the key does not
   * match the expected key format.
   */
  t.prototype.Bl = function (t) {
    var e = this.El.exec(t);
    return e ? e[1] : null;
  },
  /**
   * Parses a client state in WebStorage. Returns 'null' if the value could not
   * be parsed.
   */
  t.prototype.Ul = function (t, e) {
    var n = this.Bl(t);
    return Zi.ol(n, e);
  },
  /**
   * Parses a mutation batch state in WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  t.prototype.Ql = function (t, e) {
    var n = this.Il.exec(t),
        r = Number(n[1]),
        i = void 0 !== n[2] ? n[2] : null;
    return $i.ol(new Li(i), r, e);
  },
  /**
   * Parses a query target state from WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  t.prototype.jl = function (t, e) {
    var n = this.Al.exec(t),
        r = Number(n[1]);
    return Ji.ol(r, e);
  },
  /**
   * Parses an online state from WebStorage. Returns 'null' if the value
   * could not be parsed.
   */
  t.prototype.Pl = function (t) {
    return to.ol(t);
  }, t.prototype.Wl = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      return e.__generator(this, function (e) {
        return t.user.uid === this.currentUser.uid ? [2
        /*return*/
        , this.Qc.Gl(t.batchId, t.state, t.error)] : (h("SharedClientState", "Ignoring mutation for non-active user " + t.user.uid), [2
        /*return*/
        ]);
      });
    });
  }, t.prototype.Kl = function (t) {
    return this.Qc.zl(t.targetId, t.state, t.error);
  }, t.prototype.ql = function (t, e) {
    var n = this,
        r = e ? this.fl.et(t, e) : this.fl.remove(t),
        i = this.pl(this.fl),
        o = this.pl(r),
        s = [],
        u = [];
    return o.forEach(function (t) {
      i.has(t) || s.push(t);
    }), i.forEach(function (t) {
      o.has(t) || u.push(t);
    }), this.Qc.Hl(s, u).then(function () {
      n.fl = r;
    });
  }, t.prototype.Vl = function (t) {
    // We check whether the client that wrote this online state is still active
    // by comparing its client ID to the list of clients kept active in
    // IndexedDb. If a client does not update their IndexedDb client state
    // within 5 seconds, it is considered inactive and we don't emit an online
    // state event.
    this.fl.get(t.clientId) && this.hc(t.onlineState);
  }, t.prototype.pl = function (t) {
    var e = st();
    return t.forEach(function (t, n) {
      e = e.Ct(n.activeTargetIds);
    }), e;
  }, t;
}(),
    ro =
/** @class */
function () {
  function t() {
    this.Yl = new eo(), this.Jl = {}, this.Qc = null, this.hc = null, this.On = null;
  }

  return t.prototype.bl = function (t) {// No op.
  }, t.prototype.Sl = function (t, e, n) {// No op.
  }, t.prototype.Cl = function (t) {
    return this.Yl.al(t), this.Jl[t] || "not-current";
  }, t.prototype.xl = function (t, e, n) {
    this.Jl[t] = e;
  }, t.prototype.Nl = function (t) {
    this.Yl.ul(t);
  }, t.prototype.$l = function (t) {
    return this.Yl.activeTargetIds.has(t);
  }, t.prototype.kl = function (t) {
    delete this.Jl[t];
  }, t.prototype.gl = function () {
    return this.Yl.activeTargetIds;
  }, t.prototype.yl = function (t) {
    return this.Yl.activeTargetIds.has(t);
  }, t.prototype.start = function () {
    return this.Yl = new eo(), Promise.resolve();
  }, t.prototype.Hh = function (t, e, n) {// No op.
  }, t.prototype.Ll = function (t) {// No op.
  }, t.prototype.Ur = function () {}, t.prototype.Un = function (t) {}, t;
}(),
    io = function io(t) {
  this.key = t;
},
    oo = function oo(t) {
  this.key = t;
},
    so =
/** @class */
function () {
  function t(t,
  /** Documents included in the remote target */
  e) {
    this.query = t, this.Xl = e, this.Zl = null,
    /**
         * A flag whether the view is current with the backend. A view is considered
         * current after it has seen the current flag from the backend and did not
         * lose consistency within the watch stream (e.g. because of an existence
         * filter mismatch).
         */
    this.Ht = !1,
    /** Documents in the view but not in the remote target */
    this.t_ = it(),
    /** Document Keys that have local changes */
    this.Ot = it(), this.e_ = new ut(t.Ds.bind(t));
  }

  return Object.defineProperty(t.prototype, "s_", {
    /**
     * The set of remote documents that the server has told us belongs to the target associated with
     * this view.
     */
    get: function get() {
      return this.Xl;
    },
    enumerable: !0,
    configurable: !0
  }),
  /**
   * Iterates over a set of doc changes, applies the query limit, and computes
   * what the new results should be, what the changes were, and whether we may
   * need to go back to the local cache for more results. Does not make any
   * changes to the view.
   * @param docChanges The doc changes to apply to this view.
   * @param previousChanges If this is being called with a refill, then start
   *        with this set of docs and changes instead of the current view.
   * @return a new set of docs, changes, and refill flag.
   */
  t.prototype.n_ = function (t, e) {
    var n = this,
        r = e ? e.i_ : new at(),
        i = e ? e.e_ : this.e_,
        o = e ? e.Ot : this.Ot,
        s = i,
        u = !1,
        a = this.query.ks() && i.size === this.query.limit ? i.last() : null,
        c = this.query.xs() && i.size === this.query.limit ? i.first() : null; // Drop documents out to meet limit/limitToLast requirement.

    if (t.ot(function (t, e) {
      var h = i.get(t),
          f = e instanceof Oe ? e : null;
      f && (f = n.query.matches(f) ? f : null);
      var l = !!h && n.Ot.has(h.key),
          p = !!f && (f.Xe || // We only consider committed mutations for documents that were
      // mutated during the lifetime of the view.
      n.Ot.has(f.key) && f.hasCommittedMutations),
          d = !1; // Calculate change

      h && f ? h.data().isEqual(f.data()) ? l !== p && (r.track({
        type: 3
        /* Metadata */
        ,
        doc: f
      }), d = !0) : n.r_(h, f) || (r.track({
        type: 2
        /* Modified */
        ,
        doc: f
      }), d = !0, (a && n.query.Ds(f, a) > 0 || c && n.query.Ds(f, c) < 0) && ( // This doc moved from inside the limit to outside the limit.
      // That means there may be some other doc in the local cache
      // that should be included instead.
      u = !0)) : !h && f ? (r.track({
        type: 0
        /* Added */
        ,
        doc: f
      }), d = !0) : h && !f && (r.track({
        type: 1
        /* Removed */
        ,
        doc: h
      }), d = !0, (a || c) && ( // A doc was removed from a full limit query. We'll need to
      // requery from the local cache to see if we know about some other
      // doc that should be in the results.
      u = !0)), d && (f ? (s = s.add(f), o = p ? o.add(t) : o.delete(t)) : (s = s.delete(t), o = o.delete(t)));
    }), this.query.ks() || this.query.xs()) for (; s.size > this.query.limit;) {
      var h = this.query.ks() ? s.last() : s.first();
      s = s.delete(h.key), o = o.delete(h.key), r.track({
        type: 1
        /* Removed */
        ,
        doc: h
      });
    }
    return {
      e_: s,
      i_: r,
      o_: u,
      Ot: o
    };
  }, t.prototype.r_ = function (t, e) {
    // We suppress the initial change event for documents that were modified as
    // part of a write acknowledgment (e.g. when the value of a server transform
    // is applied) as Watch will send us the same document again.
    // By suppressing the event, we only raise two user visible events (one with
    // `hasPendingWrites` and the final state of the document) instead of three
    // (one with `hasPendingWrites`, the modified document with
    // `hasPendingWrites` and the final state of the document).
    return t.Xe && e.hasCommittedMutations && !e.Xe;
  },
  /**
   * Updates the view with the given ViewDocumentChanges and optionally updates
   * limbo docs and sync state from the provided target change.
   * @param docChanges The set of changes to make to the view's docs.
   * @param updateLimboDocuments Whether to update limbo documents based on this
   *        change.
   * @param targetChange A target change to apply for computing limbo docs and
   *        sync state.
   * @return A new ViewChange with the given docs, changes, and sync state.
   */
  // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
  t.prototype.wn = function (t, e, n) {
    var r = this,
        i = this.e_;
    this.e_ = t.e_, this.Ot = t.Ot; // Sort changes based on type and query comparator

    var o = t.i_.Mt();
    o.sort(function (t, e) {
      return function (t, e) {
        var n = function n(t) {
          switch (t) {
            case 0
            /* Added */
            :
              return 1;

            case 2
            /* Modified */
            :
            case 3
            /* Metadata */
            :
              // A metadata change is converted to a modified change at the public
              // api layer.  Since we sort by document key and then change type,
              // metadata and modified changes must be sorted equivalently.
              return 2;

            case 1
            /* Removed */
            :
              return 0;

            default:
              return p();
          }
        };

        return n(t) - n(e);
      }(t.type, e.type) || r.query.Ds(t.doc, e.doc);
    }), this.h_(n);
    var s = e ? this.a_() : [],
        u = 0 === this.t_.size && this.Ht ? 1
    /* Synced */
    : 0
    /* Local */
    ,
        a = u !== this.Zl;
    return this.Zl = u, 0 !== o.length || a ? {
      snapshot: new ct(this.query, t.e_, i, o, t.Ot, 0
      /* Local */
      === u, a,
      /* excludesMetadataChanges= */
      !1),
      u_: s
    } : {
      u_: s
    }; // no changes
  },
  /**
   * Applies an OnlineState change to the view, potentially generating a
   * ViewChange if the view's syncState changes as a result.
   */
  t.prototype.c_ = function (t) {
    return this.Ht && "Offline"
    /* Offline */
    === t ? ( // If we're offline, set `current` to false and then call applyChanges()
    // to refresh our syncState and generate a ViewChange as appropriate. We
    // are guaranteed to get a new TargetChange that sets `current` back to
    // true once the client is back online.
    this.Ht = !1, this.wn({
      e_: this.e_,
      i_: new at(),
      Ot: this.Ot,
      o_: !1
    },
    /* updateLimboDocuments= */
    !1)) : {
      u_: []
    };
  },
  /**
   * Returns whether the doc for the given key should be in limbo.
   */
  t.prototype.l_ = function (t) {
    // If the remote end says it's part of this query, it's not in limbo.
    return !this.Xl.has(t) && // The local store doesn't think it's a result, so it shouldn't be in limbo.
    !!this.e_.has(t) && !this.e_.get(t).Xe;
  },
  /**
   * Updates syncedDocuments, current, and limbo docs based on the given change.
   * Returns the list of changes to which docs are in limbo.
   */
  t.prototype.h_ = function (t) {
    var e = this;
    t && (t.Yt.forEach(function (t) {
      return e.Xl = e.Xl.add(t);
    }), t.Jt.forEach(function (t) {}), t.Xt.forEach(function (t) {
      return e.Xl = e.Xl.delete(t);
    }), this.Ht = t.Ht);
  }, t.prototype.a_ = function () {
    var t = this; // We can only determine limbo documents when we're in-sync with the server.

    if (!this.Ht) return []; // TODO(klimt): Do this incrementally so that it's not quadratic when
    // updating many documents.

    var e = this.t_;
    this.t_ = it(), this.e_.forEach(function (e) {
      t.l_(e.key) && (t.t_ = t.t_.add(e.key));
    }); // Diff the new limbo docs with the old limbo docs.

    var n = [];
    return e.forEach(function (e) {
      t.t_.has(e) || n.push(new oo(e));
    }), this.t_.forEach(function (t) {
      e.has(t) || n.push(new io(t));
    }), n;
  },
  /**
   * Update the in-memory state of the current view with the state read from
   * persistence.
   *
   * We update the query view whenever a client's primary status changes:
   * - When a client transitions from primary to secondary, it can miss
   *   LocalStorage updates and its query views may temporarily not be
   *   synchronized with the state on disk.
   * - For secondary to primary transitions, the client needs to update the list
   *   of `syncedDocuments` since secondary clients update their query views
   *   based purely on synthesized RemoteEvents.
   *
   * @param queryResult.documents - The documents that match the query according
   * to the LocalStore.
   * @param queryResult.remoteKeys - The keys of the documents that match the
   * query according to the backend.
   *
   * @return The ViewChange that resulted from this synchronization.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.__ = function (t) {
    this.Xl = t._a, this.t_ = it();
    var e = this.n_(t.documents);
    return this.wn(e,
    /*updateLimboDocuments=*/
    !0);
  },
  /**
   * Returns a view snapshot as if this query was just listened to. Contains
   * a document add for every existing document and the `fromCache` and
   * `hasPendingWrites` status of the already established view.
   */
  // PORTING NOTE: Multi-tab only.
  t.prototype.f_ = function () {
    return ct.Ut(this.query, this.e_, this.Ot, 0
    /* Local */
    === this.Zl);
  }, t;
}(),
    uo =
/** @class */
function () {
  function t(t, e, n, r) {
    this.Oo = t, this.Xu = e, this.updateFunction = n, this.Uo = r, this.d_ = 5, this.Zo = new hn(this.Oo, "transaction_retry"
    /* TransactionRetry */
    )
    /** Runs the transaction and sets the result on deferred. */
    ;
  }

  return t.prototype.w_ = function () {
    this.T_();
  }, t.prototype.T_ = function () {
    var t = this;
    this.Zo.Zn(function () {
      return e.__awaiter(t, void 0, void 0, function () {
        var t,
            n,
            r = this;
        return e.__generator(this, function (e) {
          return t = new zi(this.Xu), (n = this.E_(t)) && n.then(function (e) {
            r.Oo.Sr(function () {
              return t.commit().then(function () {
                r.Uo.resolve(e);
              }).catch(function (t) {
                r.I_(t);
              });
            });
          }).catch(function (t) {
            r.I_(t);
          }), [2
          /*return*/
          ];
        });
      });
    });
  }, t.prototype.E_ = function (t) {
    try {
      var e = this.updateFunction(t);
      return !V(e) && e.catch && e.then ? e : (this.Uo.reject(Error("Transaction callback must return a Promise")), null);
    } catch (t) {
      // Do not retry errors thrown by user provided updateFunction.
      return this.Uo.reject(t), null;
    }
  }, t.prototype.I_ = function (t) {
    var e = this;
    this.d_ > 0 && this.A_(t) ? (this.d_ -= 1, this.Oo.Sr(function () {
      return e.T_(), Promise.resolve();
    })) : this.Uo.reject(t);
  }, t.prototype.A_ = function (t) {
    if ("FirebaseError" === t.name) {
      // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
      // non-matching document versions with ABORTED. These errors should be retried.
      var e = t.code;
      return "aborted" === e || "failed-precondition" === e || !G(e);
    }

    return !1;
  }, t;
}(),
    ao = function ao(
/**
     * The query itself.
     */
t,
/**
     * The target number created by the client that is used in the watch
     * stream to identify this query.
     */
e,
/**
     * The view is responsible for computing the final merged truth of what
     * docs are in the query. It gets notified of local and remote changes,
     * and applies the query filters and limits to determine the most correct
     * possible results.
     */
n) {
  this.query = t, this.targetId = e, this.view = n;
},
    co = function co(t) {
  this.key = t,
  /**
           * Set to true once we've received a document. This is used in
           * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
           * decide whether it needs to manufacture a delete event for the target once
           * the target is CURRENT.
           */
  this.R_ = !1;
},
    ho =
/** @class */
function () {
  function t(t, e, n, // PORTING NOTE: Manages state synchronization in multi-tab environments.
  r, i, o) {
    this.Tc = t, this.m_ = e, this.Xu = n, this.P_ = r, this.currentUser = i, this.V_ = o, this.g_ = null, this.p_ = new A(function (t) {
      return t.canonicalId();
    }, function (t, e) {
      return t.isEqual(e);
    }), this.y_ = new Map(),
    /**
         * The keys of documents that are in limbo for which we haven't yet started a
         * limbo resolution query.
         */
    this.b_ = [],
    /**
         * Keeps track of the target ID for each document that is in limbo with an
         * active target.
         */
    this.v_ = new W(L.P),
    /**
         * Keeps track of the information about an active limbo resolution for each
         * active target ID that was started for the purpose of limbo resolution.
         */
    this.S_ = new Map(), this.D_ = new qr(),
    /** Stores user completion handlers, indexed by User and BatchId. */
    this.C_ = {},
    /** Stores user callbacks waiting for all pending writes to be acknowledged. */
    this.F_ = new Map(), this.N_ = Un.Ci(), this.onlineState = "Unknown"
    /* Unknown */
    ;
  }

  return Object.defineProperty(t.prototype, "k_", {
    get: function get() {
      return !0;
    },
    enumerable: !0,
    configurable: !0
  }),
  /** Subscribes to SyncEngine notifications. Has to be called exactly once. */
  t.prototype.subscribe = function (t) {
    this.g_ = t;
  },
  /**
   * Initiates the new listen, resolves promise when listen enqueued to the
   * server. All the subsequent view snapshots or errors are sent to the
   * subscribed handlers. Returns the initial snapshot.
   */
  t.prototype.listen = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o, s;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.x_("listen()"), (i = this.p_.get(t)) ? ( // PORTING NOTE: With Multi-Tab Web, it is possible that a query view
            // already exists when EventManager calls us for the first time. This
            // happens when the primary tab is already listening to this query on
            // behalf of another tab and the user of the primary also starts listening
            // to the query. EventManager will not have an assigned target ID in this
            // case and calls `listen` to obtain this ID.
            n = i.targetId, this.P_.Cl(n), r = i.view.f_(), [3
            /*break*/
            , 4]) : [3
            /*break*/
            , 1];

          case 1:
            return [4
            /*yield*/
            , this.Tc.ua(t.We())];

          case 2:
            return o = e.sent(), s = this.P_.Cl(o.targetId), n = o.targetId, [4
            /*yield*/
            , this.M_(t, n, "current" === s)];

          case 3:
            r = e.sent(), this.k_ && this.m_.listen(o), e.label = 4;

          case 4:
            return [2
            /*return*/
            , r];
        }
      });
    });
  },
  /**
   * Registers a view for a previously unknown query and computes its initial
   * snapshot.
   */
  t.prototype.M_ = function (t, n, r) {
    return e.__awaiter(this, void 0, void 0, function () {
      var i, o, s, u, a, c;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return [4
            /*yield*/
            , this.Tc.la(t,
            /* usePreviousResults= */
            !0)];

          case 1:
            return i = e.sent(), o = new so(t, i._a), s = o.n_(i.documents), u = ft.zt(n, r && "Offline"
            /* Offline */
            !== this.onlineState), a = o.wn(s,
            /* updateLimboDocuments= */
            this.k_, u), this.L_(n, a.u_), c = new ao(t, n, o), [2
            /*return*/
            , (this.p_.set(t, c), this.y_.has(n) ? this.y_.get(n).push(t) : this.y_.set(n, [t]), a.snapshot)];
        }
      });
    });
  },
  /** Stops listening to the query. */
  t.prototype.qc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            // Only clean up the query view and target if this is the only query mapped
            // to the target.
            return this.x_("unlisten()"), n = this.p_.get(t), (r = this.y_.get(n.targetId)).length > 1 ? [2
            /*return*/
            , (this.y_.set(n.targetId, r.filter(function (e) {
              return !e.isEqual(t);
            })), void this.p_.delete(t))] : this.k_ ? ( // We need to remove the local query target first to allow us to verify
            // whether any other client is still interested in this target.
            this.P_.Nl(n.targetId), this.P_.yl(n.targetId) ? [3
            /*break*/
            , 2] : [4
            /*yield*/
            , this.Tc.ca(n.targetId,
            /*keepPersistedTargetData=*/
            !1).then(function () {
              i.P_.kl(n.targetId), i.m_.qc(n.targetId), i.O_(n.targetId);
            }).catch(Cr)]) : [3
            /*break*/
            , 3];

          case 1:
            e.sent(), e.label = 2;

          case 2:
            return [3
            /*break*/
            , 5];

          case 3:
            return this.O_(n.targetId), [4
            /*yield*/
            , this.Tc.ca(n.targetId,
            /*keepPersistedTargetData=*/
            !0)];

          case 4:
            e.sent(), e.label = 5;

          case 5:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Initiates the write of local mutation batch which involves adding the
   * writes to the mutation queue, notifying the remote store about new
   * mutations and raising events for any changes this write caused.
   *
   * The promise returned by this call is resolved when the above steps
   * have completed, *not* when the write was acked by the backend. The
   * userCallback is resolved once the write was acked/rejected by the
   * backend (or failed locally for any other reason).
   */
  t.prototype.write = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r, i, o;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            this.x_("write()"), e.label = 1;

          case 1:
            return e.trys.push([1, 5,, 6]), [4
            /*yield*/
            , this.Tc.Zh(t)];

          case 2:
            return r = e.sent(), this.P_.bl(r.batchId), this.B_(r.batchId, n), [4
            /*yield*/
            , this.q_(r.on)];

          case 3:
            return e.sent(), [4
            /*yield*/
            , this.m_.Mc()];

          case 4:
            return e.sent(), [3
            /*break*/
            , 6];

          case 5:
            return i = e.sent(), o = Sr(i, "Failed to persist write"), n.reject(o), [3
            /*break*/
            , 6];

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Takes an updateFunction in which a set of reads and writes can be performed
   * atomically. In the updateFunction, the client can read and write values
   * using the supplied transaction object. After the updateFunction, all
   * changes will be committed. If a retryable error occurs (ex: some other
   * client has changed any of the data referenced), then the updateFunction
   * will be called again after a backoff. If the updateFunction still fails
   * after all retries, then the transaction will be rejected.
   *
   * The transaction object passed to the updateFunction contains methods for
   * accessing documents and collections. Unlike other datastore access, data
   * accessed with the transaction will not reflect local changes that have not
   * been committed. For this reason, it is required that all reads are
   * performed before any writes. Transactions must be performed while online.
   *
   * The Deferred input is resolved when the transaction is fully committed.
   */
  t.prototype.runTransaction = function (t, e, n) {
    new uo(t, this.Xu, e, n).w_();
  }, t.prototype.na = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            this.x_("applyRemoteEvent()"), e.label = 1;

          case 1:
            return e.trys.push([1, 4,, 6]), [4
            /*yield*/
            , this.Tc.na(t)];

          case 2:
            return n = e.sent(), // Update `receivedDocument` as appropriate for any limbo targets.
            t.Qt.forEach(function (t, e) {
              var n = r.S_.get(e);
              n && ( // Since this is a limbo resolution lookup, it's for a single document
              // and it could be added, modified, or removed, but not a combination.
              d(t.Yt.size + t.Jt.size + t.Xt.size <= 1), t.Yt.size > 0 ? n.R_ = !0 : t.Jt.size > 0 ? d(n.R_) : t.Xt.size > 0 && (d(n.R_), n.R_ = !1));
            }), [4
            /*yield*/
            , this.q_(n, t)];

          case 3:
            // Update `receivedDocument` as appropriate for any limbo targets.
            return e.sent(), [3
            /*break*/
            , 6];

          case 4:
            return [4
            /*yield*/
            , Cr(e.sent())];

          case 5:
            return e.sent(), [3
            /*break*/
            , 6];

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Applies an OnlineState change to the sync engine and notifies any views of
   * the change.
   */
  t.prototype.c_ = function (t, e) {
    this.x_("applyOnlineStateChange()");
    var n = [];
    this.p_.forEach(function (e, r) {
      var i = r.view.c_(t);
      i.snapshot && n.push(i.snapshot);
    }), this.g_.U_(t), this.g_.Lu(n), this.onlineState = t;
  }, t.prototype.zc = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r,
          i,
          o,
          s,
          u,
          a = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.x_("rejectListens()"), // PORTING NOTE: Multi-tab only.
            this.P_.xl(t, "rejected", n), r = this.S_.get(t), (i = r && r.key) ? (o = (o = new W(L.P)).et(i, new Ue(i, k.min())), s = it().add(i), u = new ht(k.min(),
            /* targetChanges= */
            new Map(),
            /* targetMismatches= */
            new Y(m), o, s), [4
            /*yield*/
            , this.na(u)]) : [3
            /*break*/
            , 2];

          case 1:
            return e.sent(), // Since this query failed, we won't want to manually unlisten to it.
            // We only remove it from bookkeeping after we successfully applied the
            // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
            // this query when the RemoteStore restarts the Watch stream, which should
            // re-trigger the target failure.
            this.v_ = this.v_.remove(i), this.S_.delete(t), this.Q_(), [3
            /*break*/
            , 4];

          case 2:
            return [4
            /*yield*/
            , this.Tc.ca(t,
            /* keepPersistedTargetData */
            !1).then(function () {
              return a.O_(t, n);
            }).catch(Cr)];

          case 3:
            e.sent(), e.label = 4;

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.tl = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            this.x_("applySuccessfulWrite()"), n = t.batch.batchId, e.label = 1;

          case 1:
            return e.trys.push([1, 4,, 6]), [4
            /*yield*/
            , this.Tc.ta(t)];

          case 2:
            return r = e.sent(), // The local store may or may not be able to apply the write result and
            // raise events immediately (depending on whether the watcher is caught
            // up), so we raise user callbacks first so that they consistently happen
            // before listen events.
            this.W_(n,
            /*error=*/
            null), this.j_(n), this.P_.Sl(n, "acknowledged"), [4
            /*yield*/
            , this.q_(r)];

          case 3:
            // The local store may or may not be able to apply the write result and
            // raise events immediately (depending on whether the watcher is caught
            // up), so we raise user callbacks first so that they consistently happen
            // before listen events.
            return e.sent(), [3
            /*break*/
            , 6];

          case 4:
            return [4
            /*yield*/
            , Cr(e.sent())];

          case 5:
            return e.sent(), [3
            /*break*/
            , 6];

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.sl = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            this.x_("rejectFailedWrite()"), e.label = 1;

          case 1:
            return e.trys.push([1, 4,, 6]), [4
            /*yield*/
            , this.Tc.sa(t)];

          case 2:
            return r = e.sent(), // The local store may or may not be able to apply the write result and
            // raise events immediately (depending on whether the watcher is caught up),
            // so we raise user callbacks first so that they consistently happen before
            // listen events.
            this.W_(t, n), this.j_(t), this.P_.Sl(t, "rejected", n), [4
            /*yield*/
            , this.q_(r)];

          case 3:
            // The local store may or may not be able to apply the write result and
            // raise events immediately (depending on whether the watcher is caught up),
            // so we raise user callbacks first so that they consistently happen before
            // listen events.
            return e.sent(), [3
            /*break*/
            , 6];

          case 4:
            return [4
            /*yield*/
            , Cr(e.sent())];

          case 5:
            return e.sent(), [3
            /*break*/
            , 6];

          case 6:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Registers a user callback that resolves when all pending mutations at the moment of calling
   * are acknowledged .
   */
  t.prototype.K_ = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            this.m_.Vc() || h("SyncEngine", "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."), e.label = 1;

          case 1:
            return e.trys.push([1, 3,, 4]), [4
            /*yield*/
            , this.Tc.Ao()];

          case 2:
            return -1 === (n = e.sent()) ? [2
            /*return*/
            , void t.resolve()] : ((r = this.F_.get(n) || []).push(t), this.F_.set(n, r), [3
            /*break*/
            , 4]);

          case 3:
            return i = e.sent(), o = Sr(i, "Initialization of waitForPendingWrites() operation failed"), t.reject(o), [3
            /*break*/
            , 4];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
   * if there are any.
   */
  t.prototype.j_ = function (t) {
    (this.F_.get(t) || []).forEach(function (t) {
      t.resolve();
    }), this.F_.delete(t);
  },
  /** Reject all outstanding callbacks waiting for pending writes to complete. */
  t.prototype.G_ = function (t) {
    this.F_.forEach(function (e) {
      e.forEach(function (e) {
        e.reject(new S(x.CANCELLED, t));
      });
    }), this.F_.clear();
  }, t.prototype.B_ = function (t, e) {
    var n = this.C_[this.currentUser.su()];
    n || (n = new W(m)), n = n.et(t, e), this.C_[this.currentUser.su()] = n;
  },
  /**
   * Resolves or rejects the user callback for the given batch and then discards
   * it.
   */
  t.prototype.W_ = function (t, e) {
    var n = this.C_[this.currentUser.su()]; // NOTE: Mutations restored from persistence won't have callbacks, so it's
    // okay for there to be no callback for this ID.

    if (n) {
      var r = n.get(t);
      r && (e ? r.reject(e) : r.resolve(), n = n.remove(t)), this.C_[this.currentUser.su()] = n;
    }
  }, t.prototype.O_ = function (t, e) {
    var n = this;
    void 0 === e && (e = null), this.P_.Nl(t);

    for (var r = 0, i = this.y_.get(t); r < i.length; r++) {
      var o = i[r];
      this.p_.delete(o), e && this.g_.z_(o, e);
    }

    this.y_.delete(t), this.k_ && this.D_.ga(t).forEach(function (t) {
      n.D_.tr(t) || // We removed the last reference for this key
      n.H_(t);
    });
  }, t.prototype.H_ = function (t) {
    // It's possible that the target already got removed because the query failed. In that case,
    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
    var e = this.v_.get(t);
    null !== e && (this.m_.qc(e), this.v_ = this.v_.remove(t), this.S_.delete(e), this.Q_());
  }, t.prototype.L_ = function (t, e) {
    for (var n = 0, r = e; n < r.length; n++) {
      var i = r[n];
      i instanceof io ? (this.D_.Hi(i.key, t), this.Y_(i)) : i instanceof oo ? (h("SyncEngine", "Document no longer in limbo: " + i.key), this.D_.Ji(i.key, t), this.D_.tr(i.key) || // We removed the last reference for this key
      this.H_(i.key)) : p();
    }
  }, t.prototype.Y_ = function (t) {
    var e = t.key;
    this.v_.get(e) || (h("SyncEngine", "New document in limbo: " + e), this.b_.push(e), this.Q_());
  },
  /**
   * Starts listens for documents in limbo that are enqueued for resolution,
   * subject to a maximum number of concurrent resolutions.
   *
   * Without bounding the number of concurrent resolutions, the server can fail
   * with "resource exhausted" errors which can lead to pathological client
   * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
   */
  t.prototype.Q_ = function () {
    for (; this.b_.length > 0 && this.v_.size < this.V_;) {
      var t = this.b_.shift(),
          e = this.N_.next();
      this.S_.set(e, new co(t)), this.v_ = this.v_.et(t, e), this.m_.listen(new B(Ve.As(t.path).We(), e, 2
      /* LimboResolution */
      , an.Qn));
    }
  }, // Visible for testing
  t.prototype.J_ = function () {
    return this.v_;
  }, // Visible for testing
  t.prototype.X_ = function () {
    return this.b_;
  }, t.prototype.q_ = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r,
          i,
          o,
          s = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return r = [], i = [], o = [], this.p_.forEach(function (e, u) {
              o.push(Promise.resolve().then(function () {
                var e = u.view.n_(t);
                return e.o_ ? s.Tc.la(u.query,
                /* usePreviousResults= */
                !1).then(function (t) {
                  var n = t.documents;
                  return u.view.n_(n, e);
                }) : e; // The query has a limit and some docs were removed, so we need
                // to re-run the query against the local store to make sure we
                // didn't lose any good docs that had been past the limit.
              }).then(function (t) {
                var e = n && n.Qt.get(u.targetId),
                    o = u.view.wn(t,
                /* updateLimboDocuments= */
                s.k_, e);

                if (s.L_(u.targetId, o.u_), o.snapshot) {
                  s.k_ && s.P_.xl(u.targetId, o.snapshot.fromCache ? "not-current" : "current"), r.push(o.snapshot);
                  var a = un.Ln(u.targetId, o.snapshot);
                  i.push(a);
                }
              }));
            }), [4
            /*yield*/
            , Promise.all(o)];

          case 1:
            return e.sent(), this.g_.Lu(r), [4
            /*yield*/
            , this.Tc.oa(i)];

          case 2:
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.x_ = function (t) {}, t.prototype.il = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.currentUser.isEqual(t) ? [3
            /*break*/
            , 3] : (h("SyncEngine", "User change. New user:", t.su()), [4
            /*yield*/
            , this.Tc.Hh(t)]);

          case 1:
            return n = e.sent(), this.currentUser = t, // Fails tasks waiting for pending writes requested by previous user.
            this.G_("'waitForPendingWrites' promise is rejected due to a user change."), // TODO(b/114226417): Consider calling this only in the primary tab.
            this.P_.Hh(t, n.Jh, n.Xh), [4
            /*yield*/
            , this.q_(n.Yh)];

          case 2:
            e.sent(), e.label = 3;

          case 3:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.enableNetwork = function () {
    return this.m_.enableNetwork();
  }, t.prototype.disableNetwork = function () {
    return this.m_.disableNetwork();
  }, t.prototype.xe = function (t) {
    var e = this.S_.get(t);
    if (e && e.R_) return it().add(e.key);
    var n = it(),
        r = this.y_.get(t);
    if (!r) return n;

    for (var i = 0, o = r; i < o.length; i++) {
      var s = o[i],
          u = this.p_.get(s);
      n = n.Ct(u.view.s_);
    }

    return n;
  }, t;
}(),
    fo =
/** @class */
function (t) {
  function n(e, n, r, i, o, s) {
    var u = this;
    return (u = t.call(this, e, n, r, i, o, s) || this).Tc = e, // The primary state is set to `true` or `false` immediately after Firestore
    // startup. In the interim, a client should only be considered primary if
    // `isPrimary` is true.
    u.Z_ = void 0, u;
  }

  return e.__extends(n, t), Object.defineProperty(n.prototype, "k_", {
    get: function get() {
      return !0 === this.Z_;
    },
    enumerable: !0,
    configurable: !0
  }), n.prototype.enableNetwork = function () {
    return this.Tc.vr(!0), t.prototype.enableNetwork.call(this);
  }, n.prototype.disableNetwork = function () {
    return this.Tc.vr(!1), t.prototype.disableNetwork.call(this);
  },
  /**
   * Reconcile the list of synced documents in an existing view with those
   * from persistence.
   */
  n.prototype.tf = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return [4
            /*yield*/
            , this.Tc.la(t.query,
            /* usePreviousResults= */
            !0)];

          case 1:
            return n = e.sent(), r = t.view.__(n), [2
            /*return*/
            , (this.Z_ && this.L_(t.targetId, r.u_), r)];
        }
      });
    });
  }, n.prototype.c_ = function (e, n) {
    // If we are the primary client, the online state of all clients only
    // depends on the online state of the local RemoteStore.
    this.k_ && 0
    /* RemoteStore */
    === n && (t.prototype.c_.call(this, e, n), this.P_.Ll(e)), // If we are the secondary client, we explicitly ignore the remote store's
    // online state (the local client may go offline, even though the primary
    // tab remains online) and only apply the primary tab's online state from
    // SharedClientState.
    this.k_ || 1
    /* SharedClientState */
    !== n || t.prototype.c_.call(this, e, n);
  }, n.prototype.Gl = function (t, n, r) {
    return e.__awaiter(this, void 0, void 0, function () {
      var i;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.x_("applyBatchState()"), [4
            /*yield*/
            , this.Tc.da(t)];

          case 1:
            return null === (i = e.sent()) ? [3
            /*break*/
            , 6] : "pending" !== n ? [3
            /*break*/
            , 3] : [4
            /*yield*/
            , this.m_.Mc()];

          case 2:
            // If we are the primary client, we need to send this write to the
            // backend. Secondary clients will ignore these writes since their remote
            // connection is disabled.
            return e.sent(), [3
            /*break*/
            , 4];

          case 3:
            "acknowledged" === n || "rejected" === n ? ( // NOTE: Both these methods are no-ops for batches that originated from
            // other clients.
            this.W_(t, r || null), this.Tc.wa(t)) : p(), e.label = 4;

          case 4:
            return [4
            /*yield*/
            , this.q_(i)];

          case 5:
            return e.sent(), [3
            /*break*/
            , 7];

          case 6:
            // A throttled tab may not have seen the mutation before it was completed
            // and removed from the mutation queue, in which case we won't have cached
            // the affected documents. In this case we can safely ignore the update
            // since that means we didn't apply the mutation locally at all (if we
            // had, we would have cached the affected documents), and so we will just
            // see any resulting document changes via normal remote document updates
            // as applicable.
            h("SyncEngine", "Cannot apply mutation batch with id: " + t), e.label = 7;

          case 7:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.rl = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r,
          i,
          o,
          s,
          u,
          a,
          c = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return !0 !== t || !0 === this.Z_ ? [3
            /*break*/
            , 3] : (n = this.P_.gl(), [4
            /*yield*/
            , this.ef(n.F(),
            /*transitionToPrimary=*/
            !0)]);

          case 1:
            return r = e.sent(), this.Z_ = !0, [4
            /*yield*/
            , this.m_.rl(!0)];

          case 2:
            for (e.sent(), i = 0, o = r; i < o.length; i++) {
              s = o[i], this.m_.listen(s);
            }

            return [3
            /*break*/
            , 7];

          case 3:
            return !1 !== t || !1 === this.Z_ ? [3
            /*break*/
            , 7] : (u = [], a = Promise.resolve(), this.y_.forEach(function (t, e) {
              c.P_.$l(e) ? u.push(e) : a = a.then(function () {
                return c.O_(e), c.Tc.ca(e,
                /*keepPersistedTargetData=*/
                !0);
              }), c.m_.qc(e);
            }), [4
            /*yield*/
            , a]);

          case 4:
            return e.sent(), [4
            /*yield*/
            , this.ef(u,
            /*transitionToPrimary=*/
            !1)];

          case 5:
            return e.sent(), this.sf(), this.Z_ = !1, [4
            /*yield*/
            , this.m_.rl(!1)];

          case 6:
            e.sent(), e.label = 7;

          case 7:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.sf = function () {
    var t = this;
    this.S_.forEach(function (e, n) {
      t.m_.qc(n);
    }), this.D_.pa(), this.S_ = new Map(), this.v_ = new W(L.P);
  },
  /**
   * Reconcile the query views of the provided query targets with the state from
   * persistence. Raises snapshots for any changes that affect the local
   * client and returns the updated state of all target's query data.
   *
   * @param targets the list of targets with views that need to be recomputed
   * @param transitionToPrimary `true` iff the tab transitions from a secondary
   * tab to a primary tab
   */
  n.prototype.ef = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o, s, u, a, c, h, f, l, p, d;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            n = [], r = [], i = 0, o = t, e.label = 1;

          case 1:
            return i < o.length ? (s = o[i], u = void 0, (a = this.y_.get(s)) && 0 !== a.length ? [4
            /*yield*/
            , this.Tc.ua(a[0].We())] : [3
            /*break*/
            , 7]) : [3
            /*break*/
            , 13];

          case 2:
            // For queries that have a local View, we fetch their current state
            // from LocalStore (as the resume token and the snapshot version
            // might have changed) and reconcile their views with the persisted
            // state (the list of syncedDocuments may have gotten out of sync).
            u = e.sent(), c = 0, h = a, e.label = 3;

          case 3:
            return c < h.length ? (f = h[c], l = this.p_.get(f), [4
            /*yield*/
            , this.tf(l)]) : [3
            /*break*/
            , 6];

          case 4:
            (p = e.sent()).snapshot && r.push(p.snapshot), e.label = 5;

          case 5:
            return c++, [3
            /*break*/
            , 3];

          case 6:
            return [3
            /*break*/
            , 11];

          case 7:
            return [4
            /*yield*/
            , this.Tc.Ta(s)];

          case 8:
            return d = e.sent(), [4
            /*yield*/
            , this.Tc.ua(d)];

          case 9:
            return u = e.sent(), [4
            /*yield*/
            , this.M_(this.nf(d), s,
            /*current=*/
            !1)];

          case 10:
            e.sent(), e.label = 11;

          case 11:
            n.push(u), e.label = 12;

          case 12:
            return i++, [3
            /*break*/
            , 1];

          case 13:
            return [2
            /*return*/
            , (this.g_.Lu(r), n)];
        }
      });
    });
  },
  /**
   * Creates a `Query` object from the specified `Target`. There is no way to
   * obtain the original `Query`, so we synthesize a `Query` from the `Target`
   * object.
   *
   * The synthesized result might be different from the original `Query`, but
   * since the synthesized `Query` should return the same results as the
   * original one (only the presentation of results might differ), the potential
   * difference will not cause issues.
   */
  n.prototype.nf = function (t) {
    return new Ve(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, "F"
    /* First */
    , t.startAt, t.endAt);
  }, n.prototype.Gr = function () {
    return this.Tc.Gr();
  }, n.prototype.zl = function (t, n, r) {
    return e.__awaiter(this, void 0, void 0, function () {
      var i, o;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.Z_ ? ( // If we receive a target state notification via WebStorage, we are
            // either already secondary or another tab has taken the primary lease.
            h("SyncEngine", "Ignoring unexpected query state notification."), [3
            /*break*/
            , 8]) : [3
            /*break*/
            , 1];

          case 1:
            if (!this.y_.has(t)) return [3
            /*break*/
            , 8];

            switch (n) {
              case "current":
              case "not-current":
                return [3
                /*break*/
                , 2];

              case "rejected":
                return [3
                /*break*/
                , 5];
            }

            return [3
            /*break*/
            , 7];

          case 2:
            return [4
            /*yield*/
            , this.Tc.Ri()];

          case 3:
            return i = e.sent(), o = ht.Gt(t, "current" === n), [4
            /*yield*/
            , this.q_(i, o)];

          case 4:
            return e.sent(), [3
            /*break*/
            , 8];

          case 5:
            return [4
            /*yield*/
            , this.Tc.ca(t,
            /* keepPersistedTargetData */
            !0)];

          case 6:
            return e.sent(), this.O_(t, r), [3
            /*break*/
            , 8];

          case 7:
            p(), e.label = 8;

          case 8:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.Hl = function (t, n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r,
          i,
          o,
          s,
          u,
          a,
          c,
          f,
          l,
          p,
          d = this;
      return e.__generator(this, function (y) {
        switch (y.label) {
          case 0:
            if (!this.Z_) return [3
            /*break*/
            , 10];
            r = 0, i = t, y.label = 1;

          case 1:
            return r < i.length ? (o = i[r], this.y_.has(o) ? ( // A target might have been added in a previous attempt
            h("SyncEngine", "Adding an already active target " + o), [3
            /*break*/
            , 5]) : [4
            /*yield*/
            , this.Tc.Ta(o)]) : [3
            /*break*/
            , 6];

          case 2:
            return s = y.sent(), [4
            /*yield*/
            , this.Tc.ua(s)];

          case 3:
            return u = y.sent(), [4
            /*yield*/
            , this.M_(this.nf(s), u.targetId,
            /*current=*/
            !1)];

          case 4:
            y.sent(), this.m_.listen(u), y.label = 5;

          case 5:
            return r++, [3
            /*break*/
            , 1];

          case 6:
            a = function a(t) {
              return e.__generator(this, function (e) {
                switch (e.label) {
                  case 0:
                    return c.y_.has(t) ? [4
                    /*yield*/
                    , c.Tc.ca(t,
                    /* keepPersistedTargetData */
                    !1).then(function () {
                      d.m_.qc(t), d.O_(t);
                    }).catch(Cr)] : [3
                    /*break*/
                    , 2];
                  // Release queries that are still active.

                  case 1:
                    // Release queries that are still active.
                    e.sent(), e.label = 2;

                  case 2:
                    return [2
                    /*return*/
                    ];
                }
              });
            }, c = this, f = 0, l = n, y.label = 7;

          case 7:
            return f < l.length ? (p = l[f], [5
            /*yield**/
            , a(p)]) : [3
            /*break*/
            , 10];

          case 8:
            y.sent(), y.label = 9;

          case 9:
            return f++, [3
            /*break*/
            , 7];

          case 10:
            return [2
            /*return*/
            ];
        }
      });
    });
  }, n;
}(ho),
    lo = function lo() {
  this.if = void 0, this.rf = [];
},
    po =
/** @class */
function () {
  function t(t) {
    this.Qc = t, this.hf = new A(function (t) {
      return t.canonicalId();
    }, function (t, e) {
      return t.isEqual(e);
    }), this.onlineState = "Unknown"
    /* Unknown */
    , this.af = new Set(), this.Qc.subscribe(this);
  }

  return t.prototype.listen = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o, s, u;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            if (n = t.query, r = !1, (i = this.hf.get(n)) || (r = !0, i = new lo()), !r) return [3
            /*break*/
            , 4];
            e.label = 1;

          case 1:
            return e.trys.push([1, 3,, 4]), o = i, [4
            /*yield*/
            , this.Qc.listen(n)];

          case 2:
            return o.if = e.sent(), [3
            /*break*/
            , 4];

          case 3:
            return s = e.sent(), u = Sr(s, "Initialization of query '" + t.query + "' failed"), [2
            /*return*/
            , void t.onError(u)];

          case 4:
            return this.hf.set(n, i), i.rf.push(t), // Run global snapshot listeners if a consistent snapshot has been emitted.
            t.c_(this.onlineState), i.if && t.uf(i.if) && this.cf(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.qc = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n, r, i, o;
      return e.__generator(this, function (e) {
        return n = t.query, r = !1, (i = this.hf.get(n)) && (o = i.rf.indexOf(t)) >= 0 && (i.rf.splice(o, 1), r = 0 === i.rf.length), r ? [2
        /*return*/
        , (this.hf.delete(n), this.Qc.qc(n))] : [2
        /*return*/
        ];
      });
    });
  }, t.prototype.Lu = function (t) {
    for (var e = !1, n = 0, r = t; n < r.length; n++) {
      var i = r[n],
          o = i.query,
          s = this.hf.get(o);

      if (s) {
        for (var u = 0, a = s.rf; u < a.length; u++) {
          a[u].uf(i) && (e = !0);
        }

        s.if = i;
      }
    }

    e && this.cf();
  }, t.prototype.z_ = function (t, e) {
    var n = this.hf.get(t);
    if (n) for (var r = 0, i = n.rf; r < i.length; r++) {
      i[r].onError(e);
    } // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
    // after an error.

    this.hf.delete(t);
  }, t.prototype.U_ = function (t) {
    this.onlineState = t;
    var e = !1;
    this.hf.forEach(function (n, r) {
      for (var i = 0, o = r.rf; i < o.length; i++) {
        // Run global snapshot listeners if a consistent snapshot has been emitted.
        o[i].c_(t) && (e = !0);
      }
    }), e && this.cf();
  }, t.prototype.lf = function (t) {
    this.af.add(t), // Immediately fire an initial event, indicating all existing listeners
    // are in-sync.
    t.next();
  }, t.prototype._f = function (t) {
    this.af.delete(t);
  }, // Call all global snapshot listeners that have been set.
  t.prototype.cf = function () {
    this.af.forEach(function (t) {
      t.next();
    });
  }, t;
}(),
    yo =
/** @class */
function () {
  function t(t, e, n) {
    this.query = t, this.ff = e,
    /**
         * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
         * observer. This flag is set to true once we've actually raised an event.
         */
    this.df = !1, this.wf = null, this.onlineState = "Unknown"
    /* Unknown */
    , this.options = n || {}
    /**
    * Applies the new ViewSnapshot to this listener, raising a user-facing event
    * if applicable (depending on what changed, whether the user has opted into
    * metadata-only changes, etc.). Returns true if a user-facing event was
    * indeed raised.
    */
    ;
  }

  return t.prototype.uf = function (t) {
    if (!this.options.includeMetadataChanges) {
      for ( // Remove the metadata only changes.
      var e = [], n = 0, r = t.docChanges; n < r.length; n++) {
        var i = r[n];
        3
        /* Metadata */
        !== i.type && e.push(i);
      }

      t = new ct(t.query, t.docs, t.Lt, e, t.Ot, t.fromCache, t.Bt,
      /* excludesMetadataChanges= */
      !0);
    }

    var o = !1;
    return this.df ? this.Tf(t) && (this.ff.next(t), o = !0) : this.Ef(t, this.onlineState) && (this.If(t), o = !0), this.wf = t, o;
  }, t.prototype.onError = function (t) {
    this.ff.error(t);
  },
  /** Returns whether a snapshot was raised. */
  t.prototype.c_ = function (t) {
    this.onlineState = t;
    var e = !1;
    return this.wf && !this.df && this.Ef(this.wf, t) && (this.If(this.wf), e = !0), e;
  }, t.prototype.Ef = function (t, e) {
    // Always raise the first event when we're synced
    if (!t.fromCache) return !0; // NOTE: We consider OnlineState.Unknown as online (it should become Offline
    // or Online if we wait long enough).

    var n = "Offline"
    /* Offline */
    !== e; // Don't raise the event if we're online, aren't synced yet (checked
    // above) and are waiting for a sync.

    return !(this.options.Af && n || t.docs._() && "Offline"
    /* Offline */
    !== e); // Raise data from cache if we have any documents or we are offline
  }, t.prototype.Tf = function (t) {
    // We don't need to handle includeDocumentMetadataChanges here because
    // the Metadata only changes have already been stripped out if needed.
    // At this point the only changes we will see are the ones we should
    // propagate.
    if (t.docChanges.length > 0) return !0;
    var e = this.wf && this.wf.hasPendingWrites !== t.hasPendingWrites;
    return !(!t.Bt && !e) && !0 === this.options.includeMetadataChanges; // Generally we should have hit one of the cases above, but it's possible
    // to get here if there were only metadata docChanges and they got
    // stripped out.
  }, t.prototype.If = function (t) {
    t = ct.Ut(t.query, t.docs, t.Ot, t.fromCache), this.df = !0, this.ff.next(t);
  }, t;
}(),
    vo =
/** @class */
function () {
  function t() {}

  return t.prototype.zh = function (t) {
    this.Rf = t;
  }, t.prototype.Sn = function (t, e, n, i) {
    var o = this; // Queries that match all documents don't benefit from using
    // IndexFreeQueries. It is more efficient to scan all documents in a
    // collection, rather than to perform individual lookups.

    return e.Ss() || n.isEqual(k.min()) ? this.mf(t, e) : this.Rf.yn(t, i).next(function (s) {
      var u = o.Pf(e, s);
      return (e.ks() || e.xs()) && o.o_(e.ws, u, i, n) ? o.mf(t, e) : (c() <= r.LogLevel.DEBUG && h("IndexFreeQueryEngine", "Re-using previous result from %s to execute query: %s", n.toString(), e.toString()), o.Rf.Sn(t, e, n).next(function (t) {
        // We merge `previousResults` into `updateResults`, since
        // `updateResults` is already a DocumentMap. If a document is
        // contained in both lists, then its contents are the same.
        return u.forEach(function (e) {
          t = t.et(e.key, e);
        }), t;
      }));
    }); // Queries that have never seen a snapshot without limbo free documents
    // should also be run as a full collection scan.
  },
  /** Applies the query filter and sorting to the provided documents.  */
  t.prototype.Pf = function (t, e) {
    // Sort the documents and re-apply the query filter since previously
    // matching documents do not necessarily still match the query.
    var n = new Y(function (e, n) {
      return t.Ds(e, n);
    });
    return e.forEach(function (e, r) {
      r instanceof Oe && t.matches(r) && (n = n.add(r));
    }), n;
  },
  /**
   * Determines if a limit query needs to be refilled from cache, making it
   * ineligible for index-free execution.
   *
   * @param sortedPreviousResults The documents that matched the query when it
   * was last synchronized, sorted by the query's comparator.
   * @param remoteKeys The document keys that matched the query at the last
   * snapshot.
   * @param limboFreeSnapshotVersion The version of the snapshot when the query
   * was last synchronized.
   */
  t.prototype.o_ = function (t, e, n, r) {
    // The query needs to be refilled if a previously matching document no
    // longer matches.
    if (n.size !== e.size) return !0; // Limit queries are not eligible for index-free query execution if there is
    // a potential that an older document from cache now sorts before a document
    // that was previously part of the limit. This, however, can only happen if
    // the document at the edge of the limit goes out of limit.
    // If a document that is not the limit boundary sorts differently,
    // the boundary of the limit itself did not change and documents from cache
    // will continue to be "rejected" by this boundary. Therefore, we can ignore
    // any modifications that don't affect the last document.

    var i = "F"
    /* First */
    === t ? e.last() : e.first();
    return !!i && (i.hasPendingWrites || i.version.o(r) > 0);
  }, t.prototype.mf = function (t, e) {
    return c() <= r.LogLevel.DEBUG && h("IndexFreeQueryEngine", "Using full collection scan to execute query:", e.toString()), this.Rf.Sn(t, e, k.min());
  }, t;
}(),
    go =
/** @class */
function () {
  function t(t, e) {
    this.mn = t, this.Fi = e,
    /**
         * The set of all mutations that have been sent but not yet been applied to
         * the backend.
         */
    this.Rn = [],
    /** Next value to use when assigning sequential IDs to each mutation batch. */
    this.Vf = 1,
    /** An ordered mapping between documents and the mutations batch IDs. */
    this.gf = new Y(Fr.Ia);
  }

  return t.prototype.do = function (t) {
    return en.resolve(0 === this.Rn.length);
  }, t.prototype.wo = function (t, e, n, r) {
    var i = this.Vf;
    this.Vf++, this.Rn.length > 0 && this.Rn[this.Rn.length - 1];
    var o = new Ze(i, e, n, r);
    this.Rn.push(o); // Track references by document key and index collection parents.

    for (var s = 0, u = r; s < u.length; s++) {
      var a = u[s];
      this.gf = this.gf.add(new Fr(a.key, i)), this.mn.ri(t, a.key.path.p());
    }

    return en.resolve(o);
  }, t.prototype.To = function (t, e) {
    return en.resolve(this.pf(e));
  }, t.prototype.Io = function (t, e) {
    var n = e + 1,
        r = this.yf(n),
        i = r < 0 ? 0 : r; // The requested batchId may still be out of range so normalize it to the
    // start of the queue.

    return en.resolve(this.Rn.length > i ? this.Rn[i] : null);
  }, t.prototype.Ao = function () {
    return en.resolve(0 === this.Rn.length ? -1 : this.Vf - 1);
  }, t.prototype.Ro = function (t) {
    return en.resolve(this.Rn.slice());
  }, t.prototype.Vn = function (t, e) {
    var n = this,
        r = new Fr(e, 0),
        i = new Fr(e, Number.POSITIVE_INFINITY),
        o = [];
    return this.gf.vt([r, i], function (t) {
      var e = n.pf(t.ba);
      o.push(e);
    }), en.resolve(o);
  }, t.prototype.vn = function (t, e) {
    var n = this,
        r = new Y(m);
    return e.forEach(function (t) {
      var e = new Fr(t, 0),
          i = new Fr(t, Number.POSITIVE_INFINITY);
      n.gf.vt([e, i], function (t) {
        r = r.add(t.ba);
      });
    }), en.resolve(this.bf(r));
  }, t.prototype.$n = function (t, e) {
    // Use the query path as a prefix for testing if a document matches the
    // query.
    var n = e.path,
        r = n.length + 1,
        i = n; // Construct a document reference for actually scanning the index. Unlike
    // the prefix the document key in this reference must have an even number of
    // segments. The empty segment can be used a suffix of the query path
    // because it precedes all other segments in an ordered traversal.

    L.W(i) || (i = i.child(""));
    var o = new Fr(new L(i), 0),
        s = new Y(m); // Find unique batchIDs referenced by all documents potentially matching the
    // query.

    return this.gf.St(function (t) {
      var e = t.key.path;
      return !!n.D(e) && ( // Rows with document keys more than one segment longer than the query
      // path can't be matches. For example, a query on 'rooms' can't match
      // the document /rooms/abc/messages/xyx.
      // TODO(mcg): we'll need a different scanner when we implement
      // ancestor queries.
      e.length === r && (s = s.add(t.ba)), !0);
    }, o), en.resolve(this.bf(s));
  }, t.prototype.bf = function (t) {
    var e = this,
        n = []; // Construct an array of matching batches, sorted by batchID to ensure that
    // multiple mutations affecting the same document key are applied in order.

    return t.forEach(function (t) {
      var r = e.pf(t);
      null !== r && n.push(r);
    }), n;
  }, t.prototype.Po = function (t, e) {
    var n = this;
    d(0 === this.vf(e.batchId, "removed")), this.Rn.shift();
    var r = this.gf;
    return en.forEach(e.mutations, function (i) {
      var o = new Fr(i.key, e.batchId);
      return r = r.delete(o), n.Fi.oo(t, i.key);
    }).next(function () {
      n.gf = r;
    });
  }, t.prototype.Vo = function (t) {// No-op since the memory mutation queue does not maintain a separate cache.
  }, t.prototype.tr = function (t, e) {
    var n = new Fr(e, 0),
        r = this.gf.Dt(n);
    return en.resolve(e.isEqual(r && r.key));
  }, t.prototype.po = function (t) {
    return this.Rn.length, en.resolve();
  },
  /**
   * Finds the index of the given batchId in the mutation queue and asserts that
   * the resulting index is within the bounds of the queue.
   *
   * @param batchId The batchId to search for
   * @param action A description of what the caller is doing, phrased in passive
   * form (e.g. "acknowledged" in a routine that acknowledges batches).
   */
  t.prototype.vf = function (t, e) {
    return this.yf(t);
  },
  /**
   * Finds the index of the given batchId in the mutation queue. This operation
   * is O(1).
   *
   * @return The computed index of the batch with the given batchId, based on
   * the state of the queue. Note this index can be negative if the requested
   * batchId has already been remvoed from the queue or past the end of the
   * queue if the batchId is larger than the last added batch.
   */
  t.prototype.yf = function (t) {
    return 0 === this.Rn.length ? 0 : t - this.Rn[0].batchId; // Examine the front of the queue to figure out the difference between the
    // batchId and indexes in the array. Note that since the queue is ordered
    // by batchId, if the first batch has a larger batchId then the requested
    // batchId doesn't exist in the queue.
  },
  /**
   * A version of lookupMutationBatch that doesn't return a promise, this makes
   * other functions that uses this code easier to read and more efficent.
   */
  t.prototype.pf = function (t) {
    var e = this.yf(t);
    return e < 0 || e >= this.Rn.length ? null : this.Rn[e];
  }, t;
}(),
    mo =
/** @class */
function () {
  /**
   * @param sizer Used to assess the size of a document. For eager GC, this is expected to just
   * return 0 to avoid unnecessarily doing the work of calculating the size.
   */
  function t(t, e) {
    this.mn = t, this.Sf = e,
    /** Underlying cache of documents and their read times. */
    this.docs = new W(L.P),
    /** Size of all cached documents. */
    this.size = 0
    /**
    * Adds the supplied entry to the cache and updates the cache size as appropriate.
    *
    * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
    * returned by `newChangeBuffer()`.
    */
    ;
  }

  return t.prototype.un = function (t, e, n) {
    var r = e.key,
        i = this.docs.get(r),
        o = i ? i.size : 0,
        s = this.Sf(e);
    return this.docs = this.docs.et(r, {
      fi: e,
      size: s,
      readTime: n
    }), this.size += s - o, this.mn.ri(t, r.path.p());
  },
  /**
   * Removes the specified entry from the cache and updates the cache size as appropriate.
   *
   * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
   * returned by `newChangeBuffer()`.
   */
  t.prototype.ln = function (t) {
    var e = this.docs.get(t);
    e && (this.docs = this.docs.remove(t), this.size -= e.size);
  }, t.prototype._n = function (t, e) {
    var n = this.docs.get(e);
    return en.resolve(n ? n.fi : null);
  }, t.prototype.getEntries = function (t, e) {
    var n = this,
        r = Z();
    return e.forEach(function (t) {
      var e = n.docs.get(t);
      r = r.et(t, e ? e.fi : null);
    }), en.resolve(r);
  }, t.prototype.Sn = function (t, e, n) {
    for (var r = et(), i = new L(e.path.child("")), o = this.docs.ut(i) // Documents are ordered by key, so we can use a prefix scan to narrow down
    // the documents we need to match the query against.
    ; o.wt();) {
      var s = o.dt(),
          u = s.key,
          a = s.value,
          c = a.fi,
          h = a.readTime;
      if (!e.path.D(u.path)) break;
      h.o(n) <= 0 || c instanceof Oe && e.matches(c) && (r = r.et(c.key, c));
    }

    return en.resolve(r);
  }, t.prototype.Df = function (t, e) {
    return en.forEach(this.docs, function (t) {
      return e(t);
    });
  }, t.prototype.Vi = function (e) {
    // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
    // a separate changelog and does not need special handling for removals.
    return new t.gi(this);
  }, t.prototype.yi = function (t) {
    return en.resolve(this.size);
  }, t;
}();
/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */
// Visible for testing

/**
 * Handles the details of adding and updating documents in the MemoryRemoteDocumentCache.
 */


mo.gi =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this) || this).bi = e, n;
  }

  return e.__extends(n, t), n.prototype.wn = function (t) {
    var e = this,
        n = [];
    return this.on.forEach(function (r, i) {
      i ? n.push(e.bi.un(t, i, e.readTime)) : e.bi.ln(r);
    }), en.nn(n);
  }, n.prototype.fn = function (t, e) {
    return this.bi._n(t, e);
  }, n.prototype.dn = function (t, e) {
    return this.bi.getEntries(t, e);
  }, n;
}(nn);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


var wo =
/** @class */
function () {
  function t(t) {
    this.persistence = t,
    /**
         * Maps a target to the data about that target
         */
    this.Cf = new A(function (t) {
      return Xe(t);
    }, $e),
    /** The last received snapshot version. */
    this.lastRemoteSnapshotVersion = k.min(),
    /** The highest numbered target ID encountered. */
    this.highestTargetId = 0,
    /** The highest sequence number encountered. */
    this.Ff = 0,
    /**
         * A ordered bidirectional mapping between documents and the remote target
         * IDs.
         */
    this.Nf = new qr(), this.targetCount = 0, this.$f = Un.Di();
  }

  return t.prototype.ye = function (t, e) {
    return this.Cf.forEach(function (t, n) {
      return e(n);
    }), en.resolve();
  }, t.prototype.xi = function (t) {
    return en.resolve(this.lastRemoteSnapshotVersion);
  }, t.prototype.Mi = function (t) {
    return en.resolve(this.Ff);
  }, t.prototype.Ni = function (t) {
    return this.highestTargetId = this.$f.next(), en.resolve(this.highestTargetId);
  }, t.prototype.Li = function (t, e, n) {
    return n && (this.lastRemoteSnapshotVersion = n), e > this.Ff && (this.Ff = e), en.resolve();
  }, t.prototype.Bi = function (t) {
    this.Cf.set(t.target, t);
    var e = t.targetId;
    e > this.highestTargetId && (this.$f = new Un(e), this.highestTargetId = e), t.sequenceNumber > this.Ff && (this.Ff = t.sequenceNumber);
  }, t.prototype.Oi = function (t, e) {
    return this.Bi(e), this.targetCount += 1, en.resolve();
  }, t.prototype.Ui = function (t, e) {
    return this.Bi(e), en.resolve();
  }, t.prototype.Qi = function (t, e) {
    return this.Cf.delete(e.target), this.Nf.ga(e.targetId), this.targetCount -= 1, en.resolve();
  }, t.prototype.ji = function (t, e, n) {
    var r = this,
        i = 0,
        o = [];
    return this.Cf.forEach(function (s, u) {
      u.sequenceNumber <= e && null === n.get(u.targetId) && (r.Cf.delete(s), o.push(r.Wi(t, u.targetId)), i++);
    }), en.nn(o).next(function () {
      return i;
    });
  }, t.prototype.Ki = function (t) {
    return en.resolve(this.targetCount);
  }, t.prototype.Gi = function (t, e) {
    var n = this.Cf.get(e) || null;
    return en.resolve(n);
  }, t.prototype.zi = function (t, e, n) {
    return this.Nf.ma(e, n), en.resolve();
  }, t.prototype.Yi = function (t, e, n) {
    this.Nf.Va(e, n);
    var r = this.persistence.Fi,
        i = [];
    return r && e.forEach(function (e) {
      i.push(r.oo(t, e));
    }), en.nn(i);
  }, t.prototype.Wi = function (t, e) {
    return this.Nf.ga(e), en.resolve();
  }, t.prototype.Xi = function (t, e) {
    var n = this.Nf.ya(e);
    return en.resolve(n);
  }, t.prototype.tr = function (t, e) {
    return en.resolve(this.Nf.tr(e));
  }, t;
}(),
    _o =
/** @class */
function () {
  /**
   * The constructor accepts a factory for creating a reference delegate. This
   * allows both the delegate and this instance to have strong references to
   * each other without having nullable fields that would then need to be
   * checked or asserted on every access.
   */
  function t(t) {
    var e = this;
    this.kf = {}, this.rr = new an(0), this.or = !1, this.or = !0, this.Fi = t(this), this.Tr = new wo(this), this.mn = new yn(), this.An = new mo(this.mn, function (t) {
      return e.Fi.xf(t);
    });
  }

  return t.prototype.start = function () {
    return Promise.resolve();
  }, t.prototype.Ur = function () {
    // No durable state to ensure is closed on shutdown.
    return this.or = !1, Promise.resolve();
  }, Object.defineProperty(t.prototype, "pr", {
    get: function get() {
      return this.or;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.yr = function () {// No op.
  }, t.prototype.Xr = function () {
    return this.mn;
  }, t.prototype.zr = function (t) {
    var e = this.kf[t.su()];
    return e || (e = new go(this.mn, this.Fi), this.kf[t.su()] = e), e;
  }, t.prototype.Yr = function () {
    return this.Tr;
  }, t.prototype.Jr = function () {
    return this.An;
  }, t.prototype.runTransaction = function (t, e, n) {
    var r = this;
    h("MemoryPersistence", "Starting transaction:", t);
    var i = new bo(this.rr.next());
    return this.Fi.Mf(), n(i).next(function (t) {
      return r.Fi.Lf(i).next(function () {
        return t;
      });
    }).en().then(function (t) {
      return i.In(), t;
    });
  }, t.prototype.Of = function (t, e) {
    return en.rn(Object.values(this.kf).map(function (n) {
      return function () {
        return n.tr(t, e);
      };
    }));
  }, t;
}(),
    bo =
/** @class */
function (t) {
  function n(e) {
    var n = this;
    return (n = t.call(this) || this).sr = e, n;
  }

  return e.__extends(n, t), n;
}(on),
    Io =
/** @class */
function () {
  function t(t) {
    this.persistence = t,
    /** Tracks all documents that are active in Query views. */
    this.Bf = new qr(),
    /** The list of documents that are potentially GCed after each transaction. */
    this.qf = null;
  }

  return t.Uf = function (e) {
    return new t(e);
  }, Object.defineProperty(t.prototype, "Qf", {
    get: function get() {
      if (this.qf) return this.qf;
      throw p();
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.Hi = function (t, e, n) {
    return this.Bf.Hi(n, e), this.Qf.delete(n), en.resolve();
  }, t.prototype.Ji = function (t, e, n) {
    return this.Bf.Ji(n, e), this.Qf.add(n), en.resolve();
  }, t.prototype.oo = function (t, e) {
    return this.Qf.add(e), en.resolve();
  }, t.prototype.removeTarget = function (t, e) {
    var n = this;
    this.Bf.ga(e.targetId).forEach(function (t) {
      return n.Qf.add(t);
    });
    var r = this.persistence.Yr();
    return r.Xi(t, e.targetId).next(function (t) {
      t.forEach(function (t) {
        return n.Qf.add(t);
      });
    }).next(function () {
      return r.Qi(t, e);
    });
  }, t.prototype.Mf = function () {
    this.qf = new Set();
  }, t.prototype.Lf = function (t) {
    var e = this,
        n = this.persistence.Jr().Vi(); // Remove newly orphaned documents.

    return en.forEach(this.Qf, function (r) {
      return e.Wf(t, r).next(function (t) {
        t || n.ln(r);
      });
    }).next(function () {
      return e.qf = null, n.apply(t);
    });
  }, t.prototype.co = function (t, e) {
    var n = this;
    return this.Wf(t, e).next(function (t) {
      t ? n.Qf.delete(e) : n.Qf.add(e);
    });
  }, t.prototype.xf = function (t) {
    // For eager GC, we don't care about the document size, there are no size thresholds.
    return 0;
  }, t.prototype.Wf = function (t, e) {
    var n = this;
    return en.rn([function () {
      return en.resolve(n.Bf.tr(e));
    }, function () {
      return n.persistence.Yr().tr(t, e);
    }, function () {
      return n.persistence.Of(t, e);
    }]);
  }, t;
}(),
    Eo =
/** @class */
function () {
  function t(t) {
    this.jf = t.jf, this.Kf = t.Kf;
  }

  return t.prototype.xu = function (t) {
    this.Gf = t;
  }, t.prototype.Cu = function (t) {
    this.zf = t;
  }, t.prototype.onMessage = function (t) {
    this.Hf = t;
  }, t.prototype.close = function () {
    this.Kf();
  }, t.prototype.send = function (t) {
    this.jf(t);
  }, t.prototype.Yf = function () {
    this.Gf();
  }, t.prototype.Jf = function (t) {
    this.zf(t);
  }, t.prototype.Xf = function (t) {
    this.Hf(t);
  }, t;
}(),
    To = {
  BatchGetDocuments: "batchGet",
  Commit: "commit"
},
    No = "gl-js/ fire/" + u,
    Ao =
/** @class */
function () {
  function t(t) {
    this.s = t.s;
    var e = t.ssl ? "https" : "http";
    this.Zf = e + "://" + t.host, this.forceLongPolling = t.forceLongPolling;
  }
  /**
   * Modifies the headers for a request, adding any authorization token if
   * present and any additional headers for the request.
   */


  return t.prototype.td = function (t, e) {
    if (e) for (var n in e.ru) {
      e.ru.hasOwnProperty(n) && (t[n] = e.ru[n]);
    }
    t["X-Goog-Api-Client"] = No;
  }, t.prototype.Yu = function (t, e, n) {
    var r = this,
        i = this.ed(t);
    return new Promise(function (s, u) {
      var a = new o.XhrIo();
      a.listenOnce(o.EventType.COMPLETE, function () {
        try {
          switch (a.getLastErrorCode()) {
            case o.ErrorCode.NO_ERROR:
              var e = a.getResponseJson();
              h("Connection", "XHR received:", JSON.stringify(e)), s(e);
              break;

            case o.ErrorCode.TIMEOUT:
              h("Connection", 'RPC "' + t + '" timed out'), u(new S(x.DEADLINE_EXCEEDED, "Request time out"));
              break;

            case o.ErrorCode.HTTP_ERROR:
              var n = a.getStatus();

              if (h("Connection", 'RPC "' + t + '" failed with status:', n, "response text:", a.getResponseText()), n > 0) {
                var r = a.getResponseJson().error;

                if (r && r.status && r.message) {
                  var i = function (t) {
                    var e = t.toLowerCase().replace("_", "-");
                    return Object.values(x).indexOf(e) >= 0 ? e : x.UNKNOWN;
                  }(r.status);

                  u(new S(i, r.message));
                } else u(new S(x.UNKNOWN, "Server responded with status " + a.getStatus()));
              } else // If we received an HTTP_ERROR but there's no status code,
                // it's most probably a connection issue
                h("Connection", 'RPC "' + t + '" failed'), u(new S(x.UNAVAILABLE, "Connection failed."));

              break;

            default:
              p();
          }
        } finally {
          h("Connection", 'RPC "' + t + '" completed.');
        }
      }); // The database field is already encoded in URL. Specifying it again in
      // the body is not necessary in production, and will cause duplicate field
      // errors in the Firestore Emulator. Let's remove it.

      var c = Object.assign({}, e);
      delete c.database;
      var f = JSON.stringify(c);
      h("Connection", "XHR sending: ", i + " " + f); // Content-Type: text/plain will avoid preflight requests which might
      // mess with CORS and redirects by proxies. If we add custom headers
      // we will need to change this code to potentially use the
      // $httpOverwrite parameter supported by ESF to avoid
      // triggering preflight requests.

      var l = {
        "Content-Type": "text/plain"
      };
      r.td(l, n), a.send(i, "POST", f, l, 15);
    });
  }, t.prototype.Ju = function (t, e, n) {
    // The REST API automatically aggregates all of the streamed results, so we
    // can just use the normal invoke() method.
    return this.Yu(t, e, n);
  }, t.prototype.Mu = function (t, n) {
    var s = [this.Zf, "/", "google.firestore.v1.Firestore", "/", t, "/channel"],
        c = o.createWebChannelTransport(),
        f = {
      // Required for backend stickiness, routing behavior is based on this
      // parameter.
      httpSessionIdParam: "gsessionid",
      initMessageHeaders: {},
      messageUrlParams: {
        // This param is used to improve routing and project isolation by the
        // backend and must be included in every request.
        database: "projects/" + this.s.projectId + "/databases/" + this.s.database
      },
      sendRawJson: !0,
      supportsCrossDomainXhr: !0,
      internalChannelParams: {
        // Override the default timeout (randomized between 10-20 seconds) since
        // a large write batch on a slow internet connection may take a long
        // time to send to the backend. Rather than have WebChannel impose a
        // tight timeout which could lead to infinite timeouts and retries, we
        // set it very large (5-10 minutes) and rely on the browser's builtin
        // timeouts to kick in if the request isn't working.
        forwardChannelRequestTimeoutMs: 6e5
      },
      forceLongPolling: this.forceLongPolling
    };
    this.td(f.initMessageHeaders, n), // Sending the custom headers we just added to request.initMessageHeaders
    // (Authorization, etc.) will trigger the browser to make a CORS preflight
    // request because the XHR will no longer meet the criteria for a "simple"
    // CORS request:
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
    // Therefore to avoid the CORS preflight request (an extra network
    // roundtrip), we use the httpHeadersOverwriteParam option to specify that
    // the headers should instead be encoded into a special "$httpHeaders" query
    // parameter, which is recognized by the webchannel backend. This is
    // formally defined here:
    // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
    // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request
    // doesn't have an Origin header. So we have to exclude a few browser environments that are
    // known to (sometimes) not include an Origin. See
    // https://github.com/firebase/firebase-js-sdk/issues/1491.
    i.isMobileCordova() || i.isReactNative() || i.isElectron() || i.isIE() || i.isUWP() || i.isBrowserExtension() || (f.httpHeadersOverwriteParam = "$httpHeaders");
    var p = s.join("");
    h("Connection", "Creating WebChannel: " + p + " " + f);

    var y = c.createWebChannel(p, f),
        v = !1,
        g = !1,
        m = new Eo({
      jf: function jf(t) {
        g ? h("Connection", "Not sending because WebChannel is closed:", t) : (v || (h("Connection", "Opening WebChannel transport."), y.open(), v = !0), h("Connection", "WebChannel sending:", t), y.send(t));
      },
      Kf: function Kf() {
        return y.close();
      }
    }),
        w = function w(t, e) {
      // TODO(dimond): closure typing seems broken because WebChannel does
      // not implement goog.events.Listenable
      y.listen(t, function (t) {
        try {
          e(t);
        } catch (t) {
          setTimeout(function () {
            throw t;
          }, 0);
        }
      });
    }; // WebChannel supports sending the first message with the handshake - saving
    // a network round trip. However, it will have to call send in the same
    // JS event loop as open. In order to enforce this, we delay actually
    // opening the WebChannel until send is called. Whether we have called
    // open is tracked with this variable.
    // Closure events are guarded and exceptions are swallowed, so catch any
    // exception and rethrow using a setTimeout so they become visible again.
    // Note that eventually this function could go away if we are confident
    // enough the code is exception free.


    return w(o.WebChannel.EventType.OPEN, function () {
      g || h("Connection", "WebChannel transport opened.");
    }), w(o.WebChannel.EventType.CLOSE, function () {
      g || (g = !0, h("Connection", "WebChannel transport closed"), m.Jf());
    }), w(o.WebChannel.EventType.ERROR, function (t) {
      g || (g = !0, function (t) {
        for (var n = [], i = 1; i < arguments.length; i++) {
          n[i - 1] = arguments[i];
        }

        if (a.logLevel <= r.LogLevel.WARN) {
          var o = n.map(l);
          a.warn.apply(a, e.__spreadArrays(["Firestore (" + u + "): " + t], o));
        }
      }("Connection", "WebChannel transport errored:", t), m.Jf(new S(x.UNAVAILABLE, "The operation could not be completed")));
    }), w(o.WebChannel.EventType.MESSAGE, function (t) {
      var e;

      if (!g) {
        var n = t.data[0];
        d(!!n); // TODO(b/35143891): There is a bug in One Platform that caused errors
        // (and only errors) to be wrapped in an extra array. To be forward
        // compatible with the bug we need to check either condition. The latter
        // can be removed once the fix has been rolled out.
        // Use any because msgData.error is not typed.

        var r = n,
            i = r.error || (null === (e = r[0]) || void 0 === e ? void 0 : e.error);

        if (i) {
          h("Connection", "WebChannel received error:", i); // error.status will be a string like 'OK' or 'NOT_FOUND'.

          var o = i.status,
              s = function (t) {
            // lookup by string
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            var e = M[t];
            if (void 0 !== e) return z(e);
          }(o),
              u = i.message;

          void 0 === s && (s = x.INTERNAL, u = "Unknown error status: " + o + " with message " + i.message), // Mark closed so no further events are propagated
          g = !0, m.Jf(new S(s, u)), y.close();
        } else h("Connection", "WebChannel received:", n), m.Xf(n);
      }
    }), setTimeout(function () {
      // Technically we could/should wait for the WebChannel opened event,
      // but because we want to send the first message with the WebChannel
      // handshake we pretend the channel opened here (asynchronously), and
      // then delay the actual open until the first message is sent.
      m.Yf();
    }, 0), m;
  }, // visible for testing
  t.prototype.ed = function (t) {
    var e = To[t];
    return this.Zf + "/v1/projects/" + this.s.projectId + "/databases/" + this.s.database + "/documents:" + e;
  }, t;
}(),
    xo =
/** @class */
function () {
  function t() {
    var t = this;
    this.sd = function () {
      return t.nd();
    }, this.rd = function () {
      return t.od();
    }, this.hd = [], this.ad();
  }

  return t.prototype.Pc = function (t) {
    this.hd.push(t);
  }, t.prototype.Ur = function () {
    window.removeEventListener("online", this.sd), window.removeEventListener("offline", this.rd);
  }, t.prototype.ad = function () {
    window.addEventListener("online", this.sd), window.addEventListener("offline", this.rd);
  }, t.prototype.nd = function () {
    h("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");

    for (var t = 0, e = this.hd; t < e.length; t++) {
      (0, e[t])(0
      /* AVAILABLE */
      );
    }
  }, t.prototype.od = function () {
    h("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");

    for (var t = 0, e = this.hd; t < e.length; t++) {
      (0, e[t])(1
      /* UNAVAILABLE */
      );
    }
  }, // TODO(chenbrian): Consider passing in window either into this component or
  // here for testing via FakeWindow.

  /** Checks that all used attributes of window are available. */
  t._r = function () {
    return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
  }, t;
}(),
    So =
/** @class */
function () {
  function t() {}

  return t.prototype.Pc = function (t) {// No-op.
  }, t.prototype.Ur = function () {// No-op.
  }, t;
}(),
    Do = "You are using the memory-only build of Firestore. Persistence support is only available via the @firebase/firestore bundle or the firebase-firestore.js build.",
    ko =
/** @class */
function () {
  function t() {}

  return t.prototype.initialize = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n = this;
      return e.__generator(this, function (e) {
        switch (e.label) {
          case 0:
            return this.P_ = this.ud(t), this.persistence = this.ld(t), [4
            /*yield*/
            , this.persistence.start()];

          case 1:
            return e.sent(), this._d = this.fd(t), this.Tc = this.dd(t), this.m_ = this.wd(t), this.Qc = this.Td(t), this.Ed = this.Id(t), this.P_.hc = function (t) {
              return n.Qc.c_(t, 1
              /* SharedClientState */
              );
            }, this.m_.Qc = this.Qc, [4
            /*yield*/
            , this.Tc.start()];

          case 2:
            return e.sent(), [4
            /*yield*/
            , this.P_.start()];

          case 3:
            return e.sent(), [4
            /*yield*/
            , this.m_.start()];

          case 4:
            return e.sent(), [4
            /*yield*/
            , this.m_.rl(this.Qc.k_)];

          case 5:
            return e.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, t.prototype.Id = function (t) {
    return new po(this.Qc);
  }, t.prototype.fd = function (t) {
    return null;
  }, t.prototype.dd = function (t) {
    return new Lr(this.persistence, new vo(), t.Ad);
  }, t.prototype.ld = function (t) {
    if (t.md.Rd) throw new S(x.FAILED_PRECONDITION, Do);
    return new _o(Io.Uf);
  }, t.prototype.wd = function (t) {
    var e = this;
    return new Hi(this.Tc, t.Xu, t.Oo, function (t) {
      return e.Qc.c_(t, 0
      /* RemoteStore */
      );
    }, xo._r() ? new xo() : new So());
  }, t.prototype.ud = function (t) {
    return new ro();
  }, t.prototype.Td = function (t) {
    return new ho(this.Tc, this.m_, t.Xu, this.P_, t.Ad, t.V_);
  }, t.prototype.clearPersistence = function (t) {
    throw new S(x.FAILED_PRECONDITION, Do);
  }, t;
}(),
    Po =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.prototype.initialize = function (n) {
    return e.__awaiter(this, void 0, void 0, function () {
      var r = this;
      return e.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            return [4
            /*yield*/
            , t.prototype.initialize.call(this, n)];

          case 1:
            // NOTE: This will immediately call the listener, so we make sure to
            // set it after localStore / remoteStore are started.
            return i.sent(), [4
            /*yield*/
            , this.persistence.gr(function (t) {
              return e.__awaiter(r, void 0, void 0, function () {
                return e.__generator(this, function (e) {
                  switch (e.label) {
                    case 0:
                      return [4
                      /*yield*/
                      , this.Qc.rl(t)];

                    case 1:
                      return e.sent(), this._d && (t && !this._d.pr ? this._d.start(this.Tc) : t || this._d.stop()), [2
                      /*return*/
                      ];
                  }
                });
              });
            })];

          case 2:
            // NOTE: This will immediately call the listener, so we make sure to
            // set it after localStore / remoteStore are started.
            return i.sent(), [2
            /*return*/
            ];
        }
      });
    });
  }, n.prototype.dd = function (t) {
    return new Vr(this.persistence, new vo(), t.Ad);
  }, n.prototype.Td = function (t) {
    var e = new fo(this.Tc, this.m_, t.Xu, this.P_, t.Ad, t.V_);
    return this.P_ instanceof no && (this.P_.Qc = e), e;
  }, n.prototype.fd = function (t) {
    var e = this.persistence.Fi.eo;
    return new Or(e, t.Oo);
  }, n.prototype.ld = function (t) {
    var e = jn.to(t.Pd),
        n = _i(t.Pd.s);

    return new jn(t.md.synchronizeTabs, e, t.clientId, Rr.ph(t.md.cacheSizeBytes), t.Oo, Nr(), "undefined" != typeof document ? document : null, n, this.P_, t.md.ir);
  }, n.prototype.ud = function (t) {
    if (t.md.Rd && t.md.synchronizeTabs) {
      var e = Nr();
      if (!no._r(e)) throw new S(x.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
      var n = jn.to(t.Pd);
      return new no(e, t.Oo, n, t.clientId, t.Ad);
    }

    return new ro();
  }, n.prototype.clearPersistence = function (t) {
    var e = jn.to(t);
    return jn.clearPersistence(e);
  }, n;
}(ko),
    Ro =
/** @class */
function () {
  function t(t, e,
  /**
   * Asynchronous queue responsible for all of our internal processing. When
   * we get incoming work from the user (via public API) or the network
   * (incoming GRPC messages), we should always schedule onto this queue.
   * This ensures all of our work is properly serialized (e.g. we don't
   * start processing a new operation while the previous one is waiting for
   * an async I/O to complete).
   */
  n) {
    this.Pd = t, this.credentials = e, this.Oo = n, this.clientId = g.t()
    /**
    * Starts up the FirestoreClient, returning only whether or not enabling
    * persistence succeeded.
    *
    * The intent here is to "do the right thing" as far as users are concerned.
    * Namely, in cases where offline persistence is requested and possible,
    * enable it, but otherwise fall back to persistence disabled. For the most
    * part we expect this to succeed one way or the other so we don't expect our
    * users to actually wait on the firestore.enablePersistence Promise since
    * they generally won't care.
    *
    * Of course some users actually do care about whether or not persistence
    * was successfully enabled, so the Promise returned from this method
    * indicates this outcome.
    *
    * This presents a problem though: even before enablePersistence resolves or
    * rejects, users may have made calls to e.g. firestore.collection() which
    * means that the FirestoreClient in there will be available and will be
    * enqueuing actions on the async queue.
    *
    * Meanwhile any failure of an operation on the async queue causes it to
    * panic and reject any further work, on the premise that unhandled errors
    * are fatal.
    *
    * Consequently the fallback is handled internally here in start, and if the
    * fallback succeeds we signal success to the async queue even though the
    * start() itself signals failure.
    *
    * @param componentProvider Provider that returns all core components.
    * @param persistenceSettings Settings object to configure offline
    *     persistence.
    * @returns A deferred result indicating the user-visible result of enabling
    *     offline persistence. This method will reject this if IndexedDB fails to
    *     start for any reason. If usePersistence is false this is
    *     unconditionally resolved.
    */
    ;
  }

  return t.prototype.start = function (t, e) {
    var n = this;
    this.Hu(); // We defer our initialization until we get the current user from
    // setChangeListener(). We block the async queue until we got the initial
    // user and the initialization is completed. This will prevent any scheduled
    // work from happening before initialization is completed.
    // If initializationDone resolved then the FirestoreClient is in a usable
    // state.

    var r = new cn(),
        i = new cn(),
        o = !1; // If usePersistence is true, certain classes of errors while starting are
    // recoverable but only by falling back to persistence disabled.
    // If there's an error in the first case but not in recovery we cannot
    // reject the promise blocking the async queue because this will cause the
    // async queue to panic.
    // Return only the result of enabling persistence. Note that this does not
    // need to await the completion of initializationDone because the result of
    // this method should not reflect any other kind of failure to start.

    return this.credentials.au(function (s) {
      if (!o) return o = !0, h("FirestoreClient", "Initializing. user=", s.uid), n.Vd(t, e, s, i).then(r.resolve, r.reject);
      n.Oo.Cr(function () {
        return n.m_.il(s);
      });
    }), // Block the async queue until initialization is done
    this.Oo.Sr(function () {
      return r.promise;
    }), i.promise;
  },
  /** Enables the network connection and requeues all pending operations. */
  t.prototype.enableNetwork = function () {
    var t = this;
    return this.Hu(), this.Oo.enqueue(function () {
      return t.Qc.enableNetwork();
    });
  },
  /**
   * Initializes persistent storage, attempting to use IndexedDB if
   * usePersistence is true or memory-only if false.
   *
   * If IndexedDB fails because it's already open in another tab or because the
   * platform can't possibly support our implementation then this method rejects
   * the persistenceResult and falls back on memory-only persistence.
   *
   * @param componentProvider The provider that provides all core componennts
   *     for IndexedDB or memory-backed persistence
   * @param persistenceSettings Settings object to configure offline persistence
   * @param user The initial user
   * @param persistenceResult A deferred result indicating the user-visible
   *     result of enabling offline persistence. This method will reject this if
   *     IndexedDB fails to start for any reason. If usePersistence is false
   *     this is unconditionally resolved.
   * @returns a Promise indicating whether or not initialization should
   *     continue, i.e. that one of the persistence implementations actually
   *     succeeded.
   */
  t.prototype.Vd = function (t, n, r, i) {
    return e.__awaiter(this, void 0, void 0, function () {
      var o,
          s,
          u,
          a,
          c,
          h = this;
      return e.__generator(this, function (f) {
        switch (f.label) {
          case 0:
            return f.trys.push([0, 3,, 4]), [4
            /*yield*/
            , (c = this.Pd, Promise.resolve(new Ao(c)))];

          case 1:
            return o = f.sent(), s = _i(this.Pd.s), u = function (t, e, n) {
              return new Gi(t, e, n);
            }(o, this.credentials, s), [4
            /*yield*/
            , t.initialize({
              Oo: this.Oo,
              Pd: this.Pd,
              Xu: u,
              clientId: this.clientId,
              Ad: r,
              V_: 100,
              md: n
            })];

          case 2:
            return f.sent(), this.persistence = t.persistence, this.P_ = t.P_, this.Tc = t.Tc, this.m_ = t.m_, this.Qc = t.Qc, this._d = t._d, this.gd = t.Ed, // When a user calls clearPersistence() in one client, all other clients
            // need to be terminated to allow the delete to succeed.
            this.persistence.yr(function () {
              return e.__awaiter(h, void 0, void 0, function () {
                return e.__generator(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return [4
                      /*yield*/
                      , this.terminate()];

                    case 1:
                      return t.sent(), [2
                      /*return*/
                      ];
                  }
                });
              });
            }), i.resolve(), [3
            /*break*/
            , 4];

          case 3:
            // An unknown failure on the first stage shuts everything down.
            if (a = f.sent(), // Regardless of whether or not the retry succeeds, from an user
            // perspective, offline persistence has failed.
            i.reject(a), !this.pd(a)) throw a;
            return [2
            /*return*/
            , (console.warn("Error enabling offline persistence. Falling back to persistence disabled: " + a), this.Vd(new ko(), {
              Rd: !1
            }, r, i))];

          case 4:
            return [2
            /*return*/
            ];
        }
      });
    });
  },
  /**
   * Decides whether the provided error allows us to gracefully disable
   * persistence (as opposed to crashing the client).
   */
  t.prototype.pd = function (t) {
    return "FirebaseError" === t.name ? t.code === x.FAILED_PRECONDITION || t.code === x.UNIMPLEMENTED : !("undefined" != typeof DOMException && t instanceof DOMException) || // When the browser is out of quota we could get either quota exceeded
    // or an aborted error depending on whether the error happened during
    // schema migration.
    22 === t.code || 20 === t.code || // Firefox Private Browsing mode disables IndexedDb and returns
    // INVALID_STATE for any usage.
    11 === t.code;
  },
  /**
   * Checks that the client has not been terminated. Ensures that other methods on
   * this class cannot be called after the client is terminated.
   */
  t.prototype.Hu = function () {
    if (this.Oo.eh) throw new S(x.FAILED_PRECONDITION, "The client has already been terminated.");
  },
  /** Disables the network connection. Pending operations will not complete. */
  t.prototype.disableNetwork = function () {
    var t = this;
    return this.Hu(), this.Oo.enqueue(function () {
      return t.Qc.disableNetwork();
    });
  }, t.prototype.terminate = function () {
    var t = this;
    return this.Oo.oh(function () {
      return e.__awaiter(t, void 0, void 0, function () {
        return e.__generator(this, function (t) {
          switch (t.label) {
            case 0:
              // PORTING NOTE: LocalStore does not need an explicit shutdown on web.
              return this._d && this._d.stop(), [4
              /*yield*/
              , this.m_.Ur()];

            case 1:
              return t.sent(), [4
              /*yield*/
              , this.P_.Ur()];

            case 2:
              return t.sent(), [4
              /*yield*/
              , this.persistence.Ur()];

            case 3:
              // PORTING NOTE: LocalStore does not need an explicit shutdown on web.
              return t.sent(), // `removeChangeListener` must be called after shutting down the
              // RemoteStore as it will prevent the RemoteStore from retrieving
              // auth tokens.
              this.credentials.uu(), [2
              /*return*/
              ];
          }
        });
      });
    });
  },
  /**
   * Returns a Promise that resolves when all writes that were pending at the time this
   * method was called received server acknowledgement. An acknowledgement can be either acceptance
   * or rejection.
   */
  t.prototype.waitForPendingWrites = function () {
    var t = this;
    this.Hu();
    var e = new cn();
    return this.Oo.Sr(function () {
      return t.Qc.K_(e);
    }), e.promise;
  }, t.prototype.listen = function (t, e, n) {
    var r = this;
    this.Hu();
    var i = new yo(t, e, n);
    return this.Oo.Sr(function () {
      return r.gd.listen(i);
    }), i;
  }, t.prototype.qc = function (t) {
    var e = this; // Checks for termination but does not raise error, allowing unlisten after
    // termination to be a no-op.

    this.yd || this.Oo.Sr(function () {
      return e.gd.qc(t);
    });
  }, t.prototype.bd = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return e.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            return this.Hu(), n = new cn(), [4
            /*yield*/
            , this.Oo.enqueue(function () {
              return e.__awaiter(r, void 0, void 0, function () {
                var r, i, o;
                return e.__generator(this, function (e) {
                  switch (e.label) {
                    case 0:
                      return e.trys.push([0, 2,, 3]), [4
                      /*yield*/
                      , this.Tc.aa(t)];

                    case 1:
                      return (r = e.sent()) instanceof Oe ? n.resolve(r) : r instanceof Ue ? n.resolve(null) : n.reject(new S(x.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")), [3
                      /*break*/
                      , 3];

                    case 2:
                      return i = e.sent(), o = Sr(i, "Failed to get document '" + t + " from cache"), n.reject(o), [3
                      /*break*/
                      , 3];

                    case 3:
                      return [2
                      /*return*/
                      ];
                  }
                });
              });
            })];

          case 1:
            return [2
            /*return*/
            , (i.sent(), n.promise)];
        }
      });
    });
  }, t.prototype.vd = function (t) {
    return e.__awaiter(this, void 0, void 0, function () {
      var n,
          r = this;
      return e.__generator(this, function (i) {
        switch (i.label) {
          case 0:
            return this.Hu(), n = new cn(), [4
            /*yield*/
            , this.Oo.enqueue(function () {
              return e.__awaiter(r, void 0, void 0, function () {
                var r, i, o, s, u, a;
                return e.__generator(this, function (e) {
                  switch (e.label) {
                    case 0:
                      return e.trys.push([0, 2,, 3]), [4
                      /*yield*/
                      , this.Tc.la(t,
                      /* usePreviousResults= */
                      !0)];

                    case 1:
                      return r = e.sent(), i = new so(t, r._a), o = i.n_(r.documents), s = i.wn(o,
                      /* updateLimboDocuments= */
                      !1), n.resolve(s.snapshot), [3
                      /*break*/
                      , 3];

                    case 2:
                      return u = e.sent(), a = Sr(u, "Failed to execute query '" + t + " against cache"), n.reject(a), [3
                      /*break*/
                      , 3];

                    case 3:
                      return [2
                      /*return*/
                      ];
                  }
                });
              });
            })];

          case 1:
            return [2
            /*return*/
            , (i.sent(), n.promise)];
        }
      });
    });
  }, t.prototype.write = function (t) {
    var e = this;
    this.Hu();
    var n = new cn();
    return this.Oo.Sr(function () {
      return e.Qc.write(t, n);
    }), n.promise;
  }, t.prototype.s = function () {
    return this.Pd.s;
  }, t.prototype.lf = function (t) {
    var e = this;
    this.Hu(), this.Oo.Sr(function () {
      return e.gd.lf(t), Promise.resolve();
    });
  }, t.prototype._f = function (t) {
    var e = this; // Checks for shutdown but does not raise error, allowing remove after
    // shutdown to be a no-op.

    this.yd || this.Oo.Sr(function () {
      return e.gd._f(t), Promise.resolve();
    });
  }, Object.defineProperty(t.prototype, "yd", {
    get: function get() {
      // Technically, the asyncQueue is still running, but only accepting operations
      // related to termination or supposed to be run after termination. It is effectively
      // terminated to the eyes of users.
      return this.Oo.eh;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.transaction = function (t) {
    var e = this;
    this.Hu();
    var n = new cn();
    return this.Oo.Sr(function () {
      return e.Qc.runTransaction(e.Oo, t, n), Promise.resolve();
    }), n.promise;
  }, t;
}(),
    Oo =
/** @class */
function () {
  function t(t) {
    this.observer = t,
    /**
         * When set to true, will not raise future events. Necessary to deal with
         * async detachment of listener.
         */
    this.muted = !1;
  }

  return t.prototype.next = function (t) {
    this.Sd(this.observer.next, t);
  }, t.prototype.error = function (t) {
    this.Sd(this.observer.error, t);
  }, t.prototype.Dd = function () {
    this.muted = !0;
  }, t.prototype.Sd = function (t, e) {
    var n = this;
    this.muted || setTimeout(function () {
      n.muted || t(e);
    }, 0);
  }, t;
}();
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * A memory-backed instance of Persistence. Data is stored only in RAM and
 * not persisted across sessions.
 */

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


function Uo(t) {
  /**
  * Returns true if obj is an object and contains at least one of the specified
  * methods.
  */
  return function (t, e) {
    if ("object" != _typeof(t) || null === t) return !1;

    for (var n = t, r = 0, i = ["next", "error", "complete"]; r < i.length; r++) {
      var o = i[r];
      if (o in n && "function" == typeof n[o]) return !0;
    }

    return !1;
  }(t);
}

var Lo =
/** @class */
function () {
  function t(t, e, n, r) {
    this.s = t, this.timestampsInSnapshots = e, this.Cd = n, this.Fd = r;
  }

  return t.prototype.Nd = function (t) {
    switch (It(t)) {
      case 0
      /* NullValue */
      :
        return null;

      case 1
      /* BooleanValue */
      :
        return t.booleanValue;

      case 2
      /* NumberValue */
      :
        return Dt(t.integerValue || t.doubleValue);

      case 3
      /* TimestampValue */
      :
        return this.$d(t.timestampValue);

      case 4
      /* ServerTimestampValue */
      :
        return this.kd(t);

      case 5
      /* StringValue */
      :
        return t.stringValue;

      case 6
      /* BlobValue */
      :
        return new ui(kt(t.bytesValue));

      case 7
      /* RefValue */
      :
        return this.xd(t.referenceValue);

      case 8
      /* GeoPointValue */
      :
        return this.Md(t.geoPointValue);

      case 9
      /* ArrayValue */
      :
        return this.Ld(t.arrayValue);

      case 10
      /* ObjectValue */
      :
        return this.Od(t.mapValue);

      default:
        throw p();
    }
  }, t.prototype.Od = function (t) {
    var e = this,
        n = {};
    return T(t.fields || {}, function (t, r) {
      n[t] = e.Nd(r);
    }), n;
  }, t.prototype.Md = function (t) {
    return new wi(Dt(t.latitude), Dt(t.longitude));
  }, t.prototype.Ld = function (t) {
    var e = this;
    return (t.values || []).map(function (t) {
      return e.Nd(t);
    });
  }, t.prototype.kd = function (t) {
    switch (this.Cd) {
      case "previous":
        var e = function t(e) {
          var n = e.mapValue.fields.__previous_value__;
          return wt(n) ? t(n) : n;
        }(t);

        return null == e ? null : this.Nd(e);

      case "estimate":
        return this.$d(_t(t));

      default:
        return null;
    }
  }, t.prototype.$d = function (t) {
    var e = St(t),
        n = new D(e.seconds, e.nanos);
    return this.timestampsInSnapshots ? n : n.toDate();
  }, t.prototype.xd = function (t) {
    var e = R.$(t);
    d(pe(e));
    var n = new I(e.get(1), e.get(3)),
        r = new L(e.g(5));
    return n.isEqual(this.s) || // TODO(b/64130202): Somehow support foreign references.
    f("Document " + r + " contains a document reference within a different database (" + n.projectId + "/" + n.database + ") which is not supported. It will be treated as a reference in the current database (" + this.s.projectId + "/" + this.s.database + ") instead."), this.Fd(r);
  }, t;
}(),
    Vo = Rr.vh,
    Co =
/** @class */
function () {
  function t(t) {
    var e, n, r, i;

    if (void 0 === t.host) {
      if (void 0 !== t.ssl) throw new S(x.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
      this.host = "firestore.googleapis.com", this.ssl = !0;
    } else Wr("settings", "non-empty string", "host", t.host), this.host = t.host, Hr("settings", "boolean", "ssl", t.ssl), this.ssl = null === (e = t.ssl) || void 0 === e || e;

    if (ti("settings", t, ["host", "ssl", "credentials", "timestampsInSnapshots", "cacheSizeBytes", "experimentalForceLongPolling", "ignoreUndefinedProperties"]), Hr("settings", "object", "credentials", t.credentials), this.credentials = t.credentials, Hr("settings", "boolean", "timestampsInSnapshots", t.timestampsInSnapshots), Hr("settings", "boolean", "ignoreUndefinedProperties", t.ignoreUndefinedProperties), // Nobody should set timestampsInSnapshots anymore, but the error depends on
    // whether they set it to true or false...
    !0 === t.timestampsInSnapshots ? f("The setting 'timestampsInSnapshots: true' is no longer required and should be removed.") : !1 === t.timestampsInSnapshots && f("Support for 'timestampsInSnapshots: false' will be removed soon. You must update your code to handle Timestamp objects."), this.timestampsInSnapshots = null === (n = t.timestampsInSnapshots) || void 0 === n || n, this.ignoreUndefinedProperties = null !== (r = t.ignoreUndefinedProperties) && void 0 !== r && r, Hr("settings", "number", "cacheSizeBytes", t.cacheSizeBytes), void 0 === t.cacheSizeBytes) this.cacheSizeBytes = Rr.Dh;else {
      if (t.cacheSizeBytes !== Vo && t.cacheSizeBytes < Rr.Sh) throw new S(x.INVALID_ARGUMENT, "cacheSizeBytes must be at least " + Rr.Sh);
      this.cacheSizeBytes = t.cacheSizeBytes;
    }
    Hr("settings", "boolean", "experimentalForceLongPolling", t.experimentalForceLongPolling), this.forceLongPolling = null !== (i = t.experimentalForceLongPolling) && void 0 !== i && i;
  }

  return t.prototype.isEqual = function (t) {
    return this.host === t.host && this.ssl === t.ssl && this.timestampsInSnapshots === t.timestampsInSnapshots && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.forceLongPolling === t.forceLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties;
  }, t;
}(),
    qo =
/** @class */
function () {
  // Note: We are using `MemoryComponentProvider` as a default
  // ComponentProvider to ensure backwards compatibility with the format
  // expected by the console build.
  function t(n, r, i) {
    var o = this;

    if (void 0 === i && (i = new ko()), this.Bd = null, // Public for use in tests.
    // TODO(mikelehen): Use modularized initialization instead.
    this.qd = new xr(), this.INTERNAL = {
      delete: function _delete() {
        return e.__awaiter(o, void 0, void 0, function () {
          return e.__generator(this, function (t) {
            switch (t.label) {
              case 0:
                // The client must be initalized to ensure that all subsequent API usage
                // throws an exception.
                return this.Ud(), [4
                /*yield*/
                , this.Qd.terminate()];

              case 1:
                // The client must be initalized to ensure that all subsequent API usage
                // throws an exception.
                return t.sent(), [2
                /*return*/
                ];
            }
          });
        });
      }
    }, "object" == _typeof(n.options)) {
      // This is very likely a Firebase app object
      // TODO(b/34177605): Can we somehow use instanceof?
      var s = n;
      this.Bd = s, this.qa = t.Wd(s), this.jd = s.name, this.Kd = new qi(r);
    } else {
      var u = n;
      if (!u.projectId) throw new S(x.INVALID_ARGUMENT, "Must provide projectId");
      this.qa = new I(u.projectId, u.database), // Use a default persistenceKey that lines up with FirebaseApp.
      this.jd = "[DEFAULT]", this.Kd = new Ci();
    }

    this.Gd = i, this.zd = new Co({});
  }

  return Object.defineProperty(t.prototype, "Hd", {
    get: function get() {
      return this.Yd || ( // Lazy initialize UserDataReader once the settings are frozen
      this.Yd = new xi(this.qa, this.zd.ignoreUndefinedProperties)), this.Yd;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.settings = function (t) {
    jr("Firestore.settings", arguments, 1), Gr("Firestore.settings", "object", 1, t);
    var e = new Co(t);
    if (this.Qd && !this.zd.isEqual(e)) throw new S(x.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.");
    this.zd = e, void 0 !== e.credentials && (this.Kd = function (t) {
      if (!t) return new Ci();

      switch (t.type) {
        case "gapi":
          var e = t.Jd; // Make sure this really is a Gapi client.

          return d(!("object" != _typeof(e) || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), new Mi(e, t.wu || "0");

        case "provider":
          return t.Jd;

        default:
          throw new S(x.INVALID_ARGUMENT, "makeCredentialsProvider failed due to invalid credential type");
      }
    }(e.credentials));
  }, t.prototype.enableNetwork = function () {
    return this.Ud(), this.Qd.enableNetwork();
  }, t.prototype.disableNetwork = function () {
    return this.Ud(), this.Qd.disableNetwork();
  }, t.prototype.enablePersistence = function (t) {
    var e, n;
    if (this.Qd) throw new S(x.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.");
    var r = !1,
        i = !1;
    if (t && (void 0 !== t.experimentalTabSynchronization && f("The 'experimentalTabSynchronization' setting will be removed. Use 'synchronizeTabs' instead."), r = null !== (n = null !== (e = t.synchronizeTabs) && void 0 !== e ? e : t.experimentalTabSynchronization) && void 0 !== n && n, i = !!t.experimentalForceOwningTab && t.experimentalForceOwningTab, r && i)) throw new S(x.INVALID_ARGUMENT, "The 'experimentalForceOwningTab' setting cannot be used with 'synchronizeTabs'.");
    return this.Xd(this.Gd, {
      Rd: !0,
      cacheSizeBytes: this.zd.cacheSizeBytes,
      synchronizeTabs: r,
      ir: i
    });
  }, t.prototype.clearPersistence = function () {
    return e.__awaiter(this, void 0, void 0, function () {
      var t,
          n = this;
      return e.__generator(this, function (r) {
        if (void 0 !== this.Qd && !this.Qd.yd) throw new S(x.FAILED_PRECONDITION, "Persistence cannot be cleared after this Firestore instance is initialized.");
        return t = new cn(), [2
        /*return*/
        , (this.qd.sh(function () {
          return e.__awaiter(n, void 0, void 0, function () {
            var n, r;
            return e.__generator(this, function (e) {
              switch (e.label) {
                case 0:
                  return e.trys.push([0, 2,, 3]), n = this.Zd(), [4
                  /*yield*/
                  , this.Gd.clearPersistence(n)];

                case 1:
                  return e.sent(), t.resolve(), [3
                  /*break*/
                  , 3];

                case 2:
                  return r = e.sent(), t.reject(r), [3
                  /*break*/
                  , 3];

                case 3:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        }), t.promise)];
      });
    });
  }, t.prototype.terminate = function () {
    return this.app._removeServiceInstance("firestore"), this.INTERNAL.delete();
  }, Object.defineProperty(t.prototype, "tw", {
    get: function get() {
      return this.Ud(), this.Qd.yd;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.waitForPendingWrites = function () {
    return this.Ud(), this.Qd.waitForPendingWrites();
  }, t.prototype.onSnapshotsInSync = function (t) {
    if (this.Ud(), Uo(t)) return this.ew(t);
    Gr("Firestore.onSnapshotsInSync", "function", 1, t);
    var e = {
      next: t
    };
    return this.ew(e);
  }, t.prototype.ew = function (t) {
    var e = this,
        n = new Oo({
      next: function next() {
        t.next && t.next();
      },
      error: function error(t) {
        throw p();
      }
    });
    return this.Qd.lf(n), function () {
      n.Dd(), e.Qd._f(n);
    };
  }, t.prototype.Ud = function () {
    return this.Qd || // Kick off starting the client but don't actually wait for it.
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
    this.Xd(new ko(), {
      Rd: !1
    }), this.Qd;
  }, t.prototype.Zd = function () {
    return new b(this.qa, this.jd, this.zd.host, this.zd.ssl, this.zd.forceLongPolling);
  }, t.prototype.Xd = function (t, e) {
    var n = this.Zd();
    return this.Qd = new Ro(n, this.Kd, this.qd), this.Qd.start(t, e);
  }, t.Wd = function (t) {
    if (e = t.options, "projectId", !Object.prototype.hasOwnProperty.call(e, "projectId")) throw new S(x.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
    var e,
        n = t.options.projectId;
    /**
    * @license
    * Copyright 2017 Google LLC
    *
    * Licensed under the Apache License, Version 2.0 (the "License");
    * you may not use this file except in compliance with the License.
    * You may obtain a copy of the License at
    *
    *   http://www.apache.org/licenses/LICENSE-2.0
    *
    * Unless required by applicable law or agreed to in writing, software
    * distributed under the License is distributed on an "AS IS" BASIS,
    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    * See the License for the specific language governing permissions and
    * limitations under the License.
    */

    /** List of JavaScript builtins that cannot be reassigned. */

    if (!n || "string" != typeof n) throw new S(x.INVALID_ARGUMENT, "projectId must be a string in FirebaseApp.options");
    return new I(n);
  }, Object.defineProperty(t.prototype, "app", {
    get: function get() {
      if (!this.Bd) throw new S(x.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
      return this.Bd;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.collection = function (t) {
    return jr("Firestore.collection", arguments, 1), Gr("Firestore.collection", "non-empty string", 1, t), this.Ud(), new Ho(R.$(t), this,
    /* converter= */
    null);
  }, t.prototype.doc = function (t) {
    return jr("Firestore.doc", arguments, 1), Gr("Firestore.doc", "non-empty string", 1, t), this.Ud(), jo.sw(R.$(t), this,
    /* converter= */
    null);
  }, t.prototype.collectionGroup = function (t) {
    if (jr("Firestore.collectionGroup", arguments, 1), Gr("Firestore.collectionGroup", "non-empty string", 1, t), t.indexOf("/") >= 0) throw new S(x.INVALID_ARGUMENT, "Invalid collection ID '" + t + "' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.");
    return this.Ud(), new zo(new Ve(R.k, t), this,
    /* converter= */
    null);
  }, t.prototype.runTransaction = function (t) {
    var e = this;
    return jr("Firestore.runTransaction", arguments, 1), Gr("Firestore.runTransaction", "function", 1, t), this.Ud().transaction(function (n) {
      return t(new Fo(e, n));
    });
  }, t.prototype.batch = function () {
    return this.Ud(), new Mo(this);
  }, Object.defineProperty(t, "logLevel", {
    get: function get() {
      switch (c()) {
        case r.LogLevel.DEBUG:
          return "debug";

        case r.LogLevel.ERROR:
          return "error";

        case r.LogLevel.SILENT:
          return "silent";

        case r.LogLevel.WARN:
          return "warn";

        case r.LogLevel.INFO:
          return "info";

        case r.LogLevel.VERBOSE:
          return "verbose";

        default:
          // The default log level is error
          return "error";
      }
    },
    enumerable: !0,
    configurable: !0
  }), t.setLogLevel = function (t) {
    var e;
    jr("Firestore.setLogLevel", arguments, 1), Yr("setLogLevel", ["debug", "error", "silent", "warn", "info", "verbose"], 1, t), e = t, a.setLogLevel(e);
  }, // Note: this is not a property because the minifier can't work correctly with
  // the way TypeScript compiler outputs properties.
  t.prototype.nw = function () {
    return this.zd.timestampsInSnapshots;
  }, t;
}(),
    Fo =
/** @class */
function () {
  function t(t, e) {
    this.iw = t, this.rw = e;
  }

  return t.prototype.get = function (t) {
    var e = this;
    jr("Transaction.get", arguments, 1);
    var n = $o("Transaction.get", t, this.iw);
    return this.rw.nc([n.Ua]).then(function (t) {
      if (!t || 1 !== t.length) return p();
      var r = t[0];
      if (r instanceof Ue) return new Qo(e.iw, n.Ua, null,
      /* fromCache= */
      !1,
      /* hasPendingWrites= */
      !1, n.Qa);
      if (r instanceof Oe) return new Qo(e.iw, n.Ua, r,
      /* fromCache= */
      !1,
      /* hasPendingWrites= */
      !1, n.Qa);
      throw p();
    });
  }, t.prototype.set = function (t, e, n) {
    Qr("Transaction.set", arguments, 2, 3);
    var r = $o("Transaction.set", t, this.iw);
    n = Ko("Transaction.set", n);
    var i = Zo(r.Qa, e, "Transaction.set"),
        o = i[0],
        s = i[1],
        u = this.iw.Hd.Ja(s, o, n);
    return this.rw.set(r.Ua, u), this;
  }, t.prototype.update = function (t, e, n) {
    for (var r, i, o = [], s = 3; s < arguments.length; s++) {
      o[s - 3] = arguments[s];
    }

    return "string" == typeof e || e instanceof ci ? (Br("Transaction.update", arguments, 3), r = $o("Transaction.update", t, this.iw), i = this.iw.Hd.tu("Transaction.update", e, n, o)) : (jr("Transaction.update", arguments, 2), r = $o("Transaction.update", t, this.iw), i = this.iw.Hd.Za("Transaction.update", e)), this.rw.update(r.Ua, i), this;
  }, t.prototype.delete = function (t) {
    jr("Transaction.delete", arguments, 1);
    var e = $o("Transaction.delete", t, this.iw);
    return this.rw.delete(e.Ua), this;
  }, t;
}(),
    Mo =
/** @class */
function () {
  function t(t) {
    this.iw = t, this.ow = [], this.hw = !1;
  }

  return t.prototype.set = function (t, e, n) {
    Qr("WriteBatch.set", arguments, 2, 3), this.aw();
    var r = $o("WriteBatch.set", t, this.iw);
    n = Ko("WriteBatch.set", n);
    var i = Zo(r.Qa, e, "WriteBatch.set"),
        o = i[0],
        s = i[1],
        u = this.iw.Hd.Ja(s, o, n);
    return this.ow = this.ow.concat(u.Wa(r.Ua, Ie.Qe())), this;
  }, t.prototype.update = function (t, e, n) {
    for (var r, i, o = [], s = 3; s < arguments.length; s++) {
      o[s - 3] = arguments[s];
    }

    return this.aw(), "string" == typeof e || e instanceof ci ? (Br("WriteBatch.update", arguments, 3), r = $o("WriteBatch.update", t, this.iw), i = this.iw.Hd.tu("WriteBatch.update", e, n, o)) : (jr("WriteBatch.update", arguments, 2), r = $o("WriteBatch.update", t, this.iw), i = this.iw.Hd.Za("WriteBatch.update", e)), this.ow = this.ow.concat(i.Wa(r.Ua, Ie.exists(!0))), this;
  }, t.prototype.delete = function (t) {
    jr("WriteBatch.delete", arguments, 1), this.aw();
    var e = $o("WriteBatch.delete", t, this.iw);
    return this.ow = this.ow.concat(new xe(e.Ua, Ie.Qe())), this;
  }, t.prototype.commit = function () {
    return this.aw(), this.hw = !0, this.ow.length > 0 ? this.iw.Ud().write(this.ow) : Promise.resolve();
  }, t.prototype.aw = function () {
    if (this.hw) throw new S(x.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
  }, t;
}(),
    jo =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this, n.qa, e, r) || this).Ua = e, i.firestore = n, i.Qa = r, i.Qd = i.firestore.Ud(), i;
  }

  return e.__extends(n, t), n.sw = function (t, e, r) {
    if (t.length % 2 != 0) throw new S(x.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + t.N() + " has " + t.length);
    return new n(new L(t), e, r);
  }, Object.defineProperty(n.prototype, "id", {
    get: function get() {
      return this.Ua.path.S();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(n.prototype, "parent", {
    get: function get() {
      return new Ho(this.Ua.path.p(), this.firestore, this.Qa);
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(n.prototype, "path", {
    get: function get() {
      return this.Ua.path.N();
    },
    enumerable: !0,
    configurable: !0
  }), n.prototype.collection = function (t) {
    if (jr("DocumentReference.collection", arguments, 1), Gr("DocumentReference.collection", "non-empty string", 1, t), !t) throw new S(x.INVALID_ARGUMENT, "Must provide a non-empty collection name to collection()");
    var e = R.$(t);
    return new Ho(this.Ua.path.child(e), this.firestore,
    /* converter= */
    null);
  }, n.prototype.isEqual = function (t) {
    if (!(t instanceof n)) throw ei("isEqual", "DocumentReference", 1, t);
    return this.firestore === t.firestore && this.Ua.isEqual(t.Ua) && this.Qa === t.Qa;
  }, n.prototype.set = function (t, e) {
    Qr("DocumentReference.set", arguments, 1, 2), e = Ko("DocumentReference.set", e);
    var n = Zo(this.Qa, t, "DocumentReference.set"),
        r = n[0],
        i = n[1],
        o = this.firestore.Hd.Ja(i, r, e);
    return this.Qd.write(o.Wa(this.Ua, Ie.Qe()));
  }, n.prototype.update = function (t, e) {
    for (var n, r = [], i = 2; i < arguments.length; i++) {
      r[i - 2] = arguments[i];
    }

    return "string" == typeof t || t instanceof ci ? (Br("DocumentReference.update", arguments, 2), n = this.firestore.Hd.tu("DocumentReference.update", t, e, r)) : (jr("DocumentReference.update", arguments, 1), n = this.firestore.Hd.Za("DocumentReference.update", t)), this.Qd.write(n.Wa(this.Ua, Ie.exists(!0)));
  }, n.prototype.delete = function () {
    return jr("DocumentReference.delete", arguments, 0), this.Qd.write([new xe(this.Ua, Ie.Qe())]);
  }, n.prototype.onSnapshot = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    Qr("DocumentReference.onSnapshot", arguments, 1, 4);
    var n,
        r = {
      includeMetadataChanges: !1
    },
        i = 0;
    "object" != _typeof(t[i]) || Uo(t[i]) || (ti("DocumentReference.onSnapshot", r = t[i], ["includeMetadataChanges"]), Hr("DocumentReference.onSnapshot", "boolean", "includeMetadataChanges", r.includeMetadataChanges), i++);
    var o = {
      includeMetadataChanges: r.includeMetadataChanges
    };
    return Uo(t[i]) ? n = t[i] : (Gr("DocumentReference.onSnapshot", "function", i, t[i]), zr("DocumentReference.onSnapshot", "function", i + 1, t[i + 1]), zr("DocumentReference.onSnapshot", "function", i + 2, t[i + 2]), n = {
      next: t[i],
      error: t[i + 1],
      complete: t[i + 2]
    }), this.uw(o, n);
  }, n.prototype.uw = function (t, e) {
    var n = this,
        r = function r(t) {
      console.error("Uncaught Error in onSnapshot:", t);
    };

    e.error && (r = e.error.bind(e));
    var i = new Oo({
      next: function next(t) {
        if (e.next) {
          var r = t.docs.get(n.Ua);
          e.next(new Qo(n.firestore, n.Ua, r, t.fromCache, t.hasPendingWrites, n.Qa));
        }
      },
      error: r
    }),
        o = this.Qd.listen(Ve.As(this.Ua.path), i, t);
    return function () {
      i.Dd(), n.Qd.qc(o);
    };
  }, n.prototype.get = function (t) {
    var e = this;
    return Qr("DocumentReference.get", arguments, 0, 1), Xo("DocumentReference.get", t), new Promise(function (n, r) {
      t && "cache" === t.source ? e.firestore.Ud().bd(e.Ua).then(function (t) {
        n(new Qo(e.firestore, e.Ua, t,
        /*fromCache=*/
        !0, t instanceof Oe && t.Xe, e.Qa));
      }, r) : e.cw(n, r, t);
    });
  }, n.prototype.cw = function (t, e, n) {
    var r = this.uw({
      includeMetadataChanges: !0,
      Af: !0
    }, {
      next: function next(i) {
        // Remove query first before passing event to user to avoid
        // user actions affecting the now stale query.
        r(), !i.exists && i.metadata.fromCache ? // TODO(dimond): If we're online and the document doesn't
        // exist then we resolve with a doc.exists set to false. If
        // we're offline however, we reject the Promise in this
        // case. Two options: 1) Cache the negative response from
        // the server so we can deliver that even when you're
        // offline 2) Actually reject the Promise in the online case
        // if the document doesn't exist.
        e(new S(x.UNAVAILABLE, "Failed to get document because the client is offline.")) : i.exists && i.metadata.fromCache && n && "server" === n.source ? e(new S(x.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : t(i);
      },
      error: e
    });
  }, n.prototype.withConverter = function (t) {
    return new n(this.Ua, this.firestore, t);
  }, n;
}(Ii),
    Bo =
/** @class */
function () {
  function t(t, e) {
    this.hasPendingWrites = t, this.fromCache = e;
  }

  return t.prototype.isEqual = function (t) {
    return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
  }, t;
}(),
    Qo =
/** @class */
function () {
  function t(t, e, n, r, i, o) {
    this.iw = t, this.Ua = e, this.lw = n, this._w = r, this.fw = i, this.Qa = o;
  }

  return t.prototype.data = function (t) {
    var e = this;

    if (Qr("DocumentSnapshot.data", arguments, 0, 1), t = Yo("DocumentSnapshot.data", t), this.lw) {
      // We only want to use the converter and create a new DocumentSnapshot
      // if a converter has been provided.
      if (this.Qa) {
        var n = new Go(this.iw, this.Ua, this.lw, this._w, this.fw,
        /* converter= */
        null);
        return this.Qa.fromFirestore(n, t);
      }

      return new Lo(this.iw.qa, this.iw.nw(), t.serverTimestamps || "none", function (t) {
        return new jo(t, e.iw,
        /* converter= */
        null);
      }).Nd(this.lw.fs());
    }
  }, t.prototype.get = function (t, e) {
    var n = this;

    if (Qr("DocumentSnapshot.get", arguments, 1, 2), e = Yo("DocumentSnapshot.get", e), this.lw) {
      var r = this.lw.data().field(Ri("DocumentSnapshot.get", t));
      if (null !== r) return new Lo(this.iw.qa, this.iw.nw(), e.serverTimestamps || "none", function (t) {
        return new jo(t, n.iw, n.Qa);
      }).Nd(r);
    }
  }, Object.defineProperty(t.prototype, "id", {
    get: function get() {
      return this.Ua.path.S();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "ref", {
    get: function get() {
      return new jo(this.Ua, this.iw, this.Qa);
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "exists", {
    get: function get() {
      return null !== this.lw;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "metadata", {
    get: function get() {
      return new Bo(this.fw, this._w);
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) throw ei("isEqual", "DocumentSnapshot", 1, e);
    return this.iw === e.iw && this._w === e._w && this.Ua.isEqual(e.Ua) && (null === this.lw ? null === e.lw : this.lw.isEqual(e.lw)) && this.Qa === e.Qa;
  }, t;
}(),
    Go =
/** @class */
function (t) {
  function n() {
    return null !== t && t.apply(this, arguments) || this;
  }

  return e.__extends(n, t), n.prototype.data = function (e) {
    return t.prototype.data.call(this, e);
  }, n;
}(Qo),
    zo =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    return (i = t.call(this, n.qa, n.Hd, e) || this).dw = e, i.firestore = n, i.Qa = r, i;
  }

  return e.__extends(n, t), n.prototype.where = function (t, e, r) {
    jr("Query.where", arguments, 3), Zr("Query.where", 3, r); // Enumerated from the WhereFilterOp type in index.d.ts.

    var i = Yr("Query.where", ["<"
    /* LESS_THAN */
    , "<="
    /* LESS_THAN_OR_EQUAL */
    , "=="
    /* EQUAL */
    , ">="
    /* GREATER_THAN_OR_EQUAL */
    , ">"
    /* GREATER_THAN */
    , "array-contains"
    /* ARRAY_CONTAINS */
    , "in"
    /* IN */
    , "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    ], 2, e),
        o = Ri("Query.where", t),
        s = this.ww(o, i, r);
    return new n(this.dw.Ps(s), this.firestore, this.Qa);
  }, n.prototype.orderBy = function (t, e) {
    var r;
    if (Qr("Query.orderBy", arguments, 1, 2), zr("Query.orderBy", "non-empty string", 2, e), void 0 === e || "asc" === e) r = "asc"
    /* ASCENDING */
    ;else {
      if ("desc" !== e) throw new S(x.INVALID_ARGUMENT, "Function Query.orderBy() has unknown direction '" + e + "', expected 'asc' or 'desc'.");
      r = "desc"
      /* DESCENDING */
      ;
    }
    var i = Ri("Query.orderBy", t),
        o = this.Aw(i, r);
    return new n(this.dw.Vs(o), this.firestore, this.Qa);
  }, n.prototype.limit = function (t) {
    return jr("Query.limit", arguments, 1), Gr("Query.limit", "number", 1, t), ni("Query.limit", 1, t), new n(this.dw.gs(t), this.firestore, this.Qa);
  }, n.prototype.limitToLast = function (t) {
    return jr("Query.limitToLast", arguments, 1), Gr("Query.limitToLast", "number", 1, t), ni("Query.limitToLast", 1, t), new n(this.dw.ps(t), this.firestore, this.Qa);
  }, n.prototype.startAt = function (t) {
    for (var e = [], r = 1; r < arguments.length; r++) {
      e[r - 1] = arguments[r];
    }

    Br("Query.startAt", arguments, 1);
    var i = this.pw("Query.startAt", t, e,
    /*before=*/
    !0);
    return new n(this.dw.ys(i), this.firestore, this.Qa);
  }, n.prototype.startAfter = function (t) {
    for (var e = [], r = 1; r < arguments.length; r++) {
      e[r - 1] = arguments[r];
    }

    Br("Query.startAfter", arguments, 1);
    var i = this.pw("Query.startAfter", t, e,
    /*before=*/
    !1);
    return new n(this.dw.ys(i), this.firestore, this.Qa);
  }, n.prototype.endBefore = function (t) {
    for (var e = [], r = 1; r < arguments.length; r++) {
      e[r - 1] = arguments[r];
    }

    Br("Query.endBefore", arguments, 1);
    var i = this.pw("Query.endBefore", t, e,
    /*before=*/
    !0);
    return new n(this.dw.bs(i), this.firestore, this.Qa);
  }, n.prototype.endAt = function (t) {
    for (var e = [], r = 1; r < arguments.length; r++) {
      e[r - 1] = arguments[r];
    }

    Br("Query.endAt", arguments, 1);
    var i = this.pw("Query.endAt", t, e,
    /*before=*/
    !1);
    return new n(this.dw.bs(i), this.firestore, this.Qa);
  }, n.prototype.isEqual = function (t) {
    if (!(t instanceof n)) throw ei("isEqual", "Query", 1, t);
    return this.firestore === t.firestore && this.dw.isEqual(t.dw) && this.Qa === t.Qa;
  }, n.prototype.withConverter = function (t) {
    return new n(this.dw, this.firestore, t);
  },
  /** Helper function to create a bound from a document or fields */
  n.prototype.pw = function (t, n, r, i) {
    if (Zr(t, 1, n), n instanceof Qo) return jr(t, e.__spreadArrays([n], r), 1), this.mw(t, n.lw, i);
    var o = [n].concat(r);
    return this.Pw(t, o, i);
  }, n.prototype.onSnapshot = function () {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }

    Qr("Query.onSnapshot", arguments, 1, 4);
    var n,
        r = {},
        i = 0;
    return "object" != _typeof(t[i]) || Uo(t[i]) || (ti("Query.onSnapshot", r = t[i], ["includeMetadataChanges"]), Hr("Query.onSnapshot", "boolean", "includeMetadataChanges", r.includeMetadataChanges), i++), Uo(t[i]) ? n = t[i] : (Gr("Query.onSnapshot", "function", i, t[i]), zr("Query.onSnapshot", "function", i + 1, t[i + 1]), zr("Query.onSnapshot", "function", i + 2, t[i + 2]), n = {
      next: t[i],
      error: t[i + 1],
      complete: t[i + 2]
    }), this.Vw(this.dw), this.uw(r, n);
  }, n.prototype.uw = function (t, e) {
    var n = this,
        r = function r(t) {
      console.error("Uncaught Error in onSnapshot:", t);
    };

    e.error && (r = e.error.bind(e));
    var i = new Oo({
      next: function next(t) {
        e.next && e.next(new Wo(n.firestore, n.dw, t, n.Qa));
      },
      error: r
    }),
        o = this.firestore.Ud(),
        s = o.listen(this.dw, i, t);
    return function () {
      i.Dd(), o.qc(s);
    };
  }, n.prototype.get = function (t) {
    var e = this;
    return Qr("Query.get", arguments, 0, 1), Xo("Query.get", t), this.Vw(this.dw), new Promise(function (n, r) {
      t && "cache" === t.source ? e.firestore.Ud().vd(e.dw).then(function (t) {
        n(new Wo(e.firestore, e.dw, t, e.Qa));
      }, r) : e.cw(n, r, t);
    });
  }, n.prototype.cw = function (t, e, n) {
    var r = this.uw({
      includeMetadataChanges: !0,
      Af: !0
    }, {
      next: function next(i) {
        // Remove query first before passing event to user to avoid
        // user actions affecting the now stale query.
        r(), i.metadata.fromCache && n && "server" === n.source ? e(new S(x.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : t(i);
      },
      error: e
    });
  }, n;
}(
/** @class */
function () {
  function t(t, e, n) {
    this.qa = t, this.Hd = e, this.dw = n;
  }

  return t.prototype.ww = function (t, e, n) {
    var r;

    if (t.L()) {
      if ("array-contains"
      /* ARRAY_CONTAINS */
      === e || "array-contains-any"
      /* ARRAY_CONTAINS_ANY */
      === e) throw new S(x.INVALID_ARGUMENT, "Invalid Query. You can't perform '" + e + "' queries on FieldPath.documentId().");

      if ("in"
      /* IN */
      === e) {
        this.Tw(n, e);

        for (var i = [], o = 0, s = n; o < s.length; o++) {
          var u = s[o];
          i.push(this.Ew(u));
        }

        r = {
          arrayValue: {
            values: i
          }
        };
      } else r = this.Ew(n);
    } else "in"
    /* IN */
    !== e && "array-contains-any"
    /* ARRAY_CONTAINS_ANY */
    !== e || this.Tw(n, e), r = this.Hd.eu("Query.where", n, // We only allow nested arrays for IN queries.

    /** allowArrays = */
    "in"
    /* IN */
    === e);

    var a = Ce.create(t, e, r);
    return this.Iw(a), a;
  }, t.prototype.Aw = function (t, e) {
    if (null !== this.dw.startAt) throw new S(x.INVALID_ARGUMENT, "Invalid query. You must not call Query.startAt() or Query.startAfter() before calling Query.orderBy().");
    if (null !== this.dw.endAt) throw new S(x.INVALID_ARGUMENT, "Invalid query. You must not call Query.endAt() or Query.endBefore() before calling Query.orderBy().");
    var n = new He(t, e);
    return this.Rw(n), n;
  },
  /**
   * Create a Bound from a query and a document.
   *
   * Note that the Bound will always include the key of the document
   * and so only the provided document will compare equal to the returned
   * position.
   *
   * Will throw if the document does not contain all fields of the order by
   * of the query or if any of the fields in the order by are an uncommitted
   * server timestamp.
   */
  t.prototype.mw = function (t, e, n) {
    if (!e) throw new S(x.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for " + t + "()."); // Because people expect to continue/end a query at the exact document
    // provided, we need to use the implicit sort order rather than the explicit
    // sort order, because it's guaranteed to contain the document key. That way
    // the position becomes unambiguous and the query continues/ends exactly at
    // the provided document. Without the key (by using the explicit sort
    // orders), multiple documents could match the position, yielding duplicate
    // results.

    for (var r = [], i = 0, o = this.dw.orderBy; i < o.length; i++) {
      var s = o[i];
      if (s.field.L()) r.push(Pt(this.qa, e.key));else {
        var u = e.field(s.field);
        if (wt(u)) throw new S(x.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + s.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');

        if (null === u) {
          var a = s.field.N();
          throw new S(x.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '" + a + "' (used as the orderBy) does not exist.");
        }

        r.push(u);
      }
    }

    return new Qe(r, n);
  },
  /**
   * Converts a list of field values to a Bound for the given query.
   */
  t.prototype.Pw = function (t, e, n) {
    // Use explicit order by's because it has to match the query the user made
    var r = this.dw.ds;
    if (e.length > r.length) throw new S(x.INVALID_ARGUMENT, "Too many arguments provided to " + t + "(). The number of arguments must be less than or equal to the number of Query.orderBy() clauses");

    for (var i = [], o = 0; o < e.length; o++) {
      var s = e[o];

      if (r[o].field.L()) {
        if ("string" != typeof s) throw new S(x.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in " + t + "(), but got a " + _typeof(s));
        if (!this.dw.Bs() && -1 !== s.indexOf("/")) throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to " + t + "() must be a plain document ID, but '" + s + "' contains a slash.");
        var u = this.dw.path.child(R.$(s));
        if (!L.W(u)) throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to " + t + "() must result in a valid document path, but '" + u + "' is not because it contains an odd number of segments.");
        var a = new L(u);
        i.push(Pt(this.qa, a));
      } else {
        var c = this.Hd.eu(t, s);
        i.push(c);
      }
    }

    return new Qe(i, n);
  }, t.prototype.Vw = function (t) {
    if (t.xs() && 0 === t.ds.length) throw new S(x.UNIMPLEMENTED, "limitToLast() queries require specifying at least one orderBy() clause");
  },
  /**
   * Parses the given documentIdValue into a ReferenceValue, throwing
   * appropriate errors if the value is anything other than a DocumentReference
   * or String, or if the string is malformed.
   */
  t.prototype.Ew = function (t) {
    if ("string" == typeof t) {
      if ("" === t) throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");
      if (!this.dw.Bs() && -1 !== t.indexOf("/")) throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '" + t + "' contains a '/' character.");
      var e = this.dw.path.child(R.$(t));
      if (!L.W(e)) throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '" + e + "' is not because it has an odd number of segments (" + e.length + ").");
      return Pt(this.qa, new L(e));
    }

    if (t instanceof Ii) return Pt(this.qa, t.Ua);
    throw new S(x.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: " + Jr(t) + ".");
  },
  /**
   * Validates that the value passed into a disjunctrive filter satisfies all
   * array requirements.
   */
  t.prototype.Tw = function (t, e) {
    if (!Array.isArray(t) || 0 === t.length) throw new S(x.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '" + e.toString() + "' filters.");
    if (t.length > 10) throw new S(x.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters support a maximum of 10 elements in the value array.");
    if (t.indexOf(null) >= 0) throw new S(x.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters cannot contain 'null' in the value array.");
    if (t.filter(function (t) {
      return Number.isNaN(t);
    }).length > 0) throw new S(x.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters cannot contain 'NaN' in the value array.");
  }, t.prototype.Iw = function (t) {
    if (t instanceof Ce) {
      var e = ["array-contains"
      /* ARRAY_CONTAINS */
      , "array-contains-any"
      /* ARRAY_CONTAINS_ANY */
      ],
          n = ["in"
      /* IN */
      , "array-contains-any"
      /* ARRAY_CONTAINS_ANY */
      ],
          r = e.indexOf(t.op) >= 0,
          i = n.indexOf(t.op) >= 0;

      if (t.Ms()) {
        var o = this.dw.Rs();
        if (null !== o && !o.isEqual(t.field)) throw new S(x.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '" + o.toString() + "' and '" + t.field.toString() + "'");
        var s = this.dw.ms();
        null !== s && this.gw(t.field, s);
      } else if (i || r) {
        // You can have at most 1 disjunctive filter and 1 array filter. Check if
        // the new filter conflicts with an existing one.
        var u = null;
        if (i && (u = this.dw.Ls(n)), null === u && r && (u = this.dw.Ls(e)), null != u) // We special case when it's a duplicate op to give a slightly clearer error message.
          throw u === t.op ? new S(x.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '" + t.op.toString() + "' filter.") : new S(x.INVALID_ARGUMENT, "Invalid query. You cannot use '" + t.op.toString() + "' filters with '" + u.toString() + "' filters.");
      }
    }
  }, t.prototype.Rw = function (t) {
    if (null === this.dw.ms()) {
      // This is the first order by. It must match any inequality.
      var e = this.dw.Rs();
      null !== e && this.gw(e, t.field);
    }
  }, t.prototype.gw = function (t, e) {
    if (!e.isEqual(t)) throw new S(x.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '" + t.toString() + "' and so you must also use '" + t.toString() + "' as your first Query.orderBy(), but your first Query.orderBy() is on field '" + e.toString() + "' instead.");
  }, t;
}()),
    Wo =
/** @class */
function () {
  function t(t, e, n, r) {
    this.iw = t, this.yw = e, this.bw = n, this.Qa = r, this.vw = null, this.Sw = null, this.metadata = new Bo(n.hasPendingWrites, n.fromCache);
  }

  return Object.defineProperty(t.prototype, "docs", {
    get: function get() {
      var t = [];
      return this.forEach(function (e) {
        return t.push(e);
      }), t;
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "empty", {
    get: function get() {
      return this.bw.docs._();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(t.prototype, "size", {
    get: function get() {
      return this.bw.docs.size;
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.forEach = function (t, e) {
    var n = this;
    Qr("QuerySnapshot.forEach", arguments, 1, 2), Gr("QuerySnapshot.forEach", "function", 1, t), this.bw.docs.forEach(function (r) {
      t.call(e, n.Dw(r));
    });
  }, Object.defineProperty(t.prototype, "query", {
    get: function get() {
      return new zo(this.yw, this.iw, this.Qa);
    },
    enumerable: !0,
    configurable: !0
  }), t.prototype.docChanges = function (t) {
    t && (ti("QuerySnapshot.docChanges", t, ["includeMetadataChanges"]), Hr("QuerySnapshot.docChanges", "boolean", "includeMetadataChanges", t.includeMetadataChanges));
    var e = !(!t || !t.includeMetadataChanges);
    if (e && this.bw.qt) throw new S(x.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
    return this.vw && this.Sw === e || (this.vw =
    /**
    * Calculates the array of firestore.DocumentChange's for a given ViewSnapshot.
    *
    * Exported for testing.
    */
    function (t, e, n, r) {
      if (n.Lt._()) {
        // Special case the first snapshot because index calculation is easy and
        // fast
        var i = 0;
        return n.docChanges.map(function (e) {
          var o = new Go(t, e.doc.key, e.doc, n.fromCache, n.Ot.has(e.doc.key), r);
          return e.doc, {
            type: "added",
            doc: o,
            oldIndex: -1,
            newIndex: i++
          };
        });
      } // A DocumentSet that is updated incrementally as changes are applied to use
      // to lookup the index of a document.


      var o = n.Lt;
      return n.docChanges.filter(function (t) {
        return e || 3
        /* Metadata */
        !== t.type;
      }).map(function (e) {
        var i = new Go(t, e.doc.key, e.doc, n.fromCache, n.Ot.has(e.doc.key), r),
            s = -1,
            u = -1;
        return 0
        /* Added */
        !== e.type && (s = o.indexOf(e.doc.key), o = o.delete(e.doc.key)), 1
        /* Removed */
        !== e.type && (u = (o = o.add(e.doc)).indexOf(e.doc.key)), {
          type: Jo(e.type),
          doc: i,
          oldIndex: s,
          newIndex: u
        };
      });
    }(this.iw, e, this.bw, this.Qa), this.Sw = e), this.vw;
  },
  /** Check the equality. The call can be very expensive. */
  t.prototype.isEqual = function (e) {
    if (!(e instanceof t)) throw ei("isEqual", "QuerySnapshot", 1, e);
    return this.iw === e.iw && this.yw.isEqual(e.yw) && this.bw.isEqual(e.bw) && this.Qa === e.Qa;
  }, t.prototype.Dw = function (t) {
    return new Go(this.iw, t.key, t, this.metadata.fromCache, this.bw.Ot.has(t.key), this.Qa);
  }, t;
}(),
    Ho =
/** @class */
function (t) {
  function n(e, n, r) {
    var i = this;
    if ((i = t.call(this, Ve.As(e), n, r) || this).Cw = e, e.length % 2 != 1) throw new S(x.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but " + e.N() + " has " + e.length);
    return i;
  }

  return e.__extends(n, t), Object.defineProperty(n.prototype, "id", {
    get: function get() {
      return this.dw.path.S();
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(n.prototype, "parent", {
    get: function get() {
      var t = this.dw.path.p();
      return t._() ? null : new jo(new L(t), this.firestore,
      /* converter= */
      null);
    },
    enumerable: !0,
    configurable: !0
  }), Object.defineProperty(n.prototype, "path", {
    get: function get() {
      return this.dw.path.N();
    },
    enumerable: !0,
    configurable: !0
  }), n.prototype.doc = function (t) {
    Qr("CollectionReference.doc", arguments, 0, 1), // We allow omission of 'pathString' but explicitly prohibit passing in both
    // 'undefined' and 'null'.
    0 === arguments.length && (t = g.t()), Gr("CollectionReference.doc", "non-empty string", 1, t);
    var e = R.$(t);
    return jo.sw(this.dw.path.child(e), this.firestore, this.Qa);
  }, n.prototype.add = function (t) {
    jr("CollectionReference.add", arguments, 1), Gr("CollectionReference.add", "object", 1, this.Qa ? this.Qa.toFirestore(t) : t);
    var e = this.doc();
    return e.set(t).then(function () {
      return e;
    });
  }, n.prototype.withConverter = function (t) {
    return new n(this.Cw, this.firestore, t);
  }, n;
}(zo);
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// settings() defaults:


function Ko(t, e) {
  if (void 0 === e) return {
    merge: !1
  };
  if (ti(t, e, ["merge", "mergeFields"]), Hr(t, "boolean", "merge", e.merge), function (t, e, n, r, i) {
    void 0 !== r && function (t, e, n, r, i) {
      if (!(r instanceof Array)) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires its " + e + " option to be an array, but it was: " + Jr(r));

      for (var o = 0; o < r.length; ++o) {
        if (!i(r[o])) throw new S(x.INVALID_ARGUMENT, "Function " + t + "() requires all " + e + " elements to be " + n + ", but the value at index " + o + " was: " + Jr(r[o]));
      }
    }(t, e, n, r, i);
  }(t, "mergeFields", "a string or a FieldPath", e.mergeFields, function (t) {
    return "string" == typeof t || t instanceof ci;
  }), void 0 !== e.mergeFields && void 0 !== e.merge) throw new S(x.INVALID_ARGUMENT, "Invalid options passed to function " + t + '(): You cannot specify both "merge" and "mergeFields".');
  return e;
}

function Yo(t, e) {
  return void 0 === e ? {} : (ti(t, e, ["serverTimestamps"]), Kr(t, 0, "serverTimestamps", e.serverTimestamps, ["estimate", "previous", "none"]), e);
}

function Xo(t, e) {
  zr(t, "object", 1, e), e && (ti(t, e, ["source"]), Kr(t, 0, "source", e.source, ["default", "server", "cache"]));
}

function $o(t, e, n) {
  if (e instanceof Ii) {
    if (e.firestore !== n) throw new S(x.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
    return e;
  }

  throw ei(t, "DocumentReference", 1, e);
}

function Jo(t) {
  switch (t) {
    case 0
    /* Added */
    :
      return "added";

    case 2
    /* Modified */
    :
    case 3
    /* Metadata */
    :
      return "modified";

    case 1
    /* Removed */
    :
      return "removed";

    default:
      return p();
  }
}
/**
 * Converts custom model object of type T into DocumentData by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to DocumentData
 * because we want to provide the user with a more specific error message if
 * their set() or fails due to invalid data originating from a toFirestore()
 * call.
 */


function Zo(t, e, n) {
  var r;
  return t ? (r = t.toFirestore(e), n = "toFirestore() in " + n) : r = e, [r, n];
}

var ts = ["length", "name"];
/**
 * Helper function to prevent instantiation through the constructor.
 *
 * This method creates a new constructor that throws when it's invoked.
 * The prototype of that constructor is then set to the prototype of the hidden
 * "class" to expose all the prototype methods and allow for instanceof
 * checks.
 *
 * To also make all the static methods available, all properties of the
 * original constructor are copied to the new constructor.
 */

function es(t, e) {
  function n() {
    var t = "This constructor is private.";
    throw e && (t += " ", t += e), new S(x.INVALID_ARGUMENT, t);
  } // Copy static members and prototype


  for (var r = 0, i = Object.getOwnPropertyNames(t); r < i.length; r++) {
    var o = i[r];
    -1 === ts.indexOf(o) && ( // eslint-disable-next-line @typescript-eslint/no-explicit-any
    n[o] = t[o]);
  } // eslint-disable-next-line @typescript-eslint/no-explicit-any


  return n;
}
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Public instance that disallows construction at runtime. Note that this still
// allows instanceof checks.


var ns = es(qo, "Use firebase.firestore() instead."),
    rs = es(Fo, "Use firebase.firestore().runTransaction() instead."),
    is = es(Mo, "Use firebase.firestore().batch() instead."),
    os = es(jo, "Use firebase.firestore().doc() instead."),
    ss = es(Qo),
    us = es(Go),
    as = es(zo),
    cs = es(Wo),
    hs = es(Ho, "Use firebase.firestore().collection() instead."),
    fs = es(gi, "Use FieldValue.<field>() instead."),
    ls = es(ui, "Use Blob.fromUint8Array() or Blob.fromBase64String() instead."),
    ps = {
  Firestore: ns,
  GeoPoint: wi,
  Timestamp: D,
  Blob: ls,
  Transaction: rs,
  WriteBatch: is,
  DocumentReference: os,
  DocumentSnapshot: ss,
  Query: as,
  QueryDocumentSnapshot: us,
  QuerySnapshot: cs,
  CollectionReference: hs,
  FieldPath: ci,
  FieldValue: fs,
  setLogLevel: qo.setLogLevel,
  CACHE_SIZE_UNLIMITED: Vo
};
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Registers the main Firestore build with the components framework.
 * Persistence can be enabled via `firebase.firestore().enablePersistence()`.
 */

function ds(t) {
  /**
  * Configures Firestore as part of the Firebase SDK by calling registerService.
  *
  * @param firebase The FirebaseNamespace to register Firestore with
  * @param firestoreFactory A factory function that returns a new Firestore
  *    instance.
  */
  !function (t, e) {
    t.INTERNAL.registerComponent(new s.Component("firestore", function (t) {
      return function (t, e) {
        return new qo(t, e, new Po());
      }(t.getProvider("app").getImmediate(), t.getProvider("auth-internal"));
    }, "PUBLIC"
    /* PUBLIC */
    ).setServiceProps(Object.assign({}, ps)));
  }(t), t.registerVersion("@firebase/firestore", "1.15.5");
}

ds(n), exports.__PRIVATE_registerFirestore = ds;
},{"tslib":"node_modules/tslib/tslib.es6.js","@firebase/app":"node_modules/@firebase/app/dist/index.cjs.js","@firebase/logger":"node_modules/@firebase/logger/dist/index.esm.js","@firebase/util":"node_modules/@firebase/util/dist/index.cjs.js","@firebase/webchannel-wrapper":"node_modules/@firebase/webchannel-wrapper/dist/index.esm.js","@firebase/component":"node_modules/@firebase/component/dist/index.cjs.js"}],"node_modules/firebase/firestore/dist/index.esm.js":[function(require,module,exports) {
"use strict";

require("@firebase/firestore");
},{"@firebase/firestore":"node_modules/@firebase/firestore/dist/index.cjs.js"}],"js/firebase.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.db = void 0;

var firebase = _interopRequireWildcard(require("firebase/app"));

require("firebase/analytics");

require("firebase/firestore");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var firebaseConfig = {
  apiKey: "AIzaSyCXnS4JPWsSUWh0WKFIYePZ5TVITihKheg",
  authDomain: "jjhong922-personal-website.firebaseapp.com",
  databaseURL: "https://jjhong922-personal-website.firebaseio.com",
  projectId: "jjhong922-personal-website",
  storageBucket: "jjhong922-personal-website.appspot.com",
  messagingSenderId: "134310551512",
  appId: "1:134310551512:web:d372da0e90c82978ab5cad",
  measurementId: "G-DHLX0T7Q72"
}; // Initialize Firebase

firebase.initializeApp(firebaseConfig);
firebase.analytics();
var db = firebase.firestore();
exports.db = db;
},{"firebase/app":"node_modules/firebase/app/dist/index.cjs.js","firebase/analytics":"node_modules/firebase/analytics/dist/index.esm.js","firebase/firestore":"node_modules/firebase/firestore/dist/index.esm.js"}],"js/components/ButtonGrid.jsx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _preactMaterialComponents = require("preact-material-components");

var _constants = require("../helper/constants");

var _helpers = require("../helper/helpers");

var _firebase = require("../firebase");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var GridSquare = /*#__PURE__*/function (_Component) {
  _inherits(GridSquare, _Component);

  var _super = _createSuper(GridSquare);

  function GridSquare(_ref) {
    var _this;

    var x = _ref.x,
        y = _ref.y;

    _classCallCheck(this, GridSquare);

    _this = _super.call(this);
    _this.docRef = _firebase.db.collection("grid-squares").doc("gs-".concat(x, "-").concat(y));
    return _this;
  }

  _createClass(GridSquare, [{
    key: "render",
    value: function render(_ref2) {
      var _this2 = this;

      var x = _ref2.x,
          y = _ref2.y,
          colorID = _ref2.colorID,
          numClicked = _ref2.numClicked,
          offline = _ref2.offline,
          offlineHandler = _ref2.offlineHandler;
      var bgColor = colorID == -1 ? _constants.DEFAULT_COLOR : _constants.THEME_COLORS[colorID];

      var _unitCoordToWindowCoo = (0, _helpers.unitCoordToWindowCoord)(x, y),
          _unitCoordToWindowCoo2 = _slicedToArray(_unitCoordToWindowCoo, 2),
          xPos = _unitCoordToWindowCoo2[0],
          yPos = _unitCoordToWindowCoo2[1];

      return (0, _preact.h)(_preactMaterialComponents.Button, {
        className: "fixed-square grid-square",
        unelevated: true,
        ripple: true,
        width: _constants.GRID_SQUARE_WIDTH,
        height: _constants.GRID_SQUARE_HEIGHT,
        style: {
          left: xPos - _constants.GRID_SQUARE_WIDTH / 2,
          top: yPos - _constants.GRID_SQUARE_HEIGHT / 2,
          backgroundColor: bgColor
        },
        onClick: function onClick() {
          if (!offline) {
            _this2.docRef.set({
              colorID: (colorID + 1) % _constants.THEME_COLORS.length,
              numClicked: numClicked + 1
            });
          } else {
            offlineHandler("gs-".concat(x, "-").concat(y), (colorID + 1) % _constants.THEME_COLORS.length, numClicked + 1);
          }
        }
      });
    }
  }]);

  return GridSquare;
}(_preact.Component);

var ButtonGrid = /*#__PURE__*/function (_Component2) {
  _inherits(ButtonGrid, _Component2);

  var _super2 = _createSuper(ButtonGrid);

  function ButtonGrid() {
    var _this3;

    _classCallCheck(this, ButtonGrid);

    _this3 = _super2.call(this);
    _this3.offline = false;
    _this3.gsMap = new Map();

    _firebase.db.collection("grid-squares").onSnapshot(function (querySnapshot) {
      querySnapshot.docChanges().forEach(function (change) {
        _this3.gsMap.set(change.doc.id, change.doc.data());
      });

      _this3.forceUpdate();
    }, function (error) {
      _this3.offline = true;

      _this3.forceUpdate();
    });

    return _this3;
  }

  _createClass(ButtonGrid, [{
    key: "offlineHandler",
    value: function offlineHandler(squareID, colorID, numClicked) {
      this.gsMap.set(squareID, {
        colorID: colorID,
        numClicked: numClicked
      });
      this.forceUpdate();
    }
  }, {
    key: "render",
    value: function render() {
      var gridCoords = (0, _helpers.getCenteredGridSquareCoords)();
      var squares = [];

      for (var i = 0; i < gridCoords.length; i++) {
        var coord = gridCoords[i];

        var _centeredCoordToUnitC = (0, _helpers.centeredCoordToUnitCoord)(coord[0], coord[1]),
            _centeredCoordToUnitC2 = _slicedToArray(_centeredCoordToUnitC, 2),
            x = _centeredCoordToUnitC2[0],
            y = _centeredCoordToUnitC2[1];

        var blocking = false;

        if (x >= _constants.NAME_CARD_COORD[0] && x <= _constants.NAME_CARD_COORD[0] + 8 && y >= _constants.NAME_CARD_COORD[1] && y <= _constants.NAME_CARD_COORD[1] + 1) {
          blocking = true;
        }

        for (var j = 0; j < _constants.LINK_COORDS.length; j++) {
          var _LINK_COORDS$j = _slicedToArray(_constants.LINK_COORDS[j], 2),
              linkX = _LINK_COORDS$j[0],
              linkY = _LINK_COORDS$j[1];

          if (x >= linkX && x <= linkX + 1 && y >= linkY && y <= linkY + 1) blocking = true;
        }

        if (blocking) continue;
        var squareID = "gs-".concat(x, "-").concat(y);
        var colorID = this.offline ? 0 : -1;
        var numClicked = 0;

        if (this.gsMap.has(squareID)) {
          colorID = this.gsMap.get(squareID).colorID;
          numClicked = this.gsMap.get(squareID).numClicked;
        }

        ;
        squares.push((0, _preact.h)(GridSquare, {
          key: squareID,
          x: x,
          y: y,
          colorID: colorID,
          numClicked: numClicked,
          offline: this.offline,
          offlineHandler: this.offlineHandler.bind(this)
        }));
      }

      return (0, _preact.h)("div", {
        className: "button-grid"
      }, squares);
    }
  }]);

  return ButtonGrid;
}(_preact.Component);

exports.default = ButtonGrid;
},{"preact":"node_modules/preact/dist/preact.module.js","preact-material-components":"node_modules/preact-material-components/index.js","../helper/constants":"js/helper/constants.js","../helper/helpers":"js/helper/helpers.js","../firebase":"js/firebase.js"}],"js/components/LinkSquare.jsx":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _preactMaterialComponents = require("preact-material-components");

var _constants = require("../helper/constants");

var _helpers = require("../helper/helpers");

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var LinkSquare = /*#__PURE__*/function (_Component) {
  _inherits(LinkSquare, _Component);

  var _super = _createSuper(LinkSquare);

  function LinkSquare() {
    _classCallCheck(this, LinkSquare);

    return _super.apply(this, arguments);
  }

  _createClass(LinkSquare, [{
    key: "render",
    value: function render(_ref) {
      var linkID = _ref.linkID;

      var _LINK_COORDS$linkID = _slicedToArray(_constants.LINK_COORDS[linkID], 2),
          x = _LINK_COORDS$linkID[0],
          y = _LINK_COORDS$linkID[1];

      var _unitCoordToWindowCoo = (0, _helpers.unitCoordToWindowCoord)(x, y),
          _unitCoordToWindowCoo2 = _slicedToArray(_unitCoordToWindowCoo, 2),
          xPos = _unitCoordToWindowCoo2[0],
          yPos = _unitCoordToWindowCoo2[1];

      return (0, _preact.h)(_preactMaterialComponents.Button, {
        className: "fixed-square link-square",
        unelevated: true,
        ripple: true,
        href: _constants.LINK_URLS[linkID],
        style: {
          left: xPos - _constants.GRID_SQUARE_WIDTH / 2,
          top: yPos - _constants.GRID_SQUARE_HEIGHT / 2,
          backgroundColor: _constants.LINK_COLORS[linkID]
        }
      }, _constants.LINK_ICONS[linkID]());
    }
  }]);

  return LinkSquare;
}(_preact.Component);

exports.default = LinkSquare;
},{"preact":"node_modules/preact/dist/preact.module.js","preact-material-components":"node_modules/preact-material-components/index.js","../helper/constants":"js/helper/constants.js","../helper/helpers":"js/helper/helpers.js"}],"js/components/app.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _preact = require("preact");

var _helpers = require("../helper/helpers");

var _NameCard = _interopRequireDefault(require("./NameCard"));

var _ButtonGrid = _interopRequireDefault(require("./ButtonGrid"));

var _LinkSquare = _interopRequireDefault(require("./LinkSquare"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var App = /*#__PURE__*/function (_Component) {
  _inherits(App, _Component);

  var _super = _createSuper(App);

  function App() {
    _classCallCheck(this, App);

    return _super.apply(this, arguments);
  }

  _createClass(App, [{
    key: "debouncedResizeHandler",
    value: function debouncedResizeHandler() {
      var _this = this;

      return (0, _helpers.debounce)(function (_) {
        return _this.forceUpdate();
      }, 5);
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      window.addEventListener("resize", this.debouncedResizeHandler());
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      window.removeEventListener("resize", this.debouncedResizeHandler());
    }
  }, {
    key: "render",
    value: function render() {
      return (0, _preact.h)("div", {
        id: "app"
      }, (0, _preact.h)(_NameCard.default, null), (0, _preact.h)(_LinkSquare.default, {
        linkID: 0
      }), (0, _preact.h)(_LinkSquare.default, {
        linkID: 1
      }), (0, _preact.h)(_ButtonGrid.default, null));
    }
  }]);

  return App;
}(_preact.Component);

exports.default = App;
},{"preact":"node_modules/preact/dist/preact.module.js","../helper/helpers":"js/helper/helpers.js","./NameCard":"js/components/NameCard.jsx","./ButtonGrid":"js/components/ButtonGrid.jsx","./LinkSquare":"js/components/LinkSquare.jsx"}],"js/index.js":[function(require,module,exports) {
"use strict";

var _preact = require("preact");

require("./style");

require("preact-material-components/Button/style.css");

var _app = _interopRequireDefault(require("./components/app"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = document.getElementById("app");
(0, _preact.render)((0, _preact.h)(_app.default), root);
},{"preact":"node_modules/preact/dist/preact.module.js","./style":"js/style/index.css","preact-material-components/Button/style.css":"node_modules/preact-material-components/Button/style.css","./components/app":"js/components/app.js"}],"node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "49688" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["node_modules/parcel-bundler/src/builtins/hmr-runtime.js","js/index.js"], null)
//# sourceMappingURL=/js.00a46daa.js.map